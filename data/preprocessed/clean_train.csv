"message";"is_toxic"
"this and below assignments also should be removed";"0"
"this should be flavor_id = self.flavor_id";"0"
"bool session_adopted_ = false;";"0"
"nit: starting c++11, this could be done directly in the declaration. bool have_token = false;";"0"
"i am confused. this is the tar process we are checking. if it has exited, why do we need to kill itits already dead we already check the exit code in finish_subprocess.";"0"
"yuckuse %.70s, which will do this more gracefully";"1"
"use mock_thread_instance = mock.magicmock isalive=mock.magicmock return_value=false remove l69";"0"
"skrect local_bounds = gfx::recttoskrect getlocalbounds ;";"0"
"worse!!!!!!! how does setuptools/cliff even do that with the '_' -> ' ' mapping in place";"0"
"so you have rename fields to obj_fields because of here, right";"0"
"unfinished docstring.";"0"
"this _exec_ipmitool method will attempt 3 times l101 if the command fail, so for our validate method, that is no need to have try with 3 times, so how do you think if we add new parameter for _exec_ipmitool method, default is 3 as below def _exec_ipmitool driver_info, command, attempts=3 : ... so we just call it with ""attempts=1"" here for validation action: _exec_ipmitool driver_info, ""mc info"", attempts=1";"0"
"remove the white space here";"0"
"nit: get*_ instead of compute_ . we are not computing anything.";"0"
"this is useless if you use a boolean.";"0"
"indeed, mpu_protect_ram already did the same thing in commom/system.c. i think this part is useless.";"0"
"oh, stupid me, all i did was make it dereference invalid pieces of memory if the addresses are too big! i did manually test this and i found the expected partition size. unfortunately, neither storm nor any of our other upcoming brillo devices have nand big enough to trigger this. proto 0.2's nand is 8gb that is gigabits and all the production devices will be much smaller.";"0"
"instead of wrap_delimiter , utils.wrap_delimiter should be used. for all wrap_delimiter calls below, they should be replaced by utils.wrap_delimiter .";"0"
"you have deleted _prepare_test";"0"
"remove vmax";"0"
"checking the _reg_page_count register is more reliable. raising an exception skips the following stopdumpingtomemory call, meaning that the audio continues to dump.";"0"
"no, the internal is for services. splitting on ports is a dumb way to do security, but we are stuck with it for now";"0"
"but you still have the data used as null-terminated string below. stringpiece::data generally does not guarantee the terminator. keep this as is, we will deal with it later.";"0"
"useless braces";"0"
"this one looks to be useless.";"0"
"nit: validating *a* request body";"0"
"function keyword is a bashism and imho looks ugly compared to 'usage {'.";"1"
"this override seems useless";"0"
"as we are moving to have tenant in headers, should we probably kill it from the beginning";"0"
"because this fix modify string format from "" xx, dummy"" to "" xx dummy xx"", the original code use ',' instead of '%', then 'dummy' , i want to make sure the string is right formatted. for example: original one: >>> print ""444 %s 444"", ""aa"" 444 %s 444 aa now: >>> print ""444 %s 444"" % ""aa"" 444 aa 444";"0"
"i think trying to establish ""this->pdata == nullptr"" as a valid state is going down a rat's hole having to adapt all places that read pdata for no benefit see how making operator+= fulfil the strong guarantee, which is desirable, makes the demand for a ""this->pdata == nullptr"" state not arise";"0"
"/it may happen that a service die/a service may die/";"0"
"hehe, why are you always right :- i should do some pair programming with you to avoid doing stupid stuff earlier ;- thank you!";"0"
"uint8_t constexpr kuninit = 0xff;";"0"
"should this maybe be called rootwrap-xenapi or rootwrap-xen-dom0 i am wondering if dom0 is not distinct enough to non-xen for them to know to ignore this file.";"0"
"for this, you'd just check the whether the size of entries is === 1. another option coul dbe to move the checks to the caller, butthat might be more clumsy.";"1"
"okie dokie. we should probably note that in reflection docstring, pretty sure thats cause py2.x is dumb, ha.";"0"
"useless trailing '-'. see the implementation of rand_name";"0"
"in the future, we should look into seeing if we make this a little cleaner instead of a crapload of info lines.";"1"
"could you format this line break inside the tuple of arguments and get rid of this backslash if you do another patch";"0"
"i'd like to see a lot of these mocks moved to tests/mock/{mock_file}.py";"0"
"the comment is... useless. the function is called 'validate_hash', obviously we are validating an hash here :-";"0"
"what test harness are you using for this why not use unittest2 it is already installed and has a consistent interface and output. just curious... i do not see from this commit how these tests are being executed, so i thought i would ask.";"0"
"whitespaces should be removed.";"0"
"the name is ugly, what can notitbe openstack-ec2-api-service";"1"
"all you do in the interrupt handler is call wake_up. looks like you do not need a threaded irq.";"0"
"lazy-lazy =";"1"
"must be executed";"0"
"yeah that sucked, fixed done.";"1"
"i am not sure what you mean by reference error.. how about from line 220 if lock_file_prefix: if lock_file_prefix.endswith '-' : lock_file_name = '%s%s' % lock_file_prefix, safe_name else: lock_file_name = '%s-%s' % lock_file_prefix, safe_name else: lock_file_name = safe_name";"0"
"nit: use std::make_unique here _syncedsessionsobserver = std::make_unique<synced_sessions::syncedsessionsobserverbridge> self, _browserstate ;";"0"
"fake.volume_id";"0"
"i have a doubt which could be dumb . 'fqdn' should be resolved with in the namespace context or the host context in this fix, i am assuming it to be host context.";"0"
"style is camel case, myclientsecret, myclientid, myrefreshtoken";"0"
"fk should be data_sources.id";"0"
"zhiyan, thanks for helping explanation. overall it is correct. and you are suggestion makes sense for me, will improve it in next ps. iccha, actually, this patch is related to in that patch, we are trying to set image size if the image is transferring from 'queued' to 'active' directly when user add/update locations for the image. the try/except can make sure we can iterate all the locations to get an available image. i improve it at here since it is breaking some unit test cases since we are introducing some new behaviour by this change. does it make sense for you";"0"
"i think you are just missing my point, or i am stupid enough to be unable to convey it properly.";"0"
"lol you called my decorator stupid...=";"1"
"this should be a uriopt instead of stropt.";"0"
"it should be testr_args += "" %s"" % set_name";"0"
"this line is super horrible and needs to die! please do something like: attempts = 1 if retries >= 1: attempts = retries + 1 or something along those lines. also - a test would be nice there are already tests that test some cases of this so just add another one in test_compute_mgr.py";"1"
"consider rename to current_l3_agents";"0"
"i think the formatting may have gotten screwedup or gerrit made it look ugly";"1"
"wrap the body of your commit messages at 72 characters.";"0"
"nit - should be without '{' and '}'";"0"
"please clean up after this fails before returning.";"0"
"might be cleaner to write an ocp that wraps this and prunes out the downloads... i know that is a lot more code/sucksbutthat is probably the cleanest way can you just put this in the factory or putitat each client";"1"
"is there any reason you do not fail if this is not true seems like a mangled header would get by this check. nit: startswith may read cleaner";"0"
"you can just leave this uncommented, it works with no_thread_safety_analysis";"0"
"nit: these migth be the first check in the routine i think we'll hit this 99% of cases";"0"
"this should be setup_receiver pep8";"0"
"ooh, burn!";"1"
"nit: a little ugly / confusing why you do not need this in write_len. maybe just store addr in a temp variable and putitin both ""if"" statements";"0"
"these downcasts need to be static_cast now";"0"
"why are not you using $actual_filters instead of writing them by hand";"0"
"yes, and ... crap";"1"
"die unrelated change!!!. : __ ____________ ____ unrelated change /_____________ _____________/ ____ __ do not ask... i had that sword in my editor yet...";"0"
"line 1797 whitespace, plus four other trailing whitespace instances highlighted above, seems to be causing the checkniceness failure.";"0"
"stupid style nit - list comprehension is slightly nicer.";"1"
"instead of passing every mock, every time to this function, you could do something like that: def setup self : ... patcher = mock.patch.object someobjcet, 'qwerty' self.mock_request = patcher.start def configure_mock self, *responses : ... self.mock_request.return_value = fake_response remember to stop all mocks in teardown.";"0"
"instead of clouddbinstance, i would use clouddatabase. needs docstring.";"0"
"should we assert anything here or that is already all done by findbyfilename";"0"
"nit: newline after is_source_touch_event_set_non_blocking.";"0"
"i am not entirely sure how to run a test wit a trybot w/out messing up the live system ...";"0"
"wouldn'titbe better to re-sync the databases neutron db is the master. we do not want to rollback a change just because the slave couldn't commitit if neutron allowed the change, dragonflow must acceptitone way or another.";"0"
"remove ws here an below.";"0"
"here should be admin_snapshots_client.reset_snapshot_status";"0"
"that english language stuff always confused the hellout of me....yep, i kept wordsmithing this line and still did not like it.";"1"
"all the code you have inline below should be refactored and put into a main function main { ... } main ""$ """;"0"
"ok - i suggest you actually write 'refers to the config element' here, then, otherwise dumb people like me will wonder where the pool table is. in the snooker room, presumably.";"0"
"private_key=keypair 'private_key'";"0"
"doh. its awful! it should not be our work...";"1"
"please, remove indention of commit message.";"0"
"what if nstartrow<=0 or nstartrow>maxrow+1 the entire loop wouldn't need to be executed then.";"0"
"ah, shitwill fix.";"1"
"silly nit, this is not valid json, you are missing a closing";"1"
"#ifdef config_pm_runtime if you are feeling very analabout saving 1 byte...";"1"
"i am wondering if there is not a cleaner way to do this i am very much abusing jsonutils here!";"0"
"holy cow, when does this happen just tests any actual wsgi server that does this is horribly broken.";"1"
"iife is malformed.. should be } ;";"0"
"this cast is unavoidable, since params is a mojom struct. ditto below.";"0"
"silly me, that was the initial idea";"0"
"pid";"0"
"much better that acoles is pretty darn good huh...";"1"
"i really do not like this, we should remove all of them instead of adding more.";"0"
"i have no idea why $ local_path /genserev.py works... why is local_path here have tools it.. this worked locally, do i have some cruft in out i need to clean up to see this fail properly";"0"
"i like this, and my only real feedback is to wonder if this url should look something like: get /v2.0/usages/network/:id ... with the assumption that that allows easier expansion to other forms of usage blobs as desired. on the other hand, i do not want to trigger a huge debate on a general usage mechanism that derails a working and small primitive that has value today.";"0"
"this should be just using ""trans"" instead of ""blocktrans""";"0"
"yes you do. you have to specify which process and which signals you actually allow kill to interact with.";"0"
"are you sure this leads to a color that makes the white letter readable you need to do something on drawfallbackiconletter to draw either white or black depending on the luminosity of the background. based on w3c recommendations, here's what you do: def luminance r, g, b : for each c in r,g,b: c = c / 255.0 if c <= 0.03928 then c = c/12.92 else c = c+0.055 /1.055 2.4 l = 0.2126 * r + 0.7152 * g + 0.0722 * b return l l = luminance r, g, b if l > 0.179 use #000000 else use #ffffff that is the way to go. there is already a getrelativeluminance that you could use instead, butitis garbage. :";"0"
"this kind of string-based flow manipulation should be under ovs_ofctl/. probably ofswitch.py";"0"
"log.error instead of log.exception log.exception should be used when you have a traceback";"0"
"you do leave the spi_tx_ch_on bit set, though. as a spi noob i guess i would have thought that you'd turn it off when you flip rx on. ...and if you actually used the packet countithink you _could_ turn it off. the code will end up putting 0xff on the bus i think when you sit and read.";"0"
"i think port_status_notifier should still be a member of mech_driver be self.port_status_notifier . otherwise it may be garbage collected and stop working.";"0"
"done";"0"
"chris, just a question about 'intrusive', how can i understand it why it sucks";"1"
"damnthought i'd gotten rid of it everywhere. new patch incoming";"1"
"useless line";"0"
"damnand i thought i had gotten it right :p";"1"
"missing signed-off-by: you can both yours and mine git commit --amend -s will add yours automatically";"0"
"oh, yes, it was inconsistent already. i just copy pasted the previous code. silly me.";"1"
"nit: /* istest */";"0"
"die. die. die xml. i'd remove this hideous reminder of a long-lost sad world.";"0"
"you canuse: if self.baymodel_attr and getattr bymodel, self.baymodel_attr, none :";"0"
"../../extensions/browser/extension_prefs.cc:348:3: error: no matching function for call to 'makecheckopvaluestring' dcheck_eq observer_list_.begin , observer_list_.end ; ../../base/logging.h:939:31: note: expanded from macro 'dcheck_eq' #define dcheck_eq val1, val2 dcheck_op eq, ==, val1, val2 ../../base/logging.h:911:29: note: expanded from macro 'dcheck_op' eat_stream_parameters << ::logging::makecheckopvaluestring etc etc etc c++ template nonsense";"0"
"oh, yeah, you have -undebug in your makefiles. ignore me.";"0"
"$values is the variable used by the values implementation. it is what you get if you use reflection on an enum. it is included in the dump as just another property, so i think it is fine to use it.";"0"
"this may be a dumb question, butitis not immediately obvious why we are re-instantiating the kvs backend here, for the memcache driver. at first blushitlooks like a copy paste error form the previous method...but i am sure you'll enlighten me as to why it is not...:-";"0"
"get rid of this code and have callers of this call new with disabled_auth_failure assecond param.";"0"
"basically: if self.microversion and 'x-openstack-nova-api-version' in headers and headers 'x-openstack-nova-api-version' != self.microversion: self.fail 'bad test setup i hate you so much' and: if not self.microversion and 'x-openstack-nova-api-version' in headers: self.fail 'oh you dirty bastard";"1"
"s/insepctorbasetest/inspectorbasetest/";"0"
"my mistake here, it should be set asside-efffect of server_rebuild.";"0"
"ditto as the ec cl: signed-off-by: daisuke nojiri < >";"0"
"it seems you are still using self.nested_templ_with_server rather it should be files={'the.yaml': self.nested_templ}";"0"
"real nit but can we write this without the id = greenthread.spawn_after ... self._events_delayed event.uuid = id sorry for being pathetic";"0"
"was probably tired when i wrote that stupid line. thanks for the comment. done";"0"
"indentation issue. remove these blank spaces.";"0"
"remove daterangepicker";"0"
"odd that there is not any mention of android here. does chrome not usually build with _fortify_source here i suspect you either want to mention __bionic__ or _fortify_source. there is nothing brillo about this.";"0"
"rpmbuild should be executed under unprivileged user. so do not perform operations required root privileges during build stage";"0"
"mock_clients.return_value.environment...";"0"
"i think this solution is braindead also, like the previous one. can we try to assthe null. anyway, +2 because safe.";"1"
"damn";"1"
"the caching is only necessary for the performance benefit of not needing to do that service query from the db every time we get an instance, which doubles the traffic to the db on every instance query, which kind of sucks agree with leaving the caching in, that was my point with removing the todo so we do not forget about this.";"1"
"#error!";"0"
"kill it and find out or did you want to do that in a later patch instead";"0"
"loaddraft will invoke drawtoppanel so i remove invalidateoptionsmenu belowed.";"0"
"damnit, i hate it when i forget to save the file before i commit ;- yes they were notes as i was coding the c file done.";"1"
"damni thought i'd removed those. sorry.";"1"
"need to use six.text_type here and below";"0"
"ah yes, i remember this damm mess now. unfortunately some of the task code needs a conductor. seems silly to do that over rpc just for dependency reasons.";"1"
"can encoder work without vpu if not, we should remove these ifdef config_mediatek_vpu.";"0"
"profileid=profileid, extra_config=extra_config";"0"
"is this still used anywhere later looks like still used in nova.tests.unit.test_service, so i guess we can not remove it. damn";"1"
"kill and restart";"0"
"u.to_wrapped_dict is more appropriate here";"0"
"* if we had already decided on the features for a release, extra risky code is less chance. * if there is riskiness as part of features, then it is understandable and should be given more time to stabilise rather than not landing that feature * the only thing left out is a critical bugs that should be allowed to get in based on it is merit.";"0"
"remove content_type";"0"
"you can. some people prefer reinterpret_cast because it shouts ""danger! crappytype-unsafe c api here!"". others prefer static_cast because it is the weakest cast that will still work. i'll +2 either buttend to use reinterpret_cast personally; i've never seen anyone make the mistakes that static_cast would prevent in this specific circumstance .";"1"
"maybe worth having a directory for drivers would be intersting to know what others think.";"0"
"nit: put this after netbendingmarking to preserve lexicographic order.";"0"
"why is this a fixme is there something left to do here";"0"
"all of them should satisfy custom constraint cinder.vtype";"0"
"remove the tabs please - spaces only - the change makes this review a bitchto read and does not match the existing formatting.";"1"
"/*eula_accepted*/ or even /*eula_accepted_callback_*/";"0"
"damnforgot to delete this after the code changed during review... well, better to leave it here than to get inconsistent with tot now i guess.";"1"
"nononono, all that stuff should go away";"0"
"damnthought i caught all those! thanks.";"1"
"why not store the socket in the state_dir rather than creating a new option";"0"
"done. that is one's embarrassing, though what if there was random memory corruption in the value while we were null-checking nested_connect_job_ :";"0"
"the eclassalready calls default for you, so you should not need to do it yourself";"0"
"i think l7rules should be a subresource of l7policies, much like members are a subresource of pools.";"0"
"base_dir is useless";"0"
"rather than creating this useless structure, just passthe size in the kmem_cache_create in the _probe function but yeh that is not important, a dirty patch should be dirty....";"1"
"hmm still get ""attributeerror: __exit__"" for ""with tf.extractfile as f:"".";"0"
"crapsorry about that. done.";"1"
"damngrammar :-p";"1"
"should not this be: if ***not*** self._l2_policy_is_owned .... delete the policy otherwise do nothing.";"0"
"why do you remove a check for propertyname why do you display only string properyvalue what about number and boolean values i think it should be !_.isplainobject !_.isarray check for a property value";"0"
"how the heck did that get in there done....";"1"
"might want to inject a pause here prior to the reboot; depends on how fastitcycles getting a ""go do this"" message when the window is 1s sucks";"1"
"nits: can we use space instand of tab in 21-25, 27";"0"
"showing some hits already: i haven't dug into these yet to find out where they are coming from.";"0"
"looks like your git has the wrong name configured in it";"0"
"i believe this should be inserted at the end or it will break setup-base.sh.";"0"
"this'll crapout if the search fails";"1"
"also, after the first period the word "".request."" do not add anything to the sentence. could being removed";"0"
"it does not relate to your patch, but please, remove this dots. it sucksand unreadable! also, if this module will be moved in future, everything will break. i prefer to use this simple code: import rally lookup_dirs = templates_dir, os.path.dirname rally";"1"
"remove this trailing white spaces";"0"
"nit: drop wtf";"0"
"error -> die. then you can drop the exit below.";"0"
"agree with alexander, here is where separate validators suck you may easily not notice the same work is done twice.";"1"
"why do not you scankeysfor again after the rehash";"0"
"let us put this all behind config_charger_monitor_bp.";"0"
"remove this as we should not reach this if not supported and you already have dchecks in getbufferconfig.";"0"
"does this mean that if the header is corrupt, we are screwed";"1"
"nit: looks ugly. i like this style, like a = b = f , but not in this particular case. decompose it please.";"1"
"same as above, these docs are useless";"0"
"those should probably be mock.patch.object instead.";"0"
"these function names - specifically the ""stub1,stub2"" are ugly.";"1"
"rather than have a note, there should be a bullet which should be first that says to set auth_plugin.";"0"
"you should kill all pids at once rather than in for loop";"0"
"not a dumb question at all. i copy/pasted this from one of my daily driver configs. using $home is much more consistent";"0"
"the optimizer should usually be able to make this not suckbutthread.name.assign is more direct.";"1"
"mostly nit: but would be good to have a type check here, otherwise someone can put ironic_ramdisk_type=""blahhh"" and it is going to work. e.g elif ""$ironic_ramdisk_type"" == ""dib"" ; then build_ipa_dib ... else die ""ramdisk type $ironic_ramdisk_type not supported""";"0"
"neutron-server now supports rpc listener. i think start_rpc_listeners should be used.";"0"
"this sleep make test running 10 seconds delay, you should also mock in in the test case. virt/libvirt/test_driver.py#test_unrescue";"0"
"useless :";"0"
"accidentally put ** in __init__";"0"
"should probably put body += n here also instead of below";"0"
"please drop the empty line";"0"
"gross...";"0"
"hmmmm...that is a good reason to keep mountpoint around. which kind of sucksalso, mountpoint is optional from novasstandpoint, so we probably should not just raise and fail, unless it is a multi-attach to the same instance the knucklehead case , which means more checks for that case. i vote we just dis-allow that...";"1"
"remove extra newline after the block, or use # in its place.";"0"
"our usual style is more something like : #define g_pinmux_base 0x40060000 #define g_pinmux_dioa0_sel reg32 g_pinmux_base + 0x28 in order to support variants with peripherals moved around";"0"
"misformed or malformed... or maybe just 'incorrect'";"0"
"this seems like an upstream bug. is it reported sane defaults == win";"0"
"nova boot --security-groups ... --nic net_id=xxx ... where xx has port_security_enabled=false, it will launch an instance with no warning, return an instance object with specified security groups, butthe instance ports will not have security groups. this behavior does not look correct for me.";"0"
"wtfwhy did you change "" to ' when we are changing everywhere ' to """;"1"
"i think it would be nice if we have more than one choice there, like if ""$users_agree"" == ""y"" ""$users_agree"" == ""y"" ""$users_agree"" == ""yes"" ; i personally hate this situations when i press 'y' and application tell me 'wrong choice, man, bye-bye. in next time you should write full ""yes"", you moron";"1"
"same";"0"
"this actually changes nothing. is it needed";"0"
"i will remove max_retries.";"0"
"the # noqa comment already silences the flake8 warning about unused imports, it seems we could simply get rid of the asserts and leave it at that.";"0"
"let us remove these accessors.";"0"
"i am not sure it makes sense to pause a shut-off instance...";"0"
"ack. will keep that in mind. i'd kicked this train into gear and left to fight other fires.";"0"
"nit: both this classand the mock crypto stream both assume the same empty chlo message being sent. should we perhaps define some common method for this quic::cryptohandshakemessage getdummychlo also should we say something like ""dummy"" in the method name to make it obvious that this is not a real chlo";"0"
"this if term_is_active is now useless, please remove";"0"
"i thoughtitwould make sense to guard a useless operation... but i am fine with dropping it, too.";"0"
"actually c enums do not really check iirc and never have. you can assign a bogus value. they are not that useful. i am happy to get rid of this craphowever.";"1"
"this should be called devtest_overcloud_images.sh.";"0"
"please leave this message out: build_image is already too noisy.";"0"
"this means openstack and fake canalso match";"0"
"testrunner.cssmodel testrunner.debuggermodel";"0"
"are useless. just use if $ironic_enabled {";"0"
"this particular one is a big change. i think i'll do that in a separate patch. i'll file a bug to remind myself.";"0"
"would not work according in job package will be stored on slave host";"0"
"redundant. bt_core";"0"
"banging head on table thanks!";"0"
"stupid oversight on my part. i will add that back.";"0"
"ok, just seems ugly to me is all. if you use mock you do not have to worry about mox or stubs. i'll already grant that some think that using mock is ugly too...";"1"
"this needs a linewrap at removed";"0"
"in ha mode multirole is redundant";"0"
"done.. super lame mistake from me";"0"
"ml2_vxlan_endpoints should be dropped after ml2_gre_endpoints.";"0"
"no, indent 1 is dumb. fixed.";"1"
"naming convention is unnatural to me. i'd call this schedule_service_writeback and __service_modified asservice_writeback. and update_pending as dirty. but who am i";"0"
"ok. you should file a bug to track as we are actively killing old consumers of 180609 now.";"0"
"probably a stupid question: is it safe to push the value of the conf variable unchecked to libvirt";"0"
"correct, they should be removed";"0"
"you will not need the comment if the test name is more informative: def test_all_whitespace_flavor_names_rejected self :";"0"
"would it make more sense to make this 'team_domain=dummy' as well so users do not confuse it as being a valid string";"0"
"comment on existing code - just throw an exception here";"0"
"that author line is wrong. it seems you did not setup git correct. to update this change, run: git commit --amend --author=""miranda zhang < >"" please see the git instructions on how to setup git properly.";"0"
"bad formatting, * or - will give you bullets";"0"
"same, should be network_id = self.resource_id";"0"
"!!!!! this is an ugly reference back to the agent loop. can we get rid of ititis the only one...";"1"
"maybe kill this this script is the whole point of the job.";"0"
"i can not see that you removed scheduled_operation_state.py";"0"
"are we not going to assume error 401 or anything that i got bitched about with the amphora api proposal still in the review pipeline";"1"
"darn. you right. : peer programming works! or sileht programming works.";"1"
"it is ugly to return a vector of pointers that the caller has to delete manually - better return vector<std::unique_ptr<swpam>>";"0"
"ah. i was more describing the outcome of not having the check, which is that the browser process gets killed when we try to kill pid 0. maybe we can combine the two versions ""some tasks may not have accurate process ids yet. if it is still 0, do not try to kill it, since that could kill the browser process.""";"0"
"this backslash is unnecessary, and should be eliminated.";"0"
"nit: c++ static constructors are evil due to their random order or initialization / deinitialization anyway, so please please never use them. the fact that this is accessed from onexit only makes it clearer. consider using an emugl::lazyinstance<> here, see comment below.";"0"
"i changed the sh -c ""..."" style back to the normal style. butitseems that an empty double-quoted string still needs escaping.";"0"
"nope. if 'ip_ranges'= nothing will be iterated, netaddr.ipaddress will not be executed. these check anyway.";"0"
"uint8 *p_vendor_data = ...";"0"
"these configs should appear in etc/ironic/ironic.conf.sample to update that file, do something like ./tools/config/generate_sample.sh -b . -p ironic -o ./etc/ironic";"0"
"looks like we'll need to enforce by unit test that a given builder classname does not appear in more than one *_builder.py module. otherwise we can get really confused about which one is being used.";"0"
"ok, fair enough. just seems like it could be used outside openstack and if later we have to rename it so thatitis more obvious it can be used outside, that sorta sucksto have to go through that process .";"1"
"i got rid of all the ldap specific nonsense";"1"
"you are rightitlooked clumsy when i did it the other way butithink it is the right way. i'll fix it.";"1"
"i disagree. in this instance it is an instance that we have partially created, and that the user has no knowledge of its existence. we should not leave half created turds lying around. however, you have drawn attention to that fact that we are eating an exception, which we should not be doing.";"1"
"has_exception = exc";"0"
"scope_logger.cc does not exist in libshill-net users, like apmanager. do we move it under common/ and make apmanager depend on a separate shared library, just for that tiny shill-specific piece of code do we move it under net/ where it does not really belong do we tell library callers to implement the scopelogger classjust so that libshill-net links that is kind of an ugly interface for a library; at least for c-based shared libraries it is generally nicer to ask users to register a callback than for the .so file to try to link against some of the main executable's symbols.";"1"
"the parentheses here are causing the url to include them incorrectly and should be removed.";"0"
"this two lines does nothing. mock's object's return value is mock object by default";"0"
"damn i missed that one. thanks";"1"
"oh, yeah, what a crap maybe use this cleanup commit to finally get rid of that odd --language handling for good.";"1"
"here should be bytesio instead of stringio.";"0"
"do you know the difference between dump and dumps";"0"
"think that is what the condition above is trying to do and fails miserably . could be wrong thou gnumeric about this > p = pf varx / vary, nx - 1, ny - 1, false, false ; > if p > 0.5 { > /* > * we need the other tail and 1-p might not be very accurate. > */ > p = pf varx / vary, nx - 1, ny - 1, true, false ; > }";"0"
"hmm... i guess the intellij autoformatter must have lined up the javadoc comments automatically.";"0"
"bool drop_privileges every goto you write makes the baby agampe cry...";"0"
"retry_count should be lowercase ... because it is not a constant";"0"
"once you move to only using 'apache2', you should be able to extract that at runtime via 'apache2 -s'.";"0"
"instead of the mock, why not just call manager.neutronmanager.set_controller_for_resource and passit your fake controller";"0"
"for centos $ovs_server_package == false is notit";"0"
"why this change looks like you are no longer using these anyway, maybe you should just remove them";"0"
"i suggest getting rid of all re-entrancy to public methods. ex. create loadkeyinternal with no locking and keep locking very simple as the first statement in all public methods.";"0"
"yes the test is stupid it is just to test unicode and ""and"" :";"0"
".hprivdata = gssysconfig,";"0"
"yes, but i guess this is rabbit issue only, due to the fact that the reply queue have been historically created with auto_delete=true. another rabbitmq reported issue in the past was that a ha rabbitmq cluster that failover can in certain circumstance report that the queue does not exists just after the failover when it exists in reality. that another reason of why we do this crap";"1"
"should we catch valueerror and throw an appropriate nova exception";"0"
"i do not agree here, property in python are awful, especially when you want to test such methods.";"1"
"i will create a barbican subdirectory under '/etc/security'";"0"
"also, need to invalidate it just like the other validate_*s.";"0"
"we only need 1 gpuclient per child process, not per ""identity"". how can we wire the child id, pretty please it is important to associate gpu memory with the right process. again, it is not about the pid as was done in previous patches butthe child id browserchildprocesshostimpl::getdata .id .";"0"
"$region needs to be set somewhere";"0"
"the cbmanagerstate change in the new sdk is so sucky :- we did on mac and see discussion on bug linked from that cl . but if this is the only place, this is fine too.";"1"
"imo new line with a backslash should be removed.";"0"
"bouh bouh shame";"1"
"maybe a stupid query, but wont neutron-db-manage check-migrations would have an issue with this and would the cli work with the heads file now blank";"0"
"damnsomeday i'll learn how to spell, lol.";"1"
"if one fat-fingers serializer_path, we get a cryptic exception message. suggest we catch it here.";"0"
"i believe, most users should be satisfied with default dn choice. this way we allow user to just flip the switch and try it on without selecting another dn. we have the same setup for dumb member.";"0"
"edit: okay, pylint just told me that i am an idiot and that you meant the error function in argparseinstead.";"0"
"it specifies the target that this resource gets bound to in gl. a standard kernel api would be nice but apparently not nice enough to have been done upstream. seems to be a result of sticking the pipe api command stream before and after the kernel, using it as a dumb stream.";"0"
"shit";"1"
"yes. let me add the flag first. after this cl, i will update ios/api.py, and remove use_goma_canary.";"0"
"to be execute -> to be executed";"0"
"put a newline below the eapi";"0"
"ok, i understand now. it is to have a complete frame for the exception dispatch. ugly, needs comment.";"0"
"why not just call this absoluteresource to avoid the need for the odd dummy classbelow";"0"
"you canuse get_template function here";"0"
"perhaps we should rename it init.*.sh and cover init.goldfish.sh that way also. not bringing in lots of *.sh files... this one is to bring up the img graphics drivers and initialize the subsystem. i could rewrite it to be a upstart script pretty easily. would you feel better about having the rule init.*.rc or init.*.sh";"0"
"kill this too";"0"
"actually fetching the project is redundant with set_project code, this bit should disappear.";"0"
"this is ugly, you should probably splititon two lines so it lines up. or remove channel so it is shorter : 'nfs=nova.virt.libvirt.volume_nfs.nfsvolumedriver', 'fibrechan=nova.virt.libvirt.volume.' 'libvirtfibrechannelvolumedriver',";"1"
"could we just use consistent units please it is kind of ridiculous to have different units for apis from the same driver... also, proper kernel comment style is: /* * blah blah blah */";"0"
"you are an evil :o!";"1"
"damnabbreviations :-p";"1"
"are you sure you want white here, and not transparent";"0"
"this is purely me being lazy :- i am not attached to this change. i only did it for line 300 of globname.cxx.";"0"
"honestly, i might even change it to 60min. timeouts are supposed to catch the ""this is totally screwedup, let us abort"" not ""we are close to normal, but let us throw up everywhere anyways"".";"1"
"i would vote for rewriting our exception catching system to completely avoid using web.py built-in exceptions and use something like ""raise self.httperr 400, ""you sir are scumbag"" "".";"0"
"ah, thats nice, encoding stuff already crap";"1"
"wtf";"1"
"should be ""end: execute disksetup.""";"0"
"it is actually list of jolokia endpoints jolokia_endpoint_list";"0"
"what if you add __always_unused to the junk decl from linux/compiler.h does the warning go away then";"0"
"need to remove a few leading spaces here to align above.";"0"
"move up in sort order and remove the blank line above";"0"
"what is the reason to put some data into hieradata instead i do not understand what lands in puppet/controller.yaml and what in puppet/hieradata/controller.yaml";"0"
"canretry should be false instead of none i know thatitpreviously used none but seems that if its a boolean it should be explicitly false. just my 2 euros...";"0"
"use decorators.skip_because";"0"
"this might seem pedantic and stupid but do we really want to take a vast amount, i know... of memory just so a line does not break";"0"
"wpr.wait should be called even if kill failed. maybe we can call wait with defer.";"0"
"war on superfluous commas!";"0"
"yes, it should be removed.";"0"
"d0 ** 2 + d1 ** 2";"0"
"if remove self.needs_resync this func will not be needed.";"0"
"really stupid nitpick butthis line should not end with a period. there was a discussion about this in the m-l as well. i personally do not care but lets stick to the standard.";"0"
"if that is the case, agree that lock should be removed";"0"
"pls use cfg.conf.set_override";"0"
"in the future please bracket even one liners in a block.";"0"
"i wonder if the indirection is worth it... perhaps a comment would be more helpful here: # create a datagram socket s = socket.socket socket.af_inet6, socket.sock_dgram";"0"
"please, remove the empty line here.";"0"
"your fake server has duplicate logic of the classunder test due to the same inheritance. you should choose a different style of mocking. httmock is being use elsewhere in neutron.";"0"
"oh, shityou are right. is there a less error-prone way to do this than scattering calls to clearreportspending throughout the function";"1"
"petr, thanks for the feedback. a couple of comments: for proposal #2, note that i mentioned the deserialize call would return an instance of the classthis might not the most ideal thing to do for this method, though. for proposal #1, i do not think there is actually a problem. you can create an ""empy"" object with a ""dummy"" name and then have the deserialize method overwrite it. >>> classa object : ... def __init__ self, name : ... self.name = name ... def deserialize self, o : ... self.__dict__ = o ... >>> obj = a 'test' >>> obj.deserialize {'name': 'new_name'} >>> obj.name 'new_name' >>> i understand the point behind passing the flag is to validate that either of those are set but i personally do not see a huge value in that for this specific case. one reason i prefer #2 is because it'd avoid creating an instance of the object with dummy/none data.";"0"
"layoutv17dir == null !layoutv17dir.exists";"0"
"as far as i know, a fixed ip will always have a network_id, so this block seems unnecessary... can anyone prove it is possible to have a fixed_ip with no network_id";"0"
"this is an internal drbd id.";"0"
"forget to say. maybe you have seen suckbehaviour in real-life could you please provide an example";"1"
"ugly whitespace here";"0"
"if these ssl params are service_default we will see this notice. i think we need to do '!is_service_default' check for each of them. from my pov the notice is useless.";"0"
"# get all the endpoints endpoints = self.driver.get_endpoints self.assertnotin tunnel_ip_one, endpoints self.assertnotin tunnel_ip_two, endpoints";"0"
"probably a dumb question, but is 'limits' a feature of all apis to where it should be in the base";"0"
"nit: signed-off-by has no meeting in openstack context";"0"
"trailing blank line; would be nice to eliminate that.";"0"
"you do not need the $s here as that is the cwd for this func";"0"
"removing the parentheses here triggers a sanitize abort. leaving them as is does not.";"0"
"module level variables should be defined at the top of the module";"0"
"will nuke them; the cookiecutter template appears to be out of date for environments.";"0"
"if this fails, do you want to return a model update with replication_status asserror'";"0"
"useless.";"0"
"totally clumsy! i dislike it immensely! i think we should make a fileglobbing feature.";"1"
"nit: indentation. imo it is better to put all arguments on the new line: ml2_db.add_network_segment self.ctx.session, network_id, segment, is_dynamic=is_seg_dynamic same on line 63";"0"
"you'll need to fix those empty whitespaces.";"0"
"again, should it not be 'r*, admin' in the below table";"0"
"sometimes directories turn into 0-byte files when there is xfs filesystem corruption. mostly it is just paranoia. : you get enough clusters with enough different operators and someone's gonna do something dumb in here.";"0"
"can you please s/kp/key_protector";"0"
"should we do that even if we are not actually visible iow should we call getwidget ->startcompositor instead";"0"
"we should just remove this. it is useless and it returns the same as getjava";"0"
"**kwargs";"0"
"this dummy implementation makes no use of it so i removed it for now. but we intend to introduce boringssl in crrev.com/c/535258";"0"
"it will raise notimplementederror. you can pull this patch and try it out. btw, i am going to get rid of this block of code anyways in my next patch.";"0"
"what exception this is useless";"0"
"will fix addresspool. silly me. done.";"0"
"neutron should be lowercase. also, suggested to add a link to the graphic.";"0"
"whoops, fat fingers. fixed.";"0"
"killing seems bad, why kill. just stop it using an event object... for example: def heartbeat self : while self.coordinator is not none and not self._dead.is_set : <do stuff> def stop self : <stuff> if self.coordinator is not none: self.coordinator.stop self._dead.set if self._ev is not none: self._ev.wait self._ev = none self.coordinator = none self.started = false";"0"
"forgive me about the dumb question... is this being commented out because its content is now in extension.wadl";"0"
"stupid question: why was this moved down here";"0"
"unnessary whitespce chagne pleease remove.";"0"
"""submit asynchron ausloesen"" => trigger submit asynchron";"0"
"how will this be assigned, the exception was thrown before this occurs in all cases. maybe a spacing error";"0"
"cp -r $sample_policy_dir $conf_dir/ should be ok.";"0"
"now you must update heads instead of head because of";"0"
"brant: is this going to freak out your compliance friends";"0"
"i stole this code from chromeos_startup. """""" # always return success to avoid killing init exit 0 ../../init/chromeos_startup """"""";"0"
"name";"0"
"i should not need to load an l3 agent to test the db logic behavior! that is nonsense.";"1"
"same here. please, use empty lines instead of the ugly separators in this file. it is too compact and hard to read after your change.";"0"
"as i said in another cl, this field should be in trigger message, so we do not reimplementita bunch of times. i also propose to name it 'triggers', so we'll have: trigger { id: ""luci-go-trigger"" acl_sets: ""default"" gitiles: { repo: "" refs: ""refs/heads/master"" } triggers: ""noop-kick-me"" triggers: ""some-other-crap } looks like your luci-scheduler-dev.cfg cl put jobs_to_trigger into trigger message too :";"0"
"is vol_types a dict if it is, why not directly use vol_types.values here seems you do not use type_name..";"0"
"just remove this ugly space from the end of the line please";"1"
"those 2 lines glbindtexture and glteximage2d are useless since your textures are created in texturetest.cc. by extension, you can remove one of the glgeterror calls.";"0"
"they can call it something else or replace this driver with the new implementation. what library it uses is an implementation detail. also, kombu is a library which supports multiple messaging systems. we always refer to openstack as having a rabbitmq, qpid and zmq drivers ... 'kombu' is a dumb name for the former.";"0"
"bdms should probably be passed into _reschedule_or_reraise instead of fetching it again.";"0"
"this leads to ---- 2014-02-26 11:22:20.844 ++ jobs -p 2014-02-26 11:22:20.846 + kill 2014-02-26 11:22:20.848 kill: usage: kill -s sigspec -n signum -sigspec pid jobspec ... or kill -l sigspec ---- if there is no background jobs";"0"
"this change is useless";"0"
"forgot about this. i am having a hellof a time getting libcros to find <glib-object.h>. working on that now.";"1"
"this is what the query looks like: select ports.tenant_id as ports_tenant_id, ports.id as ports_id, ports.name as ports_name, ports.network_id as ports_network_id, ports.mac_address as ports_mac_address, ports.admin_state_up as ports_admin_state_up, ports.status as ports_status, ports.device_id as ports_device_id, ports.device_owner as ports_device_owner, securitygroupportbindings.security_group_id assecuritygroupportbindings_security_group_id, ipallocations_1.port_id as ipallocations_1_port_id, ipallocations_1.ip_address as ipallocations_1_ip_address, ipallocations_1.subnet_id as ipallocations_1_subnet_id, ipallocations_1.network_id as ipallocations_1_network_id, allowedaddresspairs_1.port_id as allowedaddresspairs_1_port_id, allowedaddresspairs_1.mac_address as allowedaddresspairs_1_mac_address, allowedaddresspairs_1.ip_address as allowedaddresspairs_1_ip_address, ml2_port_bindings_1.port_id as ml2_port_bindings_1_port_id, ml2_port_bindings_1.host as ml2_port_bindings_1_host, ml2_port_bindings_1.vnic_type as ml2_port_bindings_1_vnic_type, ml2_port_bindings_1.profile as ml2_port_bindings_1_profile, ml2_port_bindings_1.vif_type as ml2_port_bindings_1_vif_type, ml2_port_bindings_1.vif_details as ml2_port_bindings_1_vif_details, ml2_port_bindings_1.driver as ml2_port_bindings_1_driver, ml2_port_bindings_1.segment as ml2_port_bindings_1_segment, securitygroupportbindings_1.port_id assecuritygroupportbindings_1_port_id, securitygroupportbindings_1.security_group_id assecuritygroupportbindings_1_security_group_id, extradhcpopts_1.id as extradhcpopts_1_id, extradhcpopts_1.port_id as extradhcpopts_1_port_id, extradhcpopts_1.opt_name as extradhcpopts_1_opt_name, extradhcpopts_1.opt_value as extradhcpopts_1_opt_value, ml2_dvr_port_bindings_1.port_id as ml2_dvr_port_bindings_1_port_id, ml2_dvr_port_bindings_1.host as ml2_dvr_port_bindings_1_host, ml2_dvr_port_bindings_1.router_id as ml2_dvr_port_bindings_1_router_id, ml2_dvr_port_bindings_1.vif_type as ml2_dvr_port_bindings_1_vif_type, ml2_dvr_port_bindings_1.vif_details as ml2_dvr_port_bindings_1_vif_details, ml2_dvr_port_bindings_1.vnic_type as ml2_dvr_port_bindings_1_vnic_type, ml2_dvr_port_bindings_1.profile as ml2_dvr_port_bindings_1_profile, ml2_dvr_port_bindings_1.cap_port_filter as ml2_dvr_port_bindings_1_cap_port_filter, ml2_dvr_port_bindings_1.driver as ml2_dvr_port_bindings_1_driver, ml2_dvr_port_bindings_1.segment as ml2_dvr_port_bindings_1_segment, ml2_dvr_port_bindings_1.status as ml2_dvr_port_bindings_1_status from ports left outer join securitygroupportbindings on ports.id = securitygroupportbindings.port_id left outer join ipallocations as ipallocations_1 on ports.id = ipallocations_1.port_id left outer join allowedaddresspairs as allowedaddresspairs_1 on ports.id = allowedaddresspairs_1.port_id left outer join ml2_port_bindings as ml2_port_bindings_1 on ports.id = ml2_port_bindings_1.port_id left outer join securitygroupportbindings assecuritygroupportbindings_1 on ports.id = securitygroupportbindings_1.port_id left outer join extradhcpopts as extradhcpopts_1 on ports.id = extradhcpopts_1.port_id left outer join ml2_dvr_port_bindings as ml2_dvr_port_bindings_1 on ports.id = ml2_dvr_port_bindings_1.port_id where ports.id in :id_1, :id_2, :id_3, :id_4, :id_5, :id_6 maybe we want to disable eager loading so it does not pull in all that crapwe do not need we really only want the port and security groups";"1"
"why querying the object that you've just created doing it like in create_firewall is sufficient";"0"
"dumb question: can not we get the value defined in volumes.yaml from hiera";"0"
"all the spaces and quotes hurt my head cd ""$ cd 'dirname $0' pwd -p """;"0"
"you almost never want to clean up the way teardown works. instead, you probably want something like this at the end of setup: def _cleanup_servers : for i in self.nova.servers.list... .... self.addcleanup _cleanup_servers the main reason is that teardown _does not_ get called on failures.";"0"
"you use further down ""co-gated"", let us be consistent";"0"
"if you rebase on my debug patch, this should go away.";"0"
"without preventing curl really does not make any sense here... dump it if it imo...";"0"
"i want a false and true to show. bool_default_flag_true_false_mask bool_default_true bool_default_false would that do";"0"
"actually this function is entirely useless in python, since it does not have typed references but uses uno reflection to call all methods anyway";"0"
"service_plugins = lbaas";"0"
"i do not know if this should be removed now...";"0"
"stupid ide, good catch";"1"
"useless 'close == release'";"0"
"see above. this die should be deleted.";"0"
"is_regex_name=false btw, i think the same should be done with the files_to_extract argument, see the tarballbuildartifactitem above";"0"
"there are white spaces which need to removed.";"0"
"teardownclasscould be removed if it only calls super teardownclass";"0"
"nit: if we are going to be pedantic, i would call it the ""string terminator"" rather than ""null terminator"".";"0"
"you should use processutils.processexecutionerror instead.";"0"
"could we just eliminate this entirely by checking the volume object obtained from above if volume 'attach_status' == ""attached"" ... or similar . i hate to see us add a parameter like this where we can avoid it. especially since we already have the do_check_attach method which is kind of similar anyways.";"0"
"continuation of comment on line 3607: holy monkeys, that is loong file! should maybe be splitted in the future, but anyway... if this is setting instance_topology to none and will not passon the next conditional you can simply return it here no try: ... except exception.numatopologynotfound: # suggestion: log something return";"0"
"ditto";"0"
"omg, this alias is terrible!";"1"
"bad_client should be initialized like fake_client.";"0"
"you really think that technical criteria is much more practical and less controversial this statement clearly shows you have not been involved in neutron and openstack long enough to realize otherwise :p why are people so concerned about the 'hopping effect' to me it is a non issue. people tend to stick around for a few years. that is whatittakes to understand the full openstack machinery. if they do not most, likely what they produce is not gonna work or rot quickly: that is openstack way of life. now this is not about core vs non-core. so please let us stop raising this point.";"0"
"this should be defined in compute/v2/fake.py";"0"
"i guess you introduce some non-empty new-line here. please make sure it does not contain trailing white chars.";"0"
"/* libqmi_qrb_h */";"0"
"nit: swap method order it is show then hide in the declarations and other spots above.";"0"
"this is the only new bit. stupid git.";"1"
"special value = 0.";"0"
"normally i am analabout avoiding duplication, butthere is subtle enough differences between each thatitis not really worth it; same goes for the prefix bit imo.";"1"
"mock get_guest instead of get_domain if u follow test_volume_snapshot_delete_relative_1";"0"
"the tests are pretty useless anyway. they are really just checking that you are not using a toolchain that does not support this stuff. they do not try to confirm that any of the atomic stuff is actually, you know, atomic :-";"0"
"ah damni misread the bug -_-";"1"
"i would rename this method to set_api_extensions_path, because this is whatitis. update-* may give the impression that a path has been added. to this aim, it might be better to have an append logic.";"0"
"remove six.text_type as the logger will do that if and when needed.";"0"
"nit: /*referer*/";"0"
"clarify that this is a string containing a fully qualified manila share host name, ex: ""openstack backend1#poola""";"0"
"uploading a follow-up patch to correct this.";"0"
"crapi thought i had that in there.";"1"
"executions.extend ...";"0"
"i'd preffer having mock_del.assert_called_once_with ... or mock_del.assert_has_calls instead of matching a single exact argument.";"0"
"remove those red chars";"0"
"ok, i also like 1 . however, we should kill the renderer rather than check, and that is probably impossible from here. this is probably enough.";"0"
"you can delete in one shot. no need to select and delete.";"0"
"i'll be damned. i just assumed that weak_ptr needs a full definition of serviceproxy to generate the default destructor of weaveclient. but i actually tried and it works just fine i guess because refcount is not really stored in the controlled classbut in a separate storage . anyway, removed the destructor altogether.";"1"
"yea, it is a bit messy - and particularly when considering arm32-style paired single registers. i think a portable sameness test would be something like: bool issamereg regstorage reg1, regstorage reg2 { registerinfo* info1 = getreginfo reg1 ; registerinfo* info2 = getreginfo reg2 ; return info1->master == info2->master info1->storagemask info2->storagemask != 0 ; } yuck";"1"
"can you include the output of ""ip a"" from the host machine where you are executing devtest.sh";"0"
"i would have kept the comments out of the localrc generated but i am anally retentive.";"1"
"i think you do not need to store those mocks. you do not use those db_api_*_m attrs later.";"0"
"as we should not be touching r on returning false anyway. ditto below.";"0"
"how about using calloc instead of malloc to do zero initialization";"0"
"because bash sucksand i suckat writing bash also , it does not like the empty array when you run with -u.";"1"
"is gn_helpers.py supposed to work fromgnstring 'true' fails with gnexception raised.";"0"
"please, remove all trailing spaces.";"0"
"perhaps it might worth removing floating_ip from self.free_floating_ips";"0"
"all of this should be a cleanup from setup: self.addcleanup nova.tests.image.fake.fakeimageservice_reset self.addcleanup timeutils.clear_time_override";"0"
"combine with prior statement, and kill extranaeous empty line.";"0"
"wow - you are totally right - i will fix this asap!";"0"
"you should really write the final null byte into checksumstr.";"0"
"i really hate the 'i' as it smells like hungarian notation. i'd like something more self documenting. how about nocase __startswith_nocase=y";"1"
"i know this is incredibly analbutto you want to make this an atomic operation i think this is going to be atomic no matter what, but maybe it should be explicit so there is no chance that someone will be able to get a half set value.";"1"
"actually, i think we always want to round towards positive_infinity.";"0"
"hmm... you undef tegra2_device_settings here. do you think tegra2_device_settings should not be tegra2-common";"0"
"i am ashamed for you.";"0"
"get rid of all these tpyedefs";"0"
"crapthis is an artifact of a previous revision. it is simply the last time a change was made to tuskar's cloud.";"1"
"yes, doc strings in unit tests suckbecause they cause the name of the failing test to be hidden.";"1"
"please remove this white spaces";"0"
"yes, unfortunately this does add some fragility here. though you are wrong thatitis inserting namespace data. and of course if the compiler does add thatitwould make for a 100% failure rate of the test fun fact: __func__ apparently at least on the android build system is resolved to __pretty_function__ which does add a lot of crap as per the commend on the hardcoded strings though, this way we are ensuring we have to correct mapping and do not require constants for everything that is redundant and makes it harder to add tests. again, this is a test - not another abstraction layer on top of a hal on top of an api...";"1"
"damnyou are right, should be static constexpr uint32_t kbuiltinprefix = uint32_t 'g' << 16 + uint32_t 'l' << 8 + uint32_t '_' ; uint32_t prefix = *reinterpret_cast<const uint32_t*> name.c_str ; return name.size >= 4 prefix >> 8 == kbuiltinprefix;";"1"
"you need to either make this a get 'count', 1 or add a validator to ensure that the count key exists. keyerrors are ugly.";"1"
"i think here elevating the context is not necessary. are you sure this is necessary you are querying the db bypassing any sort of utility function that uses the context.";"0"
"ugh, what a stupid option the above is. : it should diaf. also, it has nothing to do with database configuration. setting this to false causes new service records to be marked disabled upon their creation.";"0"
"i do not suppose we can do something like what does instead i'd rather not add more ways to mock out the dnsconfig, unless we really need it.";"0"
"nit full_jack_deps now there are not only lib here";"0"
"i am slightly concerned that placing two params on the same line violates puppet style. did you check this against puppet-lint";"0"
"i am an idiot. an earlier version i had the if statement structured differently and then i refactored it without testing. that should be ""if controller ..."", not ""if !controller ..."". that is why it does not work. sethandled works fine so i'll switch to that.";"0"
"ditto - should reraise instancedeployfailure";"0"
"all of these fieldtype subclasses need docstrings.";"0"
"those bastardsbut my point is, there should be an uppercase l in 'liberty'.";"1"
"we have only 3 slaves";"0"
"silly nit but put this inside the if";"0"
"hmm, we do not have rollback_live_migration_at_source here in driver, butitlooks like we will need because of this logic. or we will not if others agree that we do not need to remove .copy file, butitis a garbage.";"0"
"oh goddamnit.";"1"
"what i would give for a protobuf-over-dbus wrapper!";"0"
"should be root_device_path, otherwise you are overwritting the value set by the method.";"0"
"same comment as for connection_retry.";"0"
"os-brick is not usable in kilo so this comment should probably be removed.";"0"
"overcloud-ha.env should be a yaml ending i think.";"0"
"please, remove whitespaces in empty line.";"0"
"you set dex_pc of hlocal to zero, so this will also always be zero.";"0"
"is it related to ...' - yes. lucas, imo this not a wsme bug. in your example we have 1 ok, 'fake' driver does not support 'passdeploy_info' method. 2 bad url. admin can set api url option manually or in last case right '/' should be stripped.";"0"
"not a bug in sqlite. just a gap in test case and me being an idiot and testing against wrong code. the test case i added discovers this bug correctly.";"0"
"that seems like a bad choice because repetitive code like this is the easiest code to get wrong. if you really access the fields all that often which surprises me , you canalways add accessor functions like pid_t pid { return mdata.pid; }";"0"
"nit: these statics are redundant";"0"
"hmm.. that is actually a lot prettier. darn.";"1"
"added you _and_ kinuko :";"0"
"useless!";"0"
"please remove the white spaces";"0"
"condiser using httplib.* instead of immediate values.";"0"
"i do so to provide a simple way to stub manilaclient in children testcases.";"0"
"i really hate those. not sure what the officiel openstack policy is, though.";"1"
"i suggest to say copy the contents of the id_rsa.pub/id_dsa.pub file and give the default location as file xx in directory .ssh in your home dir";"0"
"existing code that leverages this does not, but looking at the script in question...i think it is because i am an idiot and i should just do that.";"0"
"style: please add an blank line between l22 and l23 for consistency.";"0"
"yucki think min and max would actually have to query rd.min and rd.max .";"1"
"danger: 'name' can be 'none', so typeerror can be raised.";"0"
"should this be $dib _image _cache like below";"0"
"dumb question: if port isolation is not book, why are we just skipping it here or is just another way of saying 'is not none'";"0"
"i would still argue that setsid should be called as part of init , therefore only when pid namespacing is used.";"0"
"remove here and below and in other archs.";"0"
"for a safer selection of ciphersuites, you probably want to crib from the puppet-openstackid vhost: # once the machine is using something to terminate tls that supports ecdhe # then this should be edited to remove the rsa+aesgcm:rsa+aes so that pfs # only is guarenteed. sslciphersuite ecdh+aesgcm:dh+aesgcm:ecdh+aes256:dh+aes256:ecdh+aes128:dh+aes:rsa+aesgcm:rsa+aes:!aes256:!anull:!enull:!md5:!dss:!psk:!srp sslhonorcipherorder on";"0"
"it has been a long time since i have been in this code, however it seems possible that: * v2 apps behave as msw describes. * v1 apps and hosted apps i.e. bookmarks do not create a new controller but continue to use the shortcut controller. either way we really need to confirm and document the behavior in the various headers. michaelpg , i hate to impose this on you, but someone needs to do it :";"0"
"better passby value, bool bistextcat or just ""bool istextcat"" to avoid the ugly ""misunderstood hungarian"" prefix";"1"
"this info seems useless";"0"
"the only difference is that here its a warning and in error_check_partial its an error. otherwise both are same.";"0"
"k, thx for the explanation, i thought this had more to do with the gate_hook.sh with params.";"0"
"who initializes this should it be lazy initialized on first registration";"0"
"this dcheck is probably redundant.";"0"
"usually there is a colon after the space. rather than creating a temporary object, you could certainly just write this as self.wlans.append { 'type': 'wifi', 'mode': 'managed', 'autoconnect': true, 'ssid': wlan.ssid, 'security': wlan.security, 'passphrase': wlan.passphrase }";"0"
"please set up lower bounds";"0"
"you are going to want to kill me, but redrobot said these should be in the format assertequal expected, returned . he dinged me on that for mine. i do not know if worth -1. ask redrobot.";"0"
"i guess self.id should not have any '.' in it. might be worth an assert.";"0"
"ip_version=as_ip_version";"0"
"ya. darn. i thought i snagged all these.";"1"
"tukaj nekaj manjka!";"0"
"dumb nit, should this be logged before the exception i guess i am fine as it is because it shows the error right after the traceback and you do not need to scroll up much to see what the problem is.... in a ideal world";"0"
"oops, i just make a stupid mistake.";"0"
"drm_framebuffer_unreference can not do at irq context. so that we create a queue to do vsync handler. but i see the armada drm driver, it use a queue_fb_unref_work to unref framebuffer, so other things we can direct do at irq contextithink it would be faster. or see my changes:";"0"
"from irc: <mordred> helli think run_tests.sh is an abomination anyway - i can not imagine having it call out to a project-specific thing will be any worse if it gets us a bulk of things to be oslo so i think it is worth giving the tools/run_tests_common.sh idea a try";"1"
"you'll need a ""delete this.goofy.activeiframemap this.path "" here.";"0"
"are you converting to be backward compatible. if so, that is not necessary.";"0"
"should be using tags:console instead of filename:console.html here so we can pickup grenade failures.";"0"
"my bad, the compatible string for dwc3_qcom and dwc3_ipq4019 are different. one is ""qcom,dwc3"" and one is ""qca,dwc3"". gale use ""qca"" version.";"0"
"if someone stupidly configures retry_attempts to be 0, then this will not execute at all. logging an error is probably warranted. we might also consider treating invalid values as being ""1""... just because somebody is bound to misconfigure and go scratching their heads when things go sideways.";"1"
"/* error_code_out */";"0"
"how will the bot run things that are yet to run the hook gets fired on new commits on the repo, but new tasks will be in a time different to the bot being fired up. are you thinking on doing 'at $date_from_run_index $script_from_run_index or are you thinking in implementing another scheduler mechanism fwiw, i did in gozer a system that accepted commands to run things on jenkins masters stuff like hold a slave, retrigger a post job, etc and those tasks were scheduled with at command, worked a treat.";"0"
"argh, i really should get this into pep8 env";"0"
"useless";"0"
"for radvd, kill seems to be the way to go";"0"
"yes, next patchset will have tests, and will remove wip";"0"
"exact same thing as a dumb mmap";"1"
"this awk should be rewritten for clarity. i prefer the following, but i understand it is open to subjective opinion. also, there is a spurious second $ in the middle block. awk -v v=""$entries"" ' / # heat_hosts_start/ { print $0 print v f=1 } f !/ # heat_hosts_end$$/ { next } / # heat_hosts_end$/ { f=0 } !f ' ""$file"" > $file.temp";"0"
"one way to make exploitation harder even if there is no guard page would be to add weak secondary stack aslr in bionic. the problem with that is it can screwover callers with very precisely sized stacks, as they'll have less available than they expect. using a single page for aslr with stacks >= 1m is arguably sane because they could be screwedover by a compiler update if they are that close to the end... i have a patch doing this butitis pretty sketchy so i did not have plans to upstream it.";"1"
"executing should be execution";"0"
"this line is also useless";"0"
"although fpilevel is only assigned a value in case of eetstype being etspiadd and etspimult and only then setscalc.getpredictionintervals can be called, i have given fpilevel a default dummy value.";"0"
"this methos => these methods";"0"
"yeap, totally took it as if it wassqlalchemy stuff, sry for useless comment:";"0"
"nit: should be non_default like test_call_command_non_default_timeput and test_iface_to_br_non_default_timeout, feel free to ignore.";"0"
"bah - stupid gerrit lost my comment then found it again when i pressed review.";"0"
"port_pair_group_context = portchain_context.portpairgroupcontext";"0"
"self._reserved_cookies = {self._default_cookie}";"0"
"silly stuff... spelling errors please replace all entries of servcie to service";"0"
"the note is now obsolete and should be removed";"0"
"oh i dislike this line, it is abosolutelly unclear what the hellyou are doing here= .";"1"
"then you do: time ""${buildcmd }"" ""${build_targets }"" die";"0"
"i think you want gerrit-git-prep instead of devstack-checkout. also if this job does not use sudo, you want to add the revoke-sudo builder too.";"0"
"butthey print all this junk: 21:17:12: info: building for peach_pit 21:17:12: info: u-boot board is chromeos_peach";"0"
"this 'if' statement if useless. this check is already done in 'self._assert_data_in_result result, msg '";"0"
"can we reduce this down to 1 sec or so 5 seems awful large!";"1"
"this part is apparently not true. if by upper layers, you mean other parts of flashrom. i tried 'flashrom --read /tmp/c.bin' on kevin, and this produced a large full 8mb i think read, which apparently the spi driver still can not handle. i need to fix that up... butthis means unfortunately, we should keep the hack for now, and loop over eraseblock sized chunks in the 'read' path still. and for your sake, we can do the same for writes. i just objected to changing the ""page size"". sorry for jerking you around a bit : i'll try to fix things up on the mtd side a bit, so we do not have to live with these hacks forever.";"1"
"empty brackets looks ugly. please remove it if possible.";"1"
"interesting. i feel like usually people use kill pid, 0 to see if a process is still alive. actually, there is a scenario involving pid namespaces where kill pid,0 would work but getpgid pid would fail with einval iirc . unlikely to show up here, but might as well be pathological and stick with kill";"0"
"javadoc link'ing or see'ing ${classname} would be useful here.";"0"
"check yourself before you wreck yourself...";"1"
"fwiw, i uploaded a fix for build-qemu-android.sh here:";"0"
"even though this solution is acceptable, it is still not clear to me the difference in behavior between this approach and raising shareresourcenotfound given the code below: if you always throw shareresourcenotfound no if/else condition as in your code , manager will do exactly what you are doing, it will swallow the exception and proceed. if it is not ""deleting path"", as you are checking for such in share status, it will throw exception, just as are you doing, since manager is only swallowing the exception when deleting the share. the only scenario which i think this is valid is if this library is used outside of manila, which is what i understood based on our irc conversation, but by using share 'status' here i am assuming it will not be used outside of manila manager code path. so i am still confused as why always throwing shareresourcenotfound does not achieve the same behavior as you are implementing in your driver code. please correct me if i am missing something.";"0"
"i would replace the ndashes here and on line 16 with either an unspaced mdash, or a colon preferred . alternatively, you could make this a varlist.";"0"
"sorry, fat fingers. it is ""hoststate.db_updated = compute.update_at = hoststate.updated""";"0"
"inner_loop.py is great for development, but consider something like gnumd_lib.py for landing this.";"0"
"need to be removed";"0"
"deprecate* saml2 auth plugin";"0"
"nameerror if url is none, but is that possible";"0"
"nit: random full-stop in the middle of a sentence";"0"
"crapi suspect we are really just papering over the real bug here.";"1"
"can be killed...";"0"
"similar. e.g.; auto pid = event_value->findintkey ""pid"" ; if !pid.has_value { ... } thread.process_id = *pid; ...";"0"
"oops, brain fart :- sorry, i had misread that page i overlooked the fact that most overloads only applied to unique_ptr<t > . shutdown got removed altogether in the end, so we will not be needing either version.";"1"
"this does not capture/distinguish the case where ssh fails because the host crashes during the update. you should be able to catch that case with code like this: result = e.args 1 if result.exit_status == 255: # this is an ssh failure, not an update engine failure";"0"
"this is not a right place for a panic, when a different method of error handling would do the job i.e. returning an err ""real library functions should avoid panic.""";"0"
"julien, could you please explain this a little it is clear with 'admin' but for project_id... who is ""owner"" and why it is determined with project_id sorry if the question is stupid but i need to know :";"0"
"remove this white space error";"0"
"maybe split the get_volume_encryptor and the attach volume call this is quite confusing to read.";"0"
"if we do not, we would need to fail here; but i loathe the idea of breaking people's existing environments :";"0"
"can you please switch the arguments to assertequals around the usual style is assertequals <the variable being verified>, <the expected value>";"0"
"you only took half of my recommendation. you need android_membar_full here.";"0"
"as previously, you need to put this in a use_android_emu block, and provide a solution that works with a single server for the non androidemu build of qemu2. i know that suckssorry about that :";"1"
"this block belongs in stop_opendaylight the bits in unstack.sh go here";"0"
"why the hellwe need a copy !";"1"
"this is entirely stupid, but if one subclassed this and passed in 'additional_apis', you'd be overwriting them here. : i am not gonna worry aboutit";"0"
"if we do not expose the mode then we will be using a mode that the user can not find out about with xrandr or whatever . that seems bad to me. otoh i do have sympathy for stephane's point.";"0"
"the ultimate bikeshedding : the semi-colon is useless ...";"0"
"maybe a dumb question, but _get_boot_device will call client.list_boot_devices if drac_boot_devices is none, so why bother doing this here, instead of letting it be done in _get_boot_device";"0"
"servicebad should be a uuid as well";"0"
"hwkey_req_get_keyslot = 0, hwkey_resp_get_keyslot = hwkey_req_get_keyslot hwkey_resp == 1 == hwkey_resp";"0"
"done. i think they came from a messed up rebase.";"0"
"yeah, i just left this as it was working in the first patch. this whole file needs to die.";"0"
"sorry for this dummy mistake. will be fixed.";"0"
"i would like us to remove hassearchabletextcontent to avoid having 2 different api for the same thing.";"0"
"this call spews out junk on stdout for me. :/";"0"
"ok, i'll bite. dumb question -- why do we want to mock these what calls them/how are they being used";"0"
"yeah when the rsync kicks in the reference is stale.";"0"
"btw why not just myfakescenario.do_it.preprocessors = preprocessors";"0"
"ken'ichi, the policy checks already was used in api layer. it is my fault, i will update this. thanks very much.";"0"
"this should be 'group solum-core' without the 'project-' here is a good example:";"0"
"i assume this requires to add standard_attr_id in migration.";"0"
"wtf.";"1"
"why datanode this template contain slave process";"0"
"useless now :";"0"
"why is regexp.quote necessary here why not just: / metering_secret = metering_secret$/";"0"
"no, let us just remove this nonsense command in another patch.";"0"
"nit: better move : inside trans";"0"
"btw, i suspect this might fail on extn because of the non-zero exit code and the ""set -e"" command. why do not you change this to something like: if ""$ stat -f -c %t / "" != ""squashfs"" ; then";"0"
"okey, i will use your regexp:";"0"
"nit: i'd suggest that exposing the zlib return values here is overkill. the client of such a function is only concerned about uncompressing the whole file otherwise it would be using the gzxx functions directly , so just make it return a boolean true for success, false for failure .";"0"
"ah, this should be ignore_missing=ignore_missing";"0"
"start.sh is what we want to execute cmd here not the python script.";"0"
"your ordering is a little ugly. bug= and test= should be above all the tags an the change-id should be together with all the signed-off-bys. then maybe i would have noticed that git hash the first time i looked at this.";"1"
"this is kind of ugly... i think instead you should passthe timeout with the function when you register it, and keep a private max timeout requested variable";"1"
"hmm. does the end person want to know what state it was trying to be set to, when it failed nostate seems somewhat useless.";"0"
"unique constraints or indexes on nullable columns are absolutely stupid, anyway. i fully support getting rid of these cases in the db schema.";"1"
"damni thought i got all those.";"1"
"use_call=false will be removed in the next ps.";"0"
"also explain in this file why the compiler was failing, and dx's smart/dumb behavior.";"1"
"lets just kill first-boot.d at this point. i prefer o-r-c scripts that manage their own idempotency. removes the last usage of it.";"0"
"why pull this out into quasi-globals when you just setitthe same in all three vms below or is this all because the overload of the run_list clears the run_list using the old way";"0"
"what i'd do here, inside of installing mysql directly, is just call nodepool::mysql from puppet-openstackci";"0"
"hasmodifiers withmodifiers modified ismodified ... everything i can think of seems to be worse for now.";"0"
"its where keystoneclient stores the signing junk. seems like its not playing nicely when its not the same as nova. there could be some devstack juju we dont know about...";"0"
"'pkg_list' is a string. you want 'list packages ' instead, and delete line 671.";"0"
"please remove white spaces at the beginning of the line.";"0"
"long line. wc shows 91 chars.... you probably need to set line length warnings in vim/emacs.";"0"
"i really should learn how to sort in vi, for when i am doing stuff over ssh... clearly i am too stupid to do it manually!";"0"
"i had commented on that before. seems a little silly.";"0"
"let us get rid of the extra white space here";"0"
"drop the die";"0"
"can you reword this a little. also the bug reportitself is a little confusing";"0"
"replication_partners should not be hardcoded here";"0"
"interesting -- that kinda sucksbut i guess as long as this works, for now...";"1"
"is the code catching typeerror just in case pid == none it would read better if you just said this up front. then some of this code could be cleaned up. if pid and self.root_helper: child_pid = none while true: try: child_pid = utils.find_child_pids pid 0 except indexerror: # last process in the tree, return it return child_pid";"0"
"remove the black space.";"0"
"garbage collected.";"0"
"unfortunately i had to do all of that casting or ansible converted back to unicode :/ i agree, very ugly.";"1"
"yes, i guess i was understating :p damnbrits";"1"
"similary, die if vertica_package_file is not set.";"0"
"stupid nit, could you please add a longer description of why we are removing this";"0"
"this backslash is not required and should go away.";"0"
"because i am an idiot. -- fixing now. good catch. :";"0"
"you haven t initialized run_at_load. what s its value here are you sure";"0"
"running dd as root allows about a billion compromises, so this should be tightened at some point being able to tighten being the whole point of rootwrap . getting the tightening right is damnhard though, so should probably be a separate bug.";"1"
"it is possible that profile exists but dodisplaynotification has not been called so notification_id is still in pending_notifications_. we should just check if the notification is in pending_notifications_ and erase it / return in that case.";"0"
"oh, damnit. now i getityeah that makes sense. ignore my comment :-";"1"
"remove does always remove from the head of the free list.";"0"
"stupid spell check. ""accoring"" should be according";"0"
"what if the directory does not exist locally will this be created if so i wonder if subsequent stack.sh may end up screwup permissions if not since this is supposed to be owned by the 'stack' user";"1"
"lazy boy, you could write ceilometer.conf entirely :";"1"
"i get why this is needed, i was just hoping to have killed the cli tests by now...";"0"
"i was thinking exactly the same. this was taken from another driver, butitseems silly.";"1"
"let us move the bad-mac check into wifi_data_provider_mac since we are pretty sure it is a mac-only issue: then we can add a dcheck here to make sure we are getting valid data on all platforms. that way if we run into the same issue on another platform we'll find out aboutitinstead of silently dropping the wifi data.";"0"
"no action required validating behavior, lovely :/ can not wait for you to replace this crapwith their functional betters.";"1"
"i think here you should use just for uuid in uuid_list:";"0"
"analbut i can mention it may be used by third party packages. :";"1"
"pathetic. my bad.";"0"
"kill";"0"
"1. last part should happen in ""finally"" block to restore file contents even if puppet failed 2. you should restore file contents, not dump new yaml into it. you'll lose all comments and ""pretty"" formatting from user pov 3. if safe_dump fails for some reason, file will end up empty. use our atomic file updating approach.";"0"
"actually sean, you are not exactly correct too. this message is meant to be read by api consumers. references to internal functions are kind of useless to developers of client apps and operators. the right message would probably simply be ""mac_address cannot be null"" and ""mac address xx contains whitespaces"". the text ""mac address"" can be passed as a parameter to _validate_no_whitepsace";"0"
"i think we should talk a bit about this one. it could make for some really nasty output on devstack. also, my devstack logs are already murdering my system:";"0"
"again, kill this.";"0"
"this could be just"" return verify_result "", line 970-971 is useless";"0"
"these accessors are not needed as you are using allrenderprocessmeasurementsarecurrentfortesting now.";"0"
"do we need this it is already set as the layoutmanager. setting the span count on it should probably propagate by itself";"0"
"seems this change is useless. _resource_names makes a call to self.count inside.";"0"
"seems like it canalways be a token acquired by a trust id associated with a user who created the trigger.";"0"
"dumb question: where is this new mnoutlinelevel variable ever used";"0"
"it is enough to say: test_modems_module_path = __file__";"0"
"what is about real_path='readlink -f $0'";"0"
"done damnit...";"1"
"that comment is completely useless. this whole file is about xls/xlsx export.";"0"
"i am not so sure this flush_work matters... there is no lock around the entire lut , so this flush_work just protects against a ""partial update"" of a single lut entry ... and a single lut entry is probably atomic since it is just a u32.";"0"
"a running instance or a stopped instance. can a stopped instance be 'rebooted' asking the dumb questions so we make this as readable as possible.";"0"
"missing: partial-bug: #1541928";"0"
"oops... what the hell. mysql> drop user 'test' 'localhost'; error 1396 hy000 : operation drop user failed for 'test' 'localhost' so i had user 'test'... but as long as we create these users and generate random names for them, we should be fine with this. stupid mysql... it seems that there is no easy way to drop a user only if it exists.";"1"
"damni meant to and then i forgot.";"1"
"and then you can instead do this: virt_props = objects.virtproperties.from_image_metadata image_meta and get rid of the annoying :";"0"
"json.dump f, discovered_data";"0"
"you are breaking bootstrap_admin_node.sh script logic when deleting this line:";"0"
"you killed the magic query! why!";"0"
"nit: alignment here is off, project_id should be lined up with nova_fixtures above.";"0"
"i dont see these happening in my testing of this. i may be doing it wrong, so i'll keep my -1 until i realize i am an idiot or its not working.";"0"
"typo: 'genenv.sh'";"0"
"not your fault, butithink that this flag should've instead been named acpi_ac and made to default to being on. then boards like this one could unsetitin their overlays.";"0"
"are you missing httpretty.activate to monkey patch sockets";"0"
"typo in commit message: which test should be executed when ran within multiusertestcase";"0"
"if you are fixing nits anyway... s/a //";"0"
"kprimnot == 0 as above.";"0"
"barbican is only incubated, and potential graduation is something we should not bank on entirely. i'd really like to see a *dumb* key allocator done just in nova for the instances as a fallback. even though it is not 100% secure, it would handle the at rest problem of another user booting their guest and doing strings on /dev/sda1 to pull out previous user data this is something which has previously been exploited at amazon, rax, and digitial ocean, so definitely worth protecting against even before barbican becomes a full part of openstack .";"0"
"nit: this check is testing wtfvector is initialized empty which is not needed here.";"0"
"just for readability, butitdoes look a bit silly now.";"1"
"any reasons for not using decorators or context managers here it is strange you do not stop these mocks.";"1"
"you still pollute the classwith _hook and _post and whatnot. please see below how to avoid it.";"0"
"hmm, you are right. i will leave them in oidcbase and remove them from here";"0"
"should have been a single colon";"0"
"are these dummies really necessary";"0"
"i believe we can get rid of '_missing' object by rewriting condition that way: if self.__name__ not in obj.__dict__:";"0"
"i think you may need to say .subquery or .asscalar here, too";"0"
"i think it should be a dict.";"0"
"sorry, butthis is so horribly ugly and error-prone";"1"
"i am ok if we kill the stub backend.";"0"
"from operational point of view we can say that subnet without a network is useless. i will change. thanks.";"0"
"please also remove these mixins. i do not see how they are useful";"0"
"commented out code should be removed.";"0"
"damned if you do, damned if you do not i am doing it because i've gotten nits aboutit i do the same as you are suggesting in other code bases...";"1"
"nit: data.get 'with_subnet' would work just fine, since none is a false value.";"0"
"i might be being stupid, but i really do not see the purpose of the :self._remaining here.";"0"
"you do not need these separate vars, just use the side_effect inline with the nested context mocks below.";"0"
"what tools i only see start-stop-daemon being used in this script.";"0"
"i think this 'tempurl' should be removed like below.";"0"
"_check_gateway_in_subnet should be a classmethod in order to use cls._check_subnet_ip instead of neutrondbpluginv2._check_subnet_ip.";"0"
"again, this comment should be removed or we should have two sections like above.";"0"
"wow, that is really stinky. thanks lucas.";"0"
"output formatting is kind of ugly right now, yeah.";"1"
"please, get rid of this function";"0"
"so in comparing with the other puppet jobs, we should create the bundled gems dir and switch to a similar pattern for the installation and running of bundler. mkdir .bundled_gems export gem_home='pwd'/.bundled_gems gem install bundler --no-rdoc --no-ri --verbose $gem_home/bin/bundle install --retry 3 $gem_home/bin/bundle exec rake lint $gem_home/bin/bundle exec rake validate $gem_home/bin/bundle exec rake spec also do we want to go back to a template to at least check puppet 3.x and puppet 4.x";"0"
"__init__.py now should be empty.";"0"
"sessionmanager is a chrmoes only component. this block needs to be os_chromeos only if automationmanageraura is used on other platforms.";"0"
"i think the part about 'the user is responsible' can be removed block on l367 will be executed anyway as i read it";"0"
"eliminate backslash. here and later in file";"0"
"delete the 'die'";"0"
"commented line, do we need another fixme, or should this be removed";"0"
"was going to ask why you did not do this as a query string parameter... then i realized i was being dumb because nobody in their right mind should do a delete offaget method. so... yes, this a handy trick.";"0"
"you mean after executing the template it is not trivial, since n are significant inside code snippets. i failed to understand how to force text/template to emit correct spaces. i tried {- and -} and various combinations of thereof. this shitis insane. i gave up.";"1"
"hmm, actually -- this is not a stdlib, it should be inserted at line 25 please check other six imports too";"0"
"stupid trailing space";"1"
": the downside of taking these guides out of the openstack-manuals: no easy way to reference other files. i'll yank out this link.";"0"
"we are killing all enum tests so dont add this one n";"0"
"this adapter is very inefficient: you should not be creating a new view everytime. reuse the convertview whenever possible. also, the last parameter is wrong, you need to supply the parent view to the inflater: minflater.inflate ..., parent, false ;";"0"
"the only reason to do this is that we have apps whose heap dump exceeds 270m. the max_buf_size has to be atleast twice the size of the heapdump.";"0"
"format requires and not <> around emails. i know it sucks";"1"
"inconsistent with devstack, see stack.sh for definitive style. xen scripts are a mess.";"0"
"i see why you did it this way in just a straight removal of the tuskar stuff, butitlooks goofy outside of that context. can we just use template_name instead of this local var";"0"
"this line should be params=params";"0"
"can you add checks here, and below a malformed elf could have a huge sh_size that causes this to fail.";"0"
"oops, silly editor - fixed locally and will be in the next revision assuming there is one .";"1"
"it is coming from iterating the edges member which is a wtfvector.";"0"
"several e12* checks are wrong and contradict pep8; we should ignore them.";"0"
"see, this is why having the changelog on the client side sucks you removed the client side method, so felt you needed to update the changelog, so felt you needed to bump the version number :";"1"
"remove std::";"0"
"should be .ssync_sender._encode_missing";"0"
"for loop seems to be simpler: for let configidx = 0; configidx * 4 < streamconfigtag.length; configidx++";"0"
"recommend net_radio_prop instead of system_or_radio_prop.";"0"
"nitpick: keyston*e*_admin";"0"
"arsei had a change which did this but backed it out because it was more disruptive ;";"1"
"get_by_name and allow_node_logical_names mocks seems not necessary here.";"0"
"daniel, do you have a tracking bug for this that i could reference here or would crbug.com/778318 cover this as well";"0"
"ok, i see what you are saying, so i added a check_le , not just for overall defensive coding, but also since these apis are kind of peculiar in the first place i.e. the cb/cch args are so weird, what if i screwedthem up or what if i passone size and check against a different size friendly joke: now that i understand your thinking, i fully expect you to 1 find all calls to open and make sure they check for fds < -1, 2 find all calls to read and add a check_le in case it overran the buffer. ;- ;- ;-";"1"
"note: this url is going to be dead/broken in less than a month, so listing it is not terribly useful";"1"
"only a stub. info are in the wadl file.";"0"
"stupid typo on my side, thanks";"0"
"prefer to mock linux_utils.execute";"0"
"remove the network_id from the network_ports list";"0"
"does not this just mean we fuckedup the mips syscall.s in bionic the other architectures move the syscall number into the appropriate register and then make that system call directly. on mips, we actually use a 'syscall' system call. i do not think that is necessary, and we should just fix the mips syscall.s in bionic. is __nr_syscall even implemented i can not find it in the kernel source.";"1"
"dammit... good catch... done";"1"
"mock it the same way you mock _set_service_state";"0"
"vim header should be removed.";"0"
"should the service be unbound here similar to customtabsclient#connectandinitialize to allow the oom killer to kill chrome if necessary";"0"
"this param is redundant.";"0"
"oh crapi missed this!!!!";"1"
"domain_name=domain_name";"0"
"you are not returning anything here, you are raising a notimplemented exception";"0"
"all this shitwill be better in the next patch.";"1"
"of course. silly me!";"0"
"this whole checking of count value can be simplified. the current revision is too dirty.";"0"
"you can not putitin a product makefile like brillo_base.mk. you should putitin an android.mk, such as device/generic/birllo/android.mk";"0"
"dumb question. if ironic is not even 'ready' yet, why mention these deprecations is that a word";"0"
"should be port_pairs only, same as the dict param else can not display the values";"0"
"the host does not have to handle the rollover. the host side is pretty dumb, it just compares the sample id before and after reading data. if they match, then the host is happy.";"0"
"liar!";"1"
"that is a good point. arguably, minijail does allow you to fucksome things up but not many -- you canalways passa full capabilities mask for example. if you want to draft a version of this cl that delays the elf linkage check, that is fine. if you want to land this to unblock other work, that is ok.";"1"
"test_show_quotassubproject";"0"
"ok, my concern is that would impact a lot more code and status is notorious for being kind of garbage on some services. which is part of the systemd win, that we'll get on ubuntu in the next lts and be able to dump all these work arounds.";"0"
"> this approach should cover your example because user will > get a 404 . and that should also cover ""other cases"" e.g. > network problem between glance and the backend store > which the user should not know/care about. it does not 404 was just an example, it can be anything, another example. - me: upload image - glance: notfound ""image url failed fetch returned: <any http status that you can think about>"" - me: ohh shitmy url is not working because ... - me: upload image uri> like i said if we agree that reason does not contain any security issue then why hide it at all, if it is not meant for the user special case faulty switch so be it, if it is user problem that a big win.";"1"
"this die is not needed -- emake will already abort";"0"
"in case sb_read fails, we probably want to skip the write, since mode may be uninitialized / garbage.";"0"
"you canuse the angle_gl_program and add a glshader type in gl_raii.h to not need this.";"0"
"yuckcruft, will remove tomorrow. wonder why it did not warn me...";"1"
"because the : operator is dumb, it does not take nullopt here, and kerberos_files_handler_.setfiles response.files .has_krb5cc response.files .krb5cc : base::optional<std::string> , response.files .has_krb5conf response.files .krb5conf : base::optional<std::string> ; is one line longer and less readable.";"1"
"you should use: mocks 'fill_udp_checksum' .assert_called_once_with";"0"
"should not you let start.sh run keepalived";"0"
"crazy rebasing... i'll restore last values.";"1"
"nit: is this death-worthy since it is in a tempdir, i'd just say 'rm -f' and remove the ' die'.";"0"
"can we say ""a string-based dump of all <code>logcat</code> information.""";"0"
"it is common to use **kwargs instead of kwds.";"0"
"i think we will need names for this and the other fk below";"0"
"ya, one mans garbage is another mans not garbage. it'd be nicer to have a log level for this stuff; since when the shithits the fan it can actually be useful, better to have things and just turn then off then not have them at all.";"1"
"run usermod -a -g kolla haproxy";"0"
"this comment is not really enough to explain why this is being done. or at leastitis late enough in the day and i am stupid enough to not getit";"0"
"it is anuseless class";"0"
"remove all author tags";"0"
"""$rc -eq 0"" is not needed here - above we return from the function if ""$rc -ne 0""";"0"
"this is generated by tools/conf/generate_sample.sh which has ""wordwrap_width = 60"", so nothing i can change here.";"0"
"teeny tiny nit: extra space";"0"
"this dcheck is not needed, as dereferencing nullptr will cause a crash anyway.";"0"
"this is actually terrible ...";"1"
"do they use gcc the macro is only because clang sucksat fortify and the clang folks seem pretty uninterested in having working fortification . gcc gets an inline function.";"1"
"yeah, we can make it a staticmethod. i just hate those docs, as they drift out of sync.";"1"
"these two are unnecessary for realloc, so you can put them under '#ifdef guard_blocks'.";"0"
"u""killed"" -> u""killed""";"0"
"you mean here and on lines 60 and 62 those exception are just to verify that this fixup works... and i need jenkins to fail to see either one of those messages. and nothing fails! damnheisenbug!";"1"
"let us also unset handle_ too, so that if we erroneously end up being called twice we do not try to kill the already killed process or, even worse, trying to kill some newly started process that reused our pid .";"0"
"yes we can lol. *smacks head*. that piece of code is deserving to be on those '10 worst pieces of code ever' lists.";"0"
"i hate to be analbut should not the equals be extended a little farther out to match the number of characters in federation";"1"
"please learn a little of english language before using. on top of that, please learn a little of python before commiting the patches. overall, this docstring is bad and you should feel bad. learning why this is a bad docstring is left for you as an exercise.";"0"
"nit: put deleted_at on it is own line to be consistent.";"0"
"you should be able to just do json.dump obj, file_obj";"0"
"remove pyc";"0"
"intersect' is a little vague. wwpns_on_vios";"0"
"nit: boot_device = cimc_to_ironic_boot_device.get first_device.rn if first_device else else none";"0"
"dumb question can not you just invoke .count on the query object after the group_by call";"0"
"nit/optional: given these are basically for constructing an instance of this classlightly prefer having these above ctor / other methods";"0"
"ack, i am not familiar with this command well so sorry for stupid questions :";"0"
"looks like you removed the use of this, so you can kill it.";"0"
"maybe better to leave node.dpdk_enabled and use delegation here";"0"
"my stupidity, will correct soon :";"0"
"at a minimum we should output a loge or maybe even throw an exception";"0"
"done, if ugly.";"1"
"want to make this lazy";"0"
"nit: self._enforce_endpoint_id self._enforce_service_id";"0"
"could i selfishly add this by the next patch just to keep your precious +2 ...a little shame.";"1"
"we need to dump data to yaml in uploadconfiguration task serialization:";"0"
"provide the cause when constructing the certificateexception. otherwise developers will only see an unhelpful ""failed to call checkservertrusted"" message with no information whatsoever when something goes wrong.";"0"
"if i understand that correctly i think you should be character_sequences_min.";"0"
"done:";"0"
"i would like to see an exceptions.py under common package to place those ck exceptions instead of creating them randomly everywhere. and it would be nice using exception assuffix instead of error.";"0"
"oh good catch, dammit, i should definitely write a new object then.";"1"
"done. curse my cargoculting!";"1"
"should be ocf_run kill .....";"0"
"this should work as well. .return_value.hostname = ""foo_host""";"0"
"this was actually shockingly bad, since it meant that we'd always calculate the hashed id even if the blacklist was empty. yuck";"1"
"this should be boot_id = self.action_suspend";"0"
"silly nit: alphabetical order";"1"
"i think this code should just be put into the caller - it is really not doing any extra work than calling utils.execute";"0"
"i feel it is better if you use bitwise or instead of arithmetics.";"0"
"noqa is not needed here";"0"
"another unprintable char at the end";"0"
"please, use: def __exit__ self, *exc : if not any exc : wait . additionally, i am concerned with the fact that we'll ignore all created threads in this pool, so, maybe we should kill all of them";"0"
"you can write: with self.tap_service as ts, self.tap_flow tap_service=ts 'id' as tf:";"0"
"no. this is cute, but exit_failure is a system dependant constante which does not have to be -1. iow that create a risk of regression, just to be cute not to mention the wtffactor of prefixing fprintf, for instance";"1"
"recommend changing stucked -> stuck";"0"
"should be used ""jsonutils"" from lib ""oslo_serialization""";"0"
"just a style note: this is really *ugly* indentation. also, is there a reason you couldn't use the decorator mocks and avoid the nesting";"1"
"only_router_id should be conflicted with ids_to_ignore. i mean if we have only_router_id, the ids_to_ignore should always be none.";"0"
"i get the meaning of frozen.. but why not : the neutron/plugins/hyperv/model.py file is being removed, so those tables represent false data. also, its consumers hypervneutronplugin will be removed, so it will just be dead code.";"0"
"i guess we'll take the word shitout.";"1"
"let us get rid of 'ovs-' here.";"0"
"suggest change to not ... and continue so can get rid of this wacky indenting.";"1"
"nit: _instance is an object now: _instance.uuid.";"0"
"done, though in a scripting language like shitis not clear to me what advantage $compressed_rootfs might have over $rootfs.xz.";"0"
"perhaps ""now that we have dropped the fk"" would be better than ""after we drop fk""";"0"
"i think it'd be better of moving these rpc setup to do_setup of huaweinasdriver";"0"
"would you be kind enough to add the possibility to not use keystone for this like specifying an id on the command line. :";"0"
"you should initialize the fip_q_dict here.";"0"
"whatt *shruggggg*";"1"
"oops. might need to grep for this, though cs/ suggests this is the only place we screwedup. it sucksthat the obviously right name is the one that does not work!";"1"
"i've set the mod_wsgi home to $horizon_dir so this should not be a problem.";"0"
"in the spec, we decided to restrict extracting the properties to cim_processorallocationsettingdata tags. can we explicitly do that currenlty, you are matching any tag name.";"0"
"you might want to rename this and the next one to test_get_topic_for_*_driver";"0"
"public_endpoint and admin_endpoint need to be configurable.";"0"
"if does not work at all: 1. it'd be cool to raise to indicate it to the user rather than disabling debug in his back 2. i think you are just changing the default, not the actual value so you might still run the app with debug enabled and workers > 1";"0"
"this version needs to be incremented. see the number after rebase.";"0"
"mark, sorry but i am not completely understanding why the fact that testing with an instance object does not matter here - to just dumb this down for my own sake, are you saying that once i change conductor.manager.compute_stop to handle instance as a dict instead of object , this test becomes useful";"0"
"if you respin, how about this to make sure it is not being silly: self.assertequal root_bdm, block_device.get_root_bdm reversed bdms";"0"
"you are mistaken you mixed generate_physnet_vlan_ranges output with generate_physnet_mtus output";"0"
"completely unhelpful comment. please be more specific about your objections.";"0"
"this stanza is not really needed, according to /bin/kill -kill -$ ps -oppid= $pid below, a parent process - mysqld_sage, will kill all its chileds: mysqld, logger, and xtrabackup as well.";"0"
"not working, but i have a dirty hack for it.";"0"
"hmm.... can not reproduce.... are you building from scratch";"0"
"ugh - this is such a low level detail to putithere. why not do it in the scheduler_client.update_resource_stats but really this rt code just sucks it is basically one giant function that operates on dicts that eventually get passed into the db update. yuck";"1"
"let us just kill passing msg for now. i do not actually use it anywhere in this review.";"0"
"qos_id=qos_db_item.id";"0"
"that is like creating an issue on github so i can pr. very silly. i'll do it though.";"0"
"aarrghh this hw is a disaster ... who designed such a random assignment";"1"
"this is a stupid mistake. thanks for catching that.";"0"
"see my remarks on configure-etcd.sh:5";"0"
"garbage";"0"
"i think returning an asserror is a good thing to do. will add.";"0"
"please remove hanging closing } through out file. ie. self.existing_driver_name_2: self.existing_driver_2,}";"0"
"omfg";"1"
"nititerables.getonlyelement.";"0"
"these c*l functions are all defined in terms of others, so they are actually portable between ld64 and ld128.";"0"
"i'd like a bug somewhere, and a reference to same, for this fugly.";"1"
"looks like versionutils.py should be removed.";"0"
"this should be self.qos_driver.delete";"0"
"well, the interface would be a jinja template on the controller. but i feel pretty strongly that this is a ""centralize intelligence"" kind of issue. octavia vms should be as dumb as possible, so the ability to generate their own haproxy configurations is something i *do not* want them to have to do.";"0"
"let us have a comment about one of them is for the header and the other is for the body. -- // complete a write of headers. ... // complete a write of the body. ...";"0"
"should you kill the class";"0"
"you moved the do_migration_list function to shellpy; looks like you forgot to remove it here.";"0"
"how does this work does not gbm_bo_destroy bo1 free the bo, rendering whatever this returns junk";"0"
"pid, 1 2 not child, 1 2 because it s not always the child pid.";"0"
"useless, since they are already default values. you can drop the 2 params i guess.";"0"
"camelcase, how ugly. but has nothing to do with the patch.";"1"
"can we get rid of fixed dummy instance id now it is introduced to avoid async operations in unexpected order. if it is unique id per instance, it should ok, i think.";"0"
"yes, and the author of the patch is an idiot! will update";"0"
"should be a cfg.portopt.";"0"
"please kill the newline";"0"
"my*googleimagelabel";"0"
"i think there is a case where you dumb example want to lock between nova-api and nova-scheduler though even if not cross projectitcan be cross services.";"0"
"hehe, i see you refactored kill a bit to accept signal : , nice, looks good.";"0"
"when i stop to think aboutiti really think making this a global constant would make this less clear, not more clear. it is just a dummy string. i happen to be using the same dummy string in two functions.";"0"
"desired_locale = system_locale 0 or 'en_us'";"0"
"should these be just ipv4_addr.sin_addr and ipv4_gw.sin_addr instead of ipv4_addr.sin_addr.s_addr and ipv4_gw_sin_addr.s_addr";"0"
"run-tests.sh should be run_tests.sh with an underscore instead of a dash";"0"
"should this be done only when config.healthcheck is not nil that way we canalso log that we are explicitly disabling the healthchecks because of daemon flag: if config.healthcheck != nil config.healthcheck { log...info ""disabling healthcheck because of daemon flag"" config.healthcheck = nil } wdyt";"0"
"that instead should be const sal_unicode* pparseend; because rtl::math::stringtodouble expects sal_unicode const ** pparsedend at that place. code probably should not even compile like it is.";"0"
"how about just killing isinitialized now in favor of checking is_initialized_ directly";"0"
"please stop adding this method. it was already removed from master cause it is written through ass and i already in some of patch sets of this method said that. there is normal implementation here:";"1"
"this dirty downloading hack looks familiar. lol";"1"
"i am dumb, i mean 2015...so yeah i am wrong";"0"
"mock_clients.return_value";"0"
"why do not you use _get_agent here";"0"
"kill yet by then -> already terminated";"0"
"this cleanup probably does not belong here you leave similar garbage intact in other files .";"0"
"your ''local_settings.py'' file";"0"
"1 - there seem to be many uses of jsonobject within chrome. i am not sure if any are parsing web content though. there is good support on the native side for parsing json in a utility process so it is not a big hurdle if you prefer that. 2- the structure is currently just 3 or so ntp entries, which each contain an id + string + icon url. if we go utility process from #1 then this is kinda moot.";"0"
"this is obviously a dirty formatting and this is probably a pourly choosen tag name";"0"
"i think you need the windows support thing here as well. oh, and to set that stupid greendns env var, although i can do that in another patch.";"1"
"darn, i wished we had passed the context here! technically speaking this change was introduced by abc16ebf in kilo. perhaps we can tweak it to add the context, before kilo ships besides, it looks like an internal api. thoughts";"1"
"useless var.";"0"
"should remove sslvxx from there as those are deprecated with the recent poodle attacks.";"0"
"oooops. how comes this stupid thing happens. thanks for the catch!";"1"
"sorry, i sucki should have also told you to put this in pkg_preinst";"1"
"either ""query ceilometer you"" or ""query the ceilometer api you""";"0"
"guard against this being called outside of a startfactorytest";"0"
"useless state";"0"
"done. of course, excuse the brain fart :";"1"
"i think resourcewithprops should be there instead of genericresource.";"0"
"iiuc, having the raw conversion between the hnotequal and hselect will force materialization of the hnotequal. please reorder.";"0"
"ok i am going back to glasses, i cant read what i am typing, contacts suck end up with an empty certificate...";"1"
"crap thank you. fixed now.";"1"
"does this create a copy of the vector iirc you need to write ""auto "" to get a reference. of course c++11 has added new ways to shoot yourself in the foot";"0"
"based on the mocks i've seen, this does not make sense to me. perhaps this comment needs clarification.";"0"
"this is superflous, i'll remove it if i have to do another patchset.";"0"
"another one - although i think killing the extra space is okay.";"0"
"there is already a section further up which describes common image properties. so this entire chunk of new docs should be moved further up";"0"
"these access_types are not supported by manila... will this ever be executed in any case, i would suggest changing both these elifs to a single else, since you are not changing the values.";"0"
"durr. i am a fool and did not get the point of the deincrementitmakes sense now.";"0"
"is this a case where you can add this: deprecated_name='dnsmasq_dns_server' and have the agent accept either and do the right thing not sure if it works since you are changing the type here. then the code below for the old value could go away.";"0"
"missing: delete_net_dev=false, run_as_root=false";"0"
"d'oh... fat fingers. fixed.";"0"
"the logic of clear_astute_logs and clear_puppet_logs can be done with one method, i.e. def clear_logs self, astute=false, puppet=false";"0"
"actually this should be fully hardcoded. there are 2 files that have to be: rally-scenarios/rally.yaml and rally-scenarios/rally-neutron.yaml these names are hardcoded, and if there is no such files our ci/cd will fail so you should check that they exist and that there is no bullshitinside so here should be something like: def test_schema_is_valid self, mock_validate : rutils.load_plugins os.path.join self.rally_scenarios_path, ""plugins"" for cfg in ""rally.yaml"", ""rally-neutron.yaml"" : full_path = os.path.join rally_scenarios_path, cfg with open full_path as f: ....";"1"
"this will throw a typeerror since you are passing a bool to raise.";"0"
"uh yeah so at the risk of driving you insane, you've got ""weighters"" twice here where you caller them ""weighers"" everywhere else. /duck";"1"
"can you tell the uefi people to please clean up their white space";"0"
"mmediabrowserservice is same with stubmediabrowserservice.sinstance, but not same with stubmediabrowserservice.ssession.";"0"
"ah... +1 sorry haven't thought about the mocks in the unittests, yeah that is porbably what is going on. ignore my previous comment";"0"
"tuskar depends on heat on the same machine to install/run";"0"
"iniadd $octavia_conf controller_worker amp_ssh_key ${octavia_amp_ssh_key_name}";"0"
"i agree, that looks like a comment i would write myself : it feels stupid to remove it from this patch then add it back in the next patch butitis the right thing to do.";"0"
"amqp_names = $amqp_ipaddresses, amqp_ipaddresses = $amqp_ipaddresses,";"0"
"self.assertfalse self.scheduler.update_device.called";"0"
"nit: dies, should -> dies. should";"0"
"the issue is that this is keepalived_pm and not vrrp_pm which is the problematic one. it is very weird by keepalive to have such design with separate pid files we end up needing to watch, i hope it will not be common, if it becomes common i'd also expect a more general solution.";"0"
"how come you use black here, but white in the other places";"0"
"because you std::move the context_provider into context_provider_ it is always null the second loop.";"0"
"this code moved with some modification to test_image_util.sh.";"0"
"lets add a dummy driver as well..";"0"
"rename to requests_kwargs because you clobber **kwargs above";"0"
"so they need to run 'mkdir -p /etc/keystone/domains' before running puppet or is it that they need to have a file resource for the /etc/keystone/domains directory in their puppet manifest";"0"
"you sneaky bastard i am not going to touch these patches til clay gives the word but yeah we thought of doing something different here anyways as the name is not very good and when we do we should definitely make it reserved";"1"
"oops, nevermind. stupid python.";"1"
"we already have the 'api' group, why register it again just do: conf.register_opts your_opts, group='api'";"0"
"this name not really used. because get_rpc_node mocked we can insert any to node_ident=";"0"
"holy cow this method is long! f'ng urls!";"1"
"this is a constant that can come out of the loop if you are trying to reduce garbage.";"0"
"libdir should be parametized so the caller can do: make ... libdir=$ get_libdir ...";"0"
"please remove the extra white spaces at the end of most lines.";"0"
"ds_browser should be property of the datastore";"0"
"i'd delete this comment as it is useless";"0"
"nice eye : so i changed it because frankly i couldn't figure how the hellthe srb test was working and wassick of messing with it, so i hacked the check in here to solve the problem. now that you've caught me and pointed out i am surely doomed.";"1"
"i would rather fork a special watcher child then subscribe it to kernel notification of changed file of which linux has 3 kinds ! . if roman can support esoteric bind semantics in linux, why not this, too at least you will not end on the next dave jones' ""userland is dumb"" presentation.";"0"
"this should not be needed...serviceundertest is a subclassof service";"0"
"suggestion: kill the else here and you can lose a level of indentation since above clause returns anyway.";"0"
"i share your annoyance and would love to see that changed.";"0"
"please remove white spaces";"0"
"this should be in a separate function, and should execute at the very beginning.";"0"
"please unindent, looks somewhat ugly";"1"
"derp, i should remove that...";"0"
"would you please use self._assert_has_errors and self._assert_has_no_errors instead";"0"
"i suggest you put tools/setup_gate.sh into your tox environment and use a simple tox job-template to run this. this is far too complicated...";"0"
"you should initialise bridge_interface= here.";"0"
"i did this. jerk";"1"
"i think we should allow native apps to specify an interface. if you accept that here and passit through the netd link it may be null and then you look it up by pid. symmetric to you getaddrinfo change.";"0"
"have i mentioned today thatitis stupid that we still have instance_type_id, flavor_id, and flavor name :";"0"
"hellyeah, john is right, you should not cut cover like that imho.";"0"
"sorry i am dumb, i did not realize this addressed sam's concern about ""/a/c limit="" should requests for ""/a/c limit=none"" *definitely* 400";"0"
"darn, i liked 'normalise'. i wanted the method to be normalise ;";"1"
"usng a pluggable";"0"
"should be a boolopt instead of stropt.";"0"
"i agree, do_node_ deploy teardown zapissilly.";"1"
"yes pa. *turns eyes down in shame*";"1"
"nit: both of these are now unused. and while you are atityou can drop the useless comment right above.";"0"
"status being an inout is probably the thing i hate the most about icu.";"1"
"is this a mistake in the test, ie should we really be doing an assertin using estr to check the string returned from assertraises";"0"
"to avoid warning/error of problem of order of initialization: error: field 'maformatcontrol' will be initialized after field 'msthousandseparator' -werror,-wreorder";"0"
"nit: bundle_pak_asset_type is defined as ""apk"", which makes this conditional definition a little weird. do you plan to change that later if so can you add a comment near its definition";"0"
"are you planning to send this upstream or did the stupid reviews i got from lee and thierry scare you away :";"1"
"why use jsonfield if it is serialized and not versioned, just dump it into a textfield.";"0"
"you used /bin/sh above but you are using bash code here. switch to /bin/bash or use ...=... instead.";"0"
"does this do the right thing with something like ""fucke999999999999999999999999999999""";"1"
"yeah, we definitely do not want this more exposed. it might be clearer to have bionic/libc/private/ here, and change time_test.cpp to #include ""bionic_time.h"". i wish we could kill this stuff, but i doubt we'll get round to it in time for lp64.";"0"
"remove this since it is the same as line 51, just use resource_id.";"0"
"some of the #include can be also removed, like sysinfo.h, dpms.h ... and some using std::xx and kscreendpi, kinchinmm, ksystemuptimethreshold";"0"
"if you have full wordpress templates, you do not need tuskar. the point of tuskar is for the planning, not just to be a place to shove templates. go directly to glance if you have a kickasshacked wordpress template and want to store it somewhere. we are also going down a tangent. this spec has been going on for a while and we need to get started on actually implementing it, so please try to keep the speculation of the future at a minimum.";"0"
"nit: you could write this as: ''' setattribute html_names::karialabelattr, wtfatomicstring getlocale .querystring muted weblocalizedstring::kaxmediaunmutebutton : weblocalizedstring::kaxmediamutebutton ; '''";"0"
"cfg.conf.midonet.midonet_host_uuid_path";"0"
"can you remind me what we do with the zygote/non-moving space coming right after the boot image/oat if we do not include the oat if there is no image after, then could we miss including the zygote/non-moving space in the immune region do we have a test for a dummy zygote/non-moving space";"0"
"self.mock_ip is already a mock object. you should do this: self.mock_ip.get_routers.return_value = router";"0"
"this will never get called, because the proto calling functions will not get here they dump the protos cached, then return . just put btif_debug_bond_event_dump_stats body in here.";"0"
"no... the previous _terminate_workers actually did not terminate the worker processed : it was very poorly named. all it did was call os.waitpid pid, 0 to check the status of the worker, it did not kill it...";"0"
"does the callback know what thread they are going to be executed on";"0"
"add param master_ip from enviroment.py via get_admin_node_ip";"0"
"invalid_ofport is currently asstring, but i am hoping to get rid of all of the string-isms from the library. mostly i did it this way to maintain the same logic as previous which handles the case for ofport = 0...even though that *should* never be returned by ovs.";"0"
"wokay. so that is similar to malloc failing even with overcomitting on. if you see it, you are really screwedso do not resist :";"1"
"use gem mmap. whether or not the buffer is tiled is an implementation detail.";"0"
"please put the * at the other side. so sctokenarray* ta and not sctokenarray *ta.";"0"
"stupid tabs!!!";"1"
"you can kill this now, too.";"0"
"glad it was your fault and... it wasstupid :";"1"
"bloodytruthiness... ok fair point :";"1"
"-etoomanynegations that made my head hurt. suggests 'is_local' is the wrong selector. what was wrong with 'is_up' how about 'has_host'";"0"
"ugh. the nested if/else and #ifdef/#else are a time bomb. please simplify. after your change, you do not need any if/else #if/#else at all -- you are **always** using net_pipe_init_tcp.";"0"
"this is probably dumb... but what do you regard as ""onboarding""";"0"
"are you planning to have releases / tarballs";"0"
"i know match until api level 42 is ugly. welcome any better idea!";"0"
"pdps can be nullptr here if pdoc->haspivottable was false, so that needs to be checked before dereferenced. best executed all related new code only if pdps!=nullptr.";"0"
"fake.project_id";"0"
"please mock this properly rather than manually monkey-patching.";"0"
"please leave the echo_summary in stack.sh";"0"
"if we handle the resource failure in handle_resource_failure and not in handle_failure, we can get rid of passing resource id here.";"0"
"can we end up having instanceof in the hif hinstanceof is a bool and we might just fold hif hequal bool, true to hif bool also what about hnotequal";"0"
"yuckdo not know how that slipped through. thanks!";"1"
"small nits, this should be ""the '%s' dhcp-driver does not...""";"0"
"shoot! i must be blind because i did not see the indentation; the extra white lines must have put me off...";"0"
"why not using: with self.assertraises badrequest : self.response = self.server_behaviors.create_active_server...";"0"
"why is this default being changed it does seem to be a dumb option - to boot. why would you enable the api extension then disable the driver. lol wut";"0"
"well that sucksin that case, redefining the partial right before you use it defeats the point of having the re-usable shortcut you are not re-using it . abandon partials in _handle_unscoped_token";"1"
"yes, we are not really preventing an unexpected power loss, we are handling it.";"0"
"move opening on this line and get rid of .";"0"
"make it consistent with above by using ""ifeq $ board_bvb_enable ,true """;"0"
"the problem is if it is specified in the whitelist but not present here, then it will not be loaded apirouterv3's __init__. and thats where the check is done to ensure that everything that is specified in the whitelist is actually loaded.";"0"
"of a... of a... dammit, the anticipation is killing me!";"1"
"mea culpa, of course we do not want these here, i'll remove them.";"0"
"no need to chain filter_by this way can put them all into one. .filter_by vlan_id=vlan_id, switch_ip=switch_ip, port_id=port_id, ...";"0"
"please initialize bshapenameset in the ctor.";"0"
"resize_up_enabled = flavors_config.resize_enabled if flavors_config.resize_enabled is not none else flavors_config.resize_enabled";"0"
"yay, two silly mistakes in 3 lines of bash :";"1"
"you do not have slave-09 in your cluster";"0"
"instead of changing all of the above lines, you could have just added a line here: self.dup_socket = dup_socket";"0"
"consider a parametrizing writesms as with deletesms.";"0"
"i will change to the following: grid_connection = self._grid_config.get_grid_connection grid_connection_json = jsonutils.dumps grid_connection";"0"
"question: do we want to end up having an empty / almost empty fake_policy file i am asking because what this fake_policy file is doing, is making some of the apis looser in terms of authorization, for testing purposes. if we will remove all these rules, we'd have to have an admin context for almost all tests.";"0"
"our pep8 job really sucksempty line is missing and l15 should be removed.";"1"
"will remove these extr alines";"0"
"do you want me to kill the line completely i've copied the section from neutron. i am fine with it, as long as pep8 job passes.";"0"
"die needs $lineno as its first arg: die $lineno ""message""";"0"
"i think we should be consistent and use the check_create_complete instead of eventlet sleep.";"0"
"these 3 mocks are not needed - see below";"0"
"why are you wrapping ret_val";"0"
"perhaps, browseractionscontainer* main_container = nullptr;";"0"
"it looks a bit ugly and really difficult to read, what is about replacing it with a decorator like to have superduperpoll params... def _is_decommissioned r, inst_to_be_deleted :";"1"
"dumb question: why is the mark located here and not above func call as in other cases";"0"
"this is pretty hacky. can not you use pyelftools to load the elf and check the exported symbol table directly";"0"
"is not this killing your read performance";"0"
"darn, i would putitthere now, but we do not even have that file in 3.14.";"1"
"nit: should be ""correctversionsenabled"" for consistency with other methods.";"0"
"could you remove useless parentheses here";"0"
"cleanups should not really have asserts, because we do not want to give them more reasons to fail.";"0"
"what about urllib2.httperror, urllib2.urlerror, httplib.httpexception etc...";"0"
".' should be removed when you have to another patchset.";"0"
"comma in previous line";"0"
"ah crapnot sure how i missed that.";"1"
"use **extra_specs";"0"
"i think so. for example, debuggerd uses this feature to dump parts of the stack of the crashing process.";"0"
"if there is one by slo segment, will this effectively all sub-slos before this to be deleted, but after this not is this an internal server error because the code screwedup can not the user mess this up";"1"
"you should be using mock.patch.object instead of replacing methods with mocks.";"0"
"do not currently, per offline commentary. repo's idiotic writing of broken merge attributes is idiotic and i've no intent in dealing with that crapin the calling sites it is the wrong spot . planning on suppressing revisions/tags at the gitconfig level since they are not valid merge targets anyways try it; even if you force such a config, git rebase tells you to get bent .. that makes this simplifed form correct.";"1"
"delete the vport to vporttag bindings";"0"
"calling the wrong function here, you want to create a dummy idp, not a dummy user idp = self._create_dummy_idp add_clean_up=false you do this a few times below, too.";"0"
"should we issue a log warning here about junk found";"0"
"nit: i would prefer all of the json blobs to be pretty-printed.";"0"
"use utils.build_v3_tags_payload here and elsewhere";"0"
"please, move it before putils.execute invoke";"0"
"i highly dobutthis softwareconfig works sine there is no os-*-* tools.";"0"
"if image_source == self.default_image_source";"0"
"here maybe you mean simple mode or you need for ha mode to add another 2 controllers like on example below: self.fuel_web.update_nodes cluster_id, {'slave-01': 'controller', 'mongo' 'slave-02': 'controller', 'mongo' 'slave-03': 'controller', 'mongo' }";"0"
"nit: add /* autopresent */";"0"
"gross.";"0"
"ditto. maybe even the location_ should be a fullobjectslot.";"0"
"i've forget the trash comment";"0"
"i think it would be important to capture that subnet with dhcp disabled.";"0"
"you do not use these jobs in zuul/layout.yaml. you should either remove them from here or use them in zuul/layout.yaml.";"0"
"midonet_client=midonet.neutron.client.api.midonetapiclient midonet_use_zoom=false";"0"
"'neutron.plugins.nicira.nicira_nvp_plugin.' 'neutronserviceplugin.nvpadvancedplugin' ,";"0"
"who put these todo's here either way we should do something about them.";"0"
"yuckwhat a mess.";"1"
"f is earlier in alphabet than n damn";"1"
"garbage at the end of the line";"0"
"i hate these names. are they _all_ offsets i honestly can not tell from the existing names and comments.";"1"
"i think you need some kind of fallthrough_intended macro here and below.";"0"
"probably an ignorant question, but why is the metric being decremented by 1";"0"
"skip_ovs_install=$ trueorfalse false skip_ovs_install";"0"
"i think it is time we have a serious discussion about not polluting the environment with hundreds of dib_ variables. it is getting a bit.. ridiculous. #notaminusone";"1"
"hmm, you are setting prebuilts to false first, then to true later you can probably just take out both lines...";"0"
"i _think_ we want to kill this one ...doing it in a later cl. see <";"0"
"use 'udev_dorules' instead of insinto+doins";"0"
"should not this be conf.datastore_manager or self.__manager_name or 'mysql' also, i am curious about this because you seem to prefer conf.datastore_manager to self.__manager_name.";"0"
"you should initialize user_id and user_ref to none and then guard your call to get_user against bad values.";"0"
"needs /* global static_url */";"0"
"these have the same problem as the parent review. asserttrue asserts that the expression token is true and will only use the matcher, as an error message, if the assertion is false.";"0"
"i suggest to remove sleeping, it will affect the duration of the test execution. you can leave method as it is or add logging for example";"0"
"not sure what the best way here is. 1 letitleak... it'll eventually finish. 2 terminate it dead. that is what i did here 3 send wm_close. - window may prompt the user for confirmation. we do not really want that. the use case here is things like doing some background network pinging etc. user has no idea what is running. - console apps seem to not do what you expect here -- the default behaviour will kill the console window without affecting the ""main"" process of the app - if you wanted to act on a failed attempt with a heavy handed terminateprocess, you need to block even longer or delay stuff on the event loop. we do not want to do either here. 4 generateconsolectrlevent. you can not control the process group this signal is sent to. it goes to *everybody* in the calling process' group. that is bad. very bad. i guess the only intended use case is when a dying process wants to warn it is children. i could use 4 if i launched a subprocess inside a process group that then launched the command. that seems wasteful, and wee bit non-trivial.";"0"
"that was dumb, but i guess it is not the first time i've been off by an order of magnitude! thanks for your patience and for explaining.";"0"
"is there any need to mention that deleted resources count towards the quota limitits a tribal knowledge and may not be obvious to api users.";"0"
"try not to leave commented-out code. in particular, this will cause a crash in tests in l140 when use_real_clients = false. so it is better to just create the real one unconditionally and leave the todo.";"0"
"just a little suggestion... when i have internal test methods like this that have a lot of mocks decorating them, i tend to indicate that a particular mock is not actually asserted against or used in the test by prefixing the name of the mock with a _. in the mock decorators above, mock_create, mock_create_bdm, mock_validate_bdm, and mock_ensure_default are all in this category. it just makes it slightly easier for the reviewer to scan which mocks should have corresponding assertions in the following code.";"0"
"you proper english people and all your extra u's. :";"0"
"stupid dyslexia hides these, fixed now.";"1"
"maybe add a link to the bug here to motivate this change otherwise i worry we'll be back in a year removing this ""obviously stupid"" code :- and did you want to + 1 here rather than everywhere you use it";"1"
"wanted to share it for the trusts tables, so this refactoring is timely.";"0"
"huh am i stupid how's that equivalent";"1"
"this is called by add_nfs_export_rule and remove_nfs_export_rule. it is necessary because cdot allows duplicate rules in each export policy, and the cdot driver should remove such duplicates. i added assertions to each test that mocks _get_nfs_export_rule_indices.";"0"
"please use switch ; error for unknown arch type should be the default.";"0"
"naughty kroot. i see conscrypt also has its own now-out-of-date copy of readfileasstring.";"0"
"nit: alignment should be cleaned up here.";"0"
"textureformatcapsmap is a typedef of std::map in this case, there is one that is a member of the caps struct.";"0"
"please remove this statement totally. pmanager.py itself is a big hack, which is going to be thrown away in the near future.";"0"
"move the code to a function to avoid the need to that ugly goto ,-";"0"
"oh, crapi forgot this annoying bug :- thanks for the tip.";"1"
"wtfthe hellis this sergey fixed this code already one time. you removed the normal code restore awful non working code.";"1"
"this was in the old docs; i wonder if it serves any purpose now. should we just delete it i defer to your judgement.";"0"
"expect_false isvisible kkeyboard , here and below.";"0"
"same. this should be baked into the tree during __init__, with the same union logic.";"0"
"i am really dumb in this regard so please bear with me... : but why is it ml2 is binding an ml2 only thing that is not present for other plugins should we then think about how we decouple it from the port";"0"
"can we come up with a better name for this i created the original name bc i suckwith naming. one probably awful name i came up with is get_networking_state";"1"
"l188-189 are useless";"0"
"why to print and why just this why not just use a logger";"0"
"more details in commit mesaage please, closes-bug: bug #number";"0"
"3.0 damnlol";"1"
"whichever is most popular. i do not feel strong but i want to be consistent. kb is just too damnbig to see all at once for what i have in mind here.";"1"
"its ye olde english, before the normans screwedit up";"1"
"should probably not set this if config_usb_pd_tcpm_vbus is not defined. we do not need more useless interrupts. also, do not need init_power_status_mask or tcpm_get_vbus_level .";"0"
"empty line with extra whitespace.";"0"
"rebase failure here, will fix";"0"
"...in the ''local_settings.py'' file with...";"0"
"hm. right. then the deleted_at column should be set to timeutils.utcnow whenever you mark something as deleted. otherwise this field is useless.";"0"
"this is the intersection of the lists also, it is worked out at o n*n , which sucks you need the set difference. some optimisation possible here either by working them out simultaneously or extracting both to a helper function, which feels more right .";"1"
"remove this bool section sine you have optional turned on";"0"
"nitithink it would be clearer to use all_targets_inlined and one_target_inlined instead of one_target_not_inlined and ont_target_inlined";"0"
"or alternatively, obj.setdeletable false if you just use a boolean field instead";"0"
"should not this be: self.assembly_id = assembly_uuid";"0"
"use ha queues... if you change this option, you must wipe the xx database";"0"
"massive slap on the wrist: why are you inheriting from the neutrondbpluginv2 plugin i can understand why, but you are better off just duplicating the logic or rewriting the logic yourself.";"0"
"you are going to get a pep8 violation on this, please see:";"0"
"oops, mis-rebase. thanks for pointing it out. it should be if rp.port_type == device_owner_router_gw: port_driver.delete_gw_port_internal else: port_driver.delete_port_internal";"0"
"oh, thank goodness for this change. yay for removing useless log messages.";"0"
"2 things: 1 is it possible to unpause a machine which is running! i would think that you can only unpause something that is paused, hidden bug why unpausing is being saved to the db if the current state is running 2 i think that for un pausing we should take a different approach than this. at this point, the real state of the instance is unknown right we do not know whether the instance was paused or not, but, we already know the desired state and the current state why we just do not automate that if before n-cpu crashed the user requested to pause that instance and i assume that the api have returned saying that the requested was accept, why we do not re-issue the un pause_instance request here i meanusers would be like: ""fuckyeah automation""! instead of just cleaning up the states, leaving the machine in an unknown state and having the user to reissue the request to un pause the machine again. and sorry if someone already suggested that, i haven't looked in all previous patch-sets to see if that is the case";"1"
"i think there can be other options explored, this is obviously the easier one, butthe one that will yield the least amount of result, at least in the short term. what about spinning off api/db and go the bold way...<spoiler alert: crazy guy talking>: what if we change the architecture completely and introduce a neutron-api server, we introduce neutron-conductor, perhaps a scheduler and have the rest of the server ie. the plugin be its own worker s , just like nova-compute is i guess we could do this as a follow-up step, so do not mind the crazy guy who makes a fool of himself.";"0"
"does it makes sense to add networking-foo will also use this lib or it is too anal";"1"
"so we can not build one large static goofy.js including device.js";"0"
"only allow deletion of empty groups please.";"0"
"i think we need to kill server even if tests are failed.";"0"
"please remove this useless docs";"0"
"how are you going to create tables etc in the cloud sql database are you familiar with please do not use ip whitelists, this is garbage. especially if you use them without client tls certificate. cloud sql proxy is the simple and effective solution. it uses unix domain sockets to represent the local server. i do not understand why you insist on ignoring existing code/tools in favor of inferior solutions... please read";"0"
"horizon_ssl_cipher_suite should be used here";"0"
"it is a wip comment, really aimed at the mips folks.";"0"
"on review, orderedyaml is not in wide use in openstack. changing the os_case spec defintion slightly to make it a list rather than a dict, as this is currently the only place where order can matter. the script resources below are actually already in a list, so yaml will treat them appropriately.";"0"
"please wordwrap these commit messages";"0"
"we do not need that, the labs-openstackrc.sh is our authentication.";"0"
"please end every comment like this with a period here and below";"0"
"this module should probably be pycadf._i18n to make it clear it is not part of the public api for the library.";"0"
"the white space should be removed";"0"
"next ""representable"" number. relaxed may skip some value if the value would be a denorm";"0"
"i think users are always more lazy than we expected. evey thing can easier their life do have a value to be done. :";"0"
"not needed, see comments at deploy_utils.py l113";"0"
"this should be pulled into solum.";"0"
"super minor little nit: ""humanizetime"". it may sound funny butithink of it as ""make time human"". what do you think about ""maketimehumanreadable"" completely up to you.";"0"
"actually it is ugly... let me make it prettier.";"1"
"you are not setting f._bf._base to null, this could result in a dangling pointer.";"0"
"right, forgot about the ironic case. that is a pain in the butti've asked alaski to weigh in, he might not be able to immediately.";"1"
"this is a bit ugly that you have to reconstruct the input. if there is no better way you should still use joinstring from libbase if you can.";"0"
"seems odd that you have to kill, then restart. should not restart be kill + start";"0"
"ugh, that makes for an ugly truth-table :-/";"1"
"shitpep8, unused import.";"1"
"ditto self.assertisnotnone";"0"
"char **p and not char *p. so it should be incrementing the pointer to the char.";"0"
"remove. just use the ret value of vpu_clock_enable.";"0"
"thanks for using 'hinstruction*' instead of bare 'int' values!";"0"
"try sync_utils.* apis instead of doing your own timeout control.";"0"
"dirname seems to work, but i am marginally happy with the way the code turned out. seems kind of ugly.";"0"
"mtb is defined in the module docstring since it is used in the whole file.";"0"
"you are absolutly right. just my understanding of the whole idea of migration in releases was wrong. now adressing the issue";"0"
"controller and api is useless for this class";"0"
"nit: you should spell it 'icehouse'.";"0"
"vladimir, please, remove these ugly whitespaces from your wonderful commit.";"1"
"its safer to just say no... do we need / want to attempt this with the migration tool, a user can migrate his sof data. adding this method seems like an exploit waiting to happen in my opinion.";"0"
"consider using ipaddress instead of ipnetwork very very minor nit";"0"
"bauzas - it seems you ar right - just getting the services here, filtering the disabled ones, and then getting the compute nodes for those hosts would be what we want to do.";"0"
"should be xx padraig or whatever";"0"
"sorry, missed thatitis unsigned. i've setitas 255 and check in every pinweaver operation thatitis not greater than pw_protocol_version. that check will be useless the moment we reach version = 255, but we will need to rewrite some code at that point regardless, since we use only one byte currently to passthat information between cryptohome and pinweaver.";"0"
"really damnwhat happened....";"1"
"can not you do that in the initializers and avoid the std::unique_ptr";"0"
"add notify heat services";"0"
"these lines are useless";"0"
"self.tunnel_types = tunnel_types or";"0"
"shiti can not believe what i did.";"1"
"this sucksyou should use here real images.";"1"
"this is worth more than a debug. i think admins are going to want to know that all their memcache hosts are dead.";"0"
"could you please add a test for this currently, that is braindead, but still....";"1"
"sec_profile_serialization = security_profile.gettext_.return_value";"0"
"it is a tuple in real life, so i guess it should be some tuple here.";"0"
"this line and below has little to do with config_contents. it should be executed regardless of config_contents's presence";"0"
"garbage, remove";"0"
"please do not use crapin the commit message";"1"
"keepalive*d*";"0"
"i would like to see a test with utils.execute .., run_as_root=true but root_helper config is none. that should cause processutils.execute .., run_as_root=false . because the code in ironic-lib will call utils.execute ., run_as_root=true so we want to show that this change handles that case.";"0"
"if you blindly kill all your worker threads, then you loose all you rwork in progress, and the only cleanup we have for that currently is in early manager startup. we need to make this clean regarding work in progress, else it is no better than kill restart.";"0"
"seems like i said here crap sorry for that";"1"
"i wonder if this is enough. what about - /var/log/apt - /var/log/fsck";"0"
"since these ioctls do not exist upstream, that would mean we fork libdrm. i'd rather not do this for now, especially if we do not need those ioctls in the future...";"0"
"i copied this shamelessly!";"0"
"nit: you can probably leave this arg unnamed if you do not use it in the function";"0"
"you need passwait_handle into cfn-singal.sh";"0"
"_policy_cache is just a dict that contains two keys. really i think the read_cached_file should indicate whether the contents were reloaded so i do not have to do this ugly check. i will rewrite it.";"0"
"bool """" returns false. why do not you just say: self.ecomnoverification = false";"0"
"lazy init l3plugin";"0"
"kevin is sitting next to me, i love pissing him off.";"1"
"using subnetpool_id == none is fine because for every sp sp.id != none";"0"
"there are a bunch of other places you are iterating through this list looking for a specific entry. see e.g. in add pidstatistics * below. make a helper that returns the entry for a given pid or null if none exists. then pidmatch is a trivial ""return findpid ppid != null"".";"0"
"from browser's perspective dirty != needs_ack, but from renderer's perspective dirty = needs_ack.";"0"
"arguably, in order to test that the latest timestamp is returned and not, say, the first in the list this test should try twice, once with the hqe timestamps ordered high to low, and then again with the reverse order.";"0"
"we should probably extract those helpers in the relevant _unittest.py files";"0"
"hmm, rats. i was not aware that the global reqs did not support pip.";"0"
"none - i think that this should be a uuid.";"0"
"nevermind, sdague schooled me on the regex.";"0"
"as in previous file, consider verifying that there is no trailing garbage.";"0"
"""""""nullam quis risus eget urna mollis orare vel eu leo. cum sociis natoque penatibus et magnis dis parturien montes, nascetur ridiculus mus."""""" * 7 is shorter";"0"
"well, wtfis delta #docstring do not love it... but i guess it makes decode missing a tiny bit simpler... i think maybe __add__ and __diff__ methods might have turned out a bit cuter, butitis just code. and besides next time i need something like delta i may be overjoyed to find it already implemented!";"1"
"i think the convention is to start with some version like 0.0.1 so if eventually this becomes a real ebuild you can bump the version to the released number. you can not downgrade once it is live.";"0"
"wait a minute, this enum comes from the protobuf-generated code. damnthose archaic utilities... disregard...";"1"
"should this be 'eql-driver: executing ""%s"" for ""%i"" time.' . command, total_attempts - attemps";"0"
"i've left the x8 push and pop so that you can just remove them all in your change rather than have an odd man out.";"0"
"""if $repo_type"" seems pointless here on puppet 3.8.5";"0"
"nit: policy_m.get_network_policy is already a mock, so you can do: self.policy_m.get_network_policy.return_value = old_qos_policy";"0"
"this is the slop region for autoscroll right just add a comment here pointing out where in code this is coming from.";"0"
"seems like if you do not need the inputs, you could just lump them all together lambda *a, **k: self._ensure_transaction_is_closed";"0"
"making my line rapping really hard though.";"0"
"it is ugly to return a vector of pointers that the caller has to delete manually - better return vector<std::unique_ptr<swpam>>";"1"
"stupid comments: there are several lines in this file that appear to be too long. what is up with the 2-space indent do we have different formatting here for a reason";"1"
"cover the situation that all soft-deleted rows will be purged.";"0"
"shameless aping of how eventlet does things. eventlet.greenpool.greenpile does the same thing. it is rather convenient, though. if you just want to run n tasks in m threads, make a green async pile m . if you want to share a pool with other tasks or have wacky requirements for your pool like contextpool , keep a pool around and make a green async pile pool .";"1"
"should we keep the old check #ifndef config_battery_full_status #else batt_new.desired_voltage #ifndef config_battery_full_status batt_new.state_of_charge < battery_level_full #endif batt_new.desired_current #endif /* config_battery_requests_nil_when_dead */";"0"
"if possible in this bug, we should actually kill the pid we forked if we reach timeout. if not possible, let us file a new bug to cover that. if you do not kill ititwill eventually consume all available memory and destroy the node after a few days";"0"
"i have trouble understanding this : ""you should at least print ""%s is missing in env and arguments"" % some_arg. default_from_global do not need others tell him what should be printed if the argument sucks could you explain more";"1"
"no magicconstant, since the classwith the flags is in sdk-common and we do not want to depend on it from here.";"0"
"real application not needed. use dummies.";"0"
"what about using getint32valueof and getting rid of the dcheck";"0"
"when continuing the opening line of a block, you should indent two levels to distinguishitfrom the indentation of the enclosed block. you should probably also add parens to both make the logic clearer and eliminate the backslash: if not dtoken.tenant_id or not service_ids or backends.global_service_id in service_ids :";"0"
"yeah i noticed it in ps3 but +1'd it because it is a nit";"0"
": one of the reasons i hate kwargs.";"1"
"it might be ask a stupid question but what will be the value of these fields if we are not setting them";"0"
"we can kill it if you want.";"0"
"trailing white spaces should be removed";"0"
"this test should probably go to cinder.tests.unit.test_db_api.";"0"
"the thing different about storm is its ro image size - it is well in excess of 2mb due to all the sbl/rpm/tzbsp crap the existing code also was a hack added earlier see for the description , it relied on the assumption that the ro coreboot always fits into 1 mb starting from the top of the blob. this assumption is true for nyan and all other targets so far , but not for storm.";"1"
"just a brief comment for what the methods below do are these callbacks, events, etc";"0"
"/* is_exact */ false";"0"
"can you remove these placeholders please";"0"
"s.availability_zone, s.disabled";"0"
"useless, this line could be removed";"0"
"it is ""b zier"", not ""bezi r"", but if this comment is too pedantic you can probably just leave out the french diacritic :-";"0"
"alignment is goofy here.";"1"
"i killed sdram from here for now. we can putitback in when needed.";"0"
"this is not necessary, i screwedup on a rebase, will respin.";"1"
"that is silly, but i see no one else is reviewing this so fine...";"0"
"should be after line213 though seems line212-213 useless.";"0"
"member_count= self.projects_page.count_members project_name self.projects_page.add_member project_name self.assertequal self.projects_page.count_members project_name , member_count+1 instead of having constant.";"0"
"i propose : kill -s 0 $pid - it looks fine -d /proc/$pid - is also good and decreases numbers of forks";"0"
"+1, we should use knewbrowsertabfromuser if !from_server.";"0"
"will remove this at all, as it is being checked in network/checker.py same patch which is running on every put to networks configuration.";"0"
"six.moves.urllib.parseurlsplit is ugly and in general it is impossible to use a.b.c.d just importing top level module a";"1"
"these if's/ then's do not match the style above and before. also please stay away from using bashism's like . in this case it is not needed.";"0"
"your editor hates you ;";"1"
"o craphate me: do we still need this one .";"1"
"changedany $.ironic, $.mysql, $.network_metadata.vips, $.get 'database_vip'";"0"
"please get rid of trailing white space.";"0"
"if it quacks like a duck, walks like a duck, then it must be a duck! :";"1"
"the instance.host and instance.node should be cleared before calling instance_claim or warning logs will be generated.";"0"
"it should be project_only=false";"0"
"i think this bash script is already complicated like hell";"1"
"yeah, i am dumb";"0"
"hellwe do not have common code : i hate that dry principle couldn't be achieved easily.";"1"
"might be silly, can this be configured to use something like ldap/ad or something external to provide os level users access management";"0"
"it should be slave.";"0"
"for the record, dprint always appends a n, but xlog does not. yes, stupid i know, your patch is ok :";"1"
"i am not at all familiar with callbacks, so take this as a ""stupid"" question....but why is ""network"" not a core resource";"0"
"debug_state.show_hit_test_borders = !debug_state.show_hit_test_borders;";"0"
"hmm... interesting. does the inspect mode work with touchscreen you can try that with ctrl+shitc in devtools, and then touching on the page should reveal the element in devtools. if that works, i guess we can remove the handling. also note, that we do not really care about the primary pointer - any would work for us i guess.";"0"
"you need to add dependson instanceidprofileservicefactory somewhere here. otherwise instanceidprofileservice might get destroyed before pss does and you'll be left with instanceid pointers pointing to nothing.";"0"
"damnforgot to update the change description. anyho, in later thought, might be better to restore the fail log so any one bringing up a new volume type, and developing a browser test for same, could get a tip on what browser test code they need to change. talk aboutitnext week.";"1"
"damndid not think about that. will change the name.";"1"
"s/fired/issued to seem less pew pew";"0"
"this is your modulename - the place where all files life";"0"
"patch crapneeds some cleanup here";"1"
"a dumb question: why do we sort them at all";"0"
"you logout in the middleware and here. i think you could remove the logout above.";"0"
"# mistral";"0"
"delete dead code since you are here";"0"
"scope creep: it seems like this whole if block should just use die .";"0"
"should kill this while you are here.";"0"
"should have a docimpact. silly me";"0"
"this is a really complicated data structure. re-think your test design here. from your comment this seems like it should be as follows - a pid should have a mapping to it is averages across timesteps. so this could be type foo = set<pid, vector<double>> then all you need to have is a set<foo>s";"0"
"this is very ugly. what happens when rule remains a boolean type and is passed to _make_metering_label_rule_dict";"1"
"yes, those cls should go in by tues";"0"
"why is this change required eject_virtual_media ejects all the media that are inserted. if only floppy is inserted, it would skip cdrom and eject the floppy.";"0"
"nit: this should be the first bullet, before the 16x bullet.";"0"
"primary_keys = 'port_id'";"0"
"small dumb nit: do not need to use .get because we know the key is in kwargs. yeah, that is pretty damnsmall.";"1"
"deleting mojom lgtm!";"0"
"yes, kill edp for dp test. and there is too many edp status okay, the other one is at rk3399-gru-kevin.dtsi";"0"
"we have mitaka too. should we wait for mitaka to die";"0"
"should we be setting these fields from the arguments if they were gotten from the auth_ref see line 151";"0"
"these fake share id values should be captured in the fakes.py file.";"0"
"giving you are orring those 2 flags together, maybe you want to give them consecutive values.";"0"
"- struct net_device *ndev; + struct bcm_cfg80211 *cfg = null;";"0"
"looks like you should add a pattern to your global git ignores";"0"
"should this be kwargs.get 'os_cert', kwargs.get 'cert_file' for backward compat";"0"
"again, name_or_id needs to be the last parameter to not break folks although i know it will suckbeing different from all of the other search methods .";"1"
"let us split and strip tasks. and i propose to strip node ids too.";"0"
"it looks kinda odd that you make neat little functions for the clocks but still keep the associated pinmux in one big dump...";"0"
"we should extract that inot the helper function.";"0"
"it seems you should be able to remove both ""if checkers"" conditionals.";"0"
"i mean it should be formatted assurface_rect_empty_.";"0"
"that is a terrible hack. do not do it.";"1"
"add: cfg.temporal_layering_mode = vp9e_temporal_layering_mode_bypass";"0"
"move this down to the iptablesfirewalltestcase, the ipset mocks it.";"0"
"ah, what the hell. it was really the duplication that upset me, butitwas time i added the ""bits"" directory i've been promising myself anyway. done.";"1"
"os.kill";"0"
"should it not be 01-02 or it that silly";"1"
"it'd be nice if you could add a ""dump ..."" here before this line to indicate the package being downloaded.";"0"
"hugepage_size = hugepages.get size if hugepage_size: ...";"0"
"also found this problem in cinder/tests/api/contrib/test_admin_actions.py, cinder/tests/api/contrib/test_backups.py, cinder/tests/api/contrib/test_cgsnapshots.py, ... a lot of places. there are bugs tracking this problem: and";"0"
"this maybe a dumb question. ""_"" is used to say ""please ignore"", but gettext also defines _ . do they conflict i.e. if we are using gettext can we use _ to ignore variables too or will it overwrite the definition of _ just some playing around: >>> import gettext >>> gettext.install 'angus' >>> print _ 'hello' hello >>> 5 5 >>> print _ 5 >>> print _ 'hello' traceback most recent call last : file ""<stdin>"", line 1, in <module> typeerror: 'int' object is not callable >>> wtf";"1"
"i am expecting self._proxy._conn to be an object. so, self.assertisnone instead";"0"
"there should be one queue.get in this method. in this block of code we should only try to kill timed out thread.";"0"
"this dsl is repetitive as heck.";"0"
"cuz im a impatient bastardand it means it comes online faster :";"1"
"column network_profile_id is missing with fk on it.";"0"
"pickling frankly sucksfor long term data storage; additionally, i may upstream this into repo, and there is zero chance in hellthey'll go for pickling.";"1"
"this is not chrome tracing. this is dumb armsoc tracing into xorg.0.log.";"1"
"it should be volumemetadataresponseparameters instead of volumemeatadataresponseparameters.";"0"
"as long as we are here, can we kill this comment it can fall out of sync with the code . you canalso change the code to timeunit.days.tomillis 1";"0"
"i think you are leaking memory here, consider std::unique_ptr";"0"
"why would the timeout *not* be an integer who is the jerkpassing around strings or floats";"1"
"mock_get_instance_pci_devs.return_value =";"0"
"remove service, ignore_errors...";"0"
"base_lock is listed as a read-only bit, so i'd be very surprised if this does anything. i never understood what that stupid override bit does, however... you could try leaving it out and see if it still works.";"1"
"unnecessary, and you do not have it in the other mocks... so remove";"0"
"yes. darn! fix coming.";"1"
"optional: not your doing, butthis function seems dead code. for the local dchecks, we might as well use the member field directly.";"0"
"wtf it is my baby, not your!";"1"
"can we kill the base classes too";"0"
"i think the code below will get a bit less verbose if you make this constexpr gfx::size ktethersignaliconsize 40, 40 ;";"0"
"nit: let us write bindrepeating. ditto for other callbacks.";"0"
"...actually, while you are here, would you mind changing the others to false";"0"
"typo: the first irmcvirtualmediaiscsideploy shold be irmcvirtualmediaboot.";"0"
"nah, because i want to make it really hard to do something stupid that causes us to lose track of locked hosts. this way, you can not remove hosts from self._hosts short of flat out blowing it away and replacing it with something else.";"0"
"oic, that damnjs formatter ... grr";"1"
"why bother if mount_gpt_image gets a bad flag, just letitdie then this func turns into one call: ""${scripts_dir}/mount_gpt_image.sh"" --remount ""${mount_gpt_options }"" ""$ """;"0"
"dam, there is a bug here, we should delete all ports if we hit securitygroupcannotbeapplied";"1"
"i haven't looked at this enough or know enough about the logger functionality, but suppressing logging seems dubious to me. if these are logged at ""info"" can they be supressed and re-logged as ""debug"" i dunno that might be a pretty stupid idea.";"0"
"btw, do we want to kill chrome when presenter exits chrome_pid=""$!"" and kill ""$chrome_pid"" in clean_up.";"0"
"please, use trove_testtools.testcase as the base. it will help you to discover leaked mocks like the ones below.";"0"
"this part name should be ""network_agent.py"".";"0"
"so i'd leave these in for when $::ironic::params::ipxe_rom_dir is undef. that way if someone tries to use it on an environment where we do not have the file copying occuring, they will not wonder why it does not work.";"0"
"yeah, i intentionally want this script to be rather dumb and examine everything in the host table. i think the buckets should be sufficient to partition those that we really care about from the mostly bogus ones.";"0"
"please add blocksize and execute args here";"0"
"s/false/false /* is_child_account */";"0"
"usually put sob below message, above bug=";"0"
"here should be used following validators: packstack.installer.validators.validate_multi_regexp regexps are given as values of option_list.";"0"
"you mocked method utils.execute . it raises exception. so here you have to use: self.assertraises processutils.processexecutionerror, crypto.ensure_ca_filesystem otherwise this exception will be raised in this test and you get a test fail because of this exception.";"0"
"inherit from serverpasswordtestv21 then why create this use this one self.fake_req = fakes.httprequest.blank ''";"0"
"prob does not need to be imported as btypes";"0"
"correctitshould be removed.";"0"
"accessing a static field on a different classlooks a little ugly; maybe add a static utility wrapping it in variantconfiguration";"0"
"no no. perhaps i should rename server to dbusserver. it might make things clearer, although i am hoping to start killing all this dbus stuff in not too long.";"0"
"you are missing cleaning constraint mask e->constraints->mask = struct rprm_constraints_data * data ->mask;";"0"
"dammit, i somehow fixed it in the old file in a different copy of aosp. fixed in the right place.";"1"
"should not you put your dummy gettext and dgettext in here instead";"0"
"dumb question - if target_routers is do we need to call the method below";"0"
"can you please add a some information here about why may i suggest: ""the copyrights held by openstack llc were transferred to the foundation when it was created.""";"0"
"oh dear, i did not realize this workflow description wasso far off. darn you, diff-based-reviews! you are failing me! so, added to the above workflow should be: * create a loadbalancer object * create a listener * associate the listener with the loadbalancer * associate the pool with the listener. and optionally: * if https termination is being utilized, you must also: ** add the tls certificate, key, and optional chain to barbican ** associate the barbican container with the listener * if layer-7 http switching is being used you must also: * create any additional pools, members, and healthmonitors which will be used as non-default pools. * create a layer-7 policy associating the listener with the non-default pool * create rules for the layer-7 policy which describe the logic behind selecting the non-default pool for servicing some requests.";"1"
"i can t find vmruntime.getruntime .requestconcurrentgc method, i can only find vmruntime.getruntime .concurrentgc method, is it typo what i request is that gc will not block the caller thread, if we call vmruntime.getruntime .concurrentgc or runtime.getruntime .gc , it will block the caller thread. so i want to reuse the daemon thread to do gc so that caller thread will not be blocked";"0"
"damnsorry for thatitis legacy from the reviews, this has changed. i'll mention it properly.";"1"
"set request.invalid = 1; although that has no behavioral relevance because preemption is the last phase of scheduling so no future passis going to look atthis request , it is still more correct.";"0"
"consider contextlib.nested to avoid a deep indentation.";"0"
"we want to remove the dict-compat mixin from instance objects so please use dot notation for accessing fields on an instance object.";"0"
"useless setup";"0"
"if we *require* keyring, then it will always be installed. that makes the import check pointless.";"0"
"small dumb nit: do not need to use .get because we know the key is in kwargs. yeah, that is pretty damnsmall. i think you already changed this butitgot lost in a rebase/merge.";"1"
"i think it should be qosbandwidthlimitrule not qosrule";"0"
"this might be a dumb question. in that case, apoligies in advance. why path_prefix applies only to resources!=firewall";"0"
"ok so it was very obvious. still, dumb people like me might wonder what the format is :";"0"
"ugly, but we have to live with this in python 2.x";"1"
"yes, now we will check the devices in the host and only update the changed one. done.";"0"
"i believe this is wrong. this whole block should be executed only when declaredtype == null in line 240. otherwise we will duplicate this type in father.";"0"
"really, make a no-op a static method. this is just silly.";"0"
"yeah, i spotted this also. : i'll hitit";"0"
"sure, that is why i say it is my mistake. i wrote that commented out code. but now i see thatitis wrong. you can not commit wrong code with the explanation that you have just uncommented it.";"0"
"i'll give you extra points to put this darn declaration in a header somewhere.";"1"
"typo self.delete_port_interanal=> self.delete_port_internal";"0"
"nit: self.excluded_keys = excluded_keys or";"0"
"i would really love to see these addcleanup gone...";"0"
"done. sorry for silly human sorting : i just noticed that i canuse ""6,15sort"" in vim to do this.";"0"
"that is ugly. you do not really have an attribute error anywhere here. valueerror would probably work a bit better. how about: conf = none try: ... conf = jsonutils.loads ... except exception: pass if conf is none and not ignore_missing: log.warning return conf or {}";"1"
"as far as i can tell, it is useless, and should be removed. the whole 'passing arguments to a test' construct should be removed, from all the tests you are working on.";"0"
"images_dir should not be needed here.";"0"
"i like this patch style, you save anuseless var.";"0"
"serializetostring also returns a bool which you should use to detect an error.";"0"
"i'd vote for instead of using glance urls, to make a first version that puts it directly into swift with a configurable ttl, defaulting to a few days. in the message to ironic, instead of using a glance url, passa swift temporary url to ironic then you do not need to tackle all of the complexities of garbage collection in glance -- just let swift manage it with a ttl. in the long run the storage would need to be plug able for different deployments, but swift seems like a reasonable first stab.";"0"
"initializenvram does still call into mock_tpm_utility_ before this line, so you still have interleaved test setup / test execution against the mock. or am i missing something";"0"
"fixed. aargh, damnintellij. it forgets my style prefs every time i close it.";"1"
"not trove as in the openstack project trove but rather the distutils trove classifiers ref below . yeah, i agree, it is misleading ; ref";"0"
"i wonder, but is not important, whether these imports should be aliased as nsx_{xxx}lib";"0"
"it just so happens that this dependency is only mostly dead. the chromeos::input_method::kcapslockkey constant is used, which ought to be removed in a separate cl.";"0"
"please remove those whitespaces. thanks.";"0"
"similar as above, but will return the default_domain if the project_id != default_domain_id";"0"
"ok, will cover here again, thank you lifeless.";"0"
"this is rather unpleasant. profiling info are collected during gc which means that the code below could race and end up using a invalid pointer.";"0"
"crapit is. i actually thoughtitwas just our file. i'll send a patch upstream.";"1"
"i am honestly not sure about bh vs not bh, i just know the network stack is full of _bh poopdo you ever get called from irq context sorry, i did not mean to make you thrash. i am not totally sure what the right thing to do here is as i do not know netfilter and when what gets called :";"1"
"silly nit.. but need a period at the end of one line doc strings here.";"0"
"i am with jay on this one. i prefer checking conf options on driver init and barfing if something's wrong. there are dumb admins, but also ones that just make a typo here and there :";"0"
"if you go through with this, kill these too.";"0"
"check_error=false -> check_error=check_error";"0"
"why make a separate file darin himself is against *util files as function dumps 1 , and this function is certainly relevant to the parser enough to share the header with it. 1";"0"
"die $lineno ...";"0"
"tiny nit: actually they are called ""dict""s in python, not ""map""s! my bad.";"0"
"a little weird that ret should be a event but initialize as a boolean... how about this: while true: ret = self._event_stream_map plugin_stream .next if ret is none: return none if self._policy.matchevent ret : return ret";"0"
"i think, route_id should get from self.resource_id.";"0"
"maybe rather than wrapping the body of the function in if, we could wrap the call to this function on line 642. detail: ! ""$skip_pingtest_cleanup"" = 1 can be written more conventionally like ""$skip_pingtest_cleanup"" != 1";"0"
"lol, how the helldid i miss that";"1"
"nit: insert step 2: restart swift proxy server i knew to : but noobs may forget could also be useful at this point to do a swift -a -u test:tester -k testing info to check two policies are reported in info";"0"
"use executils.save_and_reraise....";"0"
"openstack do not need sob in commit message, it should be removed.";"0"
"to sum things up: >>> are we sure that e will be an instance of httpexception yes, i am sure that e is an instance of httpexception or its subclasses.";"0"
"damnit....";"1"
"amaretskiy, what should i do with this test should it be removed now";"0"
"angus: sorry for stupid question, but could you share details about ""zookeeper variables"" who use them as far i understand marathon apps do not need them. also, i noticed that app templates do not have ports. how are you going to handle them";"0"
"needs ' die'";"0"
"stale pid now handled in external_process";"0"
"could you add an die to the end of this so that the build fails if the checkout fails";"0"
"is there some specific bug for this crapprobably we should add bug to keystone client, so will be able to track its status.";"1"
"shame on me for dysgraphia :";"1"
"copy and remove this ugly whitespace";"1"
"you have a ' at the end of the line that needs to be removed";"0"
"this is just a dump of draw commands from google sheets. it is not meant to be really human-readable/editable. we are motivated to include this here because it represents an real, common use-case of canvas.";"0"
"please, remove backslashes where possible.";"0"
"you canalso just kill ""onclientchanged"" and have a single ""setclient"" method again.";"0"
"yeah, i'll undo these changes.";"0"
"i think this changes the behavior of ""reboot-bootloader"". did not ""reboot-bootloader any old crapcan follow"" work i feel like we are making this already unreadable mess even worse.";"1"
"nit: stomped by also where is this wideselectiontreeui you mention here";"0"
"useless comment at all.";"0"
"bah, you are right. i was thinking we were calling create_pool per request. silly me.";"0"
"this needs line wrapping to a normal git length 76 cols";"0"
"nit: i would just call these installing , waiting , active to parallel state->installing and info->installing , etc. ""ref"" kinda looks like ""reg"" too.";"0"
"'atest host mod' supports a -a option for specifying attributes as ""key=value"". for consistency, this command should have its own option for specifying attributes as ""key=value"" pairs, too. i'd say this command should use -a, too, butitis already taken. really, 'create' and 'mod' should support the same options. unfortunately, <rant>we are stupid, and we let the commands diverge</rant>. still, we should find some way to specify attributes as ""key=value"", rather than adding individual options for each attribute. it will help keep the stupidity from spreading.";"1"
"i do not think this works. go will garbage collect the slice. cced you on an email asking aboutit edit: apparently it works.";"0"
"useless comma here";"0"
"yeah, goofy. this is consistent with how other clients are passing the verify flag.";"1"
"the !surl.isempty part is redundant now and should be removed";"0"
"i feel like it is a stupid question, but what does it mean";"0"
"exempting whatever bash voodoo frysinger would prefer here, this is basically in line w/ what i was thinking. you need to fix your alignment here line 786, and line 786 should specifically state which directory it couldn't find else debugging this will be a pain in the ass";"1"
"please ignore this silly bit of debugging code. its gone now.";"0"
"hate to be a code natzi, but spaces around the << to match kernel style, other than that looks fine";"0"
"why do we need to mock this i think you should mock _update_provider_location.";"0"
"this is ugly and probably needs to be fixed somewhere else, but adding it here for now enables libutils to build.";"1"
"we should just delete this entirely and use sys_tgkill from linux_syscall_support";"0"
"try_lazy_umount should be false by default to make this function safe for reuse and in fact most of calls passtry_lazy_umount=false";"0"
"empty gerrit is useless. need also procedure to mirror some repositories from some other gerrit.";"0"
"i am using any hardcoded default values only in the params classo this goes to the params too, even if it looks stupid";"0"
"i wrote this on a typewriter. and he lies.";"1"
"should we also assdebounce to repo setting:";"0"
"s/warning/error/ + this logging can go into imagechecksumerror __init__ as you already build exactly the same string there...";"0"
"it was my understanding that mocking the call to get_bridges in the setup function will result in it being mocked in all tests in this class as the setup function is invoke before each test is run any mocked functions/object would cascade into be mocked in each of the test. sorry if my first comment was unclear. this would normally be true however as the mocks are defined in a with contextlib.nested block you are correctitwill not cascade as the scope of the mock is limited to the contextlib block. i will resubmit the updated patch shortly with this change.";"0"
"threads sux! this is equal misleading as concurrent please write full name";"1"
"nit: useless initialization";"0"
"nit - should be delete ""a"" container.";"0"
"use findbytype instead of passing a generictypematcher.";"0"
"what is f and s please give sensible names. and why alert";"0"
"i prefer to remove these items if i canalso remove them in sysconf.h. that is simpler.";"0"
"darn it! if this ever gets a +2 i'll update and push the typo fix with a ninja merge. if it gets yet another minus 1 i'll incorporate the typo fix. thx";"1"
"this new function looks useless.";"0"
"use die here to be more consistent with the logging";"0"
"using tab instead of spaces damnno pep8 check here";"1"
"rather than killing the gpu process, can we surface the error so that only the channel gets lost";"0"
"maybe a dumb question. are these the names in setup.cfg, or the classnames";"0"
"shoot. yeah, you are right.";"1"
"clarification question dumb question : will the policy criteria always allow for creating a valid symmetrical patch successfully";"0"
"can you delete the whitespace here sorry to nitpick silly things, but i did not notice it in the prior cl.";"0"
"nit: i do prefer having one test for each exception type, as its much easier to debug failures. butitwould suckfor so many exceptions.";"1"
"i see... but any way this looks like dirty hack. adding if inside new code to make it work together with the bug. why not to fix it and to use such hacks here";"1"
"fake.fakedeploy imo should be here for fake driver.";"0"
"i prefere original_filter here";"0"
"never mind, it looks like these should be properly reentrant. we can do this in the constructor and destructor of glibbridge instgead and it should be fine.";"0"
"sal_info ""vbahelper"", ""ret is 0x"" << std::hex << pret ;";"0"
"should we use that 'retrying' decorator usually that looks pretty ugly, butthis might be the right scenario for it something to consider...";"0"
"nit: s/currenency/concurrency";"0"
"consider inserting a new line here to enhance readability";"0"
"sort_key should be inspection_started_at";"0"
"i think this should be a colon";"0"
"should be -s b105, b106, b107, b404, b606, b607";"0"
"i agree it is a fair compromise for now but i'd like us to dedicate some time thinking how valuable it is to verify for consistency something that is being returned by the service this library was built for. clients must be a bridge between the service and the user, they need to asstupid as possible.";"0"
"duplicate for pep8 should be removed";"0"
"changed to test_cluster_does_not_exist_validation if we need to go full grammara nazi ;";"1"
"if you follow my suggestion in the previous file, then this method could become private and make the accountconsistencymanager a friend of the chromesigninclient.";"0"
"i meant some migration script but yeah... that was a stupid idea from me. please ignore. :";"0"
"#ifdef config_drm_mediatek_fbdev";"0"
"ugly, but done";"1"
"getlogginghandeerrorfixture should be getlogginghandlererrorfixture";"0"
"globals.yml";"0"
"so this is the degenerate case: * t_data = 3 * t_ctype = 6 * t_meta = 9 ... i think you are missing a set of tests for a created_at that has a t_ctype == t_meta.";"0"
"kill it!";"0"
"if this is only meant for c++, why do not you just use static_assert we've switched over from our own equivalent of this in art, bionic, and libcore...";"0"
"it is not gonna use them, butthe runtime will open them if they exist, keeping native craparound. i feel another parameter would have been in line, but maybe a follow-up cleanup can take care of that.";"1"
"update: i put up a new patchset with a protoappender interface which is used as the argument to appendtoproto instead; it is a little bit more indirect but avoids the dependency. ptal!";"0"
"why you do still have dumb map.{o, c} delete this";"1"
"should we be sending the requested_project_id out of band too";"0"
"note: i will reproduce this discussion in rietveld";"0"
"i would have expected cros_build_lib.die instead. including the x86_64 check above.";"0"
"remember these are ""example"" events. you are allowed to take some shortcuts and hardcode values that the test does not particularly care about. for example, i would let tid == pid, and ppid == ptid. you could maybe even have the parent pid/tid be hardcoded to '1' the init process .";"0"
"ah but cells v1, damnit cells v1.";"1"
"this print statement is useless. where is the output expected to go stdout will never be looked at.";"0"
"what a nasty bug... good stuff!";"1"
"should this length be the length of notes or am i really pathetic here";"0"
"if client_auth != auth_type_none";"0"
"yes i will remove all the trailing spaces thx";"0"
"borrowed from neutron-*aas tox_install.sh";"0"
"nit: pretty sure you do not need std::move here and below, as you get an rvalue from a function, not an lvalue";"0"
"die die die!!!!";"0"
"i think they are a noop if not wrapped in a test step...";"0"
"i will remove "" openstack and non-openstack ones """;"0"
"are you reimplementing pr_debug";"0"
"after testing, the stop command would be more robust if it went ahead and deleted the tr-api.pid, tr-cond.pid, and tr-tmgr.pid similar to how stop-deps is deleting all the *.pid files. this would allow a user to debug individual trove services in screen and also still call ./redstack stop to kill them all and start to start them back up.";"0"
"get children will return empty listitchildren do not exist";"0"
"please, fix styling nits + a typo: .minor = misc_dynamic_minor, .name = ""anonshm"", .fops = anonshm_fops, /* is missing in your cl */ side comment: i do not know why does the gerrit editor so stupid. i had to insert empty lines to prevent 'everything in one line' auto replace.";"0"
"singlecast is not supported by jack library thus could not be generated before jack ir is dump into jack library.";"0"
"the status will give you fail ntp server is not running ... failed! in the logs which looks like a failure. while service ntp status>/dev/null 2> 1; do would get rid of this";"0"
"it is lined up. just an artifact of gerrit's output on the browser. it passes the analpep8 :";"1"
"i feel thatitd be better and easier to not use the osprofiler middleware, and write our now, instead of having to carry all that compatibility crapfor webob.";"1"
"is the bdm an object here if so, then why not bdm.destination_type";"0"
"if this is what the ssl-config-generator told you, we should shoot for it.";"0"
"please, instead ""v_p_n"" write ""vol_per_node"". also v_p_n and vol_size are numbers thus better write vol_per_node=0 and vol_size=0.";"0"
"it'll hang and hopefully get killed by whatever runs the test. i am fine with adding a timeout to fail after a minute, if you'd prefer that.";"0"
"bool has_responded_ = false;";"0"
"do you really need to eval this at make time this is going to execute bash+pwd many times. maybe you want: ... obj=""${pwd}/util/cbfstool""";"0"
"as is visible in test code, there are no leaked mocks and i have made consistent use of patch.object for mocking. so there should not be need of using trove_testtools.testcase";"0"
"this tlog line should be removed. there is one below line 176 .";"0"
"i've better idea - use os.curdir";"0"
"i am torn. i understand nicolas - keep this independent. but using the actual dispatch code here is just as ugly. maybe hide this behind a function to make it look slightly better";"0"
"seems like a bit useless now we have only dummy.dummy benchmark scenario";"0"
"this should be self.fake_issue_api_request_fails.";"0"
"ew. there is actually a corresponding #define for this, sched_capacity_scale.";"1"
"the ldap.dn.str2dn seems to be what we are using in ''keystone.common.ldap._dn_to_id '': so: >>> ldap.dn.str2dn 'cn=dumb,dc=nonexistent' 'cn', 'dumb', 1 , 'dc', 'nonexistent', 1 >>> ldap.dn.str2dn 'cn=dumb,dc=nonexistent' 0 0 1 'dumb' you could use: self.assertnotequal keystone.common.ldap._dn_to_id conf.ldap.dumb_member , check_assignment 'user_id'";"0"
"actually this is in a unit test, so that is kind of a silly concern ... nevermind";"0"
"please wrap the ceilometer-polling like this: ''ceilometer-polling''";"0"
"argh, lame pep8 issue. gotta move this line up for alphabetical order";"0"
"you want ' die' here";"0"
"i think it is of more use in the directory you are running devtest.sh from so leaving this";"0"
"you should check as well that is_working has been called once.";"0"
"wtf you _really_ want reflection here.";"1"
"these seem big enough to warrant factoring out now. or just have this overload call the other one. that does not cost anything. the other way round would cost a useless strlen.";"0"
"please remove unnecessary white spaces.";"0"
"run_tests.sh does not use tox and nor should it imo, because tox is a pain . obviously *i* have mox installed, butthis could be very annoying for the average person checking out the code and running run_tests.sh for the first time.";"0"
"that comment helps reviewers that haven't tried getting rid of contextlib.nested themselves to understand the need in such an ugly syntax. i think it is fine to leave the comment here. it is definitely not ok to put -1 just for that.";"1"
"is not that redundant count=0 should be catched by ""if not count"" above already.";"0"
"this only needs is* methods. remove from friends and make is methods public.";"0"
"useless trailing '-'. see the implementation of the 'rand_name' function.";"0"
"movedirwithcontent basically does the following, when you ask it to move dira -> dirb 1 does dirb exist no rename dira and return if that succeeds 2 move over each file into existing dirb, but if any of them fail to move for whatever reason, oh well. delete dira regardless so actually, if !move { copy ; delete ; } will not work, because dira will likely be gone after move is called. better would be if we could do something like if movecanwork { move; } else { copy; delete; } butitsort of sucksthat fileutil does not already have a method that does that. this may be something we want to run over the whole codebase for and make sure we do not have other spots that may break because of this problem...";"1"
"may be a dumb question. but what if it is already attached is that possible";"0"
"damnthat is exactly correct. i really should not have refactored them.";"1"
"for barbican, enable_plugin barbican";"0"
"nit: lists should be introduced with a colon";"0"
"how much does this increase the ast size or was this kind of thing already a part of the previous measurements you sent around i guess not";"0"
"mmh, i actually uploaded the version w/o the sorted call by mistake... #dumb i'll propose a follow-up patch refactoring this code a bit and incorporating amrith's and john's comments.";"0"
"delete the white space.";"0"
"damnwhitespace!";"1"
"nit: const pointer. i.e. applistviewdelegate* const view_delegate_; searchresultpageview* const search_result_page_view_;";"0"
"sorry for my stupid question, but what the purpose of these two variables";"0"
"this line is so long it is ridiculous. any chance you could break it so each command is on its own line";"1"
"useless because there is only one primary-influxdb_grafana node";"0"
"damnit sorry thought i already fixed this, should be horizon::params::...";"1"
"fc related code should be removed.";"0"
"a suggestion here might be to have a single add_cleanup_with_wait function, instead of relying on the caller to call both addcleanup and then _append_wait might look something like this def add_cleanup_with_wait self, resource_id, delete_callable, wait_resource, error_status='error', exc_type=nova_exceptions.notfound : self.addcleanup delete_callable, resource_id wait_dict = { ... } self.cleanup_waits.append wait_dict and then called like so: self.add_cleanup_with_wait server_id, server.delete, self.compute_client.servers";"0"
"still a useless forwarding constructor here.";"0"
"the default for values.get should be none. i do not think that you need it here.";"0"
"this script comes from package, and very soon will be useless. legacy";"0"
"damnsorry.";"1"
"why passwhy not letitfail wouldn't you just be propagating the silent failure by ignoring it";"0"
"since there is only 1 prerequisite validator now that encompases all the sanity checks why do not you just get rid of conf.prerequisite_validators";"0"
"it is not part of base, extract them to separate files. config.py or parameters.py and capacity_log.py";"0"
"args and kwargs are needless";"0"
"is not the above line equivalent to candidates = set new_settings since if unknown_keys contained anything, then an exception would have been thrown above";"0"
"can you puppet-lint arrows should be aligned.";"0"
"probably want ' die' at the end";"0"
"these lines should be removed. this is handled by updatepreferencesfromstate";"0"
"agree with flavio - a list would be nice. also, #notaminusone";"0"
"nit: pep8 i think this should be indented to line up with """""".";"0"
"oh right! t_t nevermind about using the header, that wassilly.";"1"
"done
"useless config_file variable.";"0"
"how are you marking the release configs other than link-release as important e.g. duck-canary for example";"0"
"this is because of the dice roll it is kind of non-obvious.";"0"
"why not unite the above 2 lines to one from neutron.openstack.common.gettestutils import _lw, _le";"0"
"kill this.";"0"
"should we write-protect here stm32_rtc_wpr = 0xff";"0"
"if you want. i was there... and it was ugly. ok though. i'll upload another tweak.";"0"
"typo sin*c*e";"0"
"if you are just going to abort, you can delete the 3rd/4th args. that is the default pkg_check_modules behavior.";"0"
"useless. makes no sense.. removing it in next patch";"0"
"steal the comments from the methods for this and all below.";"0"
"ditto as above, consider create_activate_task";"0"
"ugly hack.";"1"
"ugh. stupid google3 _ nonsense.";"1"
"same here: conf.ldap.url = ""fake://memory"" conf.ldap.chase_referrals = true";"0"
"use self.assertquerystringis instead";"0"
"again, i happen to disagree with the naming here. retry controllers should be named in a way that makes code that uses them nice and readable. example of good name: lf.flow name, retry=retry.alwaysrevert nice, and says all of it. lf.flow name, retry=retry.retrycounter 5 looks confusing to me. i'd suggest some stupid but more clear name, e.g. lf.flow name, retry=retry.times 5";"0"
"we should just drop gecos everywhere and ignore itithink";"0"
"why do these changes are needed only for the network and image tests sorry if question is stupid :";"0"
"ah, stupid typo";"0"
"crap";"1"
"nit: unnecessary almost got that wrong myself, damnstupid way to spell a word";"1"
"ditto, use fake_instance.fake_instance_obj.";"0"
"null classloader is still handled by classlinker::visitclassroots.";"0"
"the model is that the dumb client contacts keystone the sp and asks it for a saml request to send to the idp. being dumb it is not able to create this message itself. once the client gets the response from the idp it passes it to keystone for validation.";"0"
"oh, i realize it is what we do in other places and it is probably ok. but, sqlite makes me paranoid lately : so if this transforms to a landing cl, we might as well start from the right approach while it is still simple.";"0"
"consider adding '--id=$$' so that the pid of this script instead of the logger process is logged.";"0"
"nit: use std::unordered_set<> if you do not care about ordering, it will use less memory and be faster with simple types like eglnativewindowtype.";"0"
"fixed everywhere... too used to golang. i forgot about all the formatting bullshitin python.";"1"
"seriously wtf";"1"
"this should not be in this file. i am not sure it should be anywhere. why do not we just 'static inline' all this crapnone of it is public api.";"1"
"kill downgrade notion here";"0"
"this also computes and discards the block size padding and margin. does not look too expensive so probably not worrying about but worth to keep in mind at least.";"0"
"yeah the timestamp for expiration is needed. dumb me forgot about needed.";"0"
"it took me a ridiculously long time to realize you missed a 'c' :";"0"
"this was wtf1";"1"
"remove white spaces.";"0"
"you are mixing import styles and generally it is preferred to import the whole module and reference parts of that module with the name of the module included. i.e. reporting. reporter rather than reporter, it tells the reader immediately where that code came from. remove both reporter and testfailure imports and change your references below to use reporting.reporter and reporting.testfailure.";"0"
"log ""%zu"", moving_slot ; :d use %zu for size_t, %zd for ssize_t, then no ugly c++ casts.";"1"
"the 2kb is an invaild hugepage size i would remove i.e.: 2kb";"0"
"is not openstack-utils available in both epel and rhos if so, installing a tool before priorities are set to set priorities is kinda paradoxical. might want to add a --disablerepo='epel*' to yum to make sure this does not do something stupid.";"1"
"can you get rid of the white space above";"0"
"end usually go into a finally block, in case the body throws an exception or something";"0"
"> maybe dumb question, will ${ } ever print assomething like -1 nope.";"0"
"this must be lower-cased, otherwise the seendomains.contains check will not catch case-insensitive duplicates.";"0"
"real links in mark down are really easy! do not be lazy ;";"0"
"missing entry in kerneldoc above... stupid me";"0"
"done. the way i approached this was to create a new property foobar_hit_testable_ which defaulted to false and needed to be updated to be true. i then whacked moles until foobar_hit_testable_ and hit_testable_ were exactly the same, at which point i got rid of the silly name as well as all the now useless set_hit_testable false calls. things look much nicer. thank you very much for this suggestion, chris!";"1"
"nit: boolean values are trivial and following the musician's comment these should be dropped.";"0"
"__strategy_ns__ = __name__";"0"
"false -> false /* null_java_fd_ok */";"0"
"you should set tidylib to none here ...";"0"
"those spurious chars should be removed.";"0"
"amqp is already listed below";"0"
"maybe add a todo and refer to an issue crosbug.com/19662";"0"
"i am all for gatting up the fools who step to us, but perhaps you meant investigate";"0"
"if we do not delete servo, we hang indefinitely on any error.";"0"
"damnit, my wife is always correcting me on that one too. now i have two wives!";"1"
"should really use getline instead of fgets . fgets should burn forever.";"0"
"done. nfs.py and glusterfs.py use 'sparsed', by the way";"0"
"useless comment";"0"
"is this for your own debug then use const bool kforcedebugcapture = false;";"0"
"java's lack of tuples makes it a bit annoying. i've refactored a bit to put them in a testconnection inner classwhich contains all the implementation details of setting up the connection";"0"
"please initialize in the ctor. uninitialized values are evil!";"0"
"i'll withdraw this change, if we agree with #rabbit_host=ironic.";"0"
"there are time like this when i found myself to be really ignorant. can you explain me why one should use setdefault here";"0"
"this function is also useless and should be removed";"0"
"we want to terminate the http server in order to force monitoring to fail, which is initally running from script httpsrv.sh. just incase if the server is still running , we are making sure to kill it.";"0"
"yuckdeath to methodhelpers";"1"
"aha! the reason that $! does not work is the -f option. that option specifically requests that 'ssh' fork a child and putitin the background, defeating $!. i think you canuse this instead: ssh -n -i ... -n ... ssh_pid=$!";"0"
"this verbose_name should also be removed.";"0"
"same here, we will use tcp_socket.mojom.h instead of tcp_connected_socket.h";"0"
"you do not use self, so that should be a staticmethod :";"0"
"this was a rename from the old zipfiletest that git did not detect.";"0"
"perhaps a static method like set_default_aggregation_methods to hide the crap";"1"
"you reported the bug on may 26th and you did not propose a pull-request until now. this augeas thing is a terrible hack and will make puppet catalog not idempotent. we will not accept this code and you'll need to fix it in puppet-sensu.";"1"
"nit: i think you can return false here and below then return true at last use self._is_valid = self._validate_device then";"0"
"use an apostrophe ' here rather than a backtick '";"0"
"never do this! you are putting to scenario as ""clients"" ""admin_client"" you can destroy everything!";"0"
"nit: delete already tests for nullptr, so this is equivalent to: delete sinstance; sinstance = nullptr;";"0"
"nope since we were creating a rule but update a policy. but i'll kill those.";"0"
"not addressed, sine patchset #75";"0"
"i will leave as it alone as i think a bullet is better than a single number one 1. .";"0"
"n instead of m at the end of barbican.";"0"
"yeah wtf:";"1"
".cfi_restore r4 .cfi_restore r5 .cfi_restore r6 .cfi_restore r7";"0"
"mark this as a private function by prefixing with _";"0"
"question: if remote end of the pipe dies, will file_provide_ become unbound if so, will notitmean that we will not disable debug recording at l.26 i.e. we never disable it";"0"
"if you want to ease the pain of backporting you should definitely remove it.";"0"
"so if you address my comment this will become useless";"0"
"how about 'sleep' in utils.execute 'pstree', proc._process.pid";"0"
"you get an ugly traceback. hum. maybe we should mimick the prlimit command and write a short message $ prlimit --as=102410241024 bash -c 'prlimit --as=102410241025 true' prlimit: failed to set the as resource limit: operation not permitted";"1"
"maybe should be cluster1:dvswitch;cluster2:dvswitch1";"0"
"this try..catch is useless";"0"
"that 'or none' does nothing. none will be set if the 1st part of the statement equates to a 'none', 0, or false. image_meta will always be a dict.";"0"
"this method should be called soft_delete take a look here";"0"
"why do we merge to single existing methods here lets leave them decouple and just trigger each after other in test";"0"
"remove this since you removed nose";"0"
"we should remove .buildinfo in $build_dir.";"0"
"you can not use ... w/sh. you need to use ... .";"0"
"validation should be executed synchronously.";"0"
"i think we should change self.health_check into self.check_agents_health";"0"
"there is one file main.py required the 755 mode, so i think 755 should be fine.";"0"
"rw_handles.filewritehandle.return_value = fake_filewritehandle";"0"
"move this below: axfragmentrootplatformnodewin* instance = com_instance;";"0"
"i do not like this. we deliberately moved away from all this because it encourages people including us to pull magic numbers from our asses.";"1"
"i would expect get_by_instance to take an instance object. maybe a better name is get_by_instance_uuid";"0"
"a dumb question, but can you explain why the fk constraints need to be dropped before changing the indices, before being re-created on exit btw i found it a tiny bit jarring for __enter__ to tear stuff down and then __exit__ to setitup again, butthat is just me :";"0"
"needs to be capitalised. vcpu = vcpu.";"0"
"optional: gmock is not super popular in chromium in general except for very simple ones, do you feel this mock classand matcher code might become simpler if it were written as a dumb c++ classif so i might prefer a dumb classover gmock.";"1"
"imho this is really the wrong place - if privsep helper can not work on windows, then change the client mode default in the olso.privsep codebase instead. this limitation is not anything specific to vif_plug_ovs - all users are affected and its stupid to make every usage of privsep do the same change.";"0"
"wow!! this is such a wonderful tool! did not know aboutitcool, updating the layout in next patchset.";"0"
"the 'newapi' package name sucksa bit. mostly because at some pointitwould not be new anymore. also, you are not defining a new api. you are changing the wsgi framework. so maybe another name can be considered. when i was playing with it about 1 year ago i created a neutron.pecan_wsgi package. anyway, enough with pedantry. if you change the name now, you will have to update and rebase all the patches. let us go with newapi for now, but let us change it before merging the branch back";"1"
"yes, functools is a std lib where unittest2 is an external lib.";"0"
"what you are doing with testaccountmanager could probably be done with less lines of code with a mock classthat just mocks revokegaiatokenonserver. then you can expect_call getlastrevokedrefreshtoken called with with the right argument .times 1 ; i forgot the proper syntax .";"0"
"let us only declare the variable and leave it uninitialized here and move this assignment into the catch block. the compiler will complain about variables left uninitialized.";"0"
"you need both tunnel_id_ranges and network_vlan_ranges.";"0"
"sid_drawtbx_lines is just a dropdown button. it is not supposed to be executed by itself.";"0"
"oh darn, you are absolutely right. i was in this silly mindset from something i was doing shortly ago where i was polling in between. fixed";"1"
"i am an idiot. thank you for using small words so that i can understand.";"0"
"hmm, should be using $nova_dir i suppose";"0"
"agree. if you mean to document what the return dict looks like, do it at the top. this here looks like leftover junk.";"0"
"use die instead of this and the printk";"0"
"please make this: const basegfx::b2dpolygon rcandidate = rpolypolygon.getb2dpolygon a so we do not create unnecessary temporaries";"0"
"you probably do not want two change-id lines in your commit message. the second set of changes is superfluous and should be removed.";"0"
"make into private member with an assessor that returns a pointer please.";"0"
"this line must be deleted since it is used by metainterfacedriver only. it is cause of pep8 error.";"0"
"signed-off-by: nick vaccaro < >";"0"
"insinto /etc echo ""hosts: files dns"" > nsswitch.conf doins nsswitch.conf die";"0"
"because you might wait forever for graceful start/stop to end. let us not overcomplicate things guys - we just need to restart this f***ing service in a way it does not fail.";"1"
"oh crapwrong build target.";"1"
"oh, sh*t... something is going wrong...";"1"
"use matchers.haslength";"0"
"this interface is goofy as hellto me. your default parser does not even have any state bad sign . if you want to spoof file paths, model the namespace from which imports are resolved and offer that as an object to the parser.";"1"
"oh, build_native_test must be doing this for you. never mind.";"0"
"i do not think so. as far as i understand, if we kill data on multipath device, it will be automatically vanished from all underlying devices.";"0"
"this should go in _validate_name_and_description";"0"
"damnalex, good catch ! yeah, it seems this spec is no longer needed and the blueprint could be specless.";"1"
"here, i am confusing, we did os.kill call first, then invoke utils.execute to issue 'kill' command again, can you help to understand here thank you.";"0"
"yes, just store by value instead, i.e. rtcuiapplicationstatusobserver* application_status_observer_;";"0"
"passing ''s'' - for skip, ''u'' - for update, or ''a'' - for abort.";"0"
"-1: these mocks should be done in '_test_copy_image_to_volume' instead of here since they have no use here.";"0"
"i wanted to specifically log that the url is malformed and not ""hide"" it, so that the admin gets contacted.";"0"
"this needs *your* sob. as i mentioned before, please use: git cherry-pick -x -s to add the cherry-pick message *and your sob*.";"0"
"if msubjecttext == null { msubjecttext = msubjecttexteditor.gettext ; } ....";"0"
"this is so dumb, butitworks. so _ _/ .";"1"
"remove useless comment";"0"
"why just redhat auditd and setools also exist for ubuntu no setroubleshoot though";"0"
"obviously, you will want to erify that a call to objects.computenode.create_inventory is called when the version is > 12.";"0"
"that is a good point about cross-tenant uniqueness, that'll be a giant pain in the asseems like pretty high acceptance of changing it to some sort of uuid, with the front runner being the stack id which has its own discussion later with regard to blocking on the empty stack create .";"1"
"nit: tast";"0"
"except for 'bvt', most pools for most boards are empty. the 'get_managed_boards ' call here will return all the boards, which means the board+pool combinations enumerated below will include many entries with no duts, meaning we'll be adding lots of no-op balancing operations. i am not sure that this is expensive, butitseems awkward. a fix would be to provide an optional pool parameter to 'get_managed_boards ' to restrict the select to a given pool.";"1"
"i do not understand this code. abs_mt_slot is the finger number, right so for a burst many single-finger touches, we'll keep overwriting slot 0 , right i thought you'd want to keep a 'last burst start time' and 'current burst count' fields and update on every touch end event.";"0"
"omg a space! shame on you!";"1"
"missed this comment.. will upload another patchset with read_far_el3";"0"
"to me it is more like karate kid 3 where terry make daniel bust up his foot kicking 2x4s.";"0"
"use oslo_serialization.jsonutils.dumps for this.";"0"
"bad rebase indeed. re-rebased.";"0"
"this is a whitelist. and should probably be removed. everything goes to the tombstone.";"0"
"can you kill this extra chars line";"0"
"what are you talking about this function has already been mocked";"0"
"for speed, i'd change the strlen check to ""**string == null""";"0"
"dialogwrapper.ok_exit_code";"0"
"big nitpick- but can you shorten the commit message to <65 charseg ""make renderer1 track applied textures assrvs."" the rest could go on a second line. seems to work with with git history viewers.";"0"
"this should not be necessary since you are using scenariotestcase as a base.";"0"
"mac_address should be nullable=false";"0"
"prefer oustring sext "".odb""";"0"
"rubbish";"1"
"remove fanout";"0"
"jesus, you are starting to make me think i have a brain tumor!";"0"
"why remove the 'execute' only this iser.py, lvm.py, linuxscsi.py, connector,py and executor.py";"0"
"the extra needs to die immediately";"0"
"should probably be _utils.py then.";"0"
"oops, i think this belongs to ""reg"", not ""clocks"".";"0"
"s/sync_timeline_destory/sync_timeline_destroy s/destory/destroy";"0"
"reflow without backslash";"0"
"it is one to many accessor, you do have fk from deploymentgraphtask";"0"
"make this another dcheck.";"0"
"sorry for maybe stupid question but are you co-author of your patch or there are two different nate johnstons";"0"
"well at this point the name is misleading so we need to change it too.";"0"
"bash is a strange beast. here's my problem: $ echo 'somevar=""blah""' > test.sh $ . ./test.sh echo fail $ echo ${somevar} $ . ./test.sh echo fail $ echo ${somevar} blah";"1"
"you can either remove these or put all these under dbg";"0"
"nit: drop the sudo_user var, instead just have a sudo_cmd array that is built up. also, checked tests and/or expanded 'em ;";"0"
"kill kill kill";"0"
"use self.vip_name instead of 'vip'";"0"
"nititis not necessary to add ""mipsel"" here because this is just a list of examples.";"0"
"i'd prefer to delete everything with delorean there: --delete '/etc/yum.repos.d/delorean*'";"0"
"done. block_length does not include null terminator.";"0"
"vnics = r.get 'vnics', you could then remove the 'if' statement in the next line";"0"
"wooohahhah. yeah, that would sucki missed the ""execution at definition"" semantics, butitmakes sense.";"1"
"good catch, stupid rebase, i hate rebase! thank you!";"0"
"should you pop stdout and stderr before calling this";"0"
"afaik, running threads are not eligible for gc. should the thread be woken and told to stop if the timer is garbage collected";"0"
"i've seen a report of this bug before, but did not have time to dig into this. this assertion must be true at all times. the kernel's xattr lookup routine assumes that the attributes are in sorted order. if this assertion is failing, then the attributes are not in sorted order, and you have silent filesystem corruption. fsck does not detect this corruption.";"0"
"did we hit all these relocations how many of them are relative";"0"
"nit-stupid-comment: i'd invert the arrow <-- only address if you agree it is clearer and if you need to respin for any reason.";"0"
"stupid question: at this point you have only filled the fifo, it is not necessarily empty yet, right will it still drain on its own after you disable the transfer bit, or do you maybe need to wait until fifolr 5:0 == 0";"0"
"blank line between bullets for consistency.";"0"
"nit: = 0.f;";"0"
"concurrentcopying* const collector_;";"0"
"it would be nice to offer 2 at least ; redis and sqlalchemy. imho this forces us to create api's that work against more than one implementation which makes the api's better ; and it avoids pitfalls later when we say oh crapa sqlalchemy implementation is not the only way to do this and then we are stuck in a corner because we made api's that are specific to sqlalchemy .";"1"
"remove host_uuid param";"0"
"why not just dx*dx + dy*dy";"0"
"i am not following this part: why is this codepath needed";"0"
"use meaningful names: table_argument_index = 1 priority_argument_index = 2 first_call_args = self.l3_app.add_flow_normal.call_args 0 self.assertequal first_call_args table_argument_index , 0 self.assertequal first_call_args priority_argument_index , 0";"0"
"should we kill the comment and get_rand_name too";"0"
"imho, i think that k8s related code should be in k8s conductor but not in a common util";"0"
"you are overwriting gcc_flags with the hardened flags";"0"
"/* is_long */ false";"0"
"boolean isframeworkattribute = myitem.getqualifiedname .contains sdkconstants.android_ns_name_prefix ; also may be better to use starts with, also there may be a lib method to do this already somewhere";"0"
"you may double check with robertocn on this. it would be great if we could have the same for this one between consistent test failure and flaky test failure.";"0"
"the quantum.agent.firewall.noopfirewalldriver is default driver, we should use it as default in ini file. also, why not use open flow to implement the fire wall for ovs bridge agent";"0"
"again, this should all be stuffed into setup-baremetal.";"0"
"oh, sorry! dummy, of course";"0"
"should these be nodebugwaitattach instead you really do not want conflicting names for your packages.";"0"
"remove useless chatter";"0"
"if you are looking for an execution thrown by clientconnectandhandshake , it would be more correct to catch an executionexception here.";"0"
"who assigns the vid/pid are they in the usb space should they be added in and retrieve/presented by lsusb";"0"
"i wonder if we can put all these dirty magic stuff into something like ""lvsd.py"" or ""edid.py""";"0"
"i should remove local_ here as it seem to be removed on the others.";"0"
"sample_rb should be tracked and destroyed. even if we reinitialize angle between each test, we usually destroy all gl objects at the end of the test. the same goes for resolve_tex";"0"
"hi steve, yan, yes, we have to fake self.network.create_network because it will be called in take_action .";"0"
"i think pep8 is freaking out about this...";"0"
"you've injected your new method and grabbed the ""delete_group"" decorators. your method needs to be above 427.";"0"
"it seems it is not an appropriate logging level. warning is for end users to get their attention. it must be printed if they asked to do something stupid or something that will stop work soon. in your case, it is a usual code. i'd prefer to see here 'info' level instead.";"0"
"these creview tags should not be here";"0"
"return' here is useless";"0"
"a boring comment about assertequal self, expected, observed... sorry! =";"0"
"dammit, i made a quick git commit -a --amend to provide this new ps... kwapi needs to add this file in .gitignore";"1"
"__del__ is a pure method, so i think there is no difference for logging in __del__ method and other methods. it is just be logged when garbage collector will reach the object.";"0"
"i still do not see how the boot loader will be written to mbr/boot sector. just creating the boot partition will definitely not help.. the same needs to cleaned up if boot mode changes from localboot to netboot. or else the node may get into issues. is specific to grub but similar approach will be applicable to other boot loaders too.";"0"
"egads! emacs-rst-aspell fail!";"0"
"tiny nit ... namespace is one word";"0"
"this should be fake.consistency_group_id.";"0"
"the fakeservice classhould be used.";"0"
"i think you need to set return_value: mock_request.return_value = fake_response";"0"
"this is useless, just put 'return_value=""foo_keypair""' at line 41";"0"
"you faked an image, but you are using a string 'image-uuid', not image.id, and please see below.";"0"
"we should call linux_net.ensure_ovs_bridge here with datapath system";"0"
"check that num_volumes is an int that is greater than 0";"0"
"please get rid of warnings by storing gmc.getinvokedexpression into a variable.";"0"
"only_router_id is useless, will delete.";"0"
"how can we reach l1747-1748 after executing l1702-1703";"0"
"super nit: space after neutronworkers.";"0"
"nit-picky, but i'd probably have lined up conf.* with 'kwargs' above. seems odd where it is";"0"
"this is a hack. i'd rather preparediamond and then swap fallthrough, taken for that particular block.";"0"
"i am pretty sure you can have exception perform a traceback logging. if so, then this is going be really ugly in the log file.";"0"
"dude, you have to give author credit to jpenick for this. : although i think the proper quote was ""fireball of suck";"1"
"c*ap";"1"
"s/a openflow/an openflow/";"0"
"how does the idp_id get filled in....i assume because it is a fk maybe add a comment saying that, since it is not particularly obvious.";"0"
"as with uiccard this implementation has race conditions, use mlock style synchronization on all public methods";"0"
"this should be a warning or info msg.";"0"
"nasty; x server defines the individual bits as long, butthe xcreatewindow param expects unsigned long mask.";"1"
"ephemeral_word_len ephemeral_prefix_len";"0"
"this is an idiom that might not be understood by people whose english is not their first language";"0"
"cinder should be manila. this is manilashell";"0"
"stupid question maybe, but is there a reason this health check is sent over the message bus";"0"
"i do not think this field needs to be string, i think 2**50 is ok, it will be dumps to string in self.post_json";"0"
"this todo is done since we decode the value so you can delete it";"0"
"this __init__ is redundant. remove.";"0"
"this never appears to be used below. do you need to include the puppet-cgit classomewhere";"0"
"use putlong instead of putstring: long then no need to convert to a string below.";"0"
"i chatted with dale - he's on board with moving lines 279 - 282 to ffmpeg_demuxer tests. can you take that on it sounds like you've created a new channel for the decoder to inform the demuxer of a config change. if so, one thing to be aware of assuming you are still using our decoder stream is that signalling kconfigchanged from the demuxer will result in a flush of the decoder. many config changes actually require a different decoder, so this makes sense. but in your case, this is probably wasteful. for videos that change size mid way through, we just signal the new size to the upper layers and avoid the heavy decoder flush.";"0"
"organize this into a bullet list by prefixing with *";"0"
"put above dump for organization";"1"
"maybe i am having a brain fart, but if d is in network l168 how would you get a keyerror instead of l167-173 could do: trimmed_network = dict k,v for k,v in network.iteritems if k not in 'status', 'subnets' nets.append trimmed_network";"1"
"i hope you make this comment after having read the q a question, otherwise i am gonna have to go back and make sure we are crystal clear: technical assessment is hard; it requires intimate knowledge of the project under scrutiny, it is difficult to agree on and imposes a policing burden that no-one is prepared to take as busy as we are. people overlap is the next best thing, assumed that we trust the technical judgment of the people we work with, having established a longstanding relationship with them. sure, people can move on, if the project hasn't reached critical massand it rots, it is fair to remove unless someone else is prepared to step in and keep it alive and well. it is just the nature of the proverbial bus effect.";"0"
"this classis now useless removed in a recent patch .";"0"
"termie would have burned me in hellbut you are too nice, so i'll update :";"1"
"please add a space in the end.";"0"
"what confuses me is why the hellwe do this std::max here originally.";"1"
"is it possible to benchmark the creation time for each of these iterators or is there an internal icu cache that will make measurements useless";"0"
"yeah, it was pretty dumb. it could be improved, but i figured the new approach is more elegant anyway.";"1"
"done. i'll leave the other 160 cases of iteritems in neutron to a future change however ;";"0"
"not sure stack.sh goes for this style, they do one life if then i think";"0"
"are not we logging a warning now with the latest patchset";"0"
"whole restore cmd should be splitted into three groups and executed one by one for the better error handling: _pre_backup run_backup _post_packup there are separated methods in base.backuprunner class";"0"
"is it better to add parentheses here qe.neutronclientexception";"0"
"if we remove this condition, is not ""router"" dashboard displayed by default configuration at now router dashboard is specific to cisco neutron plugin and it is not useful for many users. dashboards are now pluggable, butthe default configuration is still important. let me confirm. sorry if i am wrong.";"0"
"nit: as there is only one test case here, you could put this inside of test_string_too_long_method";"0"
"seriously systemd does not replace /sbin/init anyway, just a ""wtffrom a hopefully former systemd hater. ;";"1"
"what if there is no match what i meant was the worst case.";"0"
"this was not even a discriminated union ugh... clearly c programmers at work :";"0"
"do we do this in other elements the problem with this logic is that only root will have write access to /usr/lib/python*, so if you run the script as not-root, you end up having to do the heavy lifting that is cached for you in a .pyc/.pyo.";"0"
"multi line docstrings should start without a leading new line. should start with """"""weighers that weigh hosts by volume number in backends:";"0"
"discovery should be an extension api. get /os-federated/providers";"0"
"there is only a single caller of this in parseassignmentexpression , and i am having trouble understanding how this if-statement could ever execute. could this be a dcheck instead";"0"
"because i want to ensure that the comparison is done right before the cmov. this also lets the hif go dead using dce.";"0"
"whats the difference between hosts: review.o.o and hosts: !review.o.o:!git0* couldn't this break down into hosts: git0* and hosts: !git0*";"0"
"remove self from here";"0"
"here and elsewhere: the c++14 trick requires you to write ""std::enable_if_t"", with emphasis on the _titis a type alias for the ::type member of what you've written here . failing to do that will mean sfinae will silently allow invalid conversions. : aside: might not be the worst idea to static_asserts using std::is_constructible or no-compile tests for some conversions you expect to be invalid.";"0"
"useless blank";"0"
"driver_number = self._path_regex.match disk_path";"0"
"yes, you are right. useless to go through all pool_bindings.";"0"
"sorry i missed this comment earlier. i've run this several times and haven't run into that, butthat does not mean it is not an issue. maybe you could pastebin your failing puppet run";"0"
"'dict' should be removed.";"0"
"should be using _le instead of _";"0"
"if that damnstart_thread attribute goes away then this makes sense it will always be a thread , but if it can sometimes not be a thread then it does not seem like it should inherit from threading.thread, if that start_thread is going to be removed anyway then i am fine with it for now if its a short-term thing anyways.";"1"
"i think the above rule are useless";"0"
"hi.. sorry for the stupid question.. but how come we do not have a name for this initfunction like the others eg. horizon.d3piechart.init=function";"0"
"what are you passing for the usim ef_adn or the actual efid of the usim";"0"
"this comment is useless. it is my mistake.";"0"
"this blank line should be eliminated.";"0"
"sure. however this slot can not be arbitrarily reused since the key enums must be sequential";"0"
"the hardcoded value it is checking for threw me off took me a second to figure out... instead, extend fakehttpconnection, override request , and always return your malformed body. then put your test method into a new unittest.testcase that sets up self.middleware.http_client_classas your extended fakehttpconnection class";"0"
"must be /dev/.ssh/ssh_host_key to match sshd_config";"0"
"if we do not exchange ice candidates, is not remaining ""new"" forever correct i would expect all transports to be ""new""";"0"
"kvm_pid_path 'kvm.pid'";"0"
"kill this line altogether once you make the return below a tail call";"0"
"yes as follow up patch i believe, this is devtest.sh default btw. leaving these out, stack-create fails on timeout, so we should start with filling a bug to tripleo first.";"0"
"kill this, entirely";"0"
"this is nonsense. just say ""ldap"", also below, just use the later expression";"0"
"it is still not clear to me that the instance value here is going to be processed by the oslo logging code and the uuid will be put into the log message. i tried doing something like this in a python shellwith a stdout handler butitwas not working correctly. looking at the oslo logging code was not any clearer, the process method there is looking for 'instance' and 'instance_uuid' in kwargs. i am admittedly a n00b when it comes to the weird and wacky world of logging.";"1"
"i think you canuse the two-param version of assertequals if the tolerance is zero.";"0"
".. short support_semi_mt; // bool short is_button_pad; // bool";"0"
"done. greg and rob had a lot of discussion on whether it should be null terminator or string terminator. let us use ""null string terminator"" something suggested by rob here to make everyone happy.";"0"
"#include'd. textencoding is in wtfnot in blink";"1"
"devstack has a install_package function which should be used instead of directly calling apt-get";"0"
"i think die is appropriate here";"0"
"can we move the macro to platform/wtfassertions.h";"0"
"you should select lvm over iscsi option.";"0"
"and here, you could use ""ps -ewlo pid,lwp,comm""";"0"
"this error would go away per above...";"0"
"useless spaces";"0"
"ok, let us give this sample_default idea a shot - i319d128a0a88b1197d8e2be105681f2b56240439";"0"
"useless var";"0"
"this will be killed in dependency once you rebase.";"0"
"meh... indeed, sorry silly comment";"0"
"ahh damneclipse...";"1"
"yeah i figured out what you were doing see above . i wouldn't consider this common, this seems like a nasty way to do it imho. opts n .value 0x1; is cleaner and only requires 1 instruction versus 2 instructions.";"0"
"you are totally right, that was dumb of me not to catch, fixed.";"0"
"yeah, you are right. :/ i dug into this a bit, and came up with a workaround for the loader lock being held using ntcreatethreadex with the ""do not send attach notifications"" flag . i am not sure if is getting too ugly or not: wdy'allt";"1"
"when do you get a name == null probably add a comment about that.";"0"
"i hate the comment in the middle of a classinstantiation here, fyi :";"1"
"bgp_speaker_id should be bgpspeakernetworkbinding.bgp_speaker_id and network_id should bgpspeakernetworkbinding.network_id";"0"
"are we still recommending thatitis pretty ugly. backslash is easier to read imho.";"1"
"probably a dumb question but what is the 1000000 for";"0"
"yes, that is true. i only glanced at the first search result for posix mount when checking the original submission, and they used mount point for the name of the first parameter. my stupidity. the problem is that this is not unit-testable because of the restrictions of the cpuinfo source.";"0"
"i think the way it is is marginally more efficient, because this check is not needed in case shitis above 31.";"1"
"that is awfully pedantic. it probably is less performant than the simple regex. i'll do it anyway, but your anti-perl bias is kind of silly, imo.";"1"
"self.zonemanager_lookup_service = fczm_utils.create_lookup_service";"0"
"mox should be down a section";"0"
"messages here are used internally by stdlib, because skylark is dumb and i wanted structured values :";"1"
"should not this block be in an extend_start.sh";"0"
"lame. i will clean this up.";"1"
"yeah gross";"0"
"should there be either of the arguments: -u --force-reinstall";"0"
"compute and assign os.path.join upstream_pkgdir... to a var, rather than redundancies here. sounds stupid/minor, but having it in one spot makes it harder to miss updating it ;";"1"
"self.f should be self.test_file";"0"
"i do not quite get why we let the provisional navigation to happen. what if we had one prior to executing js url should we clear that one at least";"0"
"you are passing up probably your only opportunity to use the commit message ""kill kill"".";"0"
"# noqa should be removed.";"0"
"if we've got nothing, die nothing good will happen";"0"
"i am not sure about this. i think we need to follow the existing style. most of factory tests, includiung factory_touchpad here, have imports on separate lines. maybe tammo can confirm";"0"
"harness.py #231 calls this method indirectly. cage.service_object 'api-rule' .change_rule parsed_rule, {'policy_id': rule.policy_name}";"0"
"yeah this is nice. it will have less traffic returned from neutron consider params = {'tenant_id': context.project_id, 'fields': 'id' } that will save you a few extra cycles once again i think that this code should be dropped as it does not really solve the issue when there is really a race";"0"
"this seems rather dangerous to me actually. if we start expecting that the display_name that we give to the instance is in dns, and we do not fail the operation if we can not satisfy that, then users have the potential to do insecure things without realizing. for example: nova boot foo ssh -u myuser foo.provider.com ### accept host key y ssh password for : ***** permission denied ssh password for : ***** and thus i've just given my password to someone who guessed the hostname that i wanted. unless we expose the actual hostname back to the nova user somehow, we can not really blame someone for committing the above offense, imho, which is pretty bad.";"0"
"one possible way to find the nova network name is to execute the 'nova list' command. the output will list all openstack instances for the tenant, including nework information. look for network_name=ip_address";"0"
"can we also clarify what exactly we are fixing";"0"
"likely a stupid concern on my part, but since this is accessing the porttree dbapi... we are positive this will not affect remote prebuilts that haven't yet been downloaded";"0"
"clean up the useless whitespace in here";"0"
"mtf=_mtf...";"0"
"this is a bad idea, because you'll end up having to deal with escaping later. why do not you just fill a std::vector<std::string> here and passit through";"0"
"i think updating killprocessgroup right now is ok: * do not take a signal hardcode sigkill * usie kill directly * handle the pid_==0 check up top * call updatepid 0 directly then if/when kill gets refactored to be sane, this could be cut over to that.";"0"
"i did not want to clash with an existing field. member seems to be used already in the unit tests. i intentionally went as ugly as possible.";"1"
"we can get rid of this function with a simple change to _assert_onlink_subnet_routes.";"0"
"done, called dalvik_vm_lib i also then removed the adding in each runtime_lib*_default.mk to product_property_overrides and just did it in one place in product_config.mk like this: product_property_overrides += persist.sys.dalvik.vm.lib=$ dalvik_vm_lib that seems better right";"0"
"dumb question... this is pointing to the old rev since this is xcode's version, and we can not go beyond what is installed";"0"
"done. remove pid = none assignment when respawn too fast.";"0"
"oops, no. i've had this in my local tree for ages to cut down on log spam from the broken daemon...";"0"
"do we have anything like plugins depending on the corosync_nodes if so, i shall do this removal via the deprecation";"0"
"this is required in order to execute wsgi.py";"0"
"that is just you passing foo unquoted";"0"
"nit: we should kill this bit now:";"0"
"ill remove this from the review, but we do need to put those in the conf file so it stops being modified good catch, and yes i hate that.";"1"
"i know, that oozie_file is unrelated addition, butitpresents in command for building ubuntu cloud image.";"0"
"oh i totally missed that this was in a static method of course my bad.";"0"
"fyi: 'an hardcoded' should be 'a hardcoded'.";"0"
"so i may still be being dumb, but.... let us say you have created a project with a parent_id. you then call update_project to update the description. it should be possible that the body is just i.e. you should only have to include the fields you are updating : { 'description': 'my text' } however, with the code as written, that wouldn't work, since the code would claim you are changing the parent_id. if the code, however, was written like this: if 'parent_id' in tenant and tenant.get 'parent_id' != parent_id: raise exception... then such an update would work, it would also ensure that if some one tried to explicitly set the parent_id to none for a project that already had a parent_id, e.g. { 'parent_id': none } ..then this would fail as required.";"0"
".endswith is dangerous ... you probably want os.path.basename instead";"0"
"er, to clarify: with or without this change, ssl_renegotiate in boringssl always failed. boringssl can not initiate renego, only acceptitas a client. which means this line is not reachable in boringssl ports, so it does not actually matter that ssl_set_state is, strictly speaking, a no-op in boringssl. reaching into the ssl* and messing with its state machine is kind of insane. openssl's renego api is terrible. given that, i am not sure what the test is doing when compiled against boringssl since it apparently does not notice. butthis change should not make things worse.";"1"
"current_action_ != nullptr";"0"
"damned!!! removed.";"1"
"damnit. not just that, but in every comment i've made on this review in the last 10 minutes, i've written apis.";"1"
"i would've just made this a separate classfor maximal call-site simplicity, although it honestly does not bother me too much the way it is because shadowframe is already a mess. classlockcounttracker { std::unique_ptr<lockcountdata> data_; public: void begintracking ; void endtracking ; void trackmonitorenter ; void trackmonitorexit ; bool checkmonitorsunheldorthrow ; } struct shadowframe { .... lockcounttracker lock_count_tracker_; }";"0"
"thanks for sounding the stupid mistake alarm *grin* fixed. but also supporting lower+upper now.";"0"
"huh, so invalidbdm and cinderconnectionfailed are not handled anywhere in here either not something to handle in this change, but seems like a separate fix.";"0"
"at this point, you may have removed this pid from both watched_processes_ and pending_termination_processes_, but have also failed to send it a signal. is it a success case if the process is already dead";"0"
"kill this now and actually, that means you can remove the entire src_compile .";"0"
"> =n is not valid syntax ... unless our custom scripts are checking for that, but i do not think they are but apparently it is doing enough to block matthias... > stop looking closely at code! that is how you find bugs! dear me, i've forgotten my manners! i think i've lost my rubber stamp somewhere.";"0"
"this function's naming is ugly, pls see pep8 on function names. i'd rather use lambda, anyway";"1"
"useless i think.";"0"
"can you please get rid of the white spaces";"0"
"let us get rid of mock here.";"0"
"remove savanna please here by climate :";"0"
"move the duplicated args into a local array local grub_args= -p /efi/boot part_gpt fat ext2 hfs hfsplus normal boot chain configfile linux sudo grub2-mkimage -o x86_64-efi -o ""${flags_to}/efi/boot/bootx64.efi"" ""${grub_args }""";"0"
"die $lineno ""ramdisk type ...""";"0"
"nit: put admin in backticks";"0"
"boardtype=cv2....";"0"
"ugh, the fart just got bigger :p we really should, after ec lands, understand why there is this special case for len files == 1";"1"
"these paren make no sense. delete them";"0"
"""killed"" is premature. i think you mean ""killing"".";"0"
"bool bsingleselection = nselectioncount == 1 or something along that line";"0"
"i am ignorant. can you share what is that about";"0"
"hidden delete seems very tricky, should not we just mark new slave as failed/error if it gets corrupted";"0"
"commented out code should be removed";"0"
"strange that a resourceormetaimporter.doimport throws a resourcereadingexception.";"0"
"all log_translation are the same except a middle part :";"0"
"it makes more sense to use trans rather than blocktrans";"0"
"since this is going to consume these std::strings, they probably should not be const";"0"
"-e debian_frontend=noninteractive should not be executed for fedora";"0"
"i'll remove it, butitwas definitely to fix a nil pointer resolve. to find these, i've been thinking we could take a long, working api file and have a test inject random crapand random locations and see if it still parses without crashing.";"1"
"this subshellis not correct. but could you write this simpler as: -d ""/proc/${pid}""";"0"
"do not need to look for a breakpoint if m == null: we can not have set breakpoint in this case.";"0"
"use gradlegroovyfile.getnamedargumentvalues.";"0"
"yeah, it is illegal to call the child.boundsinscreen method here or assume members of axchildren are axplatformnodecocoa*. i think my suggestion did not change any logic if the members _are_ all axplatformnodecocoa, butitwill correctly handle members of axchildren that are not.";"0"
"the purpose of debounce is not to wakeup chipset task when interrupt is not valid since chipset task produces messages ""power state s0ix = 0x1d..."" and this message prevents idles task from entering heavy sleep. need at least 1 min quiet/no uart activity . ""_power_handle_state"" is called only when chipset tast wakes up. to move s0 interrupt and its deferred call to skylake.c, ""power_update_signal "" should be not 'static' inside common.c and defined in header file. do you think if this change is ok to move s0 interrupt to skyale";"0"
"np - i will +2 assoon as you fix the problem with py26 tests. ps: i know we should not be serious, and indeed i +1 the patch : still, consider that several users will tell you an utility is rubbish if the default options do not satisfy their needs!";"1"
"this also seems useless";"0"
"use some less silly variable name that is longer than 1 character and that matches some naming conventions ... abitmap for example";"0"
"same question here. with your change, cros_run_vm_update will use flags_ssh_private_key as the value for '--private_key' for image_to_live.sh.";"0"
"use mphonebase.setsystemproperty instead. do not import systemproperties";"0"
"add a $ before the command to show it is run in a shell";"0"
"here we have one problem. if you want to use utils.print_list you need to have some object with some fields. because these fields will be used to eject a data from the object. here we have only the list of strings. so this a little hack, because if you have a formatter the data will be ejected by the different way.";"0"
"new tab is activated by default, and you do not need it to be active in this case regardless";"0"
"is not there a way to do this in python this will not work on windows. maybe just call ""adb devices"" anyway and include the *actual* failure in the exception you throw andrewhsieh's scripts were always a pain in the assguessing what they thought went wrong and not even providing the evidence they'd used to make that guess.";"1"
"its true. i suck";"1"
"totally agree with it being silly to force host aggregates being created where it makes no sense to do that.";"1"
"what is the current behaviour you mean it requires you to delete all the project underneath it first that would sucka bit if i had 100 projects one level down!";"1"
"you've already included these keylayouts in the device git.";"0"
"nit: consider using blockquotes for notes: > blah blah blah > more blah";"0"
"should this and other elements use getwallpaperdarkencolor instead of black";"0"
"server_name = share_server.get 'backend_details', {} .get 'share_server_name'";"0"
"aww crap. yeah, that is bad. did you find a concrete example where we are trying to read into an unaligned spi buffer";"1"
"i see. suggest revising the comment to ""reportbadmessage will kill the renderer process, but mojo complains if the callback is not run. just run it with nonsense arguments.""";"0"
"ahh good point, maybe we should kill the renderer here. we could probably do it with content::bad_message::receivedbadmessage since we have the render process id. i am ok to land this as-is because i think it is safer to merge though. killing the renderer in a follow-up might be a good idea.";"0"
"does not openstack poopoo on using multiple positional substitutions i personally find that rule completely silly, but i got called on it previously.";"0"
"i annoyingly spent a bunch of time figuring out why my api tests were not working at first and it turned out to be missing hyphens in a tenant id so i put this here. it makes sense though that a tenant id might not be a uuid so i can remove this.";"0"
"turns out that this does not actually work unless you putitbefore the unconditional line. damnyou kconfig...! maybe this was the reason this patch did not work for you, furquan";"1"
"as ugly as it is, the 'new' standard for commit messages requires too strong of a word this bit of stutter: android: android: recommended.cfg: setup verity root for a/b";"0"
"please call this image_api instead of glance_api...";"0"
"def __init__ self, datastore_manager : self.datastore_manager= datastore_manager";"0"
"use contente to return an emptyiterator somewhere";"0"
"it is an unfortunate side-effect of the module member of moduleenv being constithink that member is worth const-ing, to communicate clearly that consumers of moduleenvs that the wasmmodule is not mutable by them.";"0"
"exposing impl classnames in this code is really bad practice. the 'network' object should contain all the data the vif drivers need. if the 'bridge_interface' data is wrong, we should correctitat the place where it is populated, not ignore it in the vif driver.";"0"
"nit: may be call it service_unavailable. it is verbose makes it clear that the service is unavailable, not necessarily the preview . it is also consistent with the names above where http_suffix response code is logged assuffix.";"0"
"really that is silly. i see double quotes used in hacking, butitis not called out as a requirementitis just used that way in the example.";"1"
"i have taken a stab at populating config 'sign_types' in chromeos_config.py.";"0"
"are we missing a step should not ./scripts/bootstrap-aio.sh be run first";"0"
"i would prefer to inherit this classand create one more class classfakeclientstestcase clienttestcase : self.use_fake_clients = true so we will not make nasty typos..";"1"
"this f should be removed.";"0"
"maybe we should do something to make this backwards compatible instead i use run_tests.sh so it does not directly affect me.";"0"
"i am going to politely disagree. these are not different scenarios of the same testitis an entirely different test case requiring different assertions and different setup. the code looks similar because of all the damnmocking required due to the lack of a keystone test double.";"1"
"you culd remove the 2nd part of this comment, only 1st part is relevant, the content does not matter.";"0"
"it is kind of ugly to be digging into mutex internals...";"1"
"we should return a boolean in this function, and propagate the error into omapscreeninit.";"0"
"this backslash is unnecessary and should be removed.";"0"
"we are in blink code here, so we should be using wtfmutex instead here.";"0"
"shoot, this should be ""already_ran"". doh!";"1"
"service_catalog is a httpclient property so you can make it simpler by changing self.auth_ref.service_catalog.region_name to just self.service_catalog.region_name";"0"
"i would prefer if we did not use 'sucks what about 'kinda sucks-> 'is not helpful'";"1"
"100 columns, bummer";"1"
"lazy fingers vote for db_context";"0"
"ugly but smart :-";"1"
"togenericstring did not have any test, so even stupid mistakes like this one would passthe tests. added a test now.";"0"
"note: this exec is not idempotent and it will execute dbsync for each puppet run on the undercloud. is it expected";"0"
"oslo.concurrency = oslo_concurrency";"0"
"i'd rather see this check in hsi2c_write and hsi2c_read so they can do something sensible with it. it seems like they'd need to be cognizant of it. for a write of 0 bytes, will not you end up with a timeout kinda sucksthatitdoes not support len of 0. : i suppose worst case we could switch to manual mode for this, but not worth doing now.";"1"
"in the next cl linux_mtd_probe will assign 'flash->wp', so this can not just be a garbage pointer.";"0"
"what about vb2_get_keyblock it is not restricted to vblock.";"0"
"staticmethod with a 'self' param";"0"
"iqn = self.test_vol";"0"
"this docstring is useless.";"0"
"should we just go with graph->getblocks 3 it seems silly to create methods like this one, or getpredecessor/getsuccessor.";"0"
"oh, yes, it was inconsistent already. i just copy pasted the previous code. silly me.";"0"
"!!parent_ is a typical shortform to ""cast to bool""";"0"
"damnwhite space!";"1"
"sorry for the ignorance - is it at all possible to run mcollective at all with a non-root account";"0"
"this fuction name confuses me. it does not 'get' anything does it";"0"
"initialize binder_fd_ and max_threads_ here so they do not start out with garbage";"0"
"i propose to change the sentence to: if you do not want to install the ... metapackage, you can run the following script to enable remote root access:";"0"
"i know this is just a re-based change for the r14 branch, so ignore the following comment if you prefer to keep the patch similar to the one we use for the tot . i have changed my mind. it makes sense to just make this a static const member local to the sanitize function since that is the only place which uses it. you could make this static to this file too but given the large number of these constants, i prefer that they were defined in the methods which inturn use them.";"0"
"yeah silly multi-cursor editor";"0"
"could you remove a white space.";"0"
"can sfc have a colon like everybody else";"0"
"would be useful to have a debug message saying why authorization failed.";"0"
"this ""if"" block is now useless because the pointers will never be nullptr";"0"
"please wrap at 70 chars - git review should have whined at you.";"0"
"nothing about this code is there a better way to possibly extract arguments from a dict everything i found on stack-overflow looked uglier than this.";"0"
"you have some extra whitespaces throughout here";"0"
"cosmetic nit: _ ""failed ..."" % {'pid'} avoid using ' '";"0"
"if it is for sure an error related to trying to delete an nonexistent route, the log could say so";"0"
"ad.selinux_audit_data = sad;";"0"
"getdefaultrelocationmodel and getforcedpicmodel are replaced by ispicdefault and ispicdefaultforced.";"0"
"nit: 'bool has_deleted_origins = false;' as we only use this as a boolean.";"0"
"yeah, let us kill it, or still declare it with an underscore before it to denote thatitis a private var and then do android_mnc_build_targets = _android_common_build_targets + { ... } and then do not reference android_common_build_targets in any of the other files";"0"
"how about just: field.is_focusable = !is_from_non_focusable_form;";"0"
"please nuke. we can add it if/when needed.";"1"
"""swift's code on the proxy nodes for evil""";"1"
"hbasicblock**";"0"
"i hate these variables, fwiw.";"1"
"i suckat naming things on the first passuri_identifiers is better.";"1"
"should probably be ""if timeout <= 0 !bridge.hasinitialdevicelist """;"0"
"not worth itithink . this is just a dcheck. the caller also dchecks the url before adding the tab helper so this is really useless .";"0"
"i think that you should inherit probably from this classdropdownmenuregion";"0"
"oh, sorry, i did not noticed you use the hex value, i am so stupid :";"0"
"why not changing is_deadlock implementation indeed is_deadlock returns false for postgres ha deadlocks.";"0"
"it is a pity you couldn't use embeddedtestserverrule. would it be worth creating something like a embeddedhttpstestserverrule";"0"
"this was mainly because the tests are now trying to see if the release fails when the lock is broken, which the ghetto get/delete changed here makes work although it really is a shittyguarantee of this, because its client-side and non-atomic .";"1"
"oh, this seems some sort of dummy driver";"0"
"maybe ""workaround"" but ""crappyis not appropriate imho.";"1"
"we need to kill the comment too.";"0"
"this space needs to be removed.";"0"
"is_active=false ... seems, you forgot to remove this.";"0"
"nit: this comment is rather silly now. please remove.";"0"
"right, damnyeah it is really confusing. and seem that 1 is really pointing to a spec that have been moved around butthe html still there for some reason. 1";"1"
"changedany $.ironic, $.network_metadata.vips, $.public_ssl, $.get 'use_ssl' , $.get 'region', 'regionone'";"0"
"do you need to run the kill .sh script here to kill apache might be better to kill apache before starting the netcat above.";"0"
"it should be 327ee5fde2c7 not 4eba2f05c2f4";"0"
"maybe say _mock_ssh_channel_files";"0"
"as above, we should be able to eliminate d_obj.";"0"
"can this ever return none for the decryptor if so then we will crapout on the return statement below.";"1"
"sdkconstants.tag_item, attr_name, attr_type";"0"
"useless too";"0"
"its in platform2_preinstall.sh look at the other cl";"0"
"you do not need this block to be in the else since your if will jump to fail.";"0"
"it would be goof to use base-indent margin * 2 here.";"1"
"sorry -- i meant documenting this in service-api.txt since that should be more convenient for chrome folks that our commit messages. :";"0"
"that was a booboo. i've removed and added back _le to match other driver msgs. still looking at updating the sopapierror msg";"1"
"remove noop-jobs, you now have jobs to run...";"0"
"it works in trunk and diablo/stable. is there a reason you are testing against the rcb build i am not aware of that being a publicly available build or that we need to be testing againstit";"0"
"#!/bin/bash or even better do not use bashisms";"0"
"me neither, stupid mistake. thanks for kindly reviewing. will rebase to last master.";"0"
"haaah... looks ugly. although i understand there are problems with wsme again . can not we use actions classhere";"1"
"trailing whitespaces should be removed";"0"
"how about doing this when dealing with the stringfactory you would then only push new instance of strings.";"0"
"resourcefoldermanager.exploded_aar";"0"
"bad rebase on my part. adding it back in";"0"
"ha, ocd rears its ugly head. :- will fix.";"1"
"yeah, using subprocess.popen seems fragile because if the ssh connection drops your done. you could run it in background and let the program printits pid. later you can kill the program. that would be more robust to network failures.";"0"
"todo: do not include the entire fuckingworld!";"1"
"btw, the ids starting with i... are change-ids you see in commit messages, identifiers of changes within gerrit. the ""real"" git commit ids are the ones you get when browsing git log, prefixed with ""commit ..."".";"0"
"leading spaces should be removed";"0"
"i missed this, huh crap";"1"
"builder.go does not care about where the libraries came from, it only cares about things that need to be treated differently. combine prebuiltstaticlibs into staticlibs before calling transformobjtodynamicbinary";"0"
"those mocks were the reason the regression happened in the first place. we needed to test that they are actually doing the right thing, which we now do by looking at the mock array.";"0"
"nit: capitalize and remove the white space.";"0"
"assert_* also checks for a primary board corresponding to the variant you requested. think the get should stay simple and stupid, and the choose should error if a broken overlay is chosen.";"0"
"destroy";"0"
"use assertequal instead of assertequals";"0"
"message is useless. only use message if you have dynamic data to print. if you thing the assert statement is not self-documented, just put a comment.";"0"
"lets return a 404 instead of an empty body.";"0"
"h101 use todo name here and below";"0"
"why do we put ostf execution into wait just execute it";"0"
"since i am a moronsometimes, i did not even think about the active node and spare node pool. so i created the active node which serves as a good table to hold the loadbalancer to vm mapping, and a spare node table which of course has no loadbalancer mapping.";"1"
"should we kill as well mysqld_safe see";"0"
"but you need a way to indicate whether the data is valid or not and that requires either a returning a bool and passing in a pointer since passing a non-const reference is against google style or returning a copy and passing in a pointer to a bool something which was explicitly rejected in a much earlier code review . i do not honestly know of a third option.";"0"
"this is no smaller than micronit. /me is a stickler about typos";"0"
"it was used prior to a rebase. dumped!";"0"
"oh, and please drop the silly sal_call from those inline functions";"1"
"telling golint to shut up :";"1"
"this mocks out the driver's conf object.. what you want here is: self.mock_object nexenta_nas.conf, '_check_required_opts'";"0"
"dam, stupid merge conflict.";"1"
"kill the quotes";"0"
"done. to be honestithink a 'wetrun' flag is better, it reduces the risk of screwing up the dryrun flag and accidentally causing mutations.";"1"
"if someone runs a ""master-paladin"" tryjob, would this end up killing all paladin slaves";"0"
"iirc -u is useful if we want to get output promptly, especially on programs like goofy.py or tools that open/generates logs. i do not remember exactly what would break if we do not have -u though.";"0"
"for what purpose we want that fk";"0"
"nit: should this be a docstring do private methods have docstrings";"0"
"i find the internal ids quite ugly. it was just a quick groovy hack at first... feel free to find something better. maybe they should just be integers after all";"0"
"gonna do this if not probably good time to kill the todo";"0"
"actually, i think it is useless. as far as i remember, '.create ' will execute 'flush ' for you.";"0"
"i think the above two are silly.";"1"
"ah, i'd forgotten about the 'disabled by file' part of the middlware! i guess the difference between a 'graceful shutdown' and using the middleware is that one is event driven where the other one requires you to pick a 'long time' and assume that after that there are no requests being handled. which would work ... butthe code to implement the graceful shutdown could be pretty easy potentially just a few lines of code , so might be worth thinking about. it is probably just a matter of changing these functions in wsgi.py: def wait_on_children self : while self.running: try: pid, status = os.wait if os.wifexited status or os.wifsignaled status : self._remove_children pid self._verify_and_respawn_children pid, status except oserror as err: if err.errno not in errno.eintr, errno.echild : raise except keyboardinterrupt: log.info _li 'caught keyboard interrupt. exiting.' break except exception.sighupinterrupt: self.reload continue eventlet.greenio.shutdown_safe self.sock self.sock.close log.debug 'exited' def run_child self : def child_hup *args : """"""shuts down child processes, existing requests are handled."""""" signal.signal signal.sighup, signal.sig_ign eventlet.wsgi.is_accepting = false self.sock.close pid = os.fork if pid == 0: signal.signal signal.sighup, child_hup signal.signal signal.sigterm, signal.sig_dfl to look like this: def wait_on_children self : while self.running: try: pid, status = os.wait if os.wifexited status or os.wifsignaled status : self._remove_children pid self._verify_and_respawn_children pid, status except oserror as err: if err.errno not in errno.eintr, errno.echild : raise except keyboardinterrupt: log.info _li 'caught keyboard interrupt. exiting.' break except exception.sighupinterrupt: self.reload continue except exception.sigstopinterrupt: <<< self.graceful_shutdown <<< continue <<< eventlet.greenio.shutdown_safe self.sock self.sock.close log.debug 'exited' def run_child self : def child_hup *args : """"""shuts down child processes, existing requests are handled."""""" signal.signal signal.sighup, signal.sig_ign eventlet.wsgi.is_accepting = false self.sock.close def child_stop *args : <<< """"""shuts down child processes, existing requests are handled."""""" <<< signal.signal signal.sigstop, signal.sig_ign <<< eventlet.wsgi.is_accepting = false <<< self.sock.close <<< pid = os.fork if pid == 0: signal.signal signal.sighup, child_hup signal.signal signal.sigstop, child_stop <<< signal.signal signal.sigterm, signal.sig_dfl and add this one line function: def graceful_shutdown self : """""" send signal to child processes to handle current requests then exit """""" os.killpg self.pgid, signal.sigstop i haven't tested the above, i think it might be sufficient because the existing code will do the accounting of the number of children and exit when self.children hits zero, butitd need testing. you'd do ""kill -s stop <glance-parent-process-pid>""";"0"
"damn! those little devils still slip into the code!!!";"1"
"done. ah thieu , you will not let me be lazy, will you";"0"
"small dumb nit 2: do not need the global statement here. i think you already changed this butitgot lost in a rebase/merge.";"0"
"note that this dirty bit is still set, to properly handle viewport-constrained objects.";"0"
"should call die like: cros_build_lib.die 'exiting...'";"0"
"insecure hash_algorithms missing here";"0"
"i may sound stupid asking this. why we do not have ""metavar='<direct macvtap normal baremetal>'"" here as well.";"0"
"silly nit, but why use a variable for the message here at all why not just assign the string to reason";"1"
"crap yep, should be; does not change the test results, just is annoying.";"1"
"either the usb_dev_arm above is unneeded, or you've got an attributeerror that'll go boom here for trying to get usb_dev_arm off self";"0"
"also, ""reaching out to"". darn english. ;";"1"
"indent your tests please, else it is a minor bitchreading it; doing so also in conjunction with line continuation makes it easier for people to tell what is individual tests, vs all part of the same command.";"1"
"lol, yeah, that is some pretty stupid code i have.";"0"
"nit: the swap from single quotes at l41 to double here is killing my ocd...";"0"
"== nullptr";"0"
"this is silly duplication. perhaps you guys can figure out a way to fix mkext2img to not need this sillyness i suggested that to kevin wang originally a year ago when we discussed this last time. in fact, his identical patch is still uploaded for this project :";"0"
"useless trailing '-'. rand_name already adds a '-'.";"0"
"do not really see any point in this attribute. just kill it";"0"
"this is useless as these types already have keystone service autorequire. for example, keystone_endpoint: 35 autorequire :service do 36 'keystone' 37 end 38";"0"
"i was going with the convention used in pymongo: what do you think";"0"
"this is translatable. i'd write it as ""* "" + constant.";"0"
"i suggest to remove all _clients methods and use statement 'getattr self.clients, self.__class.__name__.lower '";"0"
"this looks like useless.";"0"
"heh, well just another thing i'll have to sed to python2 on my machine dumb archlinux";"0"
"still these 2 useless spaces";"0"
"jackapitoolchainbase toolchain = abstracttesttools.getcandidatetoolchain jackapitoolchainbase.class, since it checks exception throwing.";"0"
"linuxbri*d*ge";"0"
"_ports_synchronized = _common_utils.create_synchronized_decorator 'n-hv-driver-'";"0"
"good catch mike. it was one of those silly copy-paste errors :";"0"
"damnit i meant to come back to this and fix it.";"1"
"nit: this indentation is ugly. at least line it up with the word 'operator' as in the old version.";"1"
"why not std::pair this may be a stupid suggestion as i have no idea what the c++ coding style guideline is for chromium.";"0"
"this is bad, interopgrabbag should be used by the filters only, but here you read it in core. that is a no-go.";"0"
"most of those steps would just be duplicating what the poll_for_condition function provides. i'll use that function.";"0"
"mlayoutdone should be set to false to call this multiple times.";"0"
"silly nit but ""knavigate""";"0"
"macros are evil. period. your solution works, except that you used the wrong naming convention. method names need to be camelcased except for accessors";"1"
"hard-coding board names is a bad idea and from what i know, discourage by the infra team. see the below from assign_stable_images.py: # n.b. hardcoded board names are evil!!! this blacklist uses hardcoded # names because it is meant to define a list of legacies that will shrivel # and die over time. # # do not add to this list. if there is a new use case that requires # extending the blacklist concept, you should find a maintainable # solution that deletes this code.";"0"
"you've imported randint, so no need for random.randint.";"0"
"what does that mean again self.bootloader_params = """" self.bootloader_params = bootloader_params";"0"
"sk_alphaopaque butthe default fill color is opaque black, this is a no-op so you should not need this";"0"
"throwing std::bad_alloc is new behavior so some of the old check's are out of date.";"0"
"i thought ilo driver does not passauthtoken any more therefore should remove authtoken here.";"0"
"if we wouldn't use _no_db_model than we will not be able to search for none model. it might be a yagni at this point but i wanted to make it generic.";"0"
"looks right to me... int futex int *uaddr, int op, int val, const struct timespec *timeout, int *uaddr2, int val3 ; __nr_futex, ftx, op, value, timeout, null, bitset uaddr=ftx op=op val=value timeout=timeout uaddr2=null val3=bitset";"0"
"nit: get rid of useless return value";"0"
"i think that hadoop_env_confs should be applied after user_env_confs";"0"
"yeah, i would probably vote with the phase of the moon, so i am putting this down as a minor nit. if we putitin third party, we will have to go and move it at some point. suckseither way.";"1"
"should the script abort";"0"
"the behavior is crap";"1"
"i see, you moved the datastore code *into* esx.. i guess i had it backwards.";"0"
"http_client.not_acceptable";"0"
"darn, another typo to fix later ;";"1"
"use this.mhandler.removecallbacksandmessages null instead.";"0"
"have to admit, i do not understand the check here to disable shift :-/ maybe if you could explain the rationale in more detail for me who is probably just being stupid";"0"
"using the default aosp applications i am seeing the following logs. i talked to nick and i am going to split the auditallows across the specific domains to make it very clear which app_domains use which services. untrusted app: drmserver_service mediaserver_service nfc_service surfaceflinger_service system_server_service platform_app mediaserver_service radio_service surfaceflinger_service system_server_service system_app: nfc_service surfaceflinger_service system_server_service";"0"
"same here, you copied in an old version of a file and nuked this.";"0"
"cause it is more complicated to manage that, in this is slow-path code it was a map, then i went with the lighter-weight vector . admittedly naming sucksi'll make it lockcountdata.";"1"
"these regexes are ridiculous. if we really _have_ to use them vs just using a url parser , can we extract them as a variable and put some comments giving some examples of what is acceptable please";"1"
"the model and view binder for this mvc component are very small. maybe mvc is overkill for this and all of this can be combined into one class";"0"
"nit: place public methods before private methods instead of interspersing them";"0"
"this is really ugly. is there a bug filed for this somewhere so we can track the progress of fixing this in kilo";"1"
"yuckand a half. i need to start a petition to ban this mock decorator nonsense.";"1"
"sorry the dumb question... what is oyaml";"0"
"this check is useless.";"0"
"wdyt about this idea shimazu kinuko";"0"
"nit: store the id3d11device locally instead of grabbing it 3 times.";"0"
"here, it should probably be: self.backend1_name == self.backend2_name";"0"
"is it possible that the current_network will not have a key that matches if so, then indexerror.";"0"
"network types like type_vxlan etc have been left behind since i did not see them being used in *aasservices";"0"
"sorry to be a pita. i wonder if this wouldn't be better by getting rid of the large if-then-else and having: arch_variants_cflags := -mcpu=$ target_$ combo... local_arch_arm_has_lpae := $ filter cortex-a15 krait denver cortex-a7 cortex-a53 cortex-a53.57,$ target_$ combo... ifneq ,$local_arch_arm_has_lpae # .... arch_variant_cflags += -d__arm_feature_lpae=1 endif local_arch_arm_has_lpae := local_arch_arm_is_non_buggy_cortex_a8 = $ filter cortex-a15 krait denver cortex-a7 cortex-a53 cortex-a53.57,$ target_$ combo... ifneq ,$local_arch_arm_is_non_buggy_cortex_a8 arch_variant_ldflags := -wl,--no-fix-cortex-a8 else arch_variant_ldflags := -wl,--fix-cortex-a8 endif local_arch_arm_is_non_buggy_cortex_a8 := the code is something of a spaghetti mess currently not aided by the proposed change and the end result is that there is bit rot in areas like -mcpu.";"0"
"it is ok for verification, postgresql dump always have 'complete' comment at the end of dump file. also we check exit code of pg_dumpall.";"0"
"we should fix time_t and off_t and sigset_t and any others we fuckedup in the 32-bit abis for 64-bit.";"1"
"same here, i wonder if this value should be computed by puppet facter.";"0"
"if you are trying to set this to false and you succeed at changing the setting but not at killing the daemon; should you fail the update_engine will not share new files nor try to consume them; butthe daemon will still be running until next reboot.";"0"
"because i want to move munmap operation out of the race region of g_thread_list_lock.";"0"
"duplicate http should be removed.";"0"
"uid=uid";"0"
"this should be access_ip_v4";"0"
"please kill that leftover line.";"0"
"the modal_id is the same for manageqosspecassociationview, we should change it to something else.";"0"
"i think we can kill this using jsonpath-rw-ext";"0"
"same as before, we should probably remove user names and such from these files";"0"
"this should be self._host and self._port.";"0"
"i think this should be a classproperty, eg: classbasehostmanager host_manager.hostmanager : property def host_state_cls self, host, node, **kwargs : """"""factory function/property to create a new hoststate. may be overridden in subclasses to extend functionality. """""" return nodestate host, node, **kwargs";"0"
"s/defect// it is a feature - just a crappyone.";"1"
"i think we shouldnt blindly assume it x86. atleast we should grep for xeon.";"0"
"it seems stupid butthis for ""exception safe"" programming. in theory the assignment to sddl_string could fail with an exception and the sid would never be freed. of course we do not typically have exceptions enabled, but still probably should try and be safe.";"0"
"nit: ""wtf"" is not necessary. ditto for the rest of the patch.";"0"
"does it make sense to call this test_pig_job_executions";"0"
"why are you mocking this i think you should be mocking the instance_update... method, or even just the save on the instance object. maybe you are still passing a sqlalchemy model to those methods when you should now be passing a novaobject and mocking *that* save";"0"
"good question. i think you could check the uma data for net.quicsession.connectionclose.numopenstreams.timedout which logs the number of open streams when a connection times out. that should be a good reference point, 1000 might be a good upper bound.";"0"
"remove the backslash.";"0"
"monir nits: i wonder whether we can fake the tenant_id such as ""aaaaa...."" specifically for internal nsxv mgmt. since i also want to create one internal network for trunk use, i think it would be better if we use same fake tenant_id.";"0"
"nit: false /* frame_navigated */";"0"
"i think you lost the whole of the original commit message here.";"0"
"the extension is loaded with a monkey patch of neutron's data structure, as done for gbp for instance : as i understand, we could get rid of this ugly monkey patch with the patch 202207";"1"
"this should go into __init__, objects on the classlike that are going to get misused";"0"
"could you make this an enum something like ''' enum classparseurloriginrestrictions { knorestrictions = 0, ksameoriginonly, }; '''";"0"
"this variable is useless, you can directly return ec_success below";"0"
"kiall, after a lot of investigation, we found the better way to add tracing to all rpc services, without this dirty hack. we can just add metaclassto base manager classwhich i am going to do now.";"0"
"that is really silly coding";"0"
"i hate these exceptions.py files. do not do that, declare the exception where they make sense.";"1"
"i think the superclassdelete method should do this for you";"0"
"can you please add docimpact";"0"
"you could just inline this in the calling function, no bool ret = false; if checkifrebootisneeded proxy, ret !ret { g_main_loop_run loop ; ret = true; }";"0"
"afaics this is 5b7c91b78b1ce6663e0f1f037f6cb4d7c9537d44";"0"
"you need a colon and a space after your closing paren.";"0"
"i do not see a significance to these, and i agree with salvatore in that they should be removed.";"0"
"trace_event1 is a scoped event that used to capture code execution time. you probably want a trace_event_instant1 here.";"0"
"nit: can fit within 100 line limit run presubmit.sh to catch this .";"0"
"you can probably write: src_unpack { default unpack ./*/sourcecode/starcupsdrv-src-${pv}.tar.gz mv xx yy die }";"0"
"do you need a self.skip_space here or is any space already skipped";"0"
"silly editorial nit: can we put ' eboos ' after 'excellent but obscure operating system', or just capitalize that phrase. took me longer than i care to admit to realize you were shortening that phrase.";"0"
"agh! stupid gerrit interface. i though that the small text box for editing the commit message online was to split the line automagically. just like this one :";"1"
"use case: logd running as a service. logd --reinit is entered on the command line, its only purpose in life is to send a kill sighup to the one running as a service. i could circumvent popen'ing out to pidof for the hard-coded /system/bin/logd process if i implemented a private copy in logd; or by making a command-call to /dev/socket/logd control to tell it to reread better . i may just do that instead, i always viewed popen as a security hole ...";"0"
"ugly tab";"1"
"opps, will kill that";"0"
"this is screwedup... stupid clang-format.";"1"
"remove i18n";"0"
"somehow you lost your register_opt_group here register_opt_group cfg.conf, queuing_group, queuinggroup";"0"
"the loop was this ugly already before, so not your fault, but while we are rewriting this piece of code, can we please make it less k r c-style and more c++-11 it is 2016 after all, not 1995";"1"
"does this need try/except logic to guard against the situation encountered in bug #1131534 certainly seems like we can not use this implementation in user.py due to that problem, which seems a shame..";"0"
"damnthem! thanks alex, i'll change it in the next round.";"1"
"this function is useless.";"0"
"this comment needs to be deleted. apparently, yuan forgot to kill it in change i17f049ea3ef62723effae8086ec427f6e151cd9c. i noticed that this patch does changes to the moved code, so it is appropriate, i think.";"0"
"25,26,32 rows should be removed, it has no sense, better in another patchset";"0"
"because supported_instances is a string in the db, and jsonutils.dumps turns the json into a string";"0"
"you are rightitis useless now. i would remove it.";"0"
"this script will be executed on dut with /bin/sh=dash, so i think you'll want to use instead of bash";"0"
"uint8_t standard_opcode_lengths_ 0 ;";"0"
"please kill this intermediate variable too - just reference self.libvirtconnection directly as the existing tests do.";"0"
"same comment as on fmreceiver - would be great if this classcould be mocked easily.";"0"
"/* abortsignal */";"0"
"the existence of the live_migration_flag parameter is one of the stupider decisions in nova's past, because it assumes all migrations want to use the same set of flags, which is wrong. we already see example of the wrongness by the need to add a separate block_migration_flag parameter. assuch we should not encourage further use of. we should have a dedicated 'live_migration_compression=on off"" parameter if we want admins to request compression.";"0"
"install_package $o_deps";"0"
"useless bind";"0"
"this is actually unnecessary... false == 0 => it was zalloc'ed that way.";"0"
"please, remove the trailing space.";"0"
"use 'local_whole_static_libraries := liblz4' so we do not have to build it twice.";"0"
"apparently aws assumes that a header value like ' xff' was encoded with iso-8859-1 latin-1 and re-encodes it in utf-8 in this case, becoming ' xc3 xbf' before signing/storing. so, asstupid as it seems, we want something like env key = header env key .decode 'latin1' , 'utf-8' .encode maybe i'll do that as a follow-up patch, though, and fix-up request._canonical_string at the same time.";"0"
"actually - the behaviour of the exception added in this should be the same as what this method does - butthat seems wrong - take a look at securitygroupbase.create_security_group_rule in nova.network.security_group_base . we should not propagate this crapso we should add a different exception as it indeed seems to be and also fix security_groups api probably.";"1"
"you are right dolph. it suppose to be a serialized json blob.";"0"
"wow, stupid obvious mistake from my side, sorry for this..";"0"
"for i, cur := 0, requests.head; cur != nil; i, cur = i + 1, cur.next { but i is not even used";"0"
"that is sad; code copying makes a kitten die somewhere on the planet...";"0"
"initialize last_record_offset_ and last_record_rowid_ too";"0"
"ack you'll also be killing blink::mojom::pagevisibilitystate too";"0"
"andrea corrected me. ignore my stupidity. :";"0"
"this will be fine from a functional standpoint. we have to rewrite all the config-external.sh scripts anyway. they are inconsistent and unmanageable. and ugly";"1"
"the current extension framework also does not allow nested resources, which sucks";"1"
"crapyou are completely right! sorry about that.";"1"
"dsrs are pretty useless with the vanilla default policy.json. but whatever.";"0"
"remove all this and just use device_information_statics_ below.";"0"
"aah, ok-- i'll remove them.";"0"
"is it possible to remove these whitespaces in red";"0"
"else: is redundant personal style nit; i hate having more control flow than necessary ;";"0"
"what is a dumb key allocator in your understanding there is a fixed-key key manager that is used by cinder volume encryption. is that anything like what you have in mind lack of a key manager capable of providing unique keys was exactly the reason the patch was blocked in icehouse, so i do not know how much a dumb key allocator would assuage those reviewers. joe gordon wrote: ""the blueprint states ""this feature makes it harder for an attacker to read vm disks, since it encrypts each one with a unique key that is not stored locally"" i do not see any in trunk key manager that supports this.""";"0"
"before calling charfmt::getitemset you need to check if it is one of the 3 supported res_txtatr_* because the darn thing just casts it to swfmtcharfmt which is undefined behavior";"1"
"little confused why you are using unflushed_batch_countitlooks like you are looking if we either hit 200 batches or have tried to flush 5 times. why those two numbers and is that to short of time";"0"
"this is wrong as the code is not run from gnocchi but from ceilometer. you should ceilometer's prepare_service.";"0"
"i'd suggest changing pkill -g $service_pid to kill $service_pid because instant killing of parent and child processes with sigterm when a parent is supposed to stop children itself does not seem a good thing to do and leads to failures in grenade. see #53, #54";"0"
"what a silly error did i make! done, of course.";"1"
"argument should be trust_id=trust_id";"0"
"useless .healthcheck";"0"
"please remove unnecessary $. feel free to do in separate commit. better to use $ count--";"0"
"extra fk.";"0"
"passis useless because there is a docstring";"0"
"is better imo";"0"
"i can not seem to find 'statichostsconfig' anywhere. did you meanallhostsconfig' here or am i being daft again";"0"
"my sed-fu is weak and i am too lazy to rtfm. what are ;t;d doing related: is ""sed -n -e 's/.../..../gp'"" not simpler or is this more correct";"0"
"when you do not set a default value, i would like to see a test to fail if no value has been configured.";"0"
"you can mock imagecache in the setup and have: mock_get_cached_image = self._vmops._imagecache.get_cached_image mock_get_cached_image.return_value = mock.sentinel.cached_iso_path";"0"
"/* discard data, but still update checksum */ this is weird. we are reusing 'res' not as a result, but merely as a dummy value.";"0"
"it seems like you should still divide by processing_unit_ and then subtract ""tag_length_ * chunk_count"" below.";"0"
"instead of overwriting the value after fetching, why not modify this _get_test_firewall_policy_attrs method to accept another parameter for audited like below def _get_test_firewall_policy_attrs self, name='firewall_policy1', audited= audited :";"0"
"you canalso do this without mock: self.verifier._save_results = mock.mock that pattern is probably more common in the rally codebase.";"0"
"please remove sleep here, and use wait like you've done below";"0"
"should mock the os.open method as well. mock.patch 'os.open' , mock.patch.object os, 'fdopen', m :";"0"
"commit message body should be wrapped at 72 characters rather than 80.";"0"
"it is a bit ugly to passrespones.responsetext. maybe utils.getresponsetext should take xhr as argument";"1"
"good point, although let us do so in a separate patch. my thinking is hung_task_panic should be disabled at compile time and left to users if they want to enable it at runtime via sysctl. wdyt";"0"
"simpler if we could just count them and get rid of number_tenants";"0"
"sshmanager does not contain implementation of remote execute commands like execute_through_host in os_actions.py";"0"
"this is reverse, to run the test you need to set skip_software_config_tests=false.";"0"
"you probably need to get rid of this one given that you've removed glib's spawn.";"0"
"i think thats causing the failures here, should just be cfg.";"0"
"app_sync_ui_state_watcher_ is a std::unique_ptr. is this the the preferred way to reset a unique_ptr now";"0"
"you should probably throw a fatal error if the path contains a double-quote something that will abort the build . it should not happen in normal cases.";"0"
"i do not think so. i thought parameter_types.none is used for suckold api like fixedip, they do not have restrict validation before. i think we just use null at here looks ok for me";"1"
"this operation can become expensive because the complexity is linear with the size of the resync_network_ids list; doing that at every port event and this is likely going to suck";"1"
"yeah, me too. it sucksbut works.";"1"
"yuckthat is amazingly awful :-";"1"
"this is garbage from v2 and is not in the v3 spec... remove it from the v3 implementation";"0"
"yeah, this is what i was worried about. insert rant here about the stupidity of using configure instead of sizeof in the first place! i usually hack around this by manually rewriting them assizeof long et cetera.";"1"
"f* vim";"0"
"this is the crapi want to improve.";"1"
"parenthesis are useless";"0"
"spelling: ir relev*a*nt here and everywhere pls :";"0"
"wrap your commit body to like 75 cols";"0"
"after the 61-68 conditional, fixed_block_is_definite is only false for some flex items.";"0"
"global memory dumps created for base::sharedmemory by sharedmemorytracker. instead of each client creating it is own global dump edges.";"0"
"this needs to be the v3 internal_url";"0"
"i think the name should be _check_fip_agent_gw_port_and_delete. the ""validation"" is really a check that there are floatingips on a host.";"0"
"i know this is silly... but how about ""qos_type"" or ""qos_spec""";"1"
"no, the destination register for the ""select"" pattern in quick can have any narrow type. object r = cond r1 : r2; float f = cond f1 : f2; int i = cond 1 : -1; bool b = cond false : true;";"0"
"rather - you should probably extract them from objects into dicts here, remove unnecessary fields and return the list of them like that, since you can not really delete fields from objects.";"0"
"i think you canuse the return value of self.patchobject to avoid having to import mock and create a mock object yourself: statvfs_mock = self.patchobject os, 'statvfs', autospec=true statvfs_mock.return_value.f_flag = os.st_nosuid";"0"
"may be it is better to use here somethink like this self.asserttrue cfg.pae";"0"
"can a pid be 0";"0"
"''watcher_api_ public admin internal _ip''";"0"
"you do not use anywhere this attribute, do you self.pmanager = mock.patch ""neutron.agent.linux.external_process.processmanager"" .start";"0"
"i deleted errors_test.py because it is pretty useless, and i did not want to add another useless test for my new exception. all this is covered by other tests for other modules anyway.";"0"
"this is a dumb question. why do 'local node_options' here, instead of adding a new line 'local node_options' before line 800 they are the same 'node_options', right";"0"
"right, right. i am an idiot.";"0"
"this will not work. as i said in every call of create-floating_ips ""cls"" will be different instance. we should make this method ""static"" to avoid misleading.";"0"
"nit: i can not help butthink this could be below the two if statements. something like this... if boot_option is none: boot_option = 'netboot' make_partitions_expected_kwargs = { 'boot_option': boot_option} purely a nit though!";"0"
"remove this blank line your pep8 failure";"0"
"struct bcm_cfg80211 *cfg";"0"
"why not simply use grub and setitis params as you did it for mock object this mock really do not gives you anything.";"0"
"kill off the extra parens in all these if statements. there is a bunch below too. if not os.path.exists self._system_crash_dir :";"0"
"could you please fix the typo in 'manigest'";"0"
"this test is useless sorry , you should check that apply_all_tasks makes a proper exception handling before reraising. e.q check that error was logged.";"0"
"all these ternaries are overly complicated. if oem_id == null oem_id = oem_id; oem_id_len = min strlen oem_id , 6 ; if oem_table_id == null oem_table_id = acpi_table_creator; oem_table_id_len = min strlen oem_table_id , 8 ;";"0"
"wrap-testr.sh does not exist";"0"
"remove in all files of changeset.";"0"
"this check useless here.";"0"
"ok but how about killing some of the other primaries to force the get to passover the bad etag e.g.";"0"
"dont't you need change this webob.exc.httpbadreques to self.bad_request";"0"
"this line is useless since you are not using tmp2_m it is overwritten at line 651 below";"0"
"not sure how complicated it is to write unit tests with a mocked newblue, but beware that over-mocking could lead to unmaintainable code, so you may sometimes want a fake or stub implementation over mocks.";"0"
"you should rather nest the mocks that way : with mock.patch as a, mock.patch as b: do";"0"
"return {boolean}, butthis is obsolete anyway, based on my other comment .";"0"
"nit: personally, i prefer ""fake"" than ""asdf"". butthis is just my preference";"0"
"u.netloc + swift_url_suffix";"0"
"please mention that you will not close stdin, stdout and stderr.";"0"
"no need to be root - use ""$""";"0"
"err this seems like leftover newly introduced debugging output... perhaps not intended for released code";"0"
"you should not import individual functions, from freezer import winutils winutils.is_windows would be better approach:";"0"
"execute this block before setting the state_set to complte above";"0"
"let us just remove this entire block, we do not support py2.6 any longer.";"0"
"kill leading spaces.";"0"
"can we remove these hacks, and only add them when we actually hit them";"0"
"... continuing comment from left side l118 -- implement this in each driver instead";"0"
"i hate mixins. there is gotta be a cleaner way than force this tie between this mixin the and the common db mixin. this might blow up in plugins that implement just this mixin and are purely an l3 service plugin. they may not inherit from commondbmixin";"1"
"for lines of code longer than five, use: .. code-block:: ini :lineos:";"0"
"you could alternatively sort the errortype in knone, krangeerror, ktypeerror, kfirstwasm, kcompileerror = kfirstwasm, ... and then just compare error_type_ here with kfirstwasm. we do something like this for relocinfo, for instance";"0"
"...this";"0"
"$ hide mkbootimg=$ board_custom_mkbootimg ./build/tools/releasetools/ota_from_target_files ...";"0"
"this fakeserver simulates contrail api server. so this one act as backend for _request_api_server.";"0"
"how did it work before, w/o .open sorry, probably roland would be the better reviewer than me, because i will ask too many stupid rtfm questions";"0"
"oh, oops :d this is broken on mac or at leastitnever worked for me . i had to commentitout to actually get the test to run. we really need to delete this env garbage.";"1"
"we still want to test the dumb map path. dumb mapping does not necessarily mean vgem.";"0"
"yes. i am not sure why the original code did not hit the dcheck failure timing issue . when i ran unit tests w/o this ""copy "", i got following check failures: run dedicatedworkertest.pendingactivity_setinterval 16791:16798:0607/151402.486325:2445264023635:fatal:stringimpl.h 265 check failed: isstatic verifier_.onref ref_count_ . #0 0x7f03ee802b0b base::debug::stacktrace::stacktrace #1 0x7f03ee80180c base::debug::stacktrace::stacktrace #2 0x7f03ee8753a3 logging::logmessage:: logmessage #3 0x7f03e846c9c9 wtfstringimpl::ref #4 0x7f03e846c88a wtfrefifnotnull<> #5 0x7f03e846c846 wtfrefptr<>::refptr #6 0x7f03e846c3fd wtfstring::string #7 0x7f03e8a29f25 blink::kurl::kurl #8 0x7f03eb3c3efb blink::workerthread::initializeonworkerthread";"0"
"my instinct for this endpoint and the next one is that they should use put verbs. i've seen put used with endpoints where you are essentially toggling a switch like here , but i haven't examined other openstack apis to see what the convention is. i'll discuss it with api wg members via a guideline proposal.";"0"
"why is this split up in this way 'cleaning up staging directory %s download' % staging_dir if cherry py is using pythons logging facility which i assume it is you canalso just do cherrypy.log 'cleaning up staging directory %s download', staging_dir so you do not have to wrap in a weird way.";"0"
"kind of pointless to have a message here if you are just catch-and-discarding below, i'd be fine with volleylog.d ""failed to write header for "" + path ; throw new ioexception ;";"0"
"you lisen invalid event again.";"0"
"typo, a brute";"1"
"so i am not sure celery belongs here, celery is really just using kombu itself kombu came out/was developed side-by-side of the celery project btw , and is the framework on-top of it. taskflow is not really a task queue solution either butthe jobboard concept from it can be , both celery and taskflow build on those foundational concepts to add things, butthey are not the solution them-self so probably not worth mentioning them assuch here.";"0"
".rubocop.yml is actually including spec/** for this commit.";"0"
"i think added_fields = self._policy_attrs - self.orig_fields";"0"
"> > hammerd should be executed before ec jumps to rw > > yes, hammerd should also help ro jump into rw as quickly as possible i'd prefer jumping to rw quickly, then figure out if we need an update, and reboot . basically, do not worry about this for now, this is an optimization";"0"
"tests should go under osprofiler/tests -- otherwise they are not even executed";"0"
"weird, my ack skills must suck- will fix";"1"
"you fogot about health_check_ha";"0"
"i guess this does look a little bit ugly.";"1"
"this is dumb.. we have to wait a second or 2 before calling the confirm_resize of the instance because we will get an error from the call saying the resize failed. even though it had not problem. this is likely because the task description or id is set after the verify_resize state shows up. this needs a little more research on why.";"0"
"what our politics about downgrades, openstack was decided to disabling them";"0"
"darn, gerrit did not keep the indentation!";"1"
"lemme kill it.";"0"
"add blank line after";"0"
"better to use tr -d here. butithink it is very braindead.";"1"
"not quite, logically yes, but practically _never_. _extremely_ impossible scenario since __ashmem_open return checking was performed, it is only possible to get a makedev 0,0 if someone did a 'mknod /dev/ashmem c 0 0'. lines 107-109 are virtually useless lines of paranoia, and i _want_ aloge to print 0:0 in the message to catch this _very_ bad situation. however, this also means in the next cl that one canuse 'mknod /dev/ashmem c 0 0' to brick the device well, actually, brick binder, which adbd and logd do _not_ depend upon fortunately . we do not check other 'bad' mknod activities in /dev/ashmem.";"0"
"please replace all uses of eapply with epatch and eapply_user with epatch_user.";"0"
"you could add 'import kombu.connection'. no need to worry about setting it to none. it just seems weird to have it in the middle of the test.";"0"
"seems that this block will never be executed, because in plugin_nsx.yaml you enumerate this puppet task only for groups: primary-controller, controller";"0"
"needless abbrv.";"0"
"perhaps debian should be removed from here";"0"
"there should be a parameter_types.domain_id.";"0"
"are these dummy values for testing right now i mean certainly should not be hard-coding us as the country. say so in a comment somewhere";"0"
"just changed the message. we are testing it by deleting the whole subtree of projects, as it is done in the delete_domain_contents method.";"0"
"#name";"0"
"afaict using .mux_lock without defining .mux_gpio is incorrect and potentially useless";"0"
"doh, sorry, yeah, i had a brain-fart on this one :";"1"
"i do hate this cut and paste, butthis is consistent, so lets keep this for now, and fix them all in a consistent way.";"1"
"#endif # __android__";"0"
"we should chop off the /auth/websso bits here, we just need to know the dashboards host";"0"
"this seems weird. did you really want to just reinterpret_cast a struct { uint32_t, uint32_t, uint32_t, uint64_t } on top of ""buf"" alternatively, do not take ownership of buf. it is weird to take ownership of the memory *and* duplicate its contents.";"1"
"same question";"0"
"i kinda agree with jakub that this check is worthless. but i am ok-ish to proceed landing it.";"0"
"this is pretty ugly. create it in one assignment: cmd = self.mysql_install_db, ...";"1"
"flavor_ids should be $flavor_ids here. will fix.";"0"
"if nw_info == instance 'info_cache' 'network_info' : return";"0"
"i think first 'valid' should be removed.";"0"
"a bunch of these were missing casts. personally i'd rather have gone in the other direction to at least have *some* type checking from these damned macros , butthat would mean that source that builds fine for glibc and the bsds wouldn't build on android. including much of our own stuff.";"0"
"what is the root cause of this problem you need to run unstack.sh before running stack.sh. ovs will be stopped and uninstalled there.";"0"
"let us use ""flavors/{0}"".format flavor_id";"0"
"i use this dummy okay, ""fake"" test to test the utils.parametrize_from_test_config config decorator. to testitin a ""real"" environmentitis better to have this fake test in the same folder as other benchmarks for nova etc. and also to inherit from the unittest2.testcase classall nova benchmarks inherit from fuel_health.test.testcase which is also a subclassof unittest2.testcase";"0"
"true. stupid comment from me.";"1"
"use ipfield instead of charfield.";"0"
"#ifdef art_enable_codegen_arm";"0"
"kill obsolete comment";"0"
"yeah, i considered that, but i also wanted to instantiate this classas a fallback when the configure inspector type can not be loaded for any reason.";"0"
"very nice use of a set :d python++";"0"
"pep8: comparisons to singletons like none should always be done with is or is not , never the equality operators.";"0"
"hm, i am somewhat confused now. this spec started with constraints in the environment, then it turned towards discovery, now some kind of capability matching. but what does it really do i see some things that could be done based on this spec, like discovery, but what is the use cases solved by this spec itself what is the overall flow like * template author does x * template get stored somewhere * <somebody> writes environment * deployer does what e.g. who would invoke the command on line 140 or 144 what does the guy do with the result what had thought this could be earlier is: * template author s write template s and annotate them * deployer has template that needs capabilities provided by other templates * deployer discovers other templates that have the capability * deployer selects provider templates and writes corresponding env file * deployed deploys top level template with the env file sorry if this is a stupid question. maybe i have to step back a bit again ...";"0"
"boom! there is your worm storage policy support right there! hadn't even thought of that use case!";"0"
"useless since metrics come from the collectd decoder and not from a filter";"0"
"it is a shame the registry does not support classmethods at this time, you get in to these awkward situations... someone should really look in to that, if only this were an open source project and any random person could fix this issue ;-";"1"
"while you are fixing execution with fakelibvirt.py, i am fairly sure this will now break execution against real libvirt. i think this competing fix is better";"0"
"i think you mistakenly dropped the compute from taking the midonet_data so this will not be passed here";"0"
"ugly, butitll do.";"1"
"damnthis was from a different patch. guess my editor autosaved this file.";"1"
"this is probably pedantic, but is not while true: the pythonic idiom or is it really while 1: or is there any preference at all. sorry to ask silly questions";"0"
"device_exists should be mocked to return true. then there is no need for execute and ipdevice.";"0"
"nit: while you are here, s/send/sends. here and below too.";"0"
"373-374 are unnecessary and should be dropped.";"0"
"ok, i did not realize that calledprocesserror includes stdout.";"0"
"i hate these prints, but i guess people find them valuable..";"1"
"masks should be uint32_t or uint64_t. or std::bitset.";"0"
"how about something like this constexpr skcolor kbubblecolor = skcolorsetargbmacro 0x9e, 0x9e, 0x9e, 0xff ;";"0"
"oh, crapsorry. i'll send out another change...";"1"
"el rey ha muerto, viva el rey!";"0"
"duh i suck";"1"
"for git commit messages, try to keep the first line self-contained and within 72 characters. lots of things will show just the first line, so it s useful to have it be a brief summary. some sadistic jerks try to impose an even tighter limit like 65 characters, butithink that s ludicrous. a message like this would do: minidump: allow for user extension streams computed at crash time hey, 65 exactly!";"1"
"why do you need to do this it is a fk";"0"
"let us use assignment i.e. scellstring = acell.mabasecell.getstring pdoc , which looks nicer.";"0"
"wikipedia only has the void arbitration_lost void ; prototype to signal error conditions, so i think they just went a bit overzealous with it. ; i mean you are not ""loosing"" any arbitration here because you've already given it up. i agree that another master could possibly begin a start condition within 5us, butthis code is really only intended for single-master systems anyway. i'll change it to a warning.";"0"
"this comment should be indented once more";"0"
"are we sure nothing is relying on this monkey-patch call being executed on import of 'cmd'";"0"
"somehow i find ""function"" misleading here. this is not even a ""functor"" object. maybe have the ""visitor"" as you had earlier just a suggestion.";"0"
"they are the ""dummy"" i2c clients. they exist because device tree assumes that an i2c device has only 1 base address. this device uses 5, and these are the other 4.";"0"
"you need to add check_services=false here because after compute node deletion we will have services in down shown by nova";"0"
"i am forcing postinstall to be empty for major version 1 here.";"0"
"please target the core-vendor-decomposition blueprint spec.";"0"
"i think once you make the changes i suggested in the other cl, you can delete both src_compile src_install and use: src_prepare { cros-workon_src_prepare } src_configure { cros-workon_src_configure } src_compile { cros-workon_src_compile } src_install { cros-workon_src_install default } yes, it sucksyou have to do this ... with the migration to gyp for platform packages, it hasn't been a high priority to make the eclassdo this for you ...";"1"
"darn itithought i got rid of this. done";"1"
"is it just a way to leave room for the garbage collected heap to expand in-place without having to relocate everything";"0"
"pls add a colon after todo alee-3 to make future hacking happy.";"0"
"please check that the error type is correct kinvalidpassword";"0"
"potentially stupid question: did not neutron use neutron-db-manage instead of db-sync the same case is with heatithink they use: heat-manage db_sync";"0"
"i wonder if this should match the previous bm_ language, ie ironic_build_deploy_ramdisk.";"0"
"done. i think i whacked them all.";"1"
"kill docstring args";"0"
"this comment is useless";"0"
"you prob want to add ' die' after all these sed statements";"0"
"ipxe_timeout' should not be boolean. better to use it as ipxe_timeout=0";"0"
"traits': dict trait.name, trait.value for trait in event.traits or ,";"0"
"these dirty bits depend on frontface, you'll need to add a check for the current value of them like you did in d3d11";"0"
"rule support will be killed as in";"0"
"maybe a silly question: i am not sure what is the difference between eliminating the public ip address completely and avoiding a dedicating ip to the router.";"0"
"add gettext to the globals";"0"
"corrupt* include user id in the exception message too";"0"
"might be nice to check and make sure this is a tuple or list in case someone does something silly like api: ""user_create""";"0"
"can this be stack allocated instead of using calloc there is only 1 element, and you just end up freeing this element on 2688.";"0"
"remove all of these. instead, we'll use a fake instance of the buildstore class";"0"
"/me shakes his fist at the stupid logging code :-";"1"
"utils and serialization should be imported using new namespace too.";"0"
"this might be cleaner as a lambda. preexec_fn = lambda:_subprocess_setup preexec_fn oh, but silly pep-8 will whinge at you about using lambda for their purpose. we should kill that rule globally. its harmful.";"0"
"ack";"0"
"agree, unicode could shoot";"0"
"all this __init__ are not needed anymore. the base classtakes **kwargs";"0"
"all the names we've thought of for this suckunfortunately. :";"1"
"done and added this to my vimrc to avoid these silly mistakes : autocmd filetype gitcommit set spell";"0"
"remove white spaces";"0"
"please wrap ""mkdistro.sh -dskiptests"" into 'sourcecode'";"0"
"nitpick 2: the operator should be const. nitpick 3: the 'inline' keyword is useless.";"0"
"put "" die"" after this";"0"
"this is a django setting, it belongs in the next section.";"0"
"sorry, my comment about die was that you just need to do: emake die you dont need the ""..."" arg to 'die'";"0"
"masters needs a minitems = 1 here";"0"
"seems like no one is using it - what about making ""verbose"" a variable inside factory_keyboardbacklight so we can setitfrom test list";"0"
"nit: do you need this 'ui_controller.h' is included above.";"0"
"kill it then!";"0"
"you should make jsonschema and check that results are properly formated. before doing next steps it is user input and users are dummy usually if file is wrong you should probably log warnings or just stop exectuion. i think stopping execution with code 1 is better.";"0"
"ugh damnit, yes you are right. on second thoughtithink this should just be a dcheck. afaik flatness is a one-way street, a flat string can never turn into a cons string again.";"1"
"you've won today's share of my pedantry! there is a missing line here: 'all rights reserved'";"0"
"not sure i understand why you mention classunloading if a klasshas been loaded by a classloader, it will be initialized once, and live until the classloader dies.";"0"
"better: ""if self.engine.check_theory_name policy_name :""";"0"
"sll_halen should be rta_payload rta , not rta_len. fixed in ps4.";"0"
"actual failures, or mere stderr garbage";"0"
"these two lines would need to be removed, as there isnt any graphic uno command any more";"0"
"i guess, it should be base_image_tar=rhel-server-$arch-$dib_release.tgz";"0"
"passis useless";"0"
"''gettext'' or ''ngettext''";"0"
"crapwhoops good catch abhishek!";"1"
"instead of creating mocks like this which do not unset themselves after the function scope , it is better to use mock.patch decorators on the test method: mock.patch.object ipt_driver_cls, 'instance_info' mock.patch.object ipt_driver_cls, 'remove_filters_for_instance' def test_unfilter_instance self, remove_mock, instance_info_mock : ...";"0"
"oh, you are right. i do not like these spaces, let me kill them :-";"0"
"is mock_result needed here why not just; self.mock_popen.return_value = self.testrun.returncode";"0"
"useless cachedir variable";"0"
"this needs to be removed before landing and all callsites need to passan executioncontext.";"0"
"these error messages seem a little opaque to the admin who is going to debug their fat fingering of a libtery. though i can not figure out any better english right now.";"0"
"v2 garbage";"0"
"want to remove vmware from the url here";"0"
"nit: dying -> die";"0"
"should be adopt_failed failed i guess..";"0"
"probably a yaml.dump or yaml.safe_dump here";"0"
"should this be setting func._category";"0"
"use kshelfdefaultbasecolor or login_constants::kdefaultbasecolor here and below";"0"
"this line of vws here breaks my mental parser; i'd keep the entire if block together.";"0"
"this is silly. we should not hard code it like this. i do not like this voter mechanism. we should use clkdev to define clk duplicates for the shared clocks. look at how colin did shared clocks it for tegra. i like that approach much better and more extensible. to that end, i'd like to rename voter to shared. take a look at: clkdev wrappers are in:";"0"
"crap c++ bites me in the assagain. : fixed and everywhere else i got this wrong .";"1"
"oh, i gotitthe check is in the client. i'll remove these checkings.";"0"
"you should specify here your company";"0"
"i think your compilation failure is because you've added android-specific code to remote-utils.c that uses sockaddr_un. so the comment here is nonsense. you should just say something like ""we use sockaddr_un for the special protocol used by ndk debugging"". you might also want to use #ifdef __android__ instead of have_sys_un_h too, since that is more intention-revealing. in fact you probably do not need any comment if you fix the #if...";"0"
"please do not remove the double **. it is a doxygen comment.";"0"
"kill it with fire!";"1"
"this should use die instead";"0"
"thanks for the catch. done. ah, late-night coding. so easy to be so dumb.";"0"
"give me a method that does not suckother options include using python's unexpected floor integer division behavior: 404 / 100 == 4 # true or parsing the first digit as an string: str 404 0 == ""4"" # true they all suckass";"1"
"remove ""as ful"" and just use ""ui""";"0"
"this sets dependency on opendaylight debian package, so if apt-get install opendaylight will be executed then automatically openjdk will be installed. this is redundant because in puppet manifest we also require openjdk package to be installed but i leftithere in case someone want install this deb file manually.";"0"
"v_db.status_description = status_description";"0"
"i dont see any other option. if we arent able to open the tmp or if we start with the wrong permissions, we want to kill ourselved";"0"
"does this trigger dead code warnings for building librscpu_ref if so, maybe the following code should be in an #else block.";"0"
"tiny nit: would rather have _do_soft_delete on this line and just have the args start on the next line. same for all of these reformattings";"0"
"unclear what the dummy is here. :- how about: add_dummy_interface instead. maybe it is just me, but i do not care for the term ""dummy"". can we come up with a more descriptive term: fake, mock, temporary, pseudo, no-op, null .. something";"0"
"webdriver_tunnel is only the process id, webdriver_instance is the sshhost the needs to be closed.";"0"
"check 'self.fuel_web.assert_pacemaker' below will fail if you destroy self.env.d_env.nodes .slaves 2";"0"
"a couple pep8 violations on this line";"0"
"they were created from the models - as jakub says.";"0"
"routerinterface.router_id";"0"
"originally, this is dpb_.max_num_pics + kmaxvideoframes + 2, but becomes dpb_.max_num_pics + kmaxvideoframes + 3 by this change. do you intend this";"0"
"_50_visualization.py is an example. i think it is better to add a colon. i am not sure it is a correct sentence..";"0"
"nit: i do not think the =1 is necessary here: i expect usages to be simply #ifdef is_device_fido_impl ... #endif";"0"
"wrapper for build_image. can you remove the <nfs> portion since that is not supported by build_image yet and this is just a dumb wrapper";"1"
"doh. stale. this was originally _internal.h until i managed to strip everything out.";"0"
"it is a brilliant bullshitthis file cannot passflake because of it. but all other is good. because of this and as long as we cannot move imports from keystone to top of file we should use ' # noqa' in the end of lines 36, 37 and 38 to passflake8 tests.";"1"
"put the die on cros_config_host_py itself cros_config_host_py ""${cmd}"" die";"0"
"looks like this should be arg_to_elements $";"0"
"since this is now a shared library, it raises updateerror instead of calling cros_build_lib.die so the caller can decide what to do.";"0"
"useless front_priv";"0"
"also ugly, but maybe forbid names that are 'is_uuid_like'";"1"
"move it just above self.slot_to_tid = {} to make it clear, how about: # set the default ... self.slot = 0 # some abnormal ... # ... self.slot_to_tid = ... self.point = ... self.pressure = ... self.syn_time = none ...";"0"
"the stopall should be used and this can be removed.";"0"
"this note seems should not be here, it will lead confuse.";"0"
"i think they belong in pathimpl, butitis ok to leave them if geoff objects.";"0"
"__init__.py";"0"
"the problem with this implementation which jenkins is showing , is that now versionedobjectregistry can not look up objects that are in children's registries. so this kills a lot of the base infrastructure that o.vo sets up.";"0"
"nit, this is useless change, i guess this because rebase.";"0"
"ah crap. for reasons unknown, this is always final line in the file. i think i'll need to deep-copy stack trace when capturing it.";"1"
"this has to be symlinks- that script will change, i gurantee it, and having to run setup_board again will suck. we could always use mount binds during enter chroot also, although that is... nastier. also, quote paths there; wrap the dirname in a ' ', same w/ board_root. should never bite us in the assbut we use that form to be safe.";"1"
"wrap to 72 characters when feasible, because git log looks ugly otherwise.";"1"
"self.d_env - should be self.env.d_env";"0"
"these mocks are kind of getting out of hand. since we are not testing the volume driver in here, can we move them into a fixture and use the fixture in the test class";"0"
"missing param network_uuid.";"0"
"darn, i copy-pasted this into all the *aas reviews. :";"1"
"does kill -hup reload dnsmasq eith the same pid otherwise we might want to re-fetch and update its value.";"0"
"ditto from exact_disk_filter.py";"0"
"yes. there is a race condition hiding somewhere and it is still waiting to be eliminated.";"0"
"hit._id here is combined with actual id and user role, so here should be hit._id.split '_' 0";"0"
"how about using 'cros.factory.test.session.console.info' to show the log in the goofy bottom panel.";"0"
"yes, together with http_log*";"0"
"shadowing the name of this function sucksit makes it look like l77 is recursive.";"1"
"i am not agree with using db queries directly in api. all operations with models should be incapsulated in objects.";"0"
"we never use check/dcheck in test code. and we prefer expect unless the assert failing makes the rest of the test not make sense e.g. assert_true test_thread.start in a multithreaded test here, the token evaluating to true does not mean it is idiotic to test initialize imo but i do not care strongly, in general both should passo this is a moot point.. definitely not check though";"0"
"ah, i was being stupid and was looking at normal ""route"" command, not ""ip route"", which has the ""replace operation"". that exists even on 12.04.";"0"
"that is fugly. not your doing, but hate the constructs negations...";"1"
"to be pedantic, i comes after h :";"0"
"here we should remove the if and replace it with: dcheck r_dest.is64bit ; r_dest = as32bitreg r_dest ;";"0"
"cowards! : but yeah, that is a better answer if nothing else calls find_config_files; i'll check. and if you do not like monkey patching, best not look at how 'mock' works :";"1"
"should now be test_commit_fsync";"0"
"i think that this line initializes the event_case as being test_eventitis kind of an obtuse idiom; at first glance it looks like this line does nothing. can you add a comment explaining it";"0"
"using return to skip the rest of the logic like this reminds be of ugly ""goto's"" and it is not an exception case.";"1"
"now that unittest is working for presenter, you should also add it here: test='py/goofy/goofy_presenter_unittest.py'";"0"
"i think ""invalid nic argument $s. %s"" canalso be part of nic_error and thus wud help u to get rid of err_msg";"0"
"kill this comment too";"0"
"$ call all-makefiles-under,$ local_path which is much cheaper than first-makefiles-under.";"0"
"when _create_temp_snapshot returns 'self.client.getvolume snap_name ', the value is mocked out so this call fails. _create_temp_snapshot needs to be mocked to return a snapshot object with {'name': 'osv-0dm4qzevskon-aaaaaaaaa'} to match below, or the client call to getvolume can be mocked to return this dict.";"0"
"it would be nice to put every bootstrap related settings into the 'bootstrap' section. a top level 'skip_bs_build' is really bizarre. bs what does it stand for bachelor of science base station backspace bulls**t";"0"
"why dont we use a common method execute_cmd to execute all comands.";"0"
"it looks like some chars get lost here. also ; are not that pythonic butthat is nitpicking.";"0"
"ugh, let us cross that bridge when we get there :";"1"
"consider 'ipv6-pid%s' % i honestly speaking, it seems better to delegate dnsmasq process managment to externalprocess module.";"0"
"struct mmu_memrange *prev_range = null;";"0"
"actually you will have one jenkins job by project or module and not one by language: e.g for java there wouldn't be only one job that generates all the war files. i wouldn't restrict the pipeline to a language and see my comments above about my concern about having a ""solum pipeline"" that polls jenkins.";"0"
"why do not you use your system.shellexecute ... function to execute this and similar below";"0"
"this is really ugly if network_ref 'dvs_port_key' : portgroup.portkey = network_ref 'dvs_port_key'";"1"
"... yes and no - this is not supposed to be a generic session constructor. it is supposed to be a bridge between the old parameters that were given to a client and the new ones that are given to the session. i was trying to make it really obvious that this is an internal compatability function and not something people see as a cheap way to 'construct_session'. i guess it does not matter because it is a util anyway, it handles being given session arguments, and it may be used in the transition of other clients.";"0"
"interesting. stupid question: but will not translators, in the 'po' files, get a chance to put anything they want in the the 'msgstr' field in other words, why would an apostrophe, whether used in a contraction or as a possessive, matter";"0"
"- the write barrier also goes through trace_. it just goes there indirectly through the marking_worklist_. - trace_ should be equvialent to tracetrait<t> for regular objects and tracecollectionifenabled<wtfknoweakhandling, t, traits>::trace for collections. we call trace_ instead of notifynewobjects because we know thatitis a gc-ed object and we want a call.";"0"
"mo.display_name = mountname.empty mounturl : mountname;";"0"
"disgusting";"1"
"imo ""create_share_replica""";"0"
"ok, let us kill it. makes sense.";"0"
"i think the problem was that daemons.stop stops the threads we *deliberately* started. if some code had started other threads, you got very hard to debug situations. so we added this extra method so you'd have a nice clear hang to debug if you'd screwedup.";"1"
"this change is just a bug. ""${flags_help}"" is a string and will never be equal to ""${flags_true}"". if we just want ""--help"" to return failure, there are much better ways. :-";"0"
"i think l118-l119 is one command, better use ' '.";"0"
"remove empty javadoc - or add one, even better!";"0"
"wow yeah.. how did that git in there goes to git blame ...";"0"
"this could also be improved as above. also, i simply hate the unnecessary continuation. finally, the quotes here are silly.";"1"
"oops. no, i meant to leave everything, even though it is not obviously useful. although i am really tempted to kill _xiafs_super_magic -- -- and i suspect that there are other obsolete ones here.";"0"
"for once, not my irish spelling : ""iff"" abreviates ""if and only if""";"0"
"i still think something is off with these hooks. the way it is now, if you shutdown go to s5 and then boot the ap s0 , then the sensors will still have the same odr, range, and res as they had last boot. this does not make sense, i think the goals here should be: - every time the ap boots, we should have the same default sensor settings. - if the ap goes to suspend s3 and wakes back up s0 the settings shall not have changed. - in s3, and in s5, only sample specific sensors that are needed. the last two goals are currently met, but not the first. i think you can fix it by changing clock_chipset_shutdown above to: for i = 0; i < motion_sensor_count; i++ { sensor = motion_sensors i ; sensor->active = sensor_active_s5; sensor->state = sensor_not_initialized; sensor->odr = sensor->default_odr; if sensor->state == sensor_initialized ! sensor->active_mask sensor->active { sensor->drv->set_data_rate sensor, 0, 0 ; } }";"0"
"how is this actually interpreted by vm_concierge as an upper bound on disk size";"0"
"spacing is off, but we are going to kill this ebuild, so i will not sweatit";"0"
"sorry, i am so stupid. i want to write gl_rgb in my mind. i do not know what i was thinking. i debuged this bug in my mac book and the fixing was also verified. but i manually re-wrote this patch and submitted it in my another machine. that is why it became gl_red not gl_rgb. sorry for my carelessness.";"0"
"took me a minute to realise what the scheduler driver is... an "" eg filterscheduler "" might be nice for the slow of brain";"0"
"obsolete comments. now all vms are 8core.";"0"
"the phonesubinfoproxy instance will check for dump permission.";"0"
"you canalso simulate pausing a vm using : kill -stop pid kill -cont pid although, it is not officially supported.";"0"
"i apologise if i am being blind/stupid but what email thread";"0"
"is there any reason to list these if you are not going to document them this just looks kinda silly.";"1"
"you really do not need to derive from std::less<>. if anything, you should be deriving from std::binary_function, butitis really not needed for std::set to work correctly, so i would just trash that base class.";"0"
"i am not entirely convinced choosing the first entry in addr_info is so much better than just using the host, port that was passed in and letting bind's defaults for flowinfo and scopeid sortitout. i guess it depends on what the hella scopeid is - ipv6 is so silly. this womm tho!";"1"
"# noqa should be removed";"0"
"a snapshot of volume-backed instance see fake image in 3rd case in l7348 of";"0"
"should be quotes around this since 'local' in dash is dumb local config_file=""$ ....... """;"1"
"not sure the reason for the whitespace change here the quotes look better lined up imo";"0"
"why are you adding a public virt driver api method for this nothing outside the libvirt driver is using this, so making it a public api is pointless and just pollutes the namespace.";"0"
"> > one bogus function from util/mach/child_port_server.cc, and five bogus functions from util/mach/notify_server.cc. > > gerrit is being absolutely awful, butitlooks like you did not actually remove the now-unused stubs in the two other .cc files. do'h. they are sitting on my workstation unstaged. i'll send a follow-up tomorrow.";"0"
"have you looked at the rest of the methods in this this is how its been done. its just a dumb logging noop driver and storing the parameters passed in as keys, and if there are many parameters, it stores them all. since you can not use a dictionary or object as a key, you have to use a primitive type. thats all this is doing. it is not very complex and not very useful bc it is a logging noop driver.";"0"
"real time numbers give the cache initialization itself takes twice as much time as without cache. :o";"0"
"call me a fool, but i only sussed this thanks to sylain's comment. using 'lstrip', the 'item.replace' format from below, or adding a comment would help here.";"0"
"wtf ! !";"1"
"this should not be needed, get_project raises projectnotfound for an invalid project_id";"0"
"synchronize_sesison=false passed to delete should make the operation faster";"0"
"comment thatitis padded to 64kb is that right";"0"
"probably a dumb question but why do we have 2 unreleased series";"0"
"will remove it again and see.";"0"
"1 emerge -c mali-drivers-bin does not suffice 2 clarify this please; each time there is a new version of the blobs, this ebuild should be getting a bump. that bump means the old version is replaced w/ the new. basically, the package manager should be handling that crapunless the concern is how your shar bits which vapier is trying to kill off in favor of accept_license- something i agree with as long as the tos allows for this deal w/ the implicit orphaning of the libmali dso...";"1"
"nothing. i am an idiot : then why do we actually have this";"0"
"enchance sounds cool, butthis should be ""enhance""";"1"
"i'd refactor this so none is an early abort, rather than 'if key'";"0"
"i guess ptr being null is not hit today, as otherwise things would have been crashing";"0"
"this initialization is useless.";"0"
"in my opinion ""no"", i feel this is a bug in the retype code particularly the manager. drivers in my opinion should be allowed to be pretty dumb wrt cinder itself. we send in crapto the wrong driver i do not expect the driver to try and interpret that and come back with something. another problem is thatitmight just so happen that there are multiple drivers that actually satisfy the same capability/extra-spec keys. it is certainly not an error imo that the driver did not know that cinder was actually intending to ""migrate"" the volume.";"1"
"similar to above, adding dbaas.localsqlclient.execute.call_count would be nice ...";"0"
"do not use bash-isms like ' ' or '= ' here. it is easier to panic after option_parsewhen you see that '--cache=<program>' was used. as in: option_parse$ "" .... # forcefully disable ccache to build openssl properly. if ""$opt_ccache"" ; then panic ""you cannot use --ccache with this script openssl would fail to build ."" fi opt_no_ccache=true package_builder_parseoption curl-deps";"0"
"i do not see any profit from that fate sharing. with approach implemented in rootwrap-daemon you could easily kill daemon without affecting main process and it'll get restarted and reload its configs and code. why do you want to get rid of this feature";"0"
"i do not think we should delete jobs that have been 'abandoned' since it looks like when a worker fails or is not able to complete a job, it get's put back for other workers to claim. see:";"0"
"i like </li> fuckhtml5";"1"
"should be a volumedriverexception rather than cinderexception.";"0"
"these can be bullets";"0"
"the haproxy-systemd-wrapper's pid is always 1. maybe we can change this line as follwing kill -usr2 1";"0"
"i would actually kill the child here, then abort yourself ... that way init 1 will respawn on us note that /etc/init/p2p.conf has 'respawn' and we start over with a clean slate.";"0"
"i would disagree with this if it were not so easy to split this into two handler clauses and note that if we hit the only-if-not-async one and async=true then make a stink.";"0"
"damnit, fixed!";"1"
"change '""dumb_member""' to ""dummy member""";"0"
"yea, actually i want to say ""user's old client"". i got suggestion from other people for removing ""'s""... but stephen's suggestion sounds right. the 'user' is useless.";"0"
"still would be nice to join on this, just to make sure no crapis left behind. i know this thread is connected to the proxy thread running butitseems good behavior to join on both first the proxy thread, then the notify thread . an even better way, instead of using time.sleep pr.notify_period from above, using a event object, and everytime u need to sleep do self._notify_event.wait timeout=pr.notify_period , then u can immediatly mostly immediate signal the notify_thread to die by just setting that event via set after u stop the proxy thread.";"1"
"can you verify this against the ri i am curious whether this is a hard runtime failure, or should be thrown at the point of the invoke so, e.g., verify_error_no_class";"0"
"all of these projects are moving from stackforge/ to openstack/. the upstream field is poorly named and only needed for the initial import. we should probably just remove the upstream fields in this change to prevent confusion.";"0"
"we need the script to be executed here";"0"
"stupid geritt: ips = {obj.instance_id: obj for obj in floating_ips} insts = {obj.id: ojb for obj in instances} ips id .instance_name = insts id .name for id in ips";"1"
"i agree with yamamoto here.";"0"
"hm.. i thought cluster_id is always integer.. and if notitis none.. what else do you expect or, fuckif it could be a string - it should be fixed not here, but where it is came asstring.";"1"
"killed it!";"0"
"why can not we just use something like: from cinderclient.v3.volume_backups_restore import * # noqa manipulations with sys.modules looks like a dirty hack. do we really need it the same comment for the rest of such changes";"0"
"can not get this to go away. there is no change here. i even deleted the line and re-added it.. darn git!";"1"
"well this is where me suckingat naming things comes up, because i also want to do a per test view. see the follow-on patch this is the summary page which is why it is plural because there are multiple tests";"1"
"this now skips adding an instance fault and an error for the event, which feels bad to me. see the usages of compute_utils.add_instance_fault_from_exc";"0"
"good point, this array is totally useless.";"0"
"i would assume performance would suck";"1"
"strictly";"0"
"that reminds me, i can never remember if i or you added support for <view classcom.example.myapp$innerclass i used to find inner classes for custom views rather silly, but with fragments it makes sense to do it that way.";"0"
"not weird at all, actually: this test was just broken because i am dumb. : fixed now, hopefully!";"0"
"also here the numeric argument to the oustringbuffer initialiser is the capacity...";"0"
"why not like create_backup function use greenpool.spawn_n to execute delete_backup function.";"0"
"i propose to mock fuelmenu.common.modulehelper.modulehelper.getdhcp. it is not good to mock methods of classthat you are testing in setup";"0"
"possibly dumb question: iiuc, this.handlemessage_ should already bound to the instance just as a result of instantiating the class does this do something else, or is that assumption not the case";"0"
"silly question: why does scanout mean tiling for i915 is that consistent with the other drivers";"0"
"but before you os.execvp, you first did os.fork, and that returns the pid";"0"
"yes, totally. done. the intention was to let this zone die assoon as possible, butthe whole liftoffcompiler will die after compilation anyway.";"0"
"that is actually a possibility yuck";"1"
"use xml_to_json rather than self.xml_to_json";"0"
"y'all allow multiple import targets on the same line if so, frigging-sweet. if not, style violation.";"1"
"/* parametername */";"0"
"this seems fragile and not well documented - i.e., . why not have cgroups.__init__ take a pid argument, and have this function look up its parent tree for the first one with a pid";"0"
"this is redundant and should be removed.";"0"
"kill trailing whitespace.";"0"
"you need learn puppet about munge funcion for example";"0"
"would it be possible to use eventlet without monkey-patching";"0"
"crapmissed one eventlet mention.";"1"
"even reading the bug, this seems very bogus to me. can we just lose all this crap";"1"
"make ""system metadata"" link to the section below. s/system metadata/:ref:'sysmeta'";"0"
"""vcneter"" should be ""vcenter"".";"0"
"darn";"1"
"this comment need to be removed";"0"
"while you are here, this should probably be const std::string .";"0"
"nit: i'd like to keep some of the explanation reported by the original berrange's commentitis useful for ppl reading the code which are not aware of the ""stupid default logic in libvirt"".";"0"
"hardcoded urls should be removed";"0"
"it is kind of silly that dictionaryvalue does not have a constructor that takes a list of key-value pairs. end of rant.";"1"
"we should remove all accounts of type_0 too";"0"
"we dont use config-external.sh at all anymore, youll have to update to the json model which you have some code for already";"0"
"because it needs to be enclosed in jenkins workspace for jenkins to be able to make it an artifact.";"0"
"nit: false /* has_user_gesture */";"0"
"i blame mst for reintroducing them with 857adeada9cc3276e79ceb828959a3ffe2d7409b a week ago ...";"0"
"agreed. i will ping back when the tests are added, but will assume your lgtm still stands should this happen while you are oo next week : i should cover these three cases: * multiple throttles all doing restart synchronously * multiple throttles all doing restart while deferred * multiple throttles doing a mix of synchronous and deferred restarts";"0"
"lines 192-195 are totally bogus";"1"
"no macros, please. constexpr size_t koptionstringmaxlength";"0"
"damnmissed this key var.";"1"
"is there any reason you renamed unthrottleable to unpausable i think that this queue is unthrottleable.";"0"
"i think this sucksbut can not find a better way to do inline styling.";"1"
"perhaps a dumb question, but can this be done on a background thread perhaps return a promise";"0"
"are these varchars if so then may as well put 255 like we do for most every other text field";"0"
"damni guess we still need _lookup_by_name...";"1"
"remove these white space";"0"
"because this log message is highly useless and we are quite verbose in our output.";"0"
"you forgot to add the parameters to handle the mocks. the line should read: def test_destroy_instance_without_vm_ref self, mock_call, mock_get :";"0"
"i tried a bit different approach: maybe you would like it more it saves even more long living memory while not creating so much garbage during visitor traversal. and it is simple.";"0"
"damni thought i get rid of all of them, good catch!";"1"
"no action required yuckthis api gives us - int rather than long! values representing milliseconds that we then have to add ourselves - which we then need to passinto a zoneoffsettransition asseconds ! feels incredibly confusion / error prone.";"1"
"i tested both approach and using plug is not shorter and less readable as plug interface requires many useless information in test context.";"0"
"done... although i got error as /usr/lib64/portage/bin/ebuild.sh: line 388: pbunzip2 --ignore-trailing-garbage=1: command not found";"0"
"this is a bad test. it should not be possible to construct a motionevent with 0 pointers! in fact, you really can not we check this in our internal master as of last week.";"0"
"should probably use neutron-lib device_owner_dvr_interface, look at recent code in neutron and neutron-lib";"0"
"pre_version does not tell us much. better would be: test_upload_to_image_pre_3.1";"0"
"/* is_exact */, here and below.";"0"
"whoot whoot whoot!";"0"
"nit: s/fk/foreign_key/";"0"
"should probably be a fixme";"0"
"this ""ugly hack"" comment was added for falco/peppy because the change was made directly to their branch rather than to the mainline code first. please either remove this line or change to ""wolf"". there is a new thermal implementation on the mainline branch that we could use for wolf if you wanted to. however, if you prefer to modify the old implementation then this change looks fine.";"0"
"we need to execute _walk_versions with downgrade=false as we want to check fully populated db.";"0"
"this actually needs to die in a fire. /me adds a todo to do that...";"0"
"no need to this validator. as there is no not supported match";"0"
"we save a bunch of useless saves - yay!";"0"
"this is kinda ugly here. can we use % image_name s and % backing_file s here it would make the next 3 lines of code easier to read.";"1"
"let us jsdoc both _selectedcontext and _handlers";"0"
"be consistent with aliases... ext_edo sorry you know i love being analand pedant, i know these lines were already here before your patch ;";"1"
"do not import classes, import their module. i.e.: from cinder.tests.unit.volume.drivers.emc.scaleio import mocks asscaleiomocks then later: scaleiomocks.mockhttpsresponse";"0"
"classname=spand5 can be moved to getdefaultprops";"0"
"why not .ifnc rdest, $v0 move rdest, $v0 .endif here";"0"
"yeah, forcing all architectures onto the new syscalls was definitely the right choice for us. can you imagine having all this crapin bionic";"1"
"thanks. i trusted sed too much";"0"
"please place private members at the end of the classprefer to use explicit widths, int32_t / uint32_t or size_t";"0"
"if it is etws primary message this will choke.";"0"
"this method is useless, you can move the code into declare_topic_consumer.";"0"
"bah! so lame. thanks jay.";"0"
"we expose that would it be better to have flush...ifneeded just return a bool";"0"
"thinking about killing pkgtype altogether - see the non-inline comments on the review and share :";"0"
"you are rightitshould not be changed here. thank you.";"0"
"should not these base addresses be #defined somewhere it is gonna be a real bitchto hunt all of these down when we port to the next soc hw guys love to move things around on us .";"1"
"does it make sense to passthe client or at the very least configure _client at start. this is triggering ceiloclient.get_client 2, **creds every time this function gets called.";"0"
"depende*n*cies";"0"
"can you kill these spaces";"0"
"unfortunately the native_values_ is string to string map, not string to cssvalue.";"0"
"how lame :-/";"1"
"eugene, if our isolation does not guarantee serialization... that a big deal! and anyway, it is not our serialization butitis either mysql or postgre. but perhaps you are right about sqlite... it sucksa bit, butthen it is ok.";"1"
"i think you can eliminate temp entirely. data_ = bytestring ...";"0"
"should this be wrapped with map_priority";"0"
"my apologies for these silly errors.";"0"
"just a sanity check, is .02 reasonable here python wouldn't take this long to evaluate a crappybut non-malicous regex, would it";"1"
"done, and i also caught a spelling error in the next test as well which i will correct in the next patch.";"0"
"sal_int16 atransitiontype = 0;";"0"
"i think this line should be removed if we want to keep logger='openstack.keystone'";"0"
"no, dimitry should have made them redundant, but i was not planning on removing any until we are at the point where we want to remove them all.";"0"
"argh! i forgot to add it in the migration. will add it there and this will be updated once a name for that pesky vm shitgets solidified.";"1"
"if the errno returned is esrch the pid or process group does not exist. should this be an error";"0"
"nit: put this after resumedownload.";"0"
"this is the deploy's cleanup method. should there be a different/new method for cleaning up after a failed inspection attempt";"0"
"nit: one ""="" should be removed.";"0"
": crap. missed that. and even mixed up it with the 3pp libs. fixed.";"1"
"oh dear... a 0 ... i am beginning to hate those. this is out of your scope though. lucky you.";"1"
"why this indirection toggleunicodecodepoint atoggle; should work as well.";"0"
"this is internal, please remove the backward compatible version and then change the few uses internally. also, the same misspelling is in phone.java, please fix that value also: int nt_mode_lte_cmda_evdo_gsm_wcdma = rilconstants.network_mode_lte_cmda_evdo_gsm_wcdma;";"0"
"allowedaddresspairs should be taken into account.";"0"
"silly copy pasted mistake...";"1"
"secondary should be used to find the array you are failing over to";"0"
"i know that this is on ps one trillion and you must be getting tired of idiotic -1's, but, bear with me: what do you think about encapsulating this bit of code in a method and targeting in a test i'd just like to see the code in the exception handling executed. right now we do not even know if it is syntactically correct. i see you had tests in an earlier ps but removed them. why is that";"0"
"useless commit summary. the one-line summary should indicate what the commit is about. and when looking at a log of changes, if they all say ""fix issue nn"" you'll have no idea of what has been going on.";"0"
"put this line inside ""for"" could be an issue. i write a really small test, only one process can finished.. create the pool outside ""for"" can work around. although it might be a little stupid: pool = multiprocessing.pool times for i in range times : small test can pass but unit test still hang. :";"0"
"this is autogenerated tag id. so it cannot editit";"0"
"pedant me wants them - i'll remove them";"0"
"this block is redundant and should be removed.";"0"
"you should use get_latest_image.sh and fix any logic there.";"0"
"you *must* continue enforcing the dump permission, or else cts will fail.";"0"
"should be inherited from base.basetestcase";"0"
"drop this method definition: conf and local_conf are now useless.";"0"
"my last comment was dmitry torokhov dmitry shmidt: no, they are not the same. that is the whole point of this bug report. drvdata != platdata.";"0"
"this could also go into the common method.";"0"
"hello lorenzo, if we lack a judgement of sock_owned_by_user here, race condition will still exist like this: cpu0 cpu1 tcp_nuke_addr { tcp_close { -- lock_sock bh_lock_sock -- tcp_set_state { tcp_set_state { inet_put_port inet_put_port -- icsk_bind_hash->num_owners-- -- icsk_bind_hash = null // access null pointer here } icsk_bind_hash->num_owners--";"0"
"ha ha funny!!! you need another shot of scotch :- :-";"1"
"yeah, it sucksbutitfeels like the best way.";"1"
"instead of lbyl here, you should simply try to read the file. eg: pid_path = ... try: with open pid_path, 'r' as f: pid = f.readline return int pid except ioerror, valueerror: raise ...";"0"
"i will fight you with my last breath.";"1"
"same rant about using the standard shitdone.";"1"
"please put this inside the config_android block below.";"0"
"sigh. thank you for catching; feeling very dumb now. thanks. should be 1240339. fixed.";"0"
"so this iteratates over users one by one but on over tenants, e.g. what would be nicer is tenant1 user1 tenant2 user1 ..... tenant1 user2 tenant2 user2";"0"
"tenant_id must be nullable=false";"0"
"whole string should be removed.";"0"
"remove this. since l1025 no longer uses this it is silly to initialize it here.";"0"
"put this in the message body rather than the subject.";"0"
"pls, docstring";"0"
"group=neutron_group";"0"
"this looks the firewall_rules table";"0"
"code does not compile on windows. frameworks/compile/slang/slang_rs_export_foreach.cpp:87:2: error: extra ';' -werror=pedantic }; cc1plus: all warnings being treated as errors make 1 : *** out/host/windows-x86/obj32/executables/llvm-rs-cc_intermediates/slang_rs_export_foreach.o error 1 make 1 : *** waiting for unfinished jobs....";"0"
"first of all this breaks indentation. second this fuction is a little useless, see below.";"0"
"seems that _populate_quantum_extension_values is redundant with the _refresh_quantum_extensions_cache method of the bellow _has_port_binding_extension";"0"
"this feels a bit like it should be in an oslo utility module, butits not a big deal.";"0"
"i hate this name for whatever reason. i understand why you do not want to call it a daemon though...";"0"
"same thing for the arrow, useless.";"0"
"is there any benefit in having non-integer scaling e.g. 1.2, 1.5 etc seems resize accepts any number of x/y pixels below.";"0"
"upd is quite meaningless nowadays does it still exist or has tor killed it already so i'd call this change an improvement.";"0"
"'scanelf -qe' works better in my fairly biased opinion ;";"0"
"i dislike usage of word nova here. clients = osclients.clients self.context ""admin"" ""endpoint"" for service in clients.nova .services.list will be much cleaner as well, i really do not understand why not using standard approach... so only thing that you need here is something like: def _neutron_available: admin_client = osclients.clients self.context ""admin"" ""endpoint"" return consts.service.neutron in admin_client.services actually as far as we land support of usage existing users, we will try to drop ""admin"" requirements everywhere where it is possible. so usage of admin is such cases is something that should be avoided. e.g. def _neutron_available: if ""users"" in self.context: client = ... else: client = .... return consts.service.neutron in admin_client.services";"0"
"minor nit: maybe change ""uri to use to trigger"" to ""uri used to trigger"".";"0"
"iirc, this damnthing was done on purpose. : i mean, the ""no"" option as default.";"1"
"you are killing me ; done ;";"0"
"*'xxxx <xxxx>'__* same as above line 545.";"0"
"dumb question. i thought you mean config options in etc/ironic/ironic.conf.sample, but now i am wondering if you mean in setup.cfg.";"0"
"locals is evil. please feel guilt.";"1"
"delete this file and consider updating .gitignore or your .git/info/exclude file to not include temporaries created by your editor";"0"
":hangs head in shame:";"1"
"hi philip, by the way factory for nautilus and poppy should be removed :";"0"
"i want to remove dependency of simplejson, so this function will be updated in near future.";"0"
"grr... darn git cl format! fixed.";"1"
"these names are not good. leave this as flow_spawn.";"0"
"i will set $magnum_guest_image_url in gate_hook.sh";"0"
"i think you want 'project_auth' here";"0"
"#endif /* __linux_iface_stat_h */";"0"
"a little risky but does work. i'll look to expose vid/pid/sid to client and refactor then.";"0"
"please get the retval from the keyvals dict.";"0"
"use angle_try_hr, angle_check_hr, angle_check_hr_alloc";"0"
"useless, v5.0.0 must have version 2.0.0";"0"
"should be elif, or else followed by assert object_type == 'port'";"0"
"polling is kind of ugly, but also the simplest way i could think of to wait for something that happens after the timeout would've been incorrectly restarted. i could also introduce a filter to wait for a beforeunload ack - let me know if you think that is better, or if you have other suggestions.";"0"
"i think this will expand to: ""disable-/path/to/init/main.d/goofy"" maybe: ""$ dirname ""${rule_file}"" /disable-$ basename ${rule_file%.sh} "" which will be /path/to/init/main.d/disable-goofy";"0"
"then here do: if ! allowed_timestamp=$ get_timestamp ""${last_line}"" ; then die ""could not get timestamp from: ${last_line}"" fi which means at the top you should add: die { echo ""kernel_log_collector: $*"" > 2 exit 1 }";"0"
"this is 'testcase.toplevel null ' and the npe will be thrown on the aget-object. i'd rather see the npe thrown by the invoke-virtual from 'testcase.toplevel new verifyerror { null } '.";"0"
"ugly bag of mostly water, move cleanup to thread; drop the stopped boolean.";"1"
"you are right, this should be removed.";"0"
"for_create fools me as if it was a wrong syntax for a 'for' statement. can we rename this variable as 'bcreate' or something more meaningful.";"0"
"admin-openrc.sh, also line 67";"0"
"i will need to remove from agent_ucs driver which i am doing in the next patch.";"0"
"thats damnsemicolon ....";"1"
"also, feel free to kill this pointless ascii-art embellishment, but perhaps in a separate commit";"1"
"unfortunately yes. 1 i want to time just run 2 i want to dump the graph after run even if check fails";"0"
"assreally =";"1"
"crapwe actually needed this because otherwise the subnet delete fails since the server still has the port in the subnet: this will do a double-delete in the base classtear down butitignores the 404 so that is fine.";"1"
"if we are doing this here, then we do not need to do it in compositorframesinksupport::onsurfaceactivated.";"0"
"this should porbably happen only after you initialize mtabbedactivitycount";"0"
"oops, gaurav told me ""no c necessary in new files"" and i stupidly thought he meant the whole copyright header! my bad, will fix";"0"
"is there any way u can make it an svg from the uml. i've seen those look better. i guess not a big concern but damnascii art is ugly, lol.";"1"
"and as i say that, changes wtftimeticks to just be analias...";"0"
"in ceph_health.sh only 'health' subcommand is used. it does not look good to allow zabbix user to do anything, except specified parameters. also applies to the rest of permissions here.";"0"
"you and your darn facts! i stand corrected, thank you.";"1"
"same docstring issue here.";"0"
"i think you broke this test, the name should have -dummy attached.";"0"
"looks like a useless check, since this attribute is setted by the '__init__' method.";"0"
"host_mock.find_vm.assert_called_once_with 'baremetal1'";"0"
"this will be confusing, it will read: ""kill failed: 1234: <reason>"" maybe: plog error << ""zygote->kill "" << init_pid_ << "" failed""";"0"
"can you just do this directly into self.fw_validators";"0"
"you also need to add dumb mapping.";"1"
"worth noting, the security model in jenkins is such thatitis not really safe to mix trusted and untrusted slaves, and it is also not generally safe to reuse untrusted slaves. assuch we keep our trusted reusable slaves bound to a separate jenkins master from our nodepool-managed slaves. if you have a similar split, you can simply avoid running this for the jenkins masters handling your reusable slaves and only use it for jenkins masters handling your nodepool-managed slaves.";"0"
"i think we'd better to get rid of _ on the head of func name because this will be called by process.py.";"0"
"as_tuple #notaminusone";"0"
"is there a need to run this through the il8n library will there even be a translation for this since its a new string template that you are creating which i would assume does not have an equivalent translation that already exists i am fine with it but just seems sort of useless especially if the yum il8n will not have a underlying translation anyway .";"0"
"large_ops should be executed against neutron too. how could we ensure in that case we passthe network client to this function";"0"
"i'd get rid of this function at all. this logic should be in onchange function of the field";"0"
"removed means the device is removed in hardware platform but is still not synced with database, deleted means it has been synced with database and the corresponding entry has been deleted from database.";"0"
"this is fine to use nova.wsgi for right now, but imho, better to use only the least you need to so that extraction is not a giant pain in the ass.";"1"
"we can probably cut modem power or kill modemfwd shortly after modem is rebooted";"0"
"fool protection, removed";"1"
"hmm this should have been failing since the call to api.heat did not got mocked, can you you it here too better yet, we could refactor the code, since we are using the same sets of mock and data for the three test methods.";"0"
"we have a create but no edit or delete. can we add a delete here * **delete_plan plan_name **: deletes a plan by deleting a swift container matching plan_name.";"0"
"{{ container_config_directory }}";"0"
"this should be ""_send_result"" cause it is private method btw wtfsend_result is calling send_results maybe vise versa";"1"
"i know this is simpler, but i do not know why an enterprise would care about disabling audio activity unless it delayed the lock screen. for the user in the enterprise case, losing this ability just becasue video is bad would suck";"1"
"so i think this target should run the generator with the --fix flag so people just need to run a tox command to fill in missing uuids. similar to what we do with genconfig sean is correct that we want the check to be part of the check of the pep8 target when we start enforcing this. also in the future can we put python2 here. my stupid distro made python == python3 which will probably cause me trouble here. fwiw, iirc there is a pep on only using python if it supports both python2 and python3.";"0"
"hi, sileht, sorry for reply lately, yes, it is my fault, will do it. btw, i have a stupid question : , why we need both an unique_id and a msg_id, it seems they both are generated when sending a message, can we use only one of them";"0"
"i think if you use multiprocess then you do not need to kill process on dut. you can just kill _playback_process";"0"
"set -e would abort this. you probably want: if ! out=$ ... ; then";"0"
"rot != 0u";"0"
"same thing. this will stick the properties to a java.util";"0"
"should these use kshelfdefaultbasecolor instead of separately hardcoding black";"0"
"i hope i will remove this crapsoon. i like your idea of eventlet future executors.";"1"
"no. our git history is too polluted by meaningless commits.";"0"
"the opposite of un_scoped! ; i will add a comment on next respin.";"0"
"yeah, let us keep things simple and remove them.";"0"
"this should be a portopt rather than an intopt.";"0"
"damned js habits done";"1"
"this returning is useless";"0"
"this is redundant. maybe just run the ''galera install'' playbook' using the ''galera-bootstrap'' tag...";"0"
"this canalso make some other thread spuriously start registering as the main thread. it also only fools one check, but many other things still look like it is the main thread, like tls and wtfmaynotbemainthread, so this is a very limited illusion. if it is just for your particular tests, maybe your code could provide its own bypassnamed ismainthreadortest or something that can be overridden ideally, though, we would actually run it off the main thread, since if the code cares about threading we should probably test how it deals with threading this also seems like it would give tsan a better opportunity to detect bugs .";"0"
"nope, i am an idiot that forgot to rename the variables, and forgot to compile test before pushing. fix coming.";"0"
"1.f and 0.f";"0"
"damnyou are right :-/ fixing.";"1"
"skip_test_payloads=... should be dropped entirely; the skip_test_payloads should actually be named disable_tests.";"0"
"if it is only used in the new test - i'd put this function there. if you think it can be reused - then i'd say try to make it more general allow for setting different values . not worthy of a -1, butitd be nice. i've ran into this a few times and it sucksfor the next developer trying to reuse it.";"1"
"why check physical_address i think that is redundant...";"0"
"strictly speaking, it does not belong to this patch. i've uploaded a new one:";"0"
"this is a little ugly. are there other users of 'hfp_buf_acquire' if not can it be changed to work in frames";"1"
"these verify_*_token calls need to be avoided when we have a cached token. making those calls defeats the purpose of caching.";"0"
"i forgot to kill this todo.";"0"
"i think this line is redundant and should be removed";"0"
"usb.util.ctrl_out usb.util.ctrl_type_vendor usb.util.ctrl_recipient_interface";"0"
"when data rat changes the new rat retry connectable apn's";"0"
"this function is useless, it can be shared with v21.";"0"
"remove this comment and set the mtu only under the condition: if self.veth_mtu != ovsquantumagent.default_mtu:";"0"
"you setup specific mocks, but you never actually change/check the values. you might consider consolidating into one mock for 'quantum.agent.linux.ip_lib.ipnetnscommand' as a whole.";"0"
"yes, passhould be removed here";"0"
"we do not need auth_version, auth_protocol i think.";"0"
"there is one more opts.force_firmware need to be removed";"0"
"x_role*s*";"0"
"!rs.isfloat implies !rs.isdouble. remove "" !rs.isdouble """;"0"
"oh, yes. in the dicts below, 'filter' and 'raw' can share the same mock object, so v4raw_inst and v6raw_inst are useless. i have removed them in the next patch.";"0"
"move this down into _ldap_res_to_model and get rid of this function.";"0"
"the problem is that if we do not wait for crm_resource then we might be checking about the status of the resources too early and cause false negatives";"0"
"i think you are overloading the getitems implementation above with the getitems.xxxx calls below, in which case the actual impl of getitems does not matter. if 'passcan be used though, that would be cleaner imho.";"0"
"eliminate backslash";"0"
"i would just read the right half of the diff here. the old interface was confusing garbage.";"1"
"please get rid of the trailing space";"0"
"this should probably be removed and ensure_package from stdlib should be used instead";"0"
"it compiled without the annotation. do you want me to add it, just for safety of mind i am pretty happy to have it private, because it means you can not use the constructor in a subclassor without reflection hacks. i should add an explicit test, though i did not check the libcore tests, yet, for indirect enforcement . while this is exercised in run-tests, a miss is bad, because at the time of throwing this for repeat initialization error, the runtime would abort withoutiti'd think a reflection test would be good enough, and that would allow it to stay private.";"0"
"i think i actually should not have removed this because there is now a bunch of crapin my working directory...";"1"
"could you please also remove these trailing spaces.";"0"
"service_host should not be needed.";"0"
"why not pci_device2.updated_at = timeutils.utcnow";"0"
"the leading _ should be removed.";"0"
"dumb idea, in that case last == first";"0"
"this rule looks like useless";"0"
"you are right i'll remove this useless classes";"0"
"as noted below, i think you need to assert what you support here. right now, if a user does rescue on an instance booted from volume, it looks to me like the following will happen: * root_vhd_path will return a non-existent path * self._vmutils.detach_vm_disk will silently do nothing 1 * new disk with invalid path with be added 2 this definitely will not work as the user intends. as it is unsupported at the moment that is fine, butitwould be much nicer to the user to tell them that with a clear error message rather than leaving them wondering why their rescued instance does not work. also, i haven't looked at the interaction with unrescue, butitis critical that the above mess can be unwound with unrescue. if it currently work it is presumably just luck : tl;dr not supporting everything is fine, butithink you need to explicitly check that root_vhd_path exists and there is only 1 disk. if not, you need to error out early. 1 this might be generally bad. seems like the sort of thing you'd want to know if it did not work. separate issue, though. 2 i do not know if this will explode or not.";"0"
"pdb should be removed.";"0"
"sg_rules = sg_rules_to_delete";"0"
"is it suppose to be ""param=req.get_param""";"0"
"arggregate should really be aggregate, here and below.";"0"
"eww. yes i suggested the ternary there, butthat is fugly. : if deps_filter_fn is none: deps_filter_fn = lambda x:x self.deps_filter_fn = deps_filter_fn";"1"
"can we make this a frozenset";"0"
"yet another dbaccess";"0"
"as per our discussion: i agree to the basic reason behind not using dictionary look-ups in code. in this case, all that the module does is wrap around these lookups in read-only accessors. complex logic should never enter this module. so i'll let this be.";"0"
"use addcleanup instead of teardown.";"0"
"tripleo instead of tripleo.";"0"
"errno = 0;";"0"
"this is ugly workaround. my mingw does not have crc32 package. will upgrade my mingw and remove this patch. thanks for reminding me that.";"0"
"actually you erase partition with boot data kernel, initrd, grub config, etc. here, not just boot sector : if you want to make the server unbootable you can remove grub from mbr, here is bash code which does that:";"0"
"no not really, logger is called a few times, butits simple enough to drill down. this is a silly function really lol";"1"
"stupid, eh :";"1"
"you left the 'host_cpu_info' field in the returned stats dictionary, but you've removed the unit test for it here... either remove the 'host_cpu_info' field from the stats dictionary or keep this unit test in : note that on line 705 in nova/virt/xenapi/fake.py you changed the return value for the host_cpu_info field, so this unit test will need to be modified accordingly.";"0"
"darn those were already there...:";"1"
"yes, you should check that you are actually not returning anything in the parent_id field.";"0"
"define this lambda before this call, and use the variable here. i.e., auto diagosismsgcallback = fd {...} processpecialkernelparameter context, diagnosismsgcallback, ... as is, the code looks a bit clumsy.";"0"
"no, this is created once we have procs_. if it is null, hwc should die in a fire.";"0"
"all those should belong to the tracker. globals are evil.";"1"
"somewhere, somehow, this 'cd' command will get us into trouble. it would be wise if this were executed in a subshell";"0"
"that is a shittytest indeed.";"1"
"this is node's uuid.";"0"
"wow - i've only just realized all out db cols are utf8 - what a waste.";"0"
"should this also have an ' die'";"0"
"just readability nit: overcloud_role = overcloud_roles count_obj.overcloud_role_id image_name = overcloud_role.image_name flavor_id = overcloud_role.flavor_id";"0"
"this order seems rather insufficient to find all duplicates for the equality below. it would be better to use std::less<srcmapelem>.";"0"
"hang on.. logic might not be good here.";"0"
"it was deliberate remove. it was useless return. ;";"0"
"curious as to why the caller is not also making use of a flat_set";"0"
"yes, cmd_node->wait_q_enabled has been set to false in mwifiex_clean_cmd_node when we recycle the cmd_node.";"0"
"this alloc related one seemed to be a false positive. change the loop to only access aptr 0 and store a 0 in the loop it is fine, within the resize call and you still get a warning. this is involved but if you split the changes, then you could post a bug:";"0"
"consts.default_bridges_names.br_prv";"0"
"totally agree that vif makes more sense. it annoys the shitout of me when i see openstack unnecessarily re-defining terms that carry a pre-defined meaning for the rest of the it industry.";"1"
"well the logic of claiming/consuming instances is not what caused this bug and it is well tested . what caused it is moving to and from objects in the resource tracker, and then dropping an important field due to that. so in the resource tracker we have pci pool dicts would contain numa_node as a key , butthen we convert them to objects 1 by using pcidevicepool.from_dict, which would drop the field and save it as part of tags. upon reading them in on the scheduler side, we call pcidevicepool.to_dict, which of course will not know about the 'numa_node' since it is not on the object. for filtering to work numa_node needs to match and it is actually gone so all requests fail. the code in 1 merged 2 months after the patch that introduces numa awareness of pci devices. tl; dr - this got borken by our neverending objects fuckery - it was not broken by definition as you seem to imply with your comments here. the commit message is misleading though so i will update it now. 1";"1"
"i never claimed to be competent, mr. spear...";"0"
"installdrive=sda ksdevice=eth0 forceformat=yes";"0"
"this is wrong. oustringbuffer anewname nnamelen+20 indicates the initial *capacity* of the oustringbuffer.";"0"
"actually, the client is intended to be as ""dumb"" as possible. we might want for example to test passing extra data.";"0"
"no need for ""if"" test since null is a valid dummy clock.";"0"
"container should be empty already, so need to remove";"0"
"maybe its a stupid question... but what do you mean with n+k pools";"0"
"can move this up and eliminate the white space.";"0"
"physical_id = 'fake id' mock_create.return_value = physical_id";"0"
"sam, that is right. for segmented objects, we can only serve the multiranges fall into the first page. if we do not have this restriction, then the segment list will have to include segments all the pages. that makes the pagenation and container_listing_limit basically useless.";"0"
"this file is missing, i suppose";"0"
"use commonclassnames.java_util_list and java_util_array_list";"0"
"yes, none or insignificant if you prefer. importlib or not, you need to call shellcommands to plug your interface like ovs-vsctl in a shell";"0"
"... dump into a server since mitaka release.";"0"
"i was just wondering why this lower-bound clamping was outside 'art_quick_indexof' on mips, whereas it is _inside_ that entrypoint on arm and on arm64";"0"
"use valid uuid. i would use the fake.will_not_be_found_id here.";"0"
"it looks like git cl format is responsible for this ugliness. sorry";"0"
"block heka";"0"
"nit optional: you canuse json.dump ..., sort_keys=true";"0"
"you should ignore oserror with errno == 1 here. i think this deserves a separate test. you should mock popen.kill to raise oserror with errno 1 or permissionerror in py3 and see if this code handles it well.";"0"
"yeah, it sort of sucksbut celery returns a dictionary of strings for its' event. the dictionary has a result value that is a string, but a string of a dictionary. so you have to tell python that this string is actually a dictionary, please convertit so - {u'result':u'{'some':result'}'} to {u'result:{'some':'result'}}";"1"
"the kwarg here should be instance_uuid, not instance_id:";"0"
"input_file will be undefined. i believe you need pep8.input_file.";"0"
"ah, i did not realize isactive takes an error... yuckmaybe go back to you previous version... butthen again, see comment below -- this check should probably go away.";"1"
"any takers on fixing i can take a stab atittomorrow 2/13 .";"0"
"renaming the classplease also rename the module name from dummy.py to e.g. existing.py";"0"
"maybe we should get rid of this as well";"0"
"ah ok. stupid gerrit...";"1"
"use **kwargs";"0"
"dammit, i ignore this, update later";"1"
"why do you make stream tokenizer in public. i think you are misused tokeniterator. if you want a tokenizer, create it yourself.";"0"
"for consistency, just use the google-style docstring see other locations in this file";"0"
"to have a test case that reproduce the issue, i think this three lines must be removed.";"0"
"hmm, what should we do when these early returns are hit while there is pending receive request currently it will enter deadlock.";"0"
"nit: commit message lost some newline chars. not worth a respin though.";"0"
"why not just use a 'for' loop for temp_size = 0; temp_size < ...; temp_zone++ .";"0"
"this is a dirtiness issue on the builder... deleted config-dump.json from the config, butthe builder still thinks this is owned by chromeos-config-bsp-coral-private-0.0.1-r1097 r1097 is stale ... it should be r1103 ... let me check into this a bit";"0"
"nullptr /* controller_service_worker_info */";"0"
"louis '_catch_all' <- private '__catch_all' <- if you dare to hack it, i'll chase you down and 3 generations above/below you.";"0"
"yes, i know the code works, it just looks strange as user might expectitto have some return value. that is why i said that break the return into its own line could be cleaner. if you do not like repeated return, move all these code inside try block so you do not need return in each except.";"0"
"whoa, dunno. never ventured down to this part of the code. seems like we could kill it...";"0"
"this is what is in the base test - there are 2 ips meant to be assigned to the port, the first from the subnet and the second a specific one. test is kind of idiotic";"0"
"policy_idx = swift_dir";"0"
"for completeness, you should also have 'fatal' and 'trace'";"0"
"how long does this take the run queue idle needs to be really fast, since it will block everything in goofy. if it takes a long time, maybe it should be a separate thread after all.";"0"
"this ends up looking pretty weird, perhaps you want to say parts = swift_utils.split_path ... version, account, container, obj = parts";"0"
"these two lines should be removed now.";"0"
"iptables instead of iptable.";"0"
"stupid space";"1"
"gen_syscalls does not include comments. if anything, the comments here are pointless.";"0"
"dumb question: after the dongle is removed after the test finishes, does the next dongle inserted potentially the same dongle go back to getting a dhcped address";"0"
"could you delete this comment if we do not need it";"0"
"will it be ok to change r8_form from boolean to enum with say none, yes_in_r, yes_in_b and change the logic accordingly r8_reg_reg_form will be eliminated.";"0"
"consts.network_notation.cidr";"0"
"you have to increae mmio_base and irq for the next device. kinda awful, butits what we have for now.";"0"
"dumb question: do you need to free this after it is non-null";"0"
"that initialization is useless.";"0"
"my_instnace should be my_instance";"0"
"self.health_manager = health_manager";"0"
"here is mistake with cluster_name, it should be self._volumeops = volumeops.vmwarevolumeops self._session, self._cluster_name";"0"
"this should be marked for translation";"0"
"are you sure it should be uid, not id with fk";"0"
"you are superfluous space.";"0"
"return_value assignment. you reassing it in l345 iianm";"0"
"there already is a method which does this - androidresourceutil#getfieldnamebyresourcename";"0"
"add information see above has very limited support i.e. it is useless";"0"
"matter of taste: i'd call this raiseexceptionifclosed.";"0"
"i was tired, this is a dumb name. should at least be popex... it is not an extension so ext makes no sense.";"0"
"that is racy. you probably need to use some pthread synchronization primitive.";"0"
"nit: maybe die here right away";"0"
"the above two vars are re-initialized below.";"0"
"yea i agree, this kinda stinks since it' not consistent :/";"0"
"fk to portprofile.profile_id";"0"
"i definitely agree we should not mix the two. i think the list syntax makes more sense in this case than it does in capabilities i previously made comments to this end on that spec, butthey got lost in a previous patchset, so i'll review it again soon . take a simple resource registry: resource_registry: os::tripleo::blockstorage: cinder-storage.yaml os::tripleo::compute: compute.yaml what that is saying is that when a template creates a resource of type blockstorage, it should use the cinder-storage.yaml file. taking the example from the capabilities: requires: deployment: puppet resource_registry: os::tripleo::controller: puppet/controller.yaml, docker/controller.yaml you as the template reader/maintainer, not as heat programmatically reading it are no longer able to see what template will be used. that information has moved to the ""requires"" area plus some additional logic that looks inside the templates themselves. now factor in the alternative in this spec for using a parameter driven approach. that is now a third place you need to look to understand which template s will be used to fulfill a given type, leaving us with the following to understand a set of templates: 1. look in the resource registry to see the mapping for a type. 2. if the mapping is a list, look at the requires and the contents of each template referenced to see which one will fulfill the requires. 3. look through the top level template itself for any resourcechain resources, determine the name of the parameter that is used to convey the list of templates in the chain, then resolve what the current value of that parameter is. imo, this is a rough experience for the user. we've taken the knowledge of how a stack will be created and spread it over the course of multiple areas and files. by comparison, my argument is that: - capabilities are not a black box resolution by heat, but rather just metadata the user can ask heat to introspect to determine valid mappings to make in the resource_registry. - chains are communicated inside of the registry itself. that flow leaves the mappings in a single place: the resource registry. it is simpler both for user comprehension and clients that may be layering on top of the templates.";"0"
"can you clean up these there are a few others in gltrace_*.{h,cpp}";"0"
"i still think you need a comment in the entry that is ""wrong"" rather than at the top, but hopefully we can just switch to parsing /proc/pid/exe instead.";"0"
"this should be a method called registertickers. it is used several places.";"0"
"and this check is useless because you used it before to move to this method";"0"
"crapspecifically recall that i needed to do that, although apparently forgot to do so ;";"1"
"what is this even doing should this be self._create_fake_pci_devs otherwise this is completely useless.";"0"
"ether_types.eth_type_ipv6";"0"
"i suspect you mean dracut-drivers.d here, rather than binary-deps.d";"0"
"if we add this board, will we have to start killing off the rest i mean... there can only be one!";"0"
"this assertion is as wrong as the one in getresourcename that you have already removed.";"0"
"can this land in an 'else' clause so that oserrors from os.kill do not get ignored if you want them to get ignored then update the comment below.";"0"
"well this kinda sucks";"1"
"this line is a duplicate of the line below, and should be removed.";"0"
"kguidlength is the length of a single guid, not the length of the array, no i think you need a new kmicrosoftimeguidslength that is initialized to arraysize kmicrosoftimeguidslength somewhere.";"0"
"looking back, geremy said the rule originated from valgrind accessing /proc/pid files. so maybe the two bugs above are for different issues";"0"
"seems like it would have been opts, matchers.haslength len opt_names";"0"
"> javascript: stupidest thing ever so interesting :d it seems you are asking if this can be treated as plain text. but i do not think gurl is smart enough to understand javascript syntax. telling ""javacript: stupidest thing ever "" from ""javascript: var a = 0; alert a ; "" would be really difficult. so is_valid returns true for both i guess. roughly tested but ""javascript: stu..."" was not droppable with is_valid > we should not even try to check the javascript scheme here, this reminds me of our previous conversation. like !file_supported case, i think arrow on tabstrip and cursor icon should indicate that javascript scheme can not be dropped during drag session. so i think it is better to check the scheme here as long as we can. > i also wonder if this should not merge with omnibox drop handling so we just allow but auto-strip javascript: instead of banning it... this seems to be worth trying. let me give it a shot before long.";"1"
"tegra_grhost_aperture = tegra_fb_start = mem_start;";"0"
"even worse, *theaded*filewriter never existed. fixed.";"0"
"the copy destination should be $savanna_conf_dir/$savanna_conf_file";"0"
"let me just suggest a different approach: alt_names = { ""user_id"": ""user_id"", ""trustor_id"", ""trustee_id"" , ""domain_id"": ""user_domain_id"", ""project_domain_id"" , } forest = revoke_map for name in names: faggot = any_key = ""%s=*"" % name, for tree in forest: faggot.append tree.get any_key if name == ""role_id"": for role_id in token_data ""roles"" : faggot.append tree.get ""role_id=%s"" % role_id, else: for alt_name in alt_names.get name, name : faggot.append tree.get ""%s=%s"" % name, token_data alt_name faggot = filter none, faggot if not faggot: return false forest = faggot else: for leaf in forest: issued_before = leaf.get 'issued_before' if issued_before is none: continue if issued_before > token_data 'issued_at' : return true";"1"
"have i mentioned that self hrefs are retarded";"0"
"should have ' die' at the end of all these sed calls";"0"
"i dislike how looks new results. they are mess. first of all logs are not results the second thing is this ""format"" who the hellcare aboutitdo not be a geek... the third thing that table deosn't look nice i like previous variant with code sections";"1"
"everything below should be removed.";"0"
"oh sorry, you should still be building llvm-rs-cc.exe, but not libllvm.dll/libclang.dll. do you have the following cls in your client: <obviously i replied to the wrong section>";"0"
"these shemasshoudn't be deleted, i think.";"0"
"iirc dumb mapping of non-dumb buffers is not supported. it happens to work on some drivers, but we should probably not rely on it too much...";"0"
"remove the user kwarg, same reason as above";"0"
"i thoughtitreturned a list of tuples";"0"
"cbmem_console_p = preram_cbmem_console;";"0"
"what that is what you were saying...i am a dummy, got them mixed up. will fix";"0"
"strcmp we need to stop repeating this mistake. i am pretty sure you do not intend to support ""adb features-right-now-you-fucker :-";"1"
"supposedly yaml is a superset of json. in my limited experience with yaml it seems like dropping the enclosing braces and commas is all that is necessary to convert. {'foo': 'bar', 'baz': 'meh'} becomes 'foo': 'bar' 'baz': 'meh'";"0"
"i think you mean vmwareapisession._call_method";"0"
"ha. ""you are the worst client_id that i've ever heard of."" ""ah, but you have heard of me.""";"1"
"needs to be removed.";"0"
"this will not work for multiprocess test runs testr . you'll get distinct dir for every process, so locks become useless.";"0"
"useless => unused";"0"
"a typo, i am sure. let me go track down the idiot who wrote that in the first place. oh waititis me.";"1"
"yes, i think we should launch a new microversion.";"0"
"these are different mipi-dsi processor-to-peripheral transaction types. these values are written in the dsi packet header while configuring the mipi. however, out of all these we are using only one i.e mipi_dsi_generic_long_write. so in the patch-2 i have removed all the others and kept just one. if in future if we require other transaction type, those can be added then.";"0"
"i opened a cliff bug:";"0"
"yeah i am dumb :";"0"
"can you use a constant for 'obj_not_found'";"0"
"wtfis this mock in production code! it is -2";"1"
"i originally had it that way, butthen passing any unexpected query string arguments would throw a typeerror as not all methods use **kwargs. one could argue that we should disallow unexpected arguments, but keystoneclient is already passing a 'fresh' param stupid cache-busting artifact from original cloud servers client . i am inclined to leave it like this unless you are compelled to do otherwise.";"0"
"i do not get why you are adding a novaobject directly in the test why are not you mocking what you want, and play with these fake objects";"0"
"nit - iscsi.py";"0"
"nit: i would just call reloadcredentials passing no argument.";"0"
"this should be wrapped in a try/except block.";"0"
"unnecessary paren.";"0"
"not for this cl: do we care about smtpserver anymore should we just drop it and kill this testcase";"0"
"call of graphiccacheentry ctor with first push_back.";"0"
"as before this resource type is fuckedthat we i want to expose the state of resource type to inform admin/user that something have failed. i written my plan to fix/improve the situation in a todo.";"1"
"unless looks like hell";"1"
"let us remove the todo's";"0"
"should this be uknownformfieldtypeexception or unknownformfieldtypeexception.";"0"
"you can add the following in line 246 and you do not need to include venc_h264_if.h and and venc_vp8_if.h. struct venc_h264_handle; struct venc_vp8_handle; then here you canuse union { venc_h264_handle *h264e; venc_vp8_handle *vp8e; } h_enc;";"0"
"holy crapthats a lot of broken ones. wow.";"1"
"this looks ugly. you clutter the code with this nitpicky multiple-attempt call logic while not using it anywhere. if you really think it is a good thing to have, i suggest you to move it out to some util module probably as a separate patch . i do not see any purpose of it here.";"1"
"trylock with log_init_lock. failure, use a _local_ copy of map, otherwise save it for future use.";"0"
"yes, if you stare at them for too long they will punch you in the face!";"1"
"this dummy value will cause unit test failed";"0"
"s/to dissapear/to be removed/";"0"
"i think this is a great example of why ""the file that contains all the implementation detail crapought to have a more intention-revealing name...";"1"
"ignore malformed classpath entries";"0"
"you are also going to be lazy-loading these are not you";"0"
"this condition is stupid, pls chop it off.";"1"
"we should expect fields like free_disk_gb to be removed";"0"
"this param is mandatory, please, putitin the docstring";"0"
"can haz =, since == is a pointless bashism";"0"
"need discution. this schedulable is run before or after jayce dump why not moving it";"0"
"i think we should die if any of cinder_internal_tenant_project_id or cinder_internal_tenant_user_id is not set.";"0"
"should the workinprogress acl be removed";"0"
"argh, st3 killed me. done.";"0"
"these were dupes of includes up above, and were removed.";"0"
"i think this message should be removed.";"0"
"stupid question: should we be explicit that we are not preserving order here";"0"
"a ure lib cannot link against an oo lib; breaks on macos";"0"
"unfortunately, that will not passthe linter: cros 17:30 src/platform/dev >> cros lint 'f apache_l' ************* module dev.apache_log_metrics c: 96, 0: wrong continued indentation. 'chromeos_*_delta_test.bin-*' , bad-continuation c: 98, 0: wrong continued indentation. 'chromeos_*_full_test.bin-*' , bad-continuation";"0"
"very small nit: imagetypes should be image_types";"0"
"''iface.iscsi_ifacename''";"0"
"wow, that is ridiculous. any way we can make that more obvious does unittest_suite not print that out anywhere";"1"
"ok, we can start here, but we should be converging where we require multilib_usedep in all the ebuilds that use this";"0"
"you have lots of boilerplate additions for serialization and deserialization. why not write a webtest wrapper that handles that for you";"0"
"s/of useless/is useless/";"0"
"k8s_api should not be a associated with the object instance";"0"
"we probably should be using 'time.sleep' in vmops since that gets monkey patched.";"0"
"as ugly as it is, the 'new' standard for commit messages requires too strong of a word this bit of stutter: android: android: recommended.cfg: setup verity root for a/b";"1"
"need to have done in param";"0"
"ndk_analyze=1 complains r_debug may be null reaching here, and segfault by dereferencing it";"0"
"correct -- this is how 'gerrit' has always operated thus far. i agree it is crappybehavior.";"1"
"scrapthis, putitin header.";"0"
"you are rigtht, i will rewrite this topic.";"0"
"this seems not so useful/useless; remove it.";"0"
"i would prefer: remove useless exception catch in delete_volume";"0"
"this vim header should be removed.";"0"
"nit: ilo_object_mock = get_ilo_object_mock.return_value";"0"
"ah, i missed this comment. this may be why we see issues, in statemanagergl it will sync the active program before syncing the transform feedback so no, it wont go back and reset the program to the correct one for the upcoming draw call. you should resetithere, changing gl state while syncing dirty bits is one place we need to be careful.";"0"
"i think we should leave this as tgtadm.";"0"
"use utils.is_neutron instead.";"0"
"you also have a problem is cmd_len is less thatn what you read.";"0"
"remove mock_clients then.";"0"
"i'll ask bd to develop less ugly look";"1"
"this raw 1 << 9 is pretty ugly and we should probably add a #define in a future cl. yes, that is my fault...";"0"
"please take whichever approach you like. software sync itself already violates this location independent policy because soft sync blindly sends ecrw image to 'update' slot, which can be slot a or b . if we corrupt the active slot, all the expectations and image manipulations have to be adjusted accordingly active and update instead of a and b . so, it may be simpler to fix the sequence: boot a, corrupt a, reboot b, corrupt b, ... please note that fizz would not boot on type-c adapter if both a and b are corrupted. on a bj adapter, the dut still boots just like other boards because software sync can fix one of the slots.";"0"
"sachi, juno is end-of-life, there should not be any project that you are touching that uses juno.";"0"
"imo ""test_reset_share_replica_status""";"0"
"brackets need to be removed here, otherwise puppet complains.";"0"
"...but we should probably switch the tests over to using this, and then we can really kill deletecontents.";"0"
"this will not break if that is not true, butitll keep us from being a bunch of idiots if we do break it, so yeah. and it does protect against duplicates. done.";"1"
"tuple. test code should assume that whatitis testing is going to fuckup, and make themselves immutable/protective as a default course of action.";"1"
"no, it was dumb copy paste. thanks!";"0"
"this is a leftover and should be removed.";"0"
"eliminate backslash for continuation.";"0"
"usually we'll put getters/setters below non-trivial methods.";"0"
"do not you want the -q flag otherwise it might output junk you do not want. you probably also want to throw in -c so no random ascii chars show up helps when output is dumped .";"0"
"this gzip call is problematic, because it removes the '.gz' suffix from the image filename. therefore, when you run stack.sh a second time download_image will not detect that the image was already downloaded because it checks for the filename with the 'gz' suffix, which was cut off by the gzip call , and download it again. then, gzip will try to decompress this new file, which causes a conflict with the existing file.";"0"
"what the heck! i changed this, but somehow it was lost.";"1"
"i think clobbering earlier possibly killing a previous run is fine";"0"
"replication_targets should be reported as a capability, so you can do a 'cinder get-capabilities <host>' to see the targets you can failover to";"0"
"this is misleading: if i do: sh tools/coding-checks.sh -fp you'll get an error. i think you can keep option or do: $0 -f --flake8 -p --pylint";"0"
"this change looks useless, now";"0"
"ugh. it is not magic --- you've hit on the explanation for l394. fuckingc programmers. done. l414 too.";"1"
"running this locally... it looks like there are some tests that do not have a widget focusmanager :/. just a few. butto fix i think we need to wrap this like if auto* focus_manager = getwidget ->getfocusmanager { window makefirstresponder:bridge_->ns_view ; bridge_->setfocusmanager focus_manager ; } i filed to track";"0"
"i'll remove them.";"0"
"you are throwing an exception here, so this should be an error message.";"0"
"should self.tenant_id be self.project_id see line 110, etc.";"0"
"seems as a last step we should execute all ostf tests should not we";"0"
"yuck..maybe it is time we start thinking about an actual structure for requested_networks because this is getting out of hand.";"1"
"does this need to be a mock ie, why can not we use the regular downloaditem here generally mocks confuse and frighten me :";"0"
"why not a 'progress' prop here";"0"
"usually we put the newly coming version below the old version, so please put this line below line 81.";"0"
"i do not think that we need this method - this is only for the esx driver";"0"
"yes, it would be. but by now i just kill double conversion from numericbox and metricbox works the same as before.";"0"
"#noqa clean up is being done in . please honor this work.";"0"
"imho support gre should be die. we workarounded it into 7.0 just as temporary solution.";"0"
"/* libqmi_qmictl_h */";"0"
"needs a colon or a reformulation to be an actual sentence.";"0"
"hmm. this really sucksi made the change after your comments. see patch 12 and onwards. i guess that at some point, i made changes in the patches that depends on this using 'git review -d', and the dependent patches may not be up to date. and when doing ""git review"" on those, it put new patches for this one as well. thanks for keeping an eye on this! i would have to think twice on putting up dependent patches later on. it is really hard to manage them. let me recover the correct patch for this one.";"1"
"this if block is too big, how about do if not if not self.is_test_completed : return false ....";"0"
"dumb comment but do we need the msg variable here";"0"
"nit: kills";"0"
"mpaudiotrack should be initialized.";"0"
"i mean, sure yeah - we should not suck.. derailing unrelated work because we lack infra in the code to do things we kind of sort ofagreed to do in a session at the summit... let us just putitthis way: it is ""very nova"" i'll see if i can find a reasonable place to cache this data.";"1"
"i am not sure why you need to mock _get_location. i do not even know what calls it.";"0"
"sorry for my stupid question, but i do not know how to 'serialize' these methods call per instance.";"0"
"i am not a fan of this name. net_context res_context";"0"
"ugh, this is ugly. unless i am misreading this, struct logger_list is internal to the logger only and you can change its definition with impunity. so just add another flag rather than abusing the mode field.";"1"
"see wireless.py for examples on setting up flimflam properties";"0"
"d'oh... stupid copy-and-paste errors. someday i'll figure out how to type zh-cn directly into emacs...";"0"
"useless comment. delete please.";"0"
"that was half-assed. :- how about the other ones";"1"
"please use ""call_args_list"" to check history calls";"0"
"nitpick ""parameter"" is not that long to type ; _is_parameter_blank would sound better";"0"
"we should also remove free_disk_gb, current_workload, memory_mb_used, local_gb_used, free_ram_mb, running_vms";"0"
"qpid configs under oslo_messaging_qpid";"0"
"nitpick: the ""os"" here is an author hint to ""oliver specht"" -- usually its nice to remove those too -- thats what dscms are for ...";"0"
"would you mind starting with common.mk so we do not have to portitover later to get qemu-* unittests, valgrind, etc and if you think it suckshorribly, that is fine as long as we can fix it :";"1"
"this is wrong; you want to essentially copy the implementation from stack_task: destroy_task = scheduler.dependencytaskgroup self.dependencies, resource.resource.destroy, reverse=true";"0"
"oh. that is annoying. so to actually use this, we'd have to define __glibc__";"0"
"nit if trying to keep the pseudo-alphabetical order, place this after oslo.middleware oslo.db is messing up the alphabetical order";"0"
"just friggin image tests that do not use warlock";"0"
"so dumb question. we had ironic_qemu_hook_path before. what if someone is using that and then upgrades to this. it'll break their environment. is this something we care about i am not sure since this is devstack and not our code.";"0"
"it seems to me it will be simpler to rename this to 'ack' and have ack=true by default. having code doing ""if not no_ack"" sounds dumb :";"0"
"the only issue is that we dump the stderr in the autotest log but we dump syslog in a different file, butthat is still fine since we dump both. see comment below.";"0"
"done in a separate commit";"0"
"i disagree. these agent functional tests l3 agent, and now metadata, ovs and dhcp are supposed to test agents in isolation since our agent unit tests kind of suckthe full-stack integration testing and tempest test the interaction between the controller and its agents.";"1"
"witchcraft! actually, the c++ mock library kind of suckscompared to what is available in java. java + mockito the mock library + guice/dagger both dependency injection libraries, which are crazy powerful makes testing faking dependencies a zillion times easier than in c++";"1"
"we can now use get_first_node_by_host_for_old_compat - which is slightly less horrible than this.";"0"
"these mocks are the same for all tests and should be moved to the classlevel";"0"
"indentation sucks";"1"
"i think you get the vlan id from conf directly. cls.vlan_1 = conf.l2gw.vlan_1";"0"
"i still prefer just advertiseroutes, but i will not push hard since i am who speaks worst english here :";"0"
"else /*current_method == nullptr*/ { // abstract method masks all defaults if vtable_impl->isabstract !vtable_impl->isdefaultconflicting { ... } // else do not need do anything }";"0"
"updated_at should be nullable=false because upon insertion, it should and will be set.";"0"
"i believe it is msan reporting problems. i am not sure exactly what evan wasseeing, but i will mention we add this switch to a bunch of other suites: views_mus_unittests, ash_unittests, windowserverservicetestbase. maybe evan is seeing the same issues as mentioned here:";"0"
"python3 suc*s...";"1"
"i am being a little stupid here. are you asking for explicit set_version, set_release, etc. methods";"0"
"this is already in collect_parts - we do it right before the list dir - and we *just* read the hashes pkl of the damndisk in build_reconstruction jobs - the process_job is green so we'll be going through this loop pretty fast at first. this can not be helpful to mount_check again here.";"1"
"as this note belongs to the bullet above, indentitmore so thatitis included in it";"0"
"nit: fwiw, rather than extracting you should also be able to just do cbfstool ""$rw_image_file"" extract -n ""$cbfs_name"" -f ecrw -r fw_main_a";"0"
"can you just create a getter for extendedwindow with ""create on first call"" behavior now it looks too ugly and error-prone";"1"
"do not you need to use std::unique_ptr<mirror::object* >";"0"
"i agree that 'a' should be removed";"0"
"argh..ok this was dumb. will clean up";"0"
"pypi-openstack seems to have gone walkabout";"0"
"wtfare you doing!";"1"
"we should remove openstack here";"0"
"nit: perhaps: bool flush_done = encoder_state_ == kflushing dqbuf.flags v4l2_buf_flag_last ; if dqbuf.m.planes 0 .bytesused == 0 flush_done { ... } else { ... } l.782: if flush_done { }";"0"
"mark histograms as obsolete; do not delete them.";"0"
"my git fu is weak; i'll put these back.";"0"
"the 'else' here is killing all the benefits we talked about tickless scheduling";"0"
"yeah, butthat duplicates the closecontainer calls. i like the single point of return and the guaranteed closes a little better. how strong is your preference";"0"
"scumbag gerrit threw away my comment. tl;did not rewrite: do it for linux too. that is how update.sh worked.";"1"
"the word 'assnot really good here=";"0"
"> i do not think sudoruncommand is ever mocked. i think we either > mock runcommand or some higher level functions. the > runcommandtestcase actually mocks runcommand. if that is the case, that is fine then.";"0"
"heh, too subtle to... ""allow"" these tests suck i hate them, but haven't managed to get rid of all of them yet the reason it changed from 10 to 8 is because we took two calls out of the job the ones we were making to ourselves . i am not sure if that helps address your issue here or not. but given the change being correct these tests have to change :d";"1"
"a possibly dumb question: will not this command remove also the basic flow entry for allowing the ovs instance to behave as a regular mac-based forwarding switch";"0"
"right, this is needed to remove threadchecker on dcheck-disabled build.";"0"
"kill empty line";"0"
"no reason for this to be a separate method; just put in runtest";"0"
"let us use /openrc cause we are going to have non-root users on slaves";"0"
"darn; this space impacts the link; i'll have to repush.";"1"
"there are 3 white spaces. remove one";"0"
"i'd like to see some white-space to make the bullets stand out.";"0"
"just use '!' as the rule. dummy:dummy is not valid rule i think";"0"
"i would asspull-right classto the button.";"1"
"you may want to explain in a comment for why this is needed. i.e. certain boards do not access the boot device prior to initializing dram, etc.";"0"
"you should passstd::unique_ptr<offlinepagearchiver> here.";"0"
"yeah. this comment is worse than unhelpful . comment removed.";"0"
"{{ keystone_public_port }}";"0"
"eh.. : why did not you define it as native python objects the same way it is done on lines 241-249 !";"0"
"init msamplertype and the msamplercount - just to have some non-garbage values.";"0"
"no. first, since you are using execvp but do not , you do not need to search the $path manually. second, just append "".bin"" to whatever main's argv 0 is, and assume/require that the wrapper and the thing it is wrapping live in the same directory. then we could invoke ./foo/bar/cgpt and if that particular cgpt is really the wrapper, then the actual binary would have to be ./foo/bar/cgpt.bin similarly, if we renamed it to anything else: mv foo/bar/cgpt foo/bar/hey mv foo/bar/cgpt.bin foo/bar/hey.bin ./foo/bar/hey";"0"
"i hate them too. i am glad you spoke up.";"1"
"avoid escaping newlines if possible. remove the backslash here.";"0"
"will using the extra 'l' kill you protocol is so much better than proto";"0"
"the type of two operands may not be consistent, 'int' should be removed here.";"0"
"use_cow = system_metadata 'image_disk_format' == 'qcow2'";"0"
"lakshmi/travis - is this going to cause problems if a namespace name is updated, doing a full reindex is going to lose any objects etc attached to it.";"0"
"warning message should be wrapped by _lw.";"0"
"unrelated to your change, butthis should be one line: dobin factory_setup/update_firmware_vars.py die";"0"
"please use , and ! instead of textual keywords also other places in this cl . i haven't checked butithink the coding style disallows use the 'or', 'and', 'not', ... keywords - if not, my view is thatitshould :- .";"0"
"use process_utils.spawn";"0"
"hi ben, pipefail is a bashism. you must change from #!/bin/sh to #!/bin/bash";"0"
"nitpick: work a*ro*und";"0"
"nit: for cases like this, use auto. you should not need to typedef texelfetchtable. although i am not sure you need a map here at all.";"0"
"since you are not passing in anything to trace_wsgi or doing any conditionals in itithink you can get rid of _outer and instead use ""trace_wsgi f """;"0"
"i'd prefer this call be squashed into the existing install_opendaylight.";"0"
"nit: put this on a new line below. same for javadoc below.";"0"
"note that cbuildbot_stages_unittest.py fails also, butthis was caused by so i ignored it.";"0"
"sessionowner session_owner_ = sessionowner::ktracingcontroller;";"0"
"could we kill this line";"0"
"looks like completely stupid rule for two-line resource.";"1"
"useless and obsolete";"0"
"nsxpluginv3testcase has more mocks than here. is that ok to have those extra ones here";"0"
"these are hardcoded here and in the zone functions. put them all in one place.";"0"
"good catch! re why: we were emitting the events in the wrong order previously.. this change happens to fix that too : the dns.create.create event should come before dns.recordset.create etc";"0"
"'devops/driver/dummy/*' can be added as well";"0"
"remove get_allowed_nic_networkgroups here.";"0"
"minor: parantheses are not needed. any devlink...";"0"
"should we kill those too";"0"
"shall we kill this";"0"
"darn editor.. will fix";"1"
"i tried doing this... there were issues with mocking trying to get a sizeof. i also checked the other classes implementing load and they all use these param types.";"0"
"if we chroot ever, this one will have to die, butitis fine for now.";"0"
"see: i do not see ""project"" or ""instance"". perhaps ""tenant"" and delete ""instance""";"0"
"nititwould be nice to have this rename ndb_utils as db_utils. so thatitis consistent across all the files in this patch.";"0"
"nit: arcbluetoothbridge* const bluetooth_bridge_;";"0"
"need to passcontext to save , and below as well. it appears that every test that calls this stubs it out to not require context, butitdoes not match the actual signature of save .";"0"
"use self.req at here directly";"0"
"can you remove these unneccesory spaces at the last";"0"
"hmm, somehow this does not sound explicit enough and can be still interpreted differently.";"0"
"why compare to true all the time if self.enable_redact:";"0"
"yes, stupid linter. complains that i should not put ; after }";"1"
"i do not know such a case. i'll run tests with notreached as a separate cl.";"0"
"can we put iscsi the last.";"0"
"can you kill this line too, it is a bogus uri";"1"
"i am going to remove the rebuild action as this will abort the live migration";"0"
"necessary to describe the reason of useless. maybe _get_instance_ips does not raise it, i guess.";"0"
"dumb question: is this test aiming at validating something different from test_update_security_group_to_default_fail";"0"
"2 * kentrysize; this still drops the existing feedback.";"0"
"you are setting the project_id to the tenant *name* i think, this should be con.tenant_id";"0"
"...shut up.";"1"
"nit : why not: elif file_content_length and content_length != file_content_length";"0"
"seems not done : , still need a std::move here i.e. get_app_id_callback_ = std::move get_app_id_callback ;";"0"
"you should strip trailing newline here with :-1";"0"
"leading white spaces will be removed in next patch set";"0"
"this is an o n operation executing over all of the subports, which makes this seem somewhat o n 2 . i think segmentation_ids needs to be a set rather thanalist, so that this does not become a bottleneck for trunks with potentially up to 4095 subports.";"0"
"i'll keep as is. the number of different result codes is going to make this ugly regardless.";"1"
"done. use a local object instead. this method is not performance critical so allocating a dummy object should not matter much.";"0"
"i will remove them";"0"
"just let this declare thatitthrows interruptedexception otherwise you have a bug if daemon.stop is called while waiting. it might claim finalization took 10 seconds when it really did not.";"0"
"good idea, lemme give it a shot";"0"
"expand this to note that no matter what, this instance you've created will be destroyed.";"0"
":o sfinae!!! *shakes fist*.";"0"
"i see you really do not like this command, over the last 15 days, it has actually been the most useful for me including those voltages when dealing over emails with clueless ""users""";"0"
"open bug against this garbage, remove";"0"
"pig job seems like an odd use, can you use something more realistic";"1"
"need a double colon :: here";"0"
"we should remove l18 to keep proper import order.";"0"
"do we really need a factory object which seems awfully java like in python";"0"
"ironic.conductor.utils.node_power_action";"0"
"""numpty"" is extremely britishy. please be less of an englishman in the future.";"1"
"you can simplify: mv ""${ed}""/usr/bin/stream{,.lmbench} die";"0"
"gotcha, just wanted to clarify.";"0"
"searching for <functional> does not mean you find lambdas. we use it for function pointers, too. in fact, except for igor's cmdline parser, i believe most use of lambdas has been scrubbed from the main files the only existence is in *tests* for the optimizing compiler and one assembler because it was the only typable way to get things done generically, languages without integrated reflection suck. . do not change things, yet. i was waiting for bdc to weigh in.";"1"
"i do not believe those kind of nits are useful at all.";"0"
"you are not using cmake-utils : you should be doing something like: src_configure { local mycmakeargs= $ cmake-utils_use_with openconnect cmake-utils_src_configure }";"0"
"i think '!primitiverestartworkaround' is useless. if dsttype and srctype both are gl_unsigned_short, primitiverestartworkaround must be false. if dsttype and srctype both are gl_unsigned_ uint, primitiverestartworkaround must be false. so there is no situation that dsttype equals srctype, meanwhile primitiverestartworkaround is true.";"0"
"not easily because we need to create the mojo request and passit the other handle into the widget_input_handler_manager it is kind of ugly. it is cleanest with a heap allocated object.";"0"
"please check the error message returned.";"0"
"const mb_mode_info *mbmi";"0"
"there is an open bug against this garbage being included in the token... remove";"0"
"should probably put ""adb shellin front of this, since it will likely be cut-n-paste'd.";"0"
"useless blank line here.";"0"
"all std types will be migrated to wtftypes once we move these classes from blink/public to blink/renderer once they have no dependents in content/. i do not think there is any value in temporarily moving this to webvector, since it should be a wtfvector.";"0"
"this is ugly but canall go away after cblume 's next patch. same in renderframeproxy.";"1"
"this initialization of self.sot is a waste.";"0"
"why not call idlutils.get_schema_helper directly";"0"
"let us remove volume_id from function parameter.";"0"
"wrong. managejackclasspath, putjackclasspathonpath, ...";"0"
"just: node_attrs_cb=map_color";"0"
"i would prefer self.dscp_ress = self.dscp_res + 's'";"0"
"fc entries must be controlled via 'maximum_flow_classifiers'.";"0"
"i think* this code suggests that video.requestpictureinpicture will hit dcheck when video.src = null is called. i am not sure. what do you think scriptpromise htmlvideoelementpictureinpicture::requestpictureinpicture scriptstate* script_state, htmlvideoelement element { ... scriptpromiseresolver* resolver = scriptpromiseresolver::create script_state ; scriptpromise promise = resolver->promise ; document.gettaskrunner tasktype::kmediaelementevent ->posttask from_here, wtfbind pictureinpicturecontrollerimpl::enterpictureinpicture, wrappersistent controller , wrappersistent element , wrappersistent resolver ; return promise;";"0"
"i liked having v21 in there to make it clear which code base its using, not we already have: openstack_compute_api_legacy_v2";"0"
"would this be more clear as os.kill pidfile_pid, 0";"0"
"our convention is to put 'then' at the end of the 'if' line";"0"
"these 3 lines should be executed in markphaseepilogue . we should return true here.";"0"
"hi hongbin, can we add an ut this is so rat!";"0"
"why do we need a deepcopy here why not mock_response.json.return_value = test_constants_v3.fake_port";"0"
"haha, i am idiot. i am shadowing this on l74.";"0"
"add it here - doc8 is a lint like job and those belong into pep8.";"0"
"a better place is in setentrypointfromjniptrsize below.";"0"
"fwiw, we have to kill all use of rootwrap in plugins. os-vif is mandated to use privsep instead.";"0"
"imho this validator should accept the name of argument better arguments that contains paths to templates otherwise it is ugly hardcoding";"1"
"this is ugly, but all it does is modify the render_passid. we do support cor for the root. added some braces to make it clearer.";"0"
"__init__.py should be empty.";"0"
"i believe this code block till line 44 should be extracted to is_valid_vlan_range new_range";"0"
"if you want to check thatitworks for invalid yaml you should mock yaml.load and make yamlerror a side_effect there.";"0"
"will it be better to throw exception if total_memory_size = 0";"0"
"i think we can kill 1 indentation level by making this check part of the ""if"" structure.";"0"
"it gets pretty ugly. i'll push a version of the patch without :titlesonly: so people can easily see what i mean.";"0"
"this is a little dumb, but is important verify the state_less. if this check fail we could have conn track enable in a production firewall and it can reduce the efficiency in more than 2/4. i will change it as you asked.";"0"
"it is better if we wrap such traversal into a function.";"0"
"paste garbage, will add warning.";"0"
"'_' clashes with wide-used gettext translation function. i know another popular idiom 'dummy', for example: dummy, my_var = some_tuple";"0"
"nit: lets get rid of the white spaces";"0"
"heh, rebase crap";"1"
"looks like we can remove both check_*.sh files too...";"0"
"self.set_error = set_error";"0"
"this is redundant as the baseadminnetworktest already creates an admin manager. so it would be enough to say: cls.identity_manager = cls.os_admin.identity_client";"0"
"please, instead of 2 large if blocks make functions for each and call this func. also, do if dest->else, if not something->else looks silly";"1"
"i have a personal pet peeve against python 2.x's ""range""... why the hellwould you ever want ""range"" instead of ""xrange"" to save a letter when typing the code ridiculous! it is not my fault python made range inefficient and then added xrange. anyway, i guess i'll spell it ""xrange"" here to avoid all the extra typing for some six-based ""xrange for all pythons""";"1"
"this is ugly. if you vertically align the tuples, and change the outer quotes to double quotes so you do not need backslashes around the inner quotes, it will be more readable.";"1"
"a failed copy_to_user should not result in a -enodev.";"0"
"it would be nice if we could also get rid of onfirstsurfaceactivation.";"0"
"die";"0"
"what are these libs are they large gerrit is not showing me. license we are trying hard to avoid adding binaries as much as possible since git does not handle it well.";"0"
"qwidget should be before any stl headers asstl is a built-in library and qt is just a 3rd party , and, imo, ui_*.h should also go before system headers";"0"
"if you set ''block_migration''";"0"
"unfortunately this will no longer work. the only reason the ugly code on the left works is because you are calling delete on multiple rows. if you call delete on an individual object like you are doing here, it will not actually be purged because delete in the model is overridden to just update deleted=1. you'll have to do this differently. i think the ""right"" solution is to remove the unique constraint on name and flavorid in instance types and do checking in the create code to make sure you are not creating a duplicate. this would allow deleted instance types to continue to exist. this seems preferrable as you probably want the old types to continue to exist for calculating usage, etc. this would allow us to get rid of purge entirely.";"1"
"this comment is unnecessary after the refactor and should be removed.";"0"
"rest seems like too generic name and it is not clear in code what the hellrest means.";"1"
"you want ""$ "", not $*";"0"
"will we eventually kill self.root_helper from linuxinterfacedriver";"0"
"introduce static constexpr size_t kmipsbitsperword = kmipswordsize * kbitsperbyte; and use it instead of '32', here and below.";"0"
"the should be moved down with the die";"0"
"this javadoc seems out of date. parentstyle is not there anymore and some other params are missing.";"0"
"this looks like a very ugly hack which is also very fragile, are there absolutely no other way to do this check";"1"
"dammit :";"1"
"maybe i think for typical network lingo that might be overkill... making a constant for ""tcp"" seems a bit on the ridiculous side. :p";"1"
"this whole idea of stashing away the lcd_base_addr being passed in from another function so we canuse it over here in this other function seems pretty silly. why do not we just passit into this function";"0"
"oops, deleted an extra test. i'll fix that too. stupid rebase merge conflicts!";"0"
"maybe you need manually edit this file to enable the 64-bit host build. ex: fu fu-ubuntu:/disk/dev/aosp/build$ git diff diff --git a/core/envsetup.mk b/core/envsetup.mk index d0b5846..f48cc25 100644 --- a/core/envsetup.mk +++ b/core/envsetup.mk -71,7 +71,7 endif # after we default to 64-bit host build. ifeq ,$ build_host_64bit # default to 32-bit-by-default multilib host build. -host_prefer_32_bit := true +host_prefer_32_bit := false endif # host_arch";"0"
"is this only going to be used by a single test if so, i do not think there is any reason to put this in a subpackage. note that the rules about toplevel identifiers in test files have changed thanks to nya :";"0"
"can this entire thing be as follows dut = s for s in serials if s != self.th.hla_serial if len dut != 1: raise runtimeerror '...' else self.hla_serial = dut 0 return";"0"
"hds hnas driver ... like cinder driver.";"0"
"status being an inout is probably the thing i hate the most about icu.";"0"
"in an annoying middle school english teacher's high pitched voice you are missing a period at the end of your sentences appu!";"0"
"this restriction is useless without vcenter condition. lines #64-67 should be removed.";"0"
"nit: spaces around =, i.e.: while pid = waitpid -1, status, 0 != child { ... }";"0"
"users should be possessive, so users'";"0"
"should this be in the harouter since you have named it to 'snat_ns_name"", should it not be in dvrhaedgerouter.";"0"
"yeah, this decorator should be removed.";"0"
"use mocks... why do you use object fake_server = mock.magicmock";"0"
"can you use mock with side_effect to call your fake methods";"0"
"damni was trying to punt this onto some unsuspecting future noogler called pprabu.";"1"
"__init__.py should be empty";"0"
"need a paragraph here about the fact that open vswitch or later, ml2 is only a choice, and you can see others options in the config reference. similarly explain that gre has been chosen over others.";"0"
"nit: remove this extra padding";"0"
"<nerd_mode>this is not pep257 compliant. i am not sure flake8 checks that. fix only if you are nerd. real nerds canalso take the same action on the rest of comments in this patch.</nerd_mode>";"1"
"heh, that sucks:";"1"
"invalidbdmoverquota name is weird...";"1"
"could this be beforenextrender instead of after";"0"
"clear defalt value in config py";"0"
"it is because i am an idiot. i was working on that side to getitto compile but somehow just missed the fact that i need to basically reimplement everything over there.";"0"
"because of this bullshithere i had to revert this commit on master as it was filling up /tmp here and it looks like on ci too:";"1"
"is python-virtualenv already python3 or do you require python3-virtualenv here otherwise python3-dev would be nonsense, no";"0"
"field_names = field_names or obj_cls.primary_keys";"0"
"we probably can get rid of this, this ebuild is for the atmel touch pad on rambi, which does not exist on cranky.";"0"
"you should passthe entire datastore object, notits properties";"0"
"are we sure about this an agent could manage hundreds of haproxy instances. why log both to the agent and the haproxy specific log file this must be a stupid question but do not we just direct haproxy to log directly to a file and get rid of the unix domain socket and all of this complexity";"0"
"by including one api header per property, we have a lot of duplicates. i am guessing the compilers ignore dupes, butitlooks kinda gross in the generated code. do we care about this meade";"0"
"i'd put this in build_docs.sh as that script can not go away just yet.";"0"
"ah, i had tried that but got various build errors regarding libprotobuf-mutator, so was not sure whether that cl is supposed to build at all. here's the error fwiw it is possible i am doing something stupid, i am not too familiar with platform/ec : cr e43b469f3... mnissler toroa /trunk/src/platform/ec $ board=cr50; make -j buildfuzztests build host-cr50_fuzz build host-host_command_fuzz make 1 : 'build/host/host_command_fuzz/host_command_fuzz.exe' is up to date. make obj=/mnt/host/source/src/platform/ec/build/host/cr50_fuzz/cryptoc support_unaligned=1 config_upto_sha512=y -c /mnt/host/source/src/third_party/cryptoc make 2 : '/mnt/host/source/src/platform/ec/build/host/cr50_fuzz/cryptoc/libcryptoc.a' is up to date. cxx rw/fuzz/cr50_fuzz.o fuzz/cr50_fuzz.cc:14:10: fatal error: 'src/libfuzzer/libfuzzer_macro.h' file not found #include <src/libfuzzer/libfuzzer_macro.h> 1 error generated. make 1 : *** makefile.rules:444: build/host/cr50_fuzz/rw/fuzz/cr50_fuzz.o error 1 make: *** makefile.rules:336: host-cr50_fuzz error 2";"0"
"yeah, i think this sucksless.";"1"
"on arm64 you'll be screwedhere, will not you you'll start with virtual and go to physical";"1"
"i think 1 should be removed.";"0"
"ahh la virgola la virgola virgola lthe";"0"
"ah, i suckat mustache. i see why you can not do this now.";"1"
"i hope function serialization will be removed by js blocks :";"0"
"oy vey. that is really ugly";"1"
"well that sucksi changed to std::unique_ptr, but let me know if there is a better way to do this.";"1"
"what you do not like ""spew"" that is going to be word of the year for 2016, just you wait :";"0"
"super-nit: end comment with period. here and elsewhere.";"0"
"this is a little ugly, but will help get soong enabled with use_soong=true and can go away assoong as we have prebuilt support in soong and can put an android.bp file in libc/zoneinfo";"1"
"this is what happens when you witch from vi to nano for editing your commit mesage";"0"
"shoot! how did i miss that";"1"
"this could just be a mock with side_effect = dbexc.dbduplicateentry, couldn'tit";"0"
"can not you use dvrroutercomputenode here when appropriate and kill _is_this_snat_host completely";"0"
"q: in 'def update_address_pairs_on_port' the main difference i can see from what was previously done here is to assign new_pairs to the updated_port address pairs. is that the actual fix here, i mean the reason this method was returning existing rather than updated port info";"0"
"the rest of the keystore methods operate on uint8_t* and size_t instead of a std::string.";"0"
"see the redhatci results; this is failing == ""no package =:- available.""";"0"
"default is useless in migrations. use server_default. more information here -";"0"
"you could probably use an empty std::string just fine.";"0"
"you should use objects.consistencygroup.get_by_id .";"0"
"damni always confuse that. maybe because it begins with a. :";"1"
"when i am using openocd, i have to kill the openocd command, otherwise it keeps running in the background.";"0"
"this is a pointless gecos. please put real info here, or omitit";"0"
"this prop should not be called so - it show tight coupling to one of the possible parents. you should name it according to what this prop controls - like renderlogslink of discardingpossible or nodeoperationspossible";"0"
"_bus and _addr should be removed, as they are not used in a dt build.";"0"
"in that case you might as well have dptr as a uchar *";"0"
"hmm, returning here unconditionally seems wrong - we haven't run validatejsonstring for the correctly-typed entries after fixing this, it'd be good to have a unit test for this case.";"0"
"pluggableprotectionprovider";"0"
"/* libqmi_file_h */";"0"
"table=l3_agent.fip_rt_tbl";"0"
"bug here: 'self' should be removed";"0"
"ack. safearray sucks";"1"
"i'd be very careful on raising the lock mode on read, you might kill the throughput unnecessarily.";"0"
"initialization with none is strange. do you really need this";"0"
"s/ironic node's/the ironic node's/";"0"
"i also prefer dumb classin general. however i saw readability of test code introduced in benefiting from this mock, so i am supportive of mockwebcrypto.";"0"
"gah, i always get that one wrong. silly english language..";"1"
"cls instead of combinationevaluator must be used here.";"0"
"sa.foreignkeyconstraint 'project_group_id' , 'project_groups.id' , ,";"0"
"d'oh! shitsorry... you should've told me that something broke for you. i'll fix it right away.";"1"
"makes sense, will push another patchset.";"0"
"if you uncuddle the first, you should generally uncuddle the last '...': { ..., },";"0"
"hypervisors should probably take **query params";"0"
"msg = _ 'failed getting loadbalancer % value s: % ex s' % {'value': lb_identity, 'ex': six.text_type ex } will not passpep8 or your suggestion is also good i think.";"0"
"this example is for ovs-dpdk. can you also add an exmaple for plain ovs case";"0"
"crapi thought i had updated this prior to submitting. very nice catch. it was a comment and a passstatement. will update.";"1"
"canuse use emplace here factories_.emplace id, factory ;";"0"
"commit should be removed too.";"0"
"should this be admin_password same below.";"0"
"could you add this check to ""run_tests.sh"" as well";"0"
"miguel nah! ; you talk nonsense";"1"
"<5> 115.215850 type=1400 audit 1384542176.247:35 : avc: denied { read } for pid=457 comm=""mediaserver"" scontext=u:r:mediaserver:s0 tcontext=u:r:mediaserver:s0 tclassocket";"0"
"this is kind of ugly - why do not we get rid of this crapnow we do not need it here anymore. we should in theory be able to kill build_request_spec now as we have that logic encapsulated in the backporting code. and also we can get rid of from_primitives really and just leave the backporting code in the object.";"1"
"dammit, i guessed this wouldn't work :";"1"
"this is a bit expensive at the moment, because it is called twice on serialization. the way to get around this is to use setupcontext/teardowncontext: this seems to keep coming up, maybe we should just fix";"0"
"this looks like useless also";"0"
"useless outer parentheses";"0"
"yeah, you might need more craphere. keys, for instance, if rpc messages start getting signed/encrypted. and yeah, other impls like zmq might have different config needs. you could punt and either put a json type blob in the db or perhaps a configuration key name to go pull everything out of nova flags. either way, it is probably not worth touching yet.";"1"
"i assume, therefore that once we have gone through all the projects, we'll be left with all the is_domain projects with the parent_id still set to none i think that is the right answer....but how does that square with the constraints on that attribute. is this a nullable fk";"0"
"i am assuming the testr listing is blowing up b/c you are not using a nested context to hold the mocks, like this: with contextlib.nested mock.patch.object .... , mock.patch.object .... as thing1, thing2 :";"0"
"it looks very ugly and unreadable. i prefer to avoid filters with multiline lambdas.";"1"
"this testcase looks useless as you have already covered this l41";"0"
"done through exception->dump .";"0"
"#error!";"1"
"again, raising self.xenapi.failure smells.";"0"
"then their style is just wrong. that little closing brace is all alone on that line and is making a sad puppy face.";"0"
"sorry if this is analbut should we capitalize ram";"1"
"alignment seems goofy here";"1"
"i really think that 'openssl req ...' command should be run on qpid host.";"0"
"darn..";"1"
"this looks like a weird api. why not adding cookie argument to methods like add_flow";"0"
"i think i like the idea. and while you are atittry killing dbus-c++-1. i suspect this should not be needed by libchromeos.";"0"
"remove all trailing white space";"0"
"you should have one resolve format shared for the dumb and virgl paths: .resolve_format = virtio_gpu_resolve_format the dumb path will still work, the virgl path will still not work.";"1"
"and what happens if this returns nil : probably best to add some exception handling here otherwise we'll get more of the lovely nilclasshas no split method crap";"1"
"hi sergey, thanks for helping with the changes. i have updated this one and your comment below on tarball. hopping it was done correctly :- . i did not get your comment on ""topic name"". i understood thatitneeds to be done by referring to the link you have provided but i was not sure where so i have edited commit message. please correct me if that is wrong. thanks!";"0"
"lol, this was dumb. this '/exchange' is hardcoded for rabbit t_t i'll add a config option like we have for other nodes";"0"
"nit: pid might be better..also make sure that this gets refreshed properly.";"0"
"can this be done in the first layertreeframesinkcreated and just so i understand, we do not really need this signal, except ui could block in a sync call for the entire duration of renderer start up + compositor initialization and whatnot, right can you write that in a comment this increases start up latency a bit which kind of sucks";"1"
"fwiw, i think it should be ''policy.v3cloudsample.json''";"0"
"i am not spending time on that here because: * the future will do this for us * it would require careful auditing of every call point to make sure we do not break things i want to kill optparsefirst before moving on to autofreeze";"0"
"self.assertgreater or self.assertnotequal";"0"
"you should remember one simple rule: nobody likes to read you are forcing people to read bullshit why not just saying in one sentece. rally allows you to set success criteria for every benchmark and check them for you. to do that you should put in benchmark configruation one more section ""sla"" like this ""failure_rate"": min: x max: y that means blabalbalba you can combine any of existing sla criterias. to find out of box supporting run rally info balbalbal then you can put asswell image with html report with success critera that passed and that failed overivew page of 2 benchmarks";"1"
"it will not work: scenario._create_volume.return_value = fake_volume attributeerror: 'instancemethod' object has no attribute 'return_value'";"0"
"remove this image it is useless";"0"
"only target_device_id will be printed now, the other things you are including will be ignored.";"0"
"have you considered passing rules instead to stop the nonsense or doing security_group_rules 'security_group_rules' everywhere : or is it painful";"0"
"i think bulider_mixins should be dropped after flattening like l51";"0"
"you could remove the bool by using ""!= kinvalidreg""...";"0"
"again, let us get rid of the gotos. c++ provides tools that make them largely unnecessary.";"0"
"this piece of code will be removed anyway";"0"
"this is cheating! maybe put the small one-liner of offending code into a static function inside the cc file that is annotated no_thread...";"1"
"so i actually disagree with this statement here. i think foolish consitency helps folks move accross projects and helps reduce human nitpicking over style. butthis discussion is for a seperate patch.";"1"
"adc_read_max";"0"
"i would agree. i first implemented killprocessgroup by calling the syscalls directly, which i think makes sense. kill should allow you to send any signal, but not to kill any process. the options here are doing that make killprocessgroup independently of process::kill , and then fixing process::kill; or fixing process::kill and make it safe to be called with a negative pid maybe add a boolean kill_process_group to kill . what do you think";"0"
"micro-nit: this docstring should all be on one line.";"0"
"hi haomeng, os.kill pid, 0 sends signal 0, which is basically ""are you running """;"0"
"since the typos are fixed in *.py, *.yaml and *.sh files, could you change this to: fix typos in kolla files";"0"
"dumb nitpick, mixed quote style on this line.";"0"
"you mean this method is async i was under the impression that this would be synchronous, and the layer calling into this would poll the status method or even get_amphora until it was booted.";"0"
"seems this belongs under the 'deprecations' section rather than upgrade.";"0"
"yeah, this was a dead end, that got in here, and i stupidly wrote tests for.";"0"
"these are not needed i will completely remove them.";"0"
"i think you probably want a 'mock_ibmi.assert_called_once_with xx, yy, zz '";"0"
"i was wondering myself. i am leaning towards naming this bvt-tast and in the vm smoke-tast. because bvt/smoke is an implementation detail of how tast achieves must_pass mustpassmight be better than must_passjust for laziness.";"0"
"kwargs self._parent_id_name =parent_id";"0"
"dammit. as usual, you are correct.";"1"
"nit: put this with the other clk_ops structs below";"0"
"should be executed after for loop ends.";"0"
"so far i have been restricting this to just help strings to keep the scope down.";"0"
"as i said, dumb question.. i assume i was just too blind to see it.";"0"
"grrr.... their docs suckgood eye. fixed.";"1"
"**action_kwargs";"0"
"...wouldn'titbe better to have fake snapshot here instead of magicmock";"0"
"okay, then why is not compile_ovs run with true instead of false that is how plugin.sh runs.";"0"
"would it be silly to have both end with /passwords";"0"
"sergey, i dislike --output-format cause in real life i have to every time to source to find how it is right to wite it: --out-format --output --format or output_format so it is crap it should be easy for users ... e.g. --json is much easier to remember.";"1"
"trivial setters should be in the header file. i.e. void set_separate_stderr { separate_stderr_ = separate_stderr; }";"0"
"to be ready for hacking update pls put a space between # and todo";"0"
"ugh, stupid pep8 ;-";"1"
"as part of i'd really like to just suckit up here and implement a generalized config option like ""backend_host_port"" or ""endpoint_port"" or something along those lines and just consolidate these rather than introducing another option here.";"1"
"i am not keen on using eval in commands to be executed. just curious as to why this is necessary.";"0"
"how is it supposed to work";"0"
"you do not need these parenths.";"0"
"well, the rationale here is that in production you usually run at info level; if something were to go wrong, it sucksas developer or admin, if we do not have access to such a key piece of information. you are left to switch to debug and hope you can hit the issue again.";"1"
"size_t you passed in a uint8_t ** .";"0"
"rropriate should be removed";"0"
"you already have a vol_ref. why do another db hit";"0"
"stupid question, but why the mix of bools and strings representing bools";"0"
"the only difference here is ""diff"" vs ""show"", and commit vs ""head"" assuming commit is not already ""head"" . you should extract those out.";"0"
"adapter, host_uuid, instance, and connection_info should be removed.";"0"
"did this #ifdef get screwedup";"1"
"build_toolchain $flags_toolchain";"0"
"i think that you should remove this";"0"
"this command needs to be executed by another user dbadmin and not root";"0"
"why is this diff from the other file or is this the new boilerplate crapwe have to insert everywhere now";"1"
"i think this will execute a different delete statement for each pair. would query.filter allowedaddresspair.port_id==id .delete achieve the same result";"0"
"you should be able to get rid of this and create a fake sysroot.";"0"
"should this be 'dummy' and same for teamdomain above";"0"
"zopfli is used by update_assets.sh to compress the assets when they change.";"0"
"i still think it needed some breathing room. i'll remove.";"0"
"should be ""garbage-collected""";"0"
"ditto re naked pointers";"0"
"fake_clients = fakes.fakeclients fake_clients._keystone = fakes.fakeclient fake_clients._keystone.services.create = mock.magicmock return_value=service";"0"
"why is this called twice with the first return value discarded";"0"
"ha... i am going to set up a pool on how many people will use this over the next 2 years thinking it is some kind of ""pureretry"" as opposed to a vendor unique thing : maybe you should've used purity :";"0"
"but if we will use context manager directly we get something like: with sql._get_main_context_manager .reader.using sql._context : ***** looks ugly";"1"
"shoot. that help string is typoed. the default value says 'weighers'... which is whatitshould be. :";"0"
"the execn flags should be removed now";"0"
"probably can kill off all the #ifdefs - this is only going on mips.";"0"
"what is the exception it raise maybe we can handle it with ""except error.autotesthostrunerror:""";"0"
"mm, do not think so. i'll kill it.";"0"
"this comment seems useless";"0"
"nit: maybe directorynotwritable";"0"
"hi kevin, i am glad you've brought this up as i wanted your expertise on this. i guess i am still not 100% clear as to when to use one versus the other and would like to get an explanation from you on the subject. looking at the code, i thought that, unless you have slaves to attach to, one should always use a slavetemplate a ""leaner"" object . i thought that one should use a mastertemplate if and only if you need to attach slavetemplates to. please clarify, thanks.";"0"
"as i understand it, jenkins slaves sorry anita can comprimise the master sorry again . so if we have the 'publishing' slave or any other less trusted slave connected to jenkins.o.o they could comprimise this slave which is meant to be higher security. this is the long way of asking, do we need a separate jenkins master for this.";"0"
"nitithink yuv is redundant here, max_width/max_height should be enough";"0"
"this gives you an ugly ""<class__main__.a'>"". how about a self.__class.__name__ instead also, you are repeating the same code twice just to check if the key exists. just catch the keyerror instead.";"1"
"should this be a bulletitem too";"0"
"project_name = self.options.os_project_name or self.options.os_tenant_name";"0"
"can we write this as followis: if new_ext_net_id != org_ext_net_id or force_update and and orgnexthop : the is ugly";"1"
"nit: better to use flattreetraversal::nextsibling *host . next *two is not intuitive.";"0"
"odd, run_tests.sh -p -n did not pick that up... moved down two lines.";"0"
"add a* region_id";"0"
"this is a dumb question, butthis is only called from pxedeploy.deploy . i was wondering why it was put into a method here. maybe it will be used by other stuff later.";"0"
"alignment goofed up or just gerrit";"1"
"darn! done, thanks.";"1"
"use datatableview instead of multitableview.";"0"
"this now hangs... playback never starts and the promise is never rejected, butthe onerror above ishitmounir, is this new method exposing a bug or am i doing something dumb";"0"
"nit: consider adding /* fatal_error_callback */";"0"
"did you already put suite=""wifi_flaky"" into control files in some other cl";"0"
"i'll leave them here for now. we may move them when we polish the ui to better match the mocks.";"0"
"this is a bit ugly, butthis is what was asked so i added a null ptr check for inspector_agent_ . let me know what you think.";"0"
"_get_conf_file_name 'notify_%s.sh' % state";"0"
"this looks scary... does it actually need to be non-null some tests just passin nullptr.";"0"
"sm.router_id is sm.resource_id now. the db api needs to be updated to be non-router specific. luckily, the schema is pretty dumb and you can get away with simply renaming all the functions s/router/resource";"0"
"let us surround this expression in parentheses so we can get rid of this backslash.";"0"
"opps, yes, editting screwup.";"1"
"damnstupid ide... done.";"1"
"exit code is ugly here, hence the grep. i'll add the failed_when.";"1"
"ew shame on me, it was a bad copy and paste. will fix";"1"
"no, that is a corner case that we do not hit and that was excluded before. normally you call something like t=int32_t and kbits=8,16,24. i just thoughtitis fine to allow kbits = 8 * sizeof t and trivially return true, as the constexpr is inlined and either branch is dead.";"0"
"i can not understand why you ask me to rebase previously, you used to ask me to split this patch into 2 separate patches for easier review . the current one is for fixing the az info issue and the second one is for fixing the ""if not host"" issue. the modification of the guy ""hans ..."" is exactly the same as my second patch which is for fixing only the issue ""if not host"". so, if i rebase as your wish then your previous suggestion of splitting for easier review will become silly and bullshitright you are not consistent in making review at all i think that both of my patches should be merged to master branch at first because i've uploaded to gerrit before that guy"" and then that guy will be requested to rebase this things. that is should be the right procedure, right";"1"
"pecan.abort should be replaced with format_error";"0"
"but my varialbe is in line #11. i think we should use the same place.";"0"
"you did not list gzip here. you are also duplicating what we have in cros_build_lib.py with comp_*.";"0"
"yes, i guess this could happen if some jerkputs a file "".json"" inside my directory. right";"1"
"to be removed here and below.";"0"
"ah, i see. yeah, that is ugly. fine by me to keep it the way you have it";"0"
"nit: move the '*' onto 'codeitem': const dexfile::codeitem* code_item_;";"0"
"psec_value is unnecessary. response_data psec.portsecurity = db_data 'port_security' psec.portsecurity";"0"
"- captitalize - failed to execute $ hash grep curl tr -s "" t"" "" "" cut -d' ' -f 3 or something like that";"0"
"first line needs to be removed.";"0"
"-1: i believe abandon is not required here, so needs to be removed";"0"
"how about besg = instancetasks.building_error_sec_group db_info.task_status = besg";"0"
"what is the point of doing that if you still manipulate dicts inside obj 'networks_metadata'";"0"
"derp, still does not work for cinder...";"0"
"there is now a comment on the etherpad about whether we should stick with this approach for versioning. will do this if we stick with that solution.";"0"
"all these local_additional_dependencies are unnecessary.";"0"
"eapi=4 and then you do not need die.";"0"
"let us use frozenset for affected_node_ids.";"0"
"yep. this is just a puppet resource name and it does not affect anything since we passactual backend name via ""name"" parameter. historically it is named 'keystone-public' : i think renaming it is out of scope of this bugfix.";"0"
"dev-quickstart.rst also needs ""#verbose=false"".";"0"
"this formatting looks screwedup. please fix";"1"
":- damntypo";"1"
"these are useless once again. you should check that we have output_data in bytesio object returned by io.bytesio.";"0"
"i'd nuke this initialization then since you are explicitly setting the terminating entry to be null.";"0"
"nit: this function is a little useless. why not just combine it into get_auth_ref";"0"
"test_vol_name = self.volume_name";"0"
"fuckwe need somehow to resolve this kind of hacks. i think such thing like passing cluster_id to task should be generalized, so we do not need *hooks* in nailgun. afaik, we do have a bug.. i think the priority of it should be raised.";"1"
"one issues is that this results in a bunch of 404 logs unnecessarily. this is not a big deal, but what about just testing if the parsed_args.id is a valid uuid, in which case we treatitas a uuid, otherwise we assume it is a name and try to search for it this way there is only one query either way, and no uneeded log errors.";"0"
"use shutil.rmtree";"0"
"nit: num_hosts and num_down_hosts";"0"
"delete the non-9999 ebuild and let the build system create it for you";"0"
"did not fully follow that statement-clarify please that said, i'd probably name the suckerremote_ref"" instead of branch- i could see bastardizing this for refs/sandbox/* manipulation. downside, that requires people to passrefs/heads/master in... which is fine, imo.";"1"
"as in pidfile, i was mimicking, probably it is useful for debugging, butitis not relevant we do not need it at this moment.";"0"
"typo: instnace should be instance";"0"
"owner_id is the parent stack id, is there user-case for filter this";"0"
"> first, i adopted your suggestion. > > honestly, i was hesitating between what you suggested and the current version when i implemented this days ago. if !process.isvalid, it could be a direct child of iter->second but has been killed resulting from its parent process being killed. correct -- it /could/ have been if base::process::open* fails. on the other hand, if base::process::open* succeeds but finds a proc with a different parent due to pid reuse , we know that we should ignore this process. > however, its child processes may not be killed yet, so we need to add its pid to the flat_map and continue hunting for the descendant processes. ah, i see. that is a good point. but if the pid was reused, we do not want to kill the new proc's kids! to be totally paranoid, openprocessifchildof would need to report to callers whether the pid was definitively reused or notithink what you have now is good enough for test code. maybe drop a comment explaining the possibilities since it is a bit subtle. > either version works fine for this specific case as killing the direct child process automatically kills all the descendant processes gpu, utility, etc per my local tests. yes, chrome puts its sub-procs in a job object so that they all should die with the parent. at leastithink that is how it works. you can probably test this trivially by killing a browser proc with plenty of subprocs. i think they evaporate straight away.";"0"
"this line needs to be removed.";"0"
"for me, the difference from ise and assertionerror is that ae is an error, that is a severe error that an application has no reason to catch, that is a bug in the implementation. nothing to do, just crash. ise is an exception, catchable, represent a wrong way of using an api, that is a bug in the usage, can be catchable. so, here, for me, it is an assertionerror. in addition, in jack, we do not put message to assertionerror, unless to assome dynamic data depending. we have all the info in the reporting to find the line.";"1"
"i'd prefer it to be 'tripleo' rather than what you have.";"0"
"avoid short names like this. you can call this out_register";"0"
"volume_type_id = fake.volume_type_id see line 2092.";"0"
"how the crapdid this even compile done.";"1"
"i would remove this and stick with the notimplementederror above...";"0"
"i'd love to know where you found this monstrosity sometime. :";"1"
"i think that is an ugly hack, and it also means the table is not properly reusable. we are currently not reusing the tables, but we might. :-";"1"
"correct me if i am wrong, butithink here what you want is if xxx.encryption_type in ... : auth_fn = a elif ... auth_fn = b else auth_fn = c # _authenticateopen or, what about doing authentication_methods = { 'wpa': self._authenticatewpa, 'wp2a': xx, 'wep': xx } auth_process = authentication_methods.get self.ap.encrypt_type, self._authenticteopen";"0"
"this is going to be painful. i think that way to soo ugly ; but... done.";"1"
"is not there a better way to do this having to put this code in every method is gross.";"0"
"via shifting tmpdir teardown into this critical block, we ensure thatitactually runs per the commit message, and per our general intent of ""keep the builders happy"" . instrumentation of crapleft behind in tempdir would likely need to land before this point.";"1"
"haha, i feel dumb now. i forgot about the do { } above and read it as a standalone while ; with no body : my bad!";"0"
"one new many new lines butthat is really pathetic :";"0"
"yeah, we definitely do not do any of that. and especially not the s m field-naming nonsense. regular sun style or google style are both fine though. i just pipe imports through sort 1 .";"0"
"no reason other than it was like 5 lines less code no need to unwarp grpc responses, b64 decode, etc . as a dumb proxy, cbe is not going away anyways.";"0"
"s/junk/_junk/. or s/junk/_/, considering that is what ""junk"" means. or, better yet, find a variable name that conveys something about what is being ignored and startitwith ""_"" so pylint is happy.";"0"
"updated api.cinder.qos_spec_get to api.cinder.qos_spec_get_keys";"0"
"i think this might be getting more complex than it needs to be. you are only batching the port delete and update events, which you've already converted into cheap operations that just mark a network as dirty. so my suggestion is to get rid of this queue and get rid of the changes to everything except for the port update and delete. then just have the update and delete methods mark the network as dirty and then have this helper reload the dirty networks. that will essentially achieve the same reduction in reload calls without any queue management logic. does that make sense";"0"
"this comment might be not be needed asstill' makes no sense here anymore. nit*10e-15";"0"
"the names are not mandated. plankton and twinkie are not drp but both of them have src and snk pdos. so i created a separate vif for _src and _snk.";"0"
"ditto. in addition, recommend passing in things like: router_id, subnet_id, etc, etc, rather than relying on them as globals.";"0"
"the enclosing classis not public, these methods do not need to be public either";"0"
"looks ugly. see comment:";"1"
"ugly... ;- can we find a more general test for example, if the last component appears to be a file name has a base.ext form . if not then that is fine, but we have to actively seek and destroy users of the old behavior...";"1"
"fatal:media_transfer_protocol_manager.cc 52 check failed: bus_. it sort of sucksto have a bunch of ifs just to make the test passi'll check if we can put in some fake bus and get back to you.";"1"
"sounds good to me : damnvocabulary ;";"1"
"please memoize the lb_id and listener_id.";"0"
"need to add the secondary index vars otherwise puppet will complain. so should add: $secondary_index = false, $secondary_index_type = 'lucene',";"0"
"just to be clear, by a new fix coming up, did you mean the monkey patching to eliminate true concurrency";"0"
"i think gerrit will handle this correctly since signed-off-by is a git label. all my commits are structured similar to this one from my .gitconfig ... unless my configs have gone bonkers.";"0"
"bw_limit_rule i think ihar complains about var shadowing that hurts debugging.";"0"
"for consistency this should be like add_tuntap : self._as_root , 'link', 'add', name, 'type', 'dummy'";"0"
"that is the wrong daemon... the signal goes to powerd from here.";"0"
"why doing this ah, is it because you want yaml.dump to dump a dict instead of defaultdict if so, please give a short comment for this.";"0"
"how the heck did i miss this";"1"
"destroy is doing this when removing all children. see innernode#removechildren . this line becomes a no op anyway since we removed all children out of the clusterlist.";"0"
"it is unnecessary to add this, only primitive members need explicit initialization";"0"
"this is horrid xenapi agent rubbish, afaik. this makes the agent update the networking info injected into xenstore, which can get picked up by the quark networking stack and ovs rules are updated. reset-network is often called after inject-network to then reset the networking inside the guest using the agent, and the latest network info that has been injected. yes, yes, its really that horrid.";"1"
"and here i am trying to use my fancy british. thanks for killing that illusion!";"1"
"lets lump all of these together i do not expect you to know this off the top of your head it is quite buried : data ={'job__id__in': self._jobs} self._afe.run 'abort_host_queue_entries', **data";"0"
"collateral damage from juggling branches. i got rid of it.";"0"
"this is a dumb name, but you did not do that ;";"1"
"_le = _translators.log_error. maybe we are right.";"0"
"nit: unique_ptr<> is a little ugly imo, when not necessary. maybe extensionthrottleentry* entry = url_entries_ url_id .get ;";"0"
"the formatting looks off. please run ./presubmit.sh before submitting.";"0"
"it scopes the lifetime of the iv probably helps the compiler generates less shittycode.";"1"
"you do not have anallow rule for misc_block_device. should not you have the following allow update_engine misc_block_device:blk_file rw_file_perms; otherwise, nobody will be able to do anything with misc_block_device...";"0"
"i'd put this after the exception_ field so it is close to the handle it manages.";"0"
"remove daemon here";"0"
"ah! okay. new plan: add the following to the top of ginport::invalidateevents : void ginport::invalidateevents v8::local<v8::context> context { // no need to invalidate the events if the contextitself was already // invalidated; the apieventhandler will have already cleaned up the // listeners. if state_ == kinvalidated return; ... } then, i think we should not need any special workarounds either here or in the test's js file. mind giving that a try";"0"
"aw, crap this should be 'lnodes = self.app.sort_nodes lnodes ' so that the large-object-manifest container listing thingy does not alwayshitthe first container server. do you want to fix this in this commit, or just remove this line from your diff and i'll submit a patch";"1"
"/* libqmi_qmimsg_h */";"0"
"yeah, good call. it is useless.";"0"
"yeesh. you are definitely right about doing too much work here. i go to all this trouble to construct the 'options' and 'args' variables, and then i never do a damnthing with them. wtfwas i thinking maybe i moved stuff around and left a vestigial copy of this crapsitting here. will fix.";"1"
"it does not. see their fixme comment. the test was wrong, at least in the sense that our behavior and the ri's behavior was the same and also the obvious behavior --- charset names and aliases are always checked for validity, and always checked by the same rules . the ri's documentation agrees with this behavior too, so i've no idea why they pulled this test out of their collective ass";"1"
"crap. i missed that one in the update. i'll have to update again.";"1"
"the source is a vmap'd bo, which is not iomem. the ttm object is unlikely to have migrated to vram, so it will not be iomem. and even if it had, ttm would migrate it back to system ram.";"0"
"call me stupid but i still do not know what a console proxy is/whatitis supposed to do after reading this. i do not know if that is the intended purpose of these strings, however...";"0"
"can we at least check that a reasonable command is passed to ssh this test does not seem to test anything actually.";"0"
"hmm, are you sure it is correct to use an std::atomic like this";"0"
"fuck";"1"
"close. i do not think projectspec is the right place - i think keeping that ""dumb"" parsing based only on the schema is good. this is yet another thing thatithink would do well in a project classi think we've talked before about this a classthat wraps the schema + commands, so the commands could basically do p = project ... p.buildimage etc. for now i'd lean towards getting it in, but if we want to start that refactor now we could.";"0"
"throw new nullpointerexception ""policy == null""";"0"
"wtf o_o this should be fixed:";"1"
"sergey this is value for saharaclient";"0"
"yeah thanks carlos indeed that is a nit, fixup incoming";"0"
"yeah, butitis also silly. there is a file entity over in file.go, so it seems kind of obvious that virtual entities are supposed to be different to file entities. the documentation on it is methods explain how it behaves, the sentence below says whatitis used for, and the name virtual captures it is essence correctly.";"0"
"fqdn onlys alphanumberic and dash - only. i will relpace with the following regex. re.sub "" a-za-z0-9- "", ""-"", instance_name.strip";"0"
"subnet_id == arpentry.subnet_id";"0"
"i must have copied the issue number off of rather than the bug number. probably i should get off my buttand actually push on something like this proposal from a while back:";"1"
"do not like bugs in docs";"0"
"you can only idle pd_vio there is not a corresponding bus_active block below.";"0"
"floating_ips needs to be bumped as well";"0"
"these red tails make bp-doc ugly. i will push another cleaned-up patch.";"1"
"would the fk be a fk into the tenant table if so then maybe call it tenant instead of project.";"0"
"indentation's gone crazy here...";"1"
"ugly tabs";"1"
"is this lying looks like you return a build_id instead.";"0"
"well, the chancescheduler is given for electing a random host whatever, no i just wonder if it is not opening a can of worms to add more features to that dumb scheduler. at least, we should properly docimpact that scheduler stating its limitations.";"0"
"we have to be careful here with tweaking the values for the volume status. nova peeks into the value directly when determining if it can attach/detach a volume. this raises another stink i have with how nova does those checks. nova should not be looking at the volume status column value, from the return ofaget volume call. nova should be asking cinder if it can attach. cinder should answer the question itself.";"0"
"fix comment style here and else where: /** * notifies ...";"0"
"inline the count variable it is useless";"1"
"oh, i missed that you were calling getpackage . joiner does not need to operate on strings, it will call tostring on objects etc butthat is not right here, so scratch my comment!";"0"
"should be false. i hate that closure can not catch these. done.";"0"
"!karm32quickcodeusesoftfloat";"0"
"warn that someone appears to be fuckingwith us or really broken...";"1"
"creating an endpoint for this url if it does not exist";"0"
"this hunk cannot go upstream as it is part of the channel id code.";"0"
"you use a lot of bashisms in here, so this should be /bin/bash";"0"
"use self.addcleanup client.delete_keypair, keypair_name, **delete_params instead. this would solve the concerns of the reviewers and kill some useless code.";"0"
"why is pidof being used a process can change it is own name, and cause pidof to return their own pid. at first glance, without understanding the use case, this feels dangerous.";"0"
"thanks, old habbits die hard.";"0"
"so dumb question. is the only difference between a 'none' network and a 'flat' network -- that a 'flat' network supports cleaning in a separate network using neutron";"0"
"god this hurts my eyes, the damnconstant is longer than the actual content. i wonder if we can just namespace from workflow instead, aka launch-instance onward.";"1"
"well that is ugly but i suppose it works for now. this db call needs to move into the compute conductor.";"0"
"ya, that sucksi do not see any other good cross-platform library that is similar then; know of any";"1"
"crapour first lp64 turdin struct soinfo :-";"1"
"done ouch, awfull mistake";"0"
"fuckconsider it done!";"1"
"rather here should have: ""devstack_gate_tempest_plugin_install"" != false";"0"
"replace with local_static_java_libraries := ctstestannotations";"0"
"and lastly, refactor this one for rmw'ing mmacp_i2s_16bit_resolution_en.";"0"
"i am fine with applying 8ced390c2b18. __force is used by sparse";"0"
"aurgh, darn it!";"1"
"is not this get by template_uuid provider_resource != template_uuid";"0"
"attrs = attrs or self.task_attributes_to_copy";"0"
"i'd like to buy your dictionary with your definition of horribly.";"1"
"changing this would break the api. we should catch the 'httpbadrequest' in the 'shellpy' call and raise the right exception from there. also, tbh, i do not really mind the '400' error to be there. this code, as much as i hate it, is short-circuiting a check that should happen server side to begin with.";"0"
"because i am dumb and stupid :- *facepalm*";"0"
"by defaultitshould return none - you do not specifcally need the none here. should this not be an empty dict";"0"
"....no, you need them for postgres!";"0"
"here, you can just do testexec.commandcontext ctx, ""sh"", ""-c"", c .output";"0"
"multi line docstrings should end on a new line";"0"
"try to be consistent with the argument indentation across all four mocks above.";"0"
"kill empty lines around } else {.";"0"
"yucki can not find a good way for adding in a pid: ""pid"" in the above since having two of those docker blocks is plain ugly so this'll just have to do :";"1"
"bad rebase";"1"
"the bigger problem here is using a local lock with a distributed cache. locking should be pushed into the caching client, which can at least choose to getitwrong explicitly.";"0"
"i was going for: start body end";"0"
"yuckif anything i'd have some config in the test for this. do we have other hacky special cases";"1"
"vim modelines should not be included in new code.";"0"
"i think this should be in the on clause because this is how tables are joined";"0"
"computeminobjectslack would require some ugly const-casting. fixed the other one.";"1"
"missing /* config_keyboard_boot_keys */ for clarity";"0"
"no comment rot, this flag will exist for a couple weeks at most.";"0"
"no it seems no good to me. if def heat self, action, flags='', params='', admin=true, fail_ok is being used and as you say in previous comment, then return self.cmd_with_auth 'heat', action, flags, params, admin, fail_ok, merge_stderr=true will no more remaining testcase dependent. and for all tests it will set to true. in future if you want to put some test cases with merge_error value as false, then it cannot be done.";"0"
"pkill -kill dns";"0"
"you can separate that mocks with comma: with mock.xxxx , mock.yyyy as mock_spawn:";"0"
"if i move the method in this mixin classthen things will be more ugly because, l3_dvrscheduler_db.py file also has more than one place calling to get_subnet_ids_on_router . so i feel its good to have this in one place rather than two.";"1"
"i totally agree with you. imho neutronclient is already very different from other clients and it is something ""stupid"". consistency across all openstack clients is a big topic and it should be discussed and improved as a whole community and it is already raised as one of important topics in dev ml discussion. even when we have consistency across openstack clients, i believe neutronclient will be quite different from the current one. i am not sure what is the goal of this patch. if we need further discussion over all openstack clientithink it is beyond of this patch. consistency inside neutornclient, i agree. i do not have a strong opinion on t/f vs t/t/f/f, so i am okay to keep t/f for consistency. i would like to leave the decision to the original author. imo we do not need to rush this for juno release.";"1"
"yay we are not that crappyafter all!";"1"
"chris: i am sort of of the mind that having only two tests here to begin with speaks to insufficient coverage of the capability and paints us into a corner with respect to procedure e.g. what if tempest just flat out had a bug that broke these two tests . this is something we should bring up with the committee. in the interim i'd like to look and see if there are not other tests that could be added for the capability, but unfortunately they'd have to go through the advisory cycle first and will not really help for 2015.05 ish . i'll also note that there is a *potential* loophole should we feel the need to invoke it: the bylaw states that *vendors* may not request flagging all tests for a capability refer to c 3 4 for the actual wording . so if, for example, the foundation through it is interoperability engineer, presumably or perhaps folks acting on behalf of the board like, say, the co-chairs of the defcore committee, though i'll note one of them has a potential conflict of interest in this particular instance asshe is employed by the same vendor were to requestitthat wouldn't violate the bylaw. in the interim: you are right. we can not accept dropping all the tests for a capability at a vendor's request, so i am -1. still, i am going to look into whether there are additional tests we should be including so that they can start the advisory phase sooner rather than later.";"0"
"sorry, i was misunderstood. i fixed this to use a fk with cascade delete.";"0"
"nit: document the arg: ..., true /* is_official_build */ ;";"0"
"ugly indentation.";"1"
"this has a different ordering... silly.";"1"
"can you use xinternatom only_if_exists=true to convert these strings to atoms, then just compare atoms, instead of comparing strings.";"0"
"shortcut to this expression: return slug in self.slug";"0"
"i am trying to do it everythere, actually :";"0"
"if job is modified but not owned, it should be a naked ptr: same in l.80.";"0"
"a backquote looks a garbage.";"0"
"kill this - carries exactly zero information if there is ever anything useful, move to header file format as doxygen documentation";"0"
"i do hate the polling. but given the suggestions above about the cloud being referred to by its stack id, can i make this asynchronous we will not have a url for the caller to follow up with.";"1"
"continue sucking";"1"
"i'd leave these alone. they are part of the original license and, as ugly as they are, not worth chasing them just to many cases to change .";"1"
"note that killing the adb server is a fairly destructive action, as it will disrupt other users of adb on the same machine.";"0"
"we should be using mock instead of mox";"0"
"this decorator should be removed.";"0"
"ok...i keep forgetting that you can things like that in python.....who made up this damnlanguage....:-";"1"
"you must have 'cassandradb'_ installed and running. we recommend using docker see below .";"0"
"changed to below since some other place still use minindex: int startvertex = static_cast<int> indexinfo.indexrange.start ; int basevertex = -startvertex;";"0"
"this is an xtremio snapset not openstack object, the name is correct";"0"
"for any new tests, please use mock instead of mox.";"0"
"nit: you may use _show_resource here";"0"
"personally, i do not feel this has to be a bash array. it will work just as well with: extract_files=""var/log/audit/audit.log var/log/os-collect-config.log"" for logfile in $extract_files; do sigh, gerrit. i want <code> blocks, damnit.";"1"
"should be sdks should be etoews :";"0"
"nit: maybe instead of raise: br-ex = ovs_lib.ovsbridge self.conf.external_network_bridge, self.conf.root_helper br-ex.reset_bridge";"0"
"killing stdout makes sense, but not stderr since that is only 'die' output, so drop the "" """;"0"
"such a terrorist!!! we'll keep his hands off!";"1"
"can we be more specific does not std::unordered_map work here";"0"
"if we are touching this code, it is probably cleaner to convert this into a dict instead of a long chain of if statements.";"0"
"i believe that the rest gods will strike you down with a vengeance if you have a put with no get.";"0"
"these prepare and unprepare callbacks are empty. can not you just kill them";"0"
"kiss: if pid entry.getpid pid != entry.getpid";"0"
"'for m in mocks' would be more idiomatic and slightly clearer here. you could save a couple of lines by iterating over 'mocks + mock_touch, mock_handler '.";"0"
"i guess it should be configurable.";"0"
"afair, gerrit.sh can be used here";"0"
"the same suggestion as verify_top_install.sh.";"0"
"small white-space nit.";"0"
"should this be vif_type_pvm_ovs";"0"
"author not needed, taken care of by git.";"0"
"use this to get rid of trailing newlines";"0"
"i take that back trying even quoting the variable and moving to single brackets, it complained. on ubuntu sh is symlinked to dash.. dash sucks lsb release shows this: distributor id: ubuntu description: ubuntu 14.04.2 lts release: 14.04 codename: trusty";"1"
"just kwargs.get ... , you do not need ** here";"0"
"i will kill you.";"1"
"nit: this cast looks useless.";"0"
"i think we usually put this like /*gridx*/ next to the parameter. without the space and the equals.";"0"
"unfortunately, std::function is disallowed. these will have to use wtfbind. =/ oh... butitis existing code. ok, we should fix this in a followup =p";"0"
"would you kill me if i suggested using oslo.config here";"0"
"use assertisnone tgt instead.";"0"
"odd you have nullable=false for these two.";"0"
"disposing all pending_requests_ instead.";"0"
"remove the irq disable stuffs";"0"
"typo esisting should be existing.";"0"
"stupid question: why are not we using python 3 compatible print";"0"
"hmm, this is pretty ugly. i guess you are doing this to save the type2 and fold2 passes, right";"0"
"wrong indentation. this statement is part of _rundriverperftest, not part of printresult.";"0"
"available values should be slugs.";"0"
"please do not mix whiteshapce and functional changes. this newline is not necessary here.";"0"
"good catch. stupid design on my part. so i think this should be switched. resource_id should be attached to sample and meter_id an attribute of sample and possibly resource from what i remember from meeting bayer recommended avoiding joins as much as possible";"0"
"nit: trailing whitespace should be removed.";"0"
"print without importing print_function. looks like you cheated.";"1"
"this reads a little odd ... why not just invert the if's and do this in the one block";"0"
"without using luci-go/common/data/stringset or similar this risks generating lots of dupes.";"0"
"need it for sdhci lib, otherwise see a compilation error.";"0"
"terrible style. separate it, plz. like this: floating_ips = self.client.floating_ips.list all_tenants=all_tenants then: return floatingip fip for fip in floating_ips";"0"
"and even that mspn might have a chance to be an empty string. maybe you should try robert's suggestion.";"0"
"shoot! missed this earlier. i will spin one more patch for it.";"1"
"for what reason we have ' 0' it looks like you are reading bytes somewhere, and passbytes. let us read this command asstring, not bytes, and you will not need this ugly replace hack. i can help to fix it if you need.";"1"
"eliminate backslash here and l989, 1027. canuse parens and indentation.";"0"
"you could replace your whole logic with a simple for loop. size_t i; for i = 0; i < count; { use buf + i }";"0"
"whitespaces should be removed";"0"
"should eth0 be a replacable, too";"0"
"greenpool = mock_green_pool.return_value";"0"
"i think you can get rid of this function and the one below if you let dbusobjectproxywithuma inherit dbus::objectproxy, butitis still kind of hacky.";"0"
"nit: the thing i consistently hate in this world is code duplication. if you would move common arguments into a separate dict and then reuse it for both policy objects, i would be happy as an elephant.";"1"
"this makes $ useless and would change the interpreting of vars in $ if any one of it hasspace.";"0"
"fyi: it looks like this strcmp call is missing an ensure_asan_inited too.";"0"
"damni am really blind >_< sorry for noise";"1"
"this is pretty ugly hack : object_contents is always 'objects', objectcontent , objectcontent , ... why not simply unpack the result and iterate over the second element";"1"
"yeah, this is chicken-and-eng issue: android_build_topisset by envsetup.sh. i think you should state that envsetup.sh even lunch must be run before running this script.";"0"
"i've fixed this, and added a comment explaining the three possible cases that now exist.";"0"
"break should be removed. only one node will be instantiated with break.";"0"
"this is a little ugly... can you just add this as a gooftool argument";"1"
"i wassuspicious because of ""the initializer must be a non-empty, brace-enclosed, comma-separated list of initializers for the members"" emphasis on ""non-empty"" , but with a small test program, {} seems to initialize int members to 0, while i see garbage values if i do not perform any initialization. so i think this seems to work, at least when i build with g++. does the {0} syntax cause problems with some compilers";"0"
"perhaps you get false because you are unable to establish the connection to the server on: line 159 you will not see the attribute error otherwise the entire loopingcall would die.";"0"
"allow_put should be false. as well assegmentation_id and mac_address";"0"
"out of thin air mostly, a big enough amount to trigger races... one odd and even for the hellof it :";"1"
"remove noqa";"0"
"what level of jailing should this use btw i noticed that metrics_daemon is not jailed. should it have its own user/group, seccomp policy this program does take some input: d-bus signals with a small payload. it reads sysfs files, and can write into a couple of sysfs files at startup. it creates and writes files in /var/log. it also does syslog.";"0"
"nit, i should probably change this to just key, and secret instead of access_key and access_secretitis already an access_token object after all.";"0"
"add existing_nullable=false";"0"
"it is should be possible to do it in unit tests. we should be able to mock out any part of the architecture. eg. involved parts are: - lib_archive mocked out as fake_lib_archive - volumearchivelibarchive - volumereader mocked out as fakevolumereader however, the mocking here could be done better. custom callbacks in volumearchivelibarchive are not tested, and they have significant and critical logic. they should be tested. well designed tests should be able to test everything. imho, fake_libarchive implementation should invoke the custom callbacks, so all functionality of volumearchivelibarchive is tested. fakevolumereader would be then non-trivial and could return fake data. as a result, 100% of code in volumearchivelibarchive would be tested. wdyt";"0"
"seems odd to have the bulleted list, butthen this point separate how about make this another bullet";"0"
"you canalso change this ugly baseexception and use exception instead. then there will not be necessary to reraise systemexit on line 881";"1"
"this should be like the others below: new_entity 'user_entity' = _format_role_data _user";"0"
"use osutils.safemakedirs";"0"
"darn, forgot to update this line.";"1"
"please put a colon instead of the dot. and i would write: this requires the following commands to be executed:";"0"
"params = req.params";"0"
"should this be ignored, or should we fire badmessage";"0"
"remove the first part of this that references the bug";"0"
"delete 'const' here and in the interface in particular, i'd expect this to be non-const in a stub implementation used by unit tests.";"0"
"bad merge you are shadowing oslo.config.cfg";"0"
"omg. shitlanguage.";"1"
"/me sees the missing 'e' as well okay, aspell was full of shit";"1"
"this dead code should be removed";"0"
"why are you putting .. you want this under builddir";"0"
"you may change checkpower's failures parameter as optional so that you do not need to passa useless list object. def checkpower measurement_name, power, threshold, failures=none, prefix='power' : ... if not isinrange ... : if isinstance failures, list : failures.append failure";"0"
"it will, by spitting 500 with internal server error!! how cannot be related to this patch meh...";"0"
"aarrgg! damnit. let me fix that.";"1"
"max_tries * subprocess_tries";"0"
"ryan, what about substituting those unreadable lines that i wrote when i was young and stupid :- with just the following func ""echo ""=== {0} === """".format line func ""vgs -a --noheadings"" func ""pvs --noheadings""";"0"
"replace the misleading javadoc with ""equivalent to { link math.nextup}.""";"0"
"because we cannot compare a unique_ptr with a raw ptr, which makes find useless.";"0"
"should initialize capability_ = null here";"0"
"nit: delete useless blank line";"0"
"potentially stupid question here - should this be hidden:true";"0"
"oh... there seems some garbage resulted from table-of-contents, list-of-citations, etc. i'll remove them perhaps by excluding spec concept starting from #biblio- ...";"0"
"there are two reasons i combined these classes. 1. this bp enables all current datasource drivers to use execute 2. i do not imagine someone would make a subclassof just executiondriver because user does not have any way to handle executiondriver now. imo, in case of someone wants to create a new driver which does not need to have execute , the developer writes the new driver directly inheriting datasoucedriver.";"0"
"generatetestandbranch allows true_fallthrough == true true_target == nullptr false_falthrough == false false_target != null and then we could call generatecomparetestandbranch with true_target == nullptr which is invalid. this discrepancy seems to be at the api level, generatetestandbranch taking the true_fallthrough argument and generatecomparetestandbranch not having such parameter.";"0"
"done. python line wrapping sucks";"1"
"import order is killing pep8 :";"0"
"it wouldn't be so terrible as a packager if i could override this when i sdist, a la pbr_version i.e. the shutup pbr i know what i am doing flag and then if the __init__.py continues to use pkg_resources when you have an installed swift you'll get your packagers version which is normally incrementing in some sane way against the last upstream version release";"0"
"nullptr /* blob_url_token */";"0"
"we could rewrite this with: poll_method=net_utils.findusableethdevice, condition=lambda ret: ret != false,";"0"
"because i am an idiot :";"0"
"where are you initializing self.online_controller";"0"
"yes, sorry i am an idiot :";"0"
"mistake, it should be ceilometer_compute_opts.";"0"
"true optional btw, i think this will be slightly more clear: if mount.get { is_mounted = mount->ismounted ; is_ephemeral = is_mounted !mount->isnonephemeralmounted ; }";"0"
"one of our policies that i would like to kill...";"0"
"can you add 'from keystone.openstack.common.gettextutils import _' here there is a review to get rid of the __builtin__ monkey patching:";"0"
"so the idea is that each parameter declared under ""global_parameters"" would be available via get_param, right i like this on the one hand, because it saves a lot of typing. on the other hand, it brakes self-consistency of the single templates. so far, they were valid in themselves and could be used standalone. with the proposed change, get_param calls would fail. or are you saying in #1 of proposed changes that the parameter definition would still be there in the nested templates, only the property definition in the containing template could be left out another idea: what about a get_env function that would explicitly get information from the environment. ... just a stupid idea ...";"0"
"this is highly offensive to non-christians! i demand you remove it!";"0"
"just fyi. this line here originally is for bvt-perbuild it is not in most of the control files . you may want to not include this parameter here, or want to have your own sanity suite for moblab.";"0"
"i checked in swift. they support markers rather than offset so i can not actually list stuff after a random item, i actually need to figure out what that marker item is explicitly... so this kinda sucksbut not any more than current logic.";"1"
"i suppose that l127 should be executed after this one. please, move l127 after if..else..fi statement";"0"
"tls_disabled needs to be removed.";"0"
"ops, missed your comments mobile ui sucks sadolfsson said we could move these changes to fizz later after doing some verification round.";"1"
"kill this debug print. if you need the debug print, do it from spi-nor.c, where we ask this driver to read the id. that way the same debug info is available for all platforms.";"0"
"english is not my native language, butitlooks like the message should be refined. for example: ""ipset utility does not exist on the host that you are running, please *******""";"0"
"that sounds like a bug... calling this in the browser process should always kill the child process. if you can repro this, can you file a bug";"0"
"you should be importing from the new location at cafe.engine.ssh.clent";"0"
"<literal>47af...</literal>";"0"
"these =>s have excessive spaces so puppet-lint complains. can you please fix these";"0"
"*slaps himself*";"1"
"perhaps a stupid question: given that the native library initialization is a single-threaded process and well-profiled into the start+common sequence, why do we need to run madvise infrequent_text, random so early doing it after finch has initialized would be less error-prone and would yield the same memory savings, no";"0"
"rubbish, i just spotted this one. i think we should make this one_or_none as well, just to be sure. mostly because the db has no constraint on here. now this might mean if we hit a race, we keep hitting this exception. but i much prefer that to data corruption.";"1"
"stupid machine!";"1"
"i thought you are is samueldmq :";"0"
"i have bells go off when i see a function with the name _classmethod. perhaps this is my lack of python foo coming out. i do not know.";"0"
"true, though any app doing work while installing a new split is insane. and if you are insane, there are already enough ways to crash yourself. the copyof sounds like a good fix for this, though.";"0"
"self.m.trigger legacy used to set step name='trigger', so that is why i did the same. looking at a typical run, trigger is indeed happening only once. sorry to disappoint, **testers** still trigger swarming tasks gazillion times. for example, 97 times on this one";"0"
"debug crapi see it ill remove it";"1"
"am guessing without checking that in the puppet apache classit is service_manage and not manage_service like everbody else in the world";"0"
"remove unnecessary white space.";"0"
"yes, i found the issue when the passwd entry was legitimately missing. i wassurprised to see both arc-networkd processes running as root in 'ps'. under normal circumstances the entry should not be missing, and the risk of something affecting *this* daemon is low. but security-critical code often gets attacked in ways that cause something that ""should not"" fail to fail, e.g. - maybe the bad guy can not write arbitrary contents into /etc/passwd, but on a normal linux box he might be able to trick a careless cron job into erasing/clobbering its contents through symlink attacks. and then subsequent calls to getpwnam fail. - since chrome os uses dm-verity to protect the rootfs contents, somebody can not get the os to return arbitrary data when reading a file. but maybe they can get the os to return an i/o error if the file data is overwritten with bad content on disk. - exhaustion attacks can sometimes induce failures that are useful to a hacker, e.g. what if somebody opens up 1023 file descriptors, then runs a setuid program that fails to open the 1024th fd and reacts in a careless way - linux veterans may remember this design flaw in the original posix capabilities scheme:";"0"
"damntime flies, ha.";"1"
"call this cinder-iscsi please";"0"
"/** * javadoc comments must use this style. */";"0"
"this physical_skel should be moved to something like object-storage-infra.yml.";"0"
"some old garbage...";"0"
"actually, should get rid of format_map.py and just use trusttokenformatter.token_format rather than format_map.trust_token_prefix.";"0"
"ditto -- please do not remove this. it is unrelated to the driver whitelist.";"0"
"these are not really unparseable, ""unrecognized"" would be more accurate; treated as a black box or ""opaque"" another possibility. up to you.";"0"
"make this a colon :";"0"
"i'd remove the trailing colon";"0"
"crapi meant 0000. #fail";"1"
"so.. here's the problem with this. even if you use a different non-db driver for the servicegroups in nova, *there is still a service record created in the services table*. the reason is because of the stupid relationship between the services table and the compute_nodes table. this oddity is being addressed with the detach-service-from-compute-node blueprint which is almost entirely completed. so, bottom line... do not assume that just because the db driver is not configured that the services table will be empty, because it will not. :";"1"
"thanks tom, i think i missing it last friday. in my opinion, we should passing **kwargs to super. i will resubmitit. sorry for the stupid mistake.";"0"
"see this one is preffered. better to change all other.";"0"
"i'd still prefer u use instead of a raw greenthread.";"0"
"damni forgot to save that change in the file before commiting this. i'll fix it.";"1"
"its requried for linkage, should i add a dex_instruction_utils.cc to get rid of it";"0"
"again, this seems wrong. either installd should be stripped of this capability if it does not need it or this dontaudit should not be here. you would want something like this audited.";"0"
"you might want to lose all this insanity by switching to std::string and stringprintf. so: #include <base/stringprintf.h> std::string root = android::base::stringprintf sysfs_prefix""%s/"", uevent->path ;";"0"
"onsuccessrestore and onerrorrestore should be removed.";"0"
"damnguilty as charged, sir!";"1"
"suggestion: same concurrency/times as cinder scenario";"0"
"probably should add some logging both in the case that you generate a core dump and in the case that you do not that way you can figure out why the code is not generating a core dump.";"0"
"please, remove the white space";"0"
"i think seamicro_vendor, pxe_vendor should not be attributes of this class";"0"
"such docstring are not useful";"0"
"ok will nuke it.";"0"
"it should be : if args.rebuild_password: _password = args.rebuild_password else: _password = none";"0"
"the exception will be logged, because the agent will die at this point.";"0"
"it will not- git handles that on it is own if someone intentionally is being an assthere are ways to pull it off, but i do not care about those cases . note also arbitrary stripping there will differ from gerrit behaviour the basic theme of patchset2 review ; thus we can not just do stripping as you suggest.";"1"
"oh, gotcha! ok, i am ok with the dcheck here then, because it really is guarding against api misuse.";"0"
"crazy... so, api_v3 only for main/public router in etc/keystone-paste.ini, both public admin mapping to api_v3, so i think this change not enough. correct me if i am wrong. 102 composite:main 105 /v3 = api_v3 108 composite:admin 111 /v3 = api_v3";"1"
"i think we want to include the url clean up in this change. there rest should get hit by the other param cleanups.";"0"
"darn pep8 - missing a space here!";"1"
"this should only be run conditionally: if self.conf.enable_metadata_proxy:";"0"
"would be useless after applying suggestion below";"0"
"remove 'jichen devstack: ' here and the other prompts";"0"
"oh, that is sneaky. response = self.client.instances.create 'test_server_error', instance_info.dbaas_flavor_href, body,";"0"
"this dummy test adds 80 seconds on each run! in gates. we do not have so much time in gates. put here times: 5";"0"
"like i said in im, and probably should've just covered my asspublically... this was a quicky, uploaded so that others could sortitif there was an issue which i expected . the logic's not fun; i am sorting it purely because it is been left to rot instead of being fixed long term , thus some help would be appreciated ;";"1"
"no butthe spec ""lawyers"" and my co-workers decided that the 500ma entry was not mandatory/not useful, the vsafe5v entry is now 3a on our chargers. by the way we can go even lower if we do not plan to suckany current : 10ma";"1"
"apologies is this has been clarified in previous review cycles. what would be the rational of this unusual approach to inheritance. is that because you need to 'cherry-pick' only specific capabilities of the base class whereas in all the other case you would be ok with the dynamically built base classes";"0"
"i know its not your fault, but wow. worst named fakes ever.";"1"
"probably, disabling irq should be done after avp enters lp0. this would avoid races, if there are any.";"0"
"please avoid overly verbose redundant b == true and b == false instead of !b";"0"
"should 'having a python library' be listed here although they are not part of the normal release cyle, without the library most of the services are pretty much useless.";"0"
"you need $ acp too, because you call $ copy-file-to-target in $ pack-elf-relocations .";"0"
"leave the overlines in.";"0"
"that is a wordy decorator. this_does_some_logging_stuff_and_checks_the_water_level_and_rehumidifies_your_house_now_carry-on";"0"
"you should use ipwrapper.netns.delete";"0"
"remove python specific boolean representations disabled";"0"
"i think at this point the iommu is in a broken state anyway and the whole system is screwed; generally this should not happen, though...";"1"
"replaced with a full expansion on the tuple, you whiny bitch";"1"
"so that means we should probably have 2 different methods with their own kargs.";"0"
"i know the code above sucksand is wrong, but move this to src_configure ideally, this wouldn't even exist as it'd be in the configure script ...";"1"
"you need the colon: : $ reps += 1";"0"
"i meant the interface here, no, i meant a list of dictionary representations of the steps. this is much more flexible than directly calling the methods. in the agent driver's case, it is proxying the info to the agent, and running the steps on the agent. blah, i guess i did not look hard enough at base.py. i wrongly assumed all the interfaces shared a common base classi meant this method and execute_clean_step would be on the interfaces, not the driver.";"0"
"do we need to kill this thread with .join on stop or is it not needed because it is a daemon";"0"
"because this is a client : it is a fake client classit responds like it interacts with a server that ""responds"" to api methods with pre-canned responses.";"0"
"yeah, it is not really nice to directly use domarraybuffer's api. would you introduce wtffloat32array::createuninitializedornull i think you need to introduce wtftypedarraybase::createuninitializedornull.";"0"
"port_id should be nullable=false";"0"
"this indentation is pretty ugly. i am not sure what the recommended thing is but you could assign a temp var to admin_manager.images_client";"1"
"check if the jit is enabled then. it sucksto not have coverage.";"1"
"i believe the ""nolint"" below was for the use of ""unsigned long"" here. keep it nearby.";"0"
"i think both of the commas on this line should be removed.";"0"
"toybox takes advantage of 0 not being a pid and just unconditionally does the atoi and then compares against 0. i am still not sure whether i like that. if you stick with this style, isdigit 3 .";"0"
"yup, a few separate patches for this blueprint otherwise i'll be stuck in merge/rebase hell";"1"
"ugh, please no. this is a great way to let folk shoot themselves in the foot.";"0"
"nit: probably not your fault. but should data member name ends with a ""_"" i.e. change_count => change_count_ last_connection_type = last_connection_type_";"0"
"meh! upload32... lame";"1"
"kill most of this code with fire ...";"1"
"did clang-format do that this looks pretty ugly... :-";"1"
"debuggerd still exists as the command line interface for ""dump this process""";"0"
"darn it!";"1"
"java is garbage collected, so ownership is murky as if it is reference counted. in our c/c++ api we can keep the ownership well defined.";"0"
"thats ok, worthless commented out code imho... kill in fire";"0"
"will do. i feel stupid for not picking up on that method of skipping the tests from the get-go.";"0"
"oops, this was garbage of development. removed.";"0"
"this should be removed and used invalidbenchmarkconfig invalidtaskexception";"0"
"this describe block should be collapsed into a single test";"0"
"perhaps, we need to return a clientsideerror if the alarm_id does not exists";"0"
"disabld => disabled";"0"
"nitithink ' ' and ' ' here are useless.";"0"
"what is this good for and btw, a notation of ""col:row, "" is not only unusual but also useless with col being a number string.";"0"
"the ismodifieid...commit stuff needs to move into a destructor of the impl class";"0"
"it might not be a good way to do this hacking in api layer is weird and ugly...";"1"
"oops. bad rebase.";"0"
"six.itervalues then you do not need dummy variable, __";"0"
"remove these docstrings.";"0"
"l197-l211 should not exist anymore";"0"
"need to handle not found here";"0"
"is this exec idempotent by removing the refreshonly, this will be triggered on each puppet run. what would be the impact";"0"
"should be *self._go_to_projects_locator";"0"
"done ooops... useless remnant from a prior approach, nice catch.";"0"
"this is the ugliest extension ever made. the author of this extension should be hanged over a pool full of hungry crocodiles. obviously i am its original author. adding more stuff to this extension will only make the code even more unmainteinable. personally i think external_gateway_info is one of those attributes which should be promoted to sub resource. this will simplify authz policy management, and most importantly the user workflow. we need to find a way where the main resource and the sub resource can be created/updated/returned in the same api request. however, if necessary, the user should be able to operate directly on the subresource. this is probably something that can not be addressed for this release cycle. so if there is any urgency around this blueprint we might proceed this way and then rework it in kilo. however, if this patch does not make juno, i would suggest reworking the external_gateway_info attribute and yes, we should worry also about backward compatibility";"1"
"it should be db_api.autonested_transaction.";"0"
"no, the line is correctitis sal_info area, expression";"0"
"sorry it seems that i am a bit blind or stupid today : . let me update the patch.";"0"
"path should be dummy = networking_sfc.services.sfc.drivers.dummy:dummydriver";"0"
"ditto docstring comment from above.";"0"
"useless initialization. in general i prefer compiler notify me about ""maybe used uninitialized"" variables intead of initializing to 0 and returning ""success"" in error path.";"0"
"presumably you'd want a space after this colon.";"0"
"eutils and toolchain-funcs are unused, so just delete them";"0"
"yeah, well it does not work this way typeerror: args_array_to_dict takes exactly 2 arguments 1 given . ... i can do something like this: arguments = utils.args_array_to_dict {'args': args.arguments 0 }, 'args' 'args' i understand this args_array_to_dict sucksbut i am not willing to refactor it in this patch";"1"
"dumb question: return error here or not currently not . seems to me this is okay, because the only place that cares at all is the replicatehandoff and that one should continue to work as long as the number of insyncs returned is zero, which it is here. just wondering if this was considered. maybe no need to log here if returning an error.";"0"
"i think we should remove the trailing white spaces.";"0"
"wtfare u doing";"1"
"that is not a new issue but mixing here ro and rw data is suckinguseless sram ro part should be in flash only";"1"
"remove these params.";"0"
"you missed ""is screwedup"" here ; .";"1"
"should this be $admin_project_domain";"0"
"scratch that, i've just noticed the last line of docker-entrypoint.sh where you execute the arguments passed on the command line.";"0"
"if you take my suggestion of accepting a unique_ptr in set_broker_process , add a comment here as well stating that this object is intentionally leaked as a global.";"0"
"hmm, these are basically cros_workon_localname. if you walked that array, it'd be one less place to keep up-to-date. you would have to add dummy stubs for common-mk, butithink that is an ok trade off. similar statement for doing a loop in src_test. or add a multiplexer func: platform2_multiplex { local phase=$1 local out=${platform_out} local pkg for pkg in ""${cros_workon_localname }""; do platform2_${phase}_${pkg} done } then you can do: src_test { .... platform2_multiplex test } ... src_install { use platform2 platform2_multiplex install }";"0"
"how about just exposing ids carrying a whole object seems redundant because all of them will have the same id of the service profile. also, since it is a lazy loaded field, i suggest we do not carry it on the object at all. otherwise performance sucks";"1"
"no action required that is freaking mess... bad boy, tc, bad boy! :";"1"
"updated. i am shamed for the stupid mistake. :";"0"
"err, this is not code that my patch is touching.";"0"
"/* paramatername */";"0"
"hey - invalid volume is still not the only exception that we can get here - so it is be good to catch the rest that can be raised by cinder client. these are volumenotfound and snapshotnotfound.";"0"
"this classand selectprojectuser below are unnecessary since they are only used by admin instance launchin.";"0"
"matt, should you be an omnibox/suggestions/ owner or just an omnibox/ owner";"0"
"shiti did not think about reusing the output array. hrm.";"1"
"remove callback_forward, now that you have callback.h";"0"
"you are rightitis a silly and horrible mistake thank you for find this.";"1"
"i think you are correct - we do not access the iommus_lock protected domain->iommus list in the irq; that could probably be a mutex instead; and therefore only do the irqsave dance on the hw_lock... can you do that in another patch after this one";"0"
"i think that hiding stuff with css is an uglier hack. if we want to reuse them with a different title, we have to inherit from them anyways. if you do not like that hack, then use a different template for this table -- inherit from the original datatable template, but modify the caption block.";"1"
"so why is not a keyerror raised when unit tests run on this i see that in test_hypervapi._setup_snapshot_mocks most of this is mocked out, butthe debug call should still be hit and fail right";"0"
"these static values should be put at the top, i.e. default_cipher = 3.";"0"
"generally dcheck is what you want. ditto below. this will blow up the audio process otherwise.";"0"
"i missed it, but i will use snapshot.destroy .";"0"
": some of openstack supports python 3.x except for all those damnapplications that do not, haha ; point taken though :";"1"
"dumb question. what does it mean to have a mock.patch decorator, but not have the mock as an argument to the test";"0"
"i do, otherwise the macro thinks thatithas 4 parameters. stupid macros...";"1"
"this is a rename, for whatever reason gerrit does not show it see ps1 ...since many people tripped on this i am going to split this patch into two to work around gerrit's idiocy .";"1"
"a dumb question for you: when will the serio_raw_disconnect be called after kref decreased to zero or ...";"0"
"no need to assign a nullptr - it is init'ed to empty/null.";"0"
"oh this is so lame... re.match anchors the beginning, but not the end :p :p :p :p what were they thinking";"1"
"oh yes the $ check on the next line. i was looking for the usage of pid and only saw it in the die";"0"
"it looks to me like this is always going to be hit; see above.";"0"
"dear duncan thomas, this is not a version comparision here rather a referential comparision only, so doing string comparision will not be a problem. actually, version comparision is done earlier and here we are just comparing whether it is none or else ""3.2"".. let me explain: actual https header version comparision is done at we passtring ""3.2"" to differentiate the function call is for microversion: if req.api_version_request.matches ""3.2"", none : self.volume_api.check_volume_filters filters, *""3.2""* else: self.volume_api.check_volume_filters filters then here we compare this argument part ""3.2"" asstring comparision here to check if this call needs to be executed as per microversion or normal. hope i could explain.";"0"
"like i said on the previous patch, i'd rather be conservative in cases where there is no proof that this bothers a real user. i'd bet that not 1% of the users have opened the defaults tab in the run configurations and gotten confused about all these settings, and cursed at google for complicating things : real complexities are elsewhere and i'd rather focus on them.";"0"
"these do not need to be in stackrc as they are only used in stack.sh from lib/nova and you are re-setting defaults there anyway.";"0"
"if you are going to use sets, you should probably just go whole hog and do ""caps = set "" above, and ""caps.add xx "" below.";"0"
"since you are not using num_deleted anywhere you can just make this: if not query.delete :";"0"
"redone as a definition list. i could have screwedit up horribly. we'll see ...";"1"
"if you are the slave, i2c_int_l is an output for you to signal the master";"0"
"odd grammer.... remove semi-colon";"0"
"bogdan, this parameter was actually removed in 6.1, this commentary is just a garbage. or should i return it back";"0"
"add metadata_only to docstring params.";"0"
"s novim godom!!";"0"
"please fix this silly trailing space issue";"1"
"one can not never be analenough...see comment below :";"1"
"it is stupid log counter reset, which is required for preventing log records like: error: step 1 must be step xx";"1"
"look into ratelimiter , when the 4th packet in, the expression 'ctime - self.deque 0 > self.time_unit' will always be true, so the funtion will return false forever, that is not what we want.";"0"
"will remove it in next patchset.";"0"
"junk comment";"0"
"should the mixin be removed from nodelistscreen then";"0"
"no this does not break recents. this is just a bouncer activity";"0"
"remove extra white-space at the end of the line.";"0"
"utils.lazy_load_property_once";"0"
"use an accessor, and if the caller does not care about the difference between nil and """" return a string instead of a *string";"0"
"i think that a macro around a variable declaration is obscure. i prefer the explicit version. also, we could just use basevariable instead of t and get rid of the ugly typeof.";"0"
"nit: we typically name these things ""rv"" in net code. foolish consistency and whatnot... but when in rome. :";"1"
"if you export use_frecon in line 12 then i think you can simply exec bootstrp.sh";"0"
"name_len is always a count of chars, no matter this last param";"0"
"retrieve_all should be after params, params should be **params.";"0"
"i would rather you do ""from testtools import matchers"" and then use ""matchers.contains"", etc. this is, in fact, required by hacking.rst";"0"
"nit: we can have better names for the mocks instead of f,g.";"0"
"sorry for stupid question. per my understanding, currently the nova scheduler may select host from multiple az, right";"0"
"side note: maybe we should kill !config_of in a followup patch";"0"
"are you sure that /var/run/supervisor.sock will be removed after killing supervisord or this is safe to leave it in place";"0"
"bye bye steptimeout";"0"
"should periodictasks be derived from object";"0"
"why not disable_irq and enable_irq instead of free_irq and request_threaded_irq";"0"
"vif_id should be uuid like.";"0"
"they are different - deploy_devstack.sh is on devstack slaves, this one is for devstack parent host";"0"
"lol. you are stuck a stick in the mud, waldon. ;p";"0"
"if not self.resource_id: also about similar behavior of delete for neutron resources. i think will be better without this check. other way it is adding this code to other delete functions.";"0"
"its harmless and we want them all dead anyway. this will be called from unstack.sh or clean.sh and unfortunately localrc may have changed.";"0"
"i do not have a good understanding of the issue. can you describe the situation more in detail why are we crashing what waits are these spurious wakeups are from why it is good to sleep forever";"0"
"we create a new viewholder each time the bottom sheet is pulled up. that means that every time we reset the impression tracker, we need to give it a new recycler view. this is very ugly if i try to do it from the suggestions carousel and also, it seems like it belongs in the view holder. the view holder is the thing that holds the view and shows it to the screen. so this is also where we should record that the carousel is shown.";"1"
"assigned_vips_by_type vip_type .ip_addr = ip_addr";"0"
"maybe kill this extra space while you are here";"0"
"dammit, new workspace config, due to dead hd...";"1"
"this looks like a constant - and we prefer uppercase for constants.";"0"
"it is not necessary. it is added partly as a ""why not"" and partly for consistency with the file-import.";"0"
"wanna let me have a stab at this";"0"
"should we also kill loaded now that each extension is to be present in one tree only";"0"
"again, i am asking *why* ambari needs them. and if it really needs them, why the ambari rpms are not requiring it otherwise this patch seems just a workaround.";"0"
"it seems only create_subnet will invoke _create_subnet_db. so the ""none"" and ""_temp"" you added here, seems useless.";"0"
"this would allow instance.flavor to be none possibly, and it should be nullable=false, do we care";"0"
"sean, a post-jogo world is not a world i want to live in.";"0"
"sgdisk is a ceph-disk dependency";"0"
"rather than doing this, have you considered doing lazy=""joined"" on dns_nameservers and host_routes for reference see: having said that, i am gonna make the same comment i made on a few other reviews: i personally would like to get us to think about having rally scenarios accompany these types of patches. ideally we would have a patch that introduces a rally scenario that sets a baseline, and a dependent patch that shows the performance gain.";"0"
"why is this mock.any when you have a fake session with a fake vim why can not you passin the fake vim from the fake session in the test";"0"
"should be an elif as device_owner can only be a single value.";"0"
"hmm why are you setting the object o null then it wont really have any effect.";"0"
"this is silly - there is no need to load the health resource twice. i'll remove this line after review.";"1"
"i think you should init flip_work_count to zero using atomic_set at the same time you init the work queue.";"0"
"this was wtf2, not sure why xxx_ end up there...";"1"
"if we are talking about the neutron lbaas as the daemon, then i can see in a future improvement how this might become inaccurate. however, if we are not talking about neutron lbaas i will shutup.";"1"
"we have an escape hatch: you can turn a field into a oneof backward-compatibly.";"0"
"hit: these imports are broken apart correctly: std 3rd party local";"0"
"useless if you do that at __init__";"0"
"i'll nuke this for now.";"0"
"i would use cros_build_lib.die instead so the command returns with exit code 1 to indicate failure or raise valueerror, that should work too .";"0"
"please get rid of trailing whitespaces here and below";"0"
"oslosphinx should be used instead";"0"
"you are missing a $, this condition will never be true.";"0"
"group.created_at = timeutils.utcnow";"0"
"nitithink you should just and this comment after ""1 shot"".";"0"
"nit: we probably do not need to set ifa_dstaddr on af_packet addresses. does that make sense maybe qualify it if ifa.ifa_addr == nullptr family == af_packet { but ""garbage in, garbage out"" is fine here too.";"0"
"just to make sure, are pig configs correct for mapreduce";"0"
"how about having some uuid here";"0"
"tuple unless you wantitmodifiable by the code as it is executing.";"0"
"i think this is delete all children of $workspace's parent, so it should delete $workspace and all its siblings. $workspace is /home/jenkins/workspace/jobname";"0"
"darn it!! now i'll need to update my patches as you are stealing my version number :";"1"
"eck, that suckslost tasks on crash/stops";"1"
"to apronin's comment in case reading does not make it into gsctool but instead into some other command/script per louiscollard's suggestion : what happens while trunksd is stopped we need to check sn bits during chrome os startup too to provide a new key/value pair to the session manager . would stopping trunksd then if it is running and later restarting it risk breaking things now or later";"0"
"now a better name for this field might be ""image_url""";"0"
"""oceanstor 18000"" should be removed.";"0"
"router_id should be floatingip_db 'router_id' . please cover this piece of code with a unit test";"0"
"so, assuming i use your construct, the code below would be: if divm >= pow 2, divisor_info 0 .t114_bits { bad_div = divisor_info 0 .name; etc. but without math.h, there is no pow . i'd have to right a custom one. and the above code is ugly, to boot. how would you use your struct here";"1"
"removing knullcheckelimination from here and doing: mma clean-oat mma will hit the dcheck target_lir issue. you canalso try running test 082 and it will fail in a similar way.";"0"
"pehaps you ment ${migration_prefix} and not ${$migration_prefix}";"0"
"we should probably add an fk constraint here";"0"
"you are overwriting original filters - it makes _.isequal below useless. use deepcloning or flags to detect differences when overwriting values";"0"
"why do not you use self._create_router name here with that you do not need the addcleanup anylonger.";"0"
"this explains part of the size_t -> int change, butithink we might still want to stick with size_t for the driver side for clarity - i hate signed int being used to represent the length of something .";"0"
"yeah, it is like this code has entered a squishing competition. sucky if you ask me, but agree with the line removal here and below - it is consistent with the rest of the code, and that matters more than anything else when coding at chrome-team scale.";"1"
"the loop is ugly. just call self.run_client_test sbutest, prod, enroll after this line";"1"
"can we have a test case for this with mocks.";"0"
"/bin/sh in case of system does not have bash installed but dash or zsh , or it is useless";"0"
"ed current this spec is based on poc patch on the poc, we are generating swagger spec from the code like validation.schema, wsgi.doc, wsgi.response . as you see on the poc, we need to put many decorators on a single api method and generate swagger spec file swagger.json . the decorators seems redundant and we discussed how about putting a single new decorator swagger, or something for clean code for passing swagger definition to api methods.";"0"
"use language_mask_primary 0x3ff instead of 0x00ff.";"0"
"this probably indicates we need a common base-classimo, which would remove the duplication and avoid imho ugly hacks like this.";"0"
"please do not use a normal space u+0032 but a no-break space u+00a0 instead.";"0"
"calls for other mocks";"0"
"s/dummpy/dumpy";"0"
"deprecated_opts should be removed as there is no 'connect_timeout' in compute";"0"
"i think clientexception does not have getcode method. you should use ""err.http_status != 404"".";"0"
"yeah, maybe we can ""kill"" the empty buffers where they get created.";"0"
"just a brain-fart ... i think we may need to have a read-only ldap backend. something like driver = keystone.identity.backends.ldap.readonlyidentity instead of this an a bunch of options like user_allow_* = false we should aim for simplicity.";"1"
"no, i fuckedthis one up. it is in the right place, butitshould be video/...";"1"
"if the function fails in the middle, this will not get executed and the connection will be left open and you will not be able to drop a db, etc";"0"
"mock_get_domain.return_value = dom_mock";"0"
"i think the ""full"" comes from how important is the question. if the answer is going to delete files, it should be yes/no. if it is something simple/stupid, then imo it should be a y/n.";"1"
"should be 22,6379,16379 based on cfg.py";"0"
"holy crapi love html events.";"1"
"ah, terrible white space, how many good crs have you ruined";"0"
"bind is dumb";"1"
"the documentation sucksin this area. this blog describes the operation of the local certification check: this explains why if you take a row lock and then update that row, galera will maintain the same acid semantics albeit by a different mechanism: rollback instead of waiting. it does not need to propagate write intent locks to do this. the failure mode is not relevant here, only thatithas predictable behaviour. however, as you point out there *is* a semantic difference here because we hold a row lock while updating a different row. i hadn't considered this last time i gave this significant thought, so i need to row back on my original statement: they are clearly not the same. do not write it off, though, because it can be used. just not here :";"1"
"this is a discrimination against the only one /0 subnet ... lonely subnet";"0"
"i mean rather than rsyslog. stupid autocorrect";"1"
"needs locking against create_snapshot, because a create_snapshot and delete_snapshot running at the same time will result in a corrupt snapshot volume.";"0"
"you can eliminate the migration variable entirely! right try: objects.migration.get_by_instance_and_status context.elevated , instance.uuid, status group_hosts.add migration.source_compute except exception.migrationnotfoundbystatus: pass";"0"
"ohh, self.sudo_enabled will feel alone separated from self.root_helper ... o_o ... just kidding";"0"
"oh please... it is an annoying little nit that i do not care for at all.";"1"
"particularly for the html, does it make sense, here, to describe where the docs will be spit out to";"0"
"is this a rebase behind";"0"
"you are right. i'll remove them.";"0"
"no, this will be overwritten every time. and since we will kill adbd every time we start the program, the setting will be flushed.";"0"
"please avoid using piped chains of commands for utils.execute even if it supports 'pipe', we must threatitas a fully compatible with oslo.execute. therefore, when the right time is come, it will be replaced by oslo.execute instead of that, just get stdout/stderr from utils.execute and then parseit somehow.";"0"
"get rid of stale white space, here and below.";"0"
"is 255 really needed here";"0"
"... because presumably this whole block of code is not called if bcheckdirect == false. and that is if and only if as far as i can see nelement is endpararpr so you can as well do if nelement != xml_endpararpr { getad charunderline ... }";"0"
"nit: cnost uint64_t kwakeupcountbeforesuspendint = 1;";"0"
"dead: you want the port security bp";"0"
"clearly the ordering was not correct as before. some comments are warranted w.r.t. the order of operations and the dependencies between them.";"0"
"then i think the 'verbose_name = _ ""launch instance ng"" ' in classlaunchlinkng should be removed, it is useless, idea";"0"
"useless now";"0"
"you haven t actually done anything with this. either use it or remove it.";"0"
"ah, i did test both and both passlooking at the test, of course if first is already false when we start the test, we never set visible to false, and of course commit will be executed. fixed.";"0"
"404 notfound should be thrown instead of 405";"0"
"> if username_correction_found > metrics_recorder_->recorddetaileduseraction ...::kcorrectedusernameinform ; > see other occurrences of recorddetaileduseraction . > > in password_form_metrics_recorder.h: > > enum classdetaileduseraction { > kunknown = 0, > ... > // interactions with form. > kcorrectedusernameinform = 200, > }; done.";"0"
"dumb q -- where does params.skipped get changed between here and a few lines up when it is set to 0";"0"
"added a dcheck, we mustn't get empty skeletons here.";"0"
"you are* avoid contractions please";"0"
"ah, this is fairly stupid. this script is executed from root, and the files are in vagrant. thanks for checking it, i blindly added this without properly checking the outcome first.";"0"
"let me quote tdf bugzilla quip to you: ""checking ""if this "" is completely brain-damaged. if you want to ask questions like ""do i exist "" then practise philosophy not c++."" on a more serious note, such check is useless. 'this' will never be null in a member function. or to putitdifferently, the check itself is not a problem. calling the method on a null object pointer is. so please fix the calling code.";"0"
"this should be: for obj_content in matching_ds.objects:";"0"
"silly nit: might be better to call it something more like _format_lun_id since it is not doing like validation or anything.";"0"
"yeah, we should make this better / more clear in os-brick since it is pretty flaky otherwise, i.e. as the caller i have to know about the specific internal implementation of os-brick for the type of driver i am using, which sucks";"1"
"if log_tmp existed already, it should be emptied first, so please insert a ""delete from log_tmp"" statement just to be on the safe side";"0"
"this function and the pthread_once_t are not needed if you initialize the mutex with pthread_mutex_initializer.";"0"
"i think this also wants to be const std::string .";"0"
"more pedantry... i do not think here you mean floating ip with fip, but fixed ip. can you rename fip to fixed_ip in this case just to avoid confusing dumb readers like me";"0"
"meh, just make it an attribute on the class only you can prevent python stack bloat actually you can not - we are all screwedbut we do not have to be jerks aboutit";"1"
"monkey see, monkey do. see netns_cleanup.py and ovs_cleanup.py";"0"
"i'd rather call it live_migration_cancel to follow convention live_migration is the only weird name here";"0"
"may not be able -> may fail";"0"
"no magic.. just this coder dumbness tried another way...";"1"
"if openstack_release == openstack_release_ubuntu:";"0"
"useless line return between ""moreover and ""here below ...""";"0"
"this backslash is unnecessary and should go away.";"0"
"again, this message needs to be internationalized. also, the backslash is unnecessary here.";"0"
"can this be incognito profile we currently persist download directory in original profile.";"0"
"done. you would have got bonus points for the totally bogus next sentence that belonged to a different cl...";"0"
"use .die";"0"
"because i suckwill fix.";"1"
"you do not actually need these haschildnodes calls; the dom will return a shared empty node list for you. avoids extra nesting.";"0"
"mock_guest has all of his methods mocked it is not necessary to override them. s/.../mock_guest.get_xml_desc.return_value = self.dom_xml";"0"
"i am not sure we could do that. ex: >>> a = set 1,2 >>> a set 1, 2 >>> >>> for x in a: ... print x ... else: ... print ""noo"" ... 1 2 noo >>> the else block is getting executed no matter what i am surprised, is it a bug or something in python this is on 2.7. was wondering why the ut was failing only to discover the above behavior of python.";"0"
"new_username = uuid.uuid4 .hex :";"0"
"not yet. i hope that the race condition which is the root cause of this port cleanup will be identify and eliminated.";"0"
"joe: well, not really, it is totally dependant on the operator enabling the correct scheduler filter. so if i as a user add these hints and they do nothing that sucks matt: +1 to your simple description and developer docs suggestion.";"1"
"yeah, i forgot to remove it. deleting now...";"0"
"dammitithought i'd found all of these :";"1"
"expect_eq kill , 0 << errnomessage ""kill"" ; butithink we d generally prefer to get rid of this and line 265 altogether and let the child process die naturally when it recognizes that the parent no longer cares aboutit see below.";"0"
"for warm_snapshot, domainsave should be executed, otherwise, domainmanagedsave is executed. control flow here is not correct.";"0"
"could you check the returned value of pos if pos: pickle.dump else: ...";"0"
"s/notice/notify/ s/make/take/ no good reason why you can not say ""make""; just a stupid english rule";"1"
"sleep_time=usage_sleep_time";"0"
"imo useless variable 'self._xml_header'. you already have the constant";"0"
"this line should be removed.";"0"
"i think i'd still continue. maybe oem hasstupid cruft here.";"0"
"i think you want: printf ' ' printf '""%s"", ' ""$ "" printf ' '";"0"
"once we fix all of them, something like the marvell code above should become fatal";"0"
"this sucks";"1"
"use of inline styles are a bit ugly. maybe create or possibly reuse another css class";"1"
"done zabbix_ip = self.fuel_web.client.get_public_vip cluster_id";"0"
"ah, damn yes, i was thinking that the _filter_kwargs would convert a trustee_user=object parameter into trustee_user_id=object.id parameter. i forgot the situation where you would passid directly to the function. ideally we would have just use **kwargs initially here and people would have passed trustee_user_id from the start - but you are right and that is a backwards incompatible change. ok, can we change this back and just additionally passkwargs through";"1"
"you ignored my comments upstream in v7 that the config_bootdata and the memcpy no longer really belong in the iomap function...";"0"
"elasticsearch_url = self.get_elasticsearch_url";"0"
"i strongly object against this. instead you should use sqlalchemy introspection like this: from sqlalchemy import inspection pkg_inspect = inspection.inspect pkg foreign_keys = pkg_inspect.relationships";"0"
"bc i am an idiot when i am tired : i really should put the method it calls into another module anyway, meant to do it anyway but sleepiness made me forget to come back to this.";"0"
"use assertfalse instead of asserttrue not ...";"0"
"yes, that sounds overkill and looks ugly";"1"
"rico, i do not see any issue here. if 'find' gets some executions we can expect them to be there for 'delete'.";"0"
"there could be exception.drivernotinitialized, exception.volumesizeexceedsavailablequota, exception.snapshotlimitexceeded, exception.cinderexception, and maybe other exceptions in taskflow are here i am not sure. so, just like volume_manage, i feel exception is better here.";"0"
"yea : it is currently here because it was faster to assess it is performance. the removal stuff will need to be pulled out of the instructionsimplifier as well to get this.";"0"
"if you mean why the word ""host"" in one name, but not the other that would be because i am stupid. or, it could mean i am lazy... i'll regularize the names.";"0"
"at the end of execution we should clenaup __openstack__ and __admin_clients__";"0"
"double checked with rui. she said it is from shimi and suggested i stick to it.";"0"
"when removing _sc_xb5*, _sc_2_c_version, it is bionicbob not bionic build wrong.";"0"
"i hate to keep banging on about this, butitis new code, so please use $";"1"
"identity_uri and auth_uri should be used instead of auth_host, auth_port and auth_protocol";"0"
"it mean, _message.storage.default_storage";"0"
"i'd change this to a die since we have no idea how to handle it";"0"
"i would write this: . ""${sfile}"" die";"0"
"please kill the extra whitespace.";"0"
"this traceback is quite useless. worse, since chromeos is set to crash on warnings, it will result in a reboot. while running out of memory is severe, it seems extreme to cause a system reboot because of it.";"0"
"this script is actually just sh.";"0"
"if there is something in the fifo then this silently fails. thats kinda sucky";"1"
"ah damnthis is probably because protobuf_to_dict is older than map<k,v> being a native type in protobuf. it turns out there is a completely undocumented google.protobuf.json_format, so using that instead.";"1"
"you should probably delete all these agent_* ones.";"0"
"may want to do this self.cert_required = cert_required.lower == 'true' in case someone fat-fingered the 'true' :";"0"
"blarg, that is crappybut i'll update.";"1"
"i am good with 'root_secret'";"0"
"dockerctl is a fuel bicycle. i thought we want to have shotgun fuel-agnostic. if so, please use ""docker exec"" instead.";"0"
"dumb q: how come we can not use std::make_unique here i do not quite understand the comment about the private constructor.";"0"
"can i ask stupid question is this driver extention in stevedore, if choosing one, that is called driver. when choosing some, it is called extention. i feel this is extention.";"0"
"this should be run_tests.sh as that also runs pep8";"0"
"the only thing we are here for is to kill have_pthreads. another step on the road to removing the evil namespace pollution that is wwas androidconfig.h. nearly gone.";"0"
"i stopped reading after 'you might be thinking ""wow, this looks like effort"". well you best shut your brain hole and do it anyways. '";"1"
"in the interest of full disclosure, it was pointed out to me by one of my standards committee colleagues that this is not guaranteed to be the same type as int32_t, even if both exist. they are required to have the same size in that case. since this would be stupid, would result in at worst a compiled error, and we control the implementation, i do not think it matters.";"1"
"done. change xx = null to memset in __stubs_state.";"0"
"this test failed on my saio because i already had a container in the test account. is it possible to perform the check and be tolerant of existing containers";"0"
"stupid question, but why *are* we preserving newlines here optparsereformats to term widths last i knew; this disables that.";"0"
"from the root directory android_build_top , i get the following: > make insertkeys.py make: *** no rule to make target 'insertkeys.py'. stop. is it just me maybe try using something like: include $ clear_vars local_module := insertkeys.py local_src_files := insertkeys.py local_module_class= executables local_is_host_module := true local_module_tags := optional include $ build_prebuilt";"0"
"this is ugly/not python, but if that is what they do then that is what they do. i would think you do the standard default of none and allow them to passin """", like is already a possibility with empty passwords.";"1"
"should be self.d_env.admin_net2";"0"
"servod is usually killed by keyboardinterrupt and since these processes are daemonic, they should be killed when servod is. they are intended to run as long asservod is running.";"0"
"these are cheap... simple getters..";"0"
"nitpick: nested format and copy-pastos are ugly. consider using variables and old good %.";"1"
"uninformative docstring.";"0"
"this.launchparams_.includeallfiles should be taken into account too.";"0"
"i just figured gridlayout::kfixed/kstretchy. if that sucksi do not have a better idea.";"1"
"yuckhow'd that get in there i'll --reset-author and resubmit.";"1"
"it looks like i should update db/agentschedulers_db.py.";"0"
"typo: s/instance_get_by_uui/instance_get_by_uuid";"0"
"this seems a little roundabout to me. why do these need to be json, and why are they stored in yaml in the first place the commit message does not make it clear why this is needed. these need a refreshonly => true for each exec, otherwise they will execute on every puppet run.";"0"
"no point in one yet, we can add one to the patch that seals it all : butthis one is a drop in the bucket";"0"
"i think you mean 'tox -e genconfig'";"0"
"this logic should be moved to setup to be executed just once";"0"
"sorry, i am an idiot.";"0"
"i think this is important enough to implement now. without stable order the diffs will suckwhich kind of defeats the purpose of keeping history.";"1"
"dumb question alert.. why this is not.. utils.get_nameservers none, none";"0"
"damnit, i missed that one! no, i do not think we want the group name to change and 'cache_backend' sounds like a good group name. what about just 'cache'";"1"
"these steps should be in src_prepare you can drop the "" die"" after the eauto* calls";"0"
"''authmethod'''s or the ''authmethod'' objects are ...";"0"
"i am fine removing this since we also have a liaison table somewhere on the wiki which probably needs to move in-tree, i hate the wiki .";"1"
"*cough*. typo in ripping the patch out of another patch. admittedly, a very dumb typo.";"1"
"ya, whoops. english sucksha.";"1"
"this is a dirty hack needed when you are not inside a git repository and using pbr. could you remove it";"0"
"oh, shitforget to add lib file";"1"
"subnet_id, network_id - should there a fk relationship";"0"
"so, you can probably remove these and kill the whole buffet/dbus_constants.*";"0"
"%1$d %2$s also: should we report ""uid"", does it help how about something like ""expected int value, instead got ""%1$s "" in ""%2$s"", values.get index_of_uid , line";"0"
"i think this is the wrong bug.";"0"
"arange.astart is already a scaddress. arange.aend is already a scaddress.";"0"
"for better or worse i would argue worse your still not configuring ntp";"0"
"this seems to do nothing and should be removed.";"0"
"fake.volume_id missed it again";"0"
"i find this ugly. when i wanted to get actual domain, i used roughly this: >>> a = urlfetch ' 'get' >>> a 'revisions' a 'current_revision' 'fetch' 'http' 'url'";"1"
"when using fake values, mock.sentinel should be used";"0"
"why is this lazy eval necessary here and line 67.";"0"
"this original code is valid and imo more readable than your list-comprehension.";"0"
"yes, because of raw disk format of slaves";"0"
"wtf i thought ""assignment"" wasseparated from identity this is a joke";"1"
"this is a bash script, so use ... doing an -e test here is kind of pointless as rm -f will ignore missing files";"0"
"this is running under stack.sh that should have defined all this. you just want $files";"0"
"ah shit";"1"
"it may be a stupid question but couldn't those debug prints be better managed as log lines at debug level";"0"
"well that wasstupid, done";"0"
"it is been a good idea introducing distutils. just as a note, you could use also looseversion seem to work fine for me, and i prefer to be an anarchist rather than an 'analretentive' - quoting distutils documentation";"1"
"i would be great if you remove backslash and use parentheses here.";"0"
"this exception wrapping are pretty useless, unless you plan to embed something in them, or plan to inherit from some other exception.";"0"
"i will, bye remove_conf_file!";"0"
"oh, that is just me being lame. my bad.";"0"
"you can not do that in puppet $afd_file = ""lma_alarms_"" + regsubst $name, ... but yes i see the idea.";"0"
"imports should be in the begging of the file";"0"
"no == false. aka if !dmc_valid_window_test_vector ch, -1";"0"
"this is getting silly. how about: if none not in self.driver_name, self.driver_format, ... : or: if any self.driver_name, self.driver_format, ... : or any of the other, far more readable and maintainable ways of doing this";"0"
"nit: pls put spaces inside {} if they are not empty.";"0"
"if the mmap op fails mmap_region will call unmap_region on the region which zaps all the ptes.";"0"
"this seems useless. it is true of all posix command line argument parsing. we are not going to explain how to quote shellmetacharacters too, are we";"0"
"sh*t!! i do not know how that happened!! thank you for catching it.";"1"
"good point. but can an admin setitsilly one-size-fits-all schemas :-";"0"
"i think you are just complicating the code by having this flag here. if you let head run past crossing_buffer_size, and do the mod operation when you use it to dereference a member, then you can just compare head >= crossings_buffer_size instead of having the double logic you have now. the only time you have to do the mod operation then is when you store a value, all other uses of head are comparisons. nit: i am also a suckerfor ""max_crossings"" namings instead since it is a little shorter, and it clarifies if size is in bytes or entries.";"1"
"damnthat is a really small key. you can probably getitsmaller if u do list map ord, h.digest 0:1 btw, haha.";"1"
"instead of makeany you can simply use the any ctor template, which feels like it looks less clumsy; makeany is only really useful if you need to explicitly give its template argument, see e02a29c0a733e4c2a98ed9c7c290928314bb307d ""improve documentation""";"0"
"having a hispeed_freq entry for 204mhz is useless since 204mhz is the minimum frequency";"0"
"it is really smelly to just ignore the complete and error events here. if they are not useful anymore remove them. if you leave them, you'll give future maintainers a reason to think they are being used.";"0"
"are ipd bits w1c they are listed as ""rw"" in my trm.";"0"
"ha ha. yeah, this is stupid. it is because if i put '#pragma: no cover' on the self.fail line then it is more than 78 characters. i am thinking of using unittest.assertraises as you suggest below and importing unittest2 for 2.6";"0"
"this one is true/false, the next one is >= 0 / -1, i find this a little confusing...";"0"
"looks like helli hope, juniper will fix dependency and we car re-write this.";"1"
"uh... i am assuming these defaults are really just dummy values... you should probably remove them.";"0"
"looks really ugly and breaks latest pep8";"1"
"eck, is this where the body gets read will that sit there and suckup humongous files posted by nice hacker man.";"1"
"os.kill does not have the permissions to send a signal to a sudo process.";"0"
"remove std::.";"0"
"make sence to me, i'll collaps them into single method then.";"0"
"detach slave instance";"0"
"nit: s/umb/dumb/";"0"
"i am pretty sure you do not need this method. timers stop when they are destroyed";"0"
"i hate%# #$ dealing with indentation stuff. but since you caught me...";"1"
"how to validate a junk uuid let us assume user sends some junk value intentionally.";"0"
"add a comment that the pausehandle should be destroyed before the scheduler";"0"
"s/template_key/template_id/ here qand everywhere else too please.";"0"
"you should swap bs with the count, 1k is too small chunk of i/o.";"0"
"kill blank line.";"0"
"i am confused now..the dialog now has: * choose running device * run tests in google cloud only shown if setting is enabled but launch emulator is now relegated to behind the launch button that would suckbecause the 2nd option now has all the issues that we were supposedly solving with this rearchitecture..";"1"
"mm, crapi do not think so - it is been around for a fair while.";"1"
"feels like splitting hairs. the point is, we have precedent for telling devs: ""if you want to develop against this driver, have the driver present locally!""";"0"
"ouch! will fix.";"0"
"probably 1 and 2 should be combined, does notit";"0"
"when i was using $ndk_root/platforms... some needed files were not found. apparently we haven't really root caused this failure.";"0"
"wtfis this creating local files";"1"
"realized essex should be removed.";"0"
"kwargs self._parent_id_name = parent_id";"0"
"dumb question. in nova, when is the quota 'taken away' from a tenant before this deploying is started or after it is successful";"0"
"these methods i am not hugely happy w/; may change them slightly. the api for it makes consuming a bit of a pain in the ass";"1"
"gah, i am an idiot. thanks!";"0"
"i got rid of all of these without even adding them to feedbackprivatedelegate. after getting rid of the debugd d-bus calls it seemed superfluous.";"0"
"this comment threw me, because i did not understand that the ""via"" part wassaying that there was an intermediate data structure. i'd instead say something like: # mapping of directories -> globs in the directory -> owners.";"0"
"should this take an expect_body_key arg defaulted to false so we can do all our checking in one place it should remove the need for some of the error handling in basedecryptercontext.get_unwrapped_key -- i think to the point thatitd make sense to let callers just call self.crypto.unwrap_key themselves.";"0"
"override: we tend to have it on the same line, like this. objects.tostring: you are confusing sun's fairly useless one with our fairly awesome one. look at the imports. we were here first!";"0"
"why you are defining this as a tuple";"0"
"i would call this ""iommu"": struct rk_iommu *iommu;";"0"
"into a human-readable message method -> the method";"0"
"oh yeah, i refactored/rewrote this a bunch of times and did not notice afterwards thatitcould be collapsed.";"0"
"maybe it is better to use function die.";"0"
"stupid python question but what happens when a classis empty... is still valid syntax";"0"
"why can not you inject the mocks into the unique_ptrs does the test fixture need to maintain ownership of them or something";"0"
"please leave a space between prompt and userinput";"0"
"ah, i thought you were referring to 'null instanceof classa' i will add sensitivity to nullchecks in a follow up.";"0"
"pedant nit: device_owner in l3_db.device_owner_router_gw, l3_db.device_owner_router_intf";"0"
"nit: spell out 'daemon' instead of 'd', i.e. newbluedaemon";"0"
"use a redirect, no need for redirectmatch.";"0"
"scratch that, making chown do it would be sucky and ugly. is there a way we can just do a ""restorecon_all"" at the end of the init process before remounting root ro, and then after setting up /data to just restore the context of everything";"1"
"please remove redundant white spaces.";"0"
"length > 2 and double elements kind is guaranteed to be a fixeddoublearray. hence this cast should just either be unchecked or crash.";"0"
"i strongly think that sending complete instancelist objects for every host periodically, even if it is a longer period than 60 seconds, is a code smell. if the regular updates work well, this should never be needed. if sending such a huge amount of information regularly is needed, then the whole update process sucksand should be fixed. alexis: i prefer the full instancelist for a host that is not in sync, but i was anticipating that some might still see that as too heavyweight, and wanted to provide that option. we hadn't discussed this aspect of the spec at either the midcycle or the last gantt meeting.";"1"
"then let us fix nailgun agent. i really don like to see that 'data' assumptions so deep in the code. boolean 'update_by_agent' must die, or used at least somewhere really near the http handler. not so deep in the code.";"0"
"need to remove trailing white spaces";"0"
"should this be die";"0"
"afaic, jsonutils.dumps is not required for json field";"0"
"are dwo files generated for arm64 with debug_fission apparently, they are not generated for x86_64.";"0"
"nit: put the full url or put these each on their own bug: line, gerrit seems to only convert the first one into a link and i am too lazy to copy-paste :";"0"
"you shouldn t need any awkward initializer at all. just struct sigaction g_old_handler; will be zero-initialized.";"0"
"this include is a left-over, i'll remove it. same for <string.h> and <unistd.h> below.";"0"
"do not know how that happened, that was ugly : fixed.";"0"
"you should be using mock.patch in the appropriate place instead of manually patching the library.";"0"
"ugh, that is an awful interface. i guess we could still make it work with the common code but we'd have to design a new spiflashctrlrops interface to shimmy in between there that would handle whole command+response operations. well... i guess we canalso take this code as is. i just hope we are will not have 5 different tcpc drivers with all their own spi flash implementations in a few years.";"1"
"""nyadvance is 0 since it is ltr horizontal "" duh... i knew that was a stupid question :-";"0"
"fall through the end with self.neutron_service_plugins = none which was the original behaviour";"0"
"do you have an example of a subpackage in tast thanks.";"0"
"missed the little bugger";"0"
"okay, this is stupid. setting the read_deleted attribute of the context, a context which is shared by all periodic tasks within the same run, is ""bad"". please ignore and i'll be back with something that addresses hans' comment.";"0"
"this will break if i authenticate by user id or if i rescope a token not sure this code should care about that scenario though";"0"
"let us remove my silly note : it is now logged in gerrit for the future!";"0"
"back in the real world, it is the maximum value in a size_t. you'd check it is null so you know the implementation did not fuckup, overflow, and return you some small allocation.";"1"
"you can remove this 'if' statement: attachments = vol.get 'volume_attachment', for attachment in attachments: ...";"0"
"const bootcontrolinterface* const boot_control;";"0"
"version_number directory needs to be removed.";"0"
"ah, yes so stupid";"1"
"i agree that this seems wrong, butthat is the way it works due to the way in which the auth_plugin is created in the dummy context used for testing. the keystone endpoint is stubbed for all clients, see";"0"
"names are awful";"1"
"and this line should now be removed.";"0"
"shooting ourselves in the foot is also analternative.";"0"
"this will potentially interleave output, which sucksperhaps ""attachoutputforlogging"" should have a form that takes a bytes.buffer";"1"
"the blank line here is ugly imnsho : .";"1"
"another shameful nit: add a #note or #todo to this comment";"1"
"this seems short, my pigeon powered message queue takes 30 minutes to respond to things and the failure rate, do not ask about that , magic numbers suckha :-p +1 to adding a todo";"1"
"to be fair, force volume detach sounds essentially the same as force delete of an instance, the only difference with normal delete is the state checking. so if we are ok with forced instance delete, why is forced volume detach so terrible, knowing it is a last resort and yes the recovery/rollback/cleanup of failed attach/detach operations should be fixed as bug fixes for example, in the case of a network outage or something which should not happen but shithappens, and things get out of whack, i really only see 1 force detach api, 2 periodic cleanup task, or 3 manual intervention in the database from the operator, which kind of sucks";"1"
"wrap in _ so that this string gets translated.";"0"
"odd.. missed in commit. let me re-upload, i must have done something stupid.";"0"
"cheater!!!!!!!!!!!!!!!!!!!!!!!!!! fix it in the previous patch :p";"0"
"the pre and post run if we keep them should definately be ansible playbooks. ie they should be first-classcitizens.";"0"
"possibly a dumb question, but how come we do not have lines 2166-2169 here or are they not reachable";"0"
"discard in favor of using self.get_token_version.";"0"
"i wonder if this value should be computed by puppet facter.";"0"
"storage_group.connect_host should be executed after creating storage group. and it is just invoked one and only one time.";"0"
"host__hostname=self.hostname";"0"
"should you write this before killing chrome, or is there no risk of races";"0"
"we probably want some uma about tasks including things like: - we've aborted due to a failed init. - we were told to stop before we were finished. - we finished ourselves and triggered the callback. - etc";"0"
"override_zuul_branch should be used here due to the landed.";"0"
"delete this ebuild ... the bots will create it for you";"0"
"this should end in a colon, similar comment applies throughout.";"0"
"we can nuke the delegate_tos since we already set login_host.";"0"
"for now, let us keep it like this, there is a discussion going on what to do with the naked c++ pointers.";"0"
"double crap";"1"
"perhaps put a colon or period after controller.";"0"
"make this die";"0"
"other entities seem to do it this way see projects.py";"0"
"some aspects will change - e.g. the fk. i think it is ok to list here.";"0"
"yes, we should remove the $ foreach call.";"0"
"seems that you dont need self.clinet.session and self.node mocks in this test case.";"0"
"could mention here that usual allows are: allow_deprecated allow_experimental allow_unknown just a small suggestion";"0"
"remove user_id=none since that is the default.";"0"
"i think the adb bug is fixed now, did you try the old ""adb shellrm"" instead of ""adb shellsh -c""";"0"
"hmm, that sucksare there any long-term plans for handling that because this makes me wonder now of dberror is going to be truly enough i guess if we have any places that are explicitly checking for operationalerror we'd have to know about this - or if places *should* be checking for operationalerror but only check for dberror. maybe we need a note here or something about why this is needed";"1"
"return false on null case if !blob->data { return false; } blob->data_length = ...";"0"
"i am sure i'll get used to it, but a presubmit rule would be good.";"0"
"args=""$ """;"0"
"migration only applies to the sql backend, so for a different backend it might not exist. also, the comment above says that the default domain can be deleted by some manual process.";"0"
"this if is not doing anything useful, bytes >= 0 based on the check above.";"0"
"looks like it is trash can we save only self.cancel none here without log.error";"0"
"hmm, something must not be right. this code path should not be hit in the kmultideviceapi world, so i would expect this entire method to be removed.";"0"
"int64_t is a typedef, is notitmost probably it is exactly the same as long long";"0"
"i realize that some of these are silly lol at my terrible libc dependencies in the past , but are these other deps really unnecessary";"1"
"good that you are computing the count on demand and not storing it someplace that get get out of whack!";"0"
"same. let us kill them in consequent patch.";"0"
"ah, so here we never update the port, so we must check if the mac address is ok. after this change we always overwrite the mac address and update it to a value that does work. so its actually really dumb what works today. if you happen to passin a port with a matching mac address, it will work, and we make sure when we create ports we do not use the mac the user passed in. in all other cases we seem to just give up if the hypervisor hassome mac addresses .";"0"
"this classhas no point at all and is wrong. i already wrote something aboutitbut if it is just going to be about loading the driver, just kill it and write a function get_coordinator backend, member_id, kwargs that does what __init__ currently does. the rest is just useless. and inheriting from coordinationdriver if you are not a driver is *wrong*.";"0"
"why a new function see below...";"0"
"i was actually meaning __file__ there, and being stupid. the trace is what i want anyway. the trace will now get logged and passthe same short error message up to the caller, so i think this does the right thing now.";"0"
"the junk! :";"1"
"we are exec'ing out to iptables, basically, so no need to passextra garbage to it.";"0"
"this canbe deduped";"0"
"yes, that is ugly, will change it.";"1"
"so here comes the stupid part of go: keys := make string, 0, len datacenters for id := range datacenters { keys = append keys, id } sort.strings keys for id := range keys { datacenter := datacenters id ... } and this is not generally extractable into a reusable function because go has not generics . otherwise the order is not deterministic and tests expectations will not always match.";"0"
"# cleaner - return assoon as know you have to return action_flow_tuples = self.action_flow_tuples if not action_flow_tuples: return self.action_flow_tuples =";"0"
"i also think there should be a dcheck for inlines not being anonymous, if they are to be split.";"0"
"similarly here, const updatemanifestresult** result_out";"0"
"we need to eliminate the dependency of common_db_mixin";"0"
"this error is really nasty; let us add an explicit dev_err here";"0"
"you probably do not need to strip here if you strip each pid individually below anyway. there is also list_from_csv below.";"0"
"can you use callerinfo.unknown_number, private_number, payphone_number";"0"
"this classhould implement tear down such as test_l3_plugin";"0"
"dummy/sample mmc values mentioning daisy will probably just confuse people.";"0"
"> useless super delegation in method '__init__'. > to disable, add: # pylint: disable=useless-super-delegation please fix";"0"
"<u>nable";"0"
"better to display them in the order they should be executed in the lifecycle of the node.";"0"
"and repeatedly executing the same useless code is slow ... imo, that is just papering over the code inefficiency.";"1"
"better use elif for redhat os_family";"0"
"these assert messages are pretty unhelpful. if you do not want to lose the messages consider ""freememory was negative"" ""freemomory > totalmemory"" and ""totalmemory > maxmemory""";"0"
"let me know your thoughts on the most recent patchsetitshould remove the disconnect we currently have between the pd task selecting its own cc values and the charge manager selecting them.";"0"
"sorry, i am a dumb robot! i do not read what i am writing :-p you are completly read, the current code is overkill, assertin makes more sense, it is more readable, etc. and the previous line already checks the size of the dictionary. fixed in my new patchset.";"0"
"i think it'd be best if we reduce this set down to a single openstack service from git, and a single pypi package. we do not need to build an entire repo.";"0"
"do we need to code around this can we just kill the networkinterfacefactory and generate it like the rest _attach_interfaces_to_driver could then use _interface_loaders 'network'";"0"
"dammit! good call.";"1"
"sure i could be more vague. but whats the advantage of hiding the error from a developer. if its permissions denied, it'd give him an extra google fu nugget.";"0"
"oh crapsorry";"1"
"this empty line should be eliminated.";"0"
"nit remove useless statement.";"0"
"remove extra fields from here i think only 'network_driver ' is required here";"0"
"nit: if you are udelay 'ing here, you should probably be udelay 'ing below as well.";"0"
"this one's weird 'cause there is also string.valueof";"0"
"domain_id should not be here, only properties in the type should be here.";"0"
"ahh, so you are saying that when we dropped the fks, the fields stayed as indexes wow. if that is the case, perhaps it would be a good idea for the todo comment to state this and that these are indexes that need to be removed, rather than formal constraints";"0"
"it would be nicer to use ""size_t old_fingerprint_end = old_sdp.strspn "" r n"" , butitseems that wtfstring does not have a strspn equivalent. this will work.";"1"
"another *notfound.";"0"
"do you really want to catch all throwables often you do not want to catch things descended from error.";"0"
"temp_vol_ref.destroy";"0"
"why spawn an external kill process rather thanusing os.kill";"0"
"nit: put a space after # in all comments below";"0"
"backslashes are still here";"0"
"how is it really a 'message queue' it is just a dummy.";"0"
"did i i must have screwedup the rebase.";"1"
"i think the _is_admin is spurious and should be removed. only leave the other check...";"0"
">> bool can_be_block = signum != sigkill signum != sigstop is_valid_rt_sig; this statement should be incorrect.";"0"
"i am not familiar with this, sorry if this is dumb. i see that some html resources have * flattenhtml=""true"" allowexternalscript=""true type=""bindata"" see for example while others have * type=""chrome_html"" preprocess=""true"" or only * type=""chrome_html"" see line 76 below is this normal";"0"
"yuckanother dependency. kstackoverflowprotectedsize seems to only be used in thread.cc. if that is really the case, move to the include and the constexpr there.";"1"
"const struct edid *edid";"0"
"i think that here should be ""fuel_plugin_example_v4"" group";"0"
"would it be better to put all sample processing in the if clause 'if sample_ttl > 0:'";"0"
"what an ugly url :/ btw, how we are going to retrieve needed suite and sections";"1"
"fn seems more c and fun more c++. fcn seems weird and i can not see any precedent in our libraries. unless you count the oddly-named dlfcn.h :-";"0"
"eww, no, let us use an action='store_true'-style argument here.";"1"
"private string myoriginalthemename; can be a member of this anon classit does not need to be a member of the themeeditorcomponent";"0"
"oh you mean, my coding sucks. that is expected : yeah. it is better to split them up even though from api perspective it should be together... right now we are storing data in sql as if its nosql which is not the greatest.";"1"
"nit: in general you want to use ""$ "" instead of $ here, this takes care of the case where there is a space in one of the parameters, e.g.: print_params_1 { for p in $ ; do printf ""%s n"" ""$p"" done } print_params_2 { for p in ""$ ""; do printf ""%s n"" ""$p"" done } print_params_1 ""a fool"" # prints ""a"" then ""fool"" on 2 lines. print_params_2 ""a fool"" # prints ""a fool"" on 1 line.";"0"
"here and below, mark as private: this.lastgrantedchunk_";"0"
"the command to start the service depends on your operating system.";"0"
"i am nore sure what your point is... these typedefs do not mention elf_gregset_t or elf_nreg.";"0"
"stupid question... as the last 16 bits of mark_mask are 0, do you still need to left shift the routing table id i am not sure what you mean by ""upper"" here.";"0"
"this is copy pasted verbatim from the neutron patch butitis silly: just do: for event in self.pending_events:";"0"
"may i ask a stupid question: who is using this function ; i did not find any usage of this. so instead of reworking it i would suggest to delete it...";"0"
"you do not use single/collectionhandler methods. i think you should just use basehandler.";"0"
"nit: still a $$ instead of $ here :-";"0"
"put all these into ch_dashboard.rst";"0"
"probably just sh, since you are not using bash-specific commands and not every linux has bash. btw, you need the copyright holder.";"0"
"this comment should probably be moved to where we compute report_to_uma .";"0"
"shoot! i'll fix it right now i'll blame this one on working from an airplane";"0"
"not a todo, it is a remark, like in ""rats, yet another spool""";"1"
"holy crapthat is perfect.";"1"
"yuck. off my game.";"1"
"facepalm, stupid me, gotcha.";"0"
"this might be a dumb question but why are both acl_objs and acl_values needed";"0"
"if there is a problem in one of the lines below - say for example the ip tables apply fails, do we want to kill the agent prior to deleting the router";"0"
"please, do not do this. we are trying hard to get rid of this taskhelper garbage. implementitusing separate zabbixmanager or something like that.";"0"
"yuckselinux needs a rewrite to support bool conditional.h is using a variable name that is a reserved keyword.";"1"
"put this after all the other middleware pieces that might fail, as to minimize the waste of processing time...putitafter json_body i think";"0"
"i think we'll end up calling self._interface bus or bus_num in the params section ... but lets discuss in person";"0"
"please remove all white spaces";"0"
"damn i thought i caught them all!";"1"
"on the existing servers with given credentials. i think thatitmakes sense to show how to passloclarc args otherwise this tutorial is useless";"0"
"maybe want current->tgid i think pid will not match up with anything in top or ps";"0"
"why was tunnel_update missing earlier";"0"
"seriously i _hate_ bananas. they are gross.";"1"
"also do the equivalent check on e.g. ""path.with.dots""";"0"
"i think you can simplify by defining safedelete that accepts f, *args and **kwargs and calls it while catching notfound. then in _create_resource you call self.addcleanup self.safedelete, data 'id' and in create_bandwidth_limit_rule you call it with the additional policy id. the advantage is that you do not have to define the wrapper in line 23, the disadvantage is that any new create method will have to know to use self.addcleanup with self.safedelete and thatitwill not be automatic like you did here with overriding addcleanup. i am not in love with the idea of overriding addcleanup and i think that any new create method people will just copy/paste something else in this file anyway so overall i like my suggestion better.";"0"
"i've always liked conf files that say craplike 'update here'. :- whoreads those readme's";"1"
"i'd prefer to see this in a #define but not a clean spot to put one. plat/pm.h is the easiest spot as that is where the existing pm_check code is, but including that here is ugly. maybe put this in include/linux/pm.h and include that seems a bit hacky either way, although once we get a generic non-arm mechanism for pm-check it will get cleaned up.";"1"
"this use of <span> tags bugs the crapout of me, butitis consistent with the surrounding code so i will not letitbe a blocker.";"1"
"this is likely ok since the ""bad"" admin role check is no different than other priv. calls.";"0"
"is it really safe to handle these irqs now, at syscore resume time cocks and gpios may not have even been initialized yet.";"1"
"if you do david's suggestion, can you kill the mutex check of stdin_read_thread";"0"
"the hardcoding of nbd1 is a bit odd; butthen qemu-nbd sucksfor scripting use.";"1"
"white spaces should be removed";"0"
"stupid api! see next patch.";"1"
"nit: removal of newline here is an unrelated change.";"0"
"maybe do a static import for graphicsutil.setupantialiasing so there wouldn't be this ugly fqcn here";"1"
"this acl file exists:";"0"
"i wonder if we ever want to seriously consider stopping the nonsense of shadowing id . just a thought.";"0"
"wtft_t";"1"
"ok .let me remove those parts first from the commit message, thanks";"0"
"this explict call to rootwrap appears unique in the code base... i am not sure which is right, butthings like cinder/brick/initiator/linuxfc.py do it differently so i am querying it here...";"0"
"this hardcoded password looks ugly";"1"
"hmm, this kinda sucksthe only reason you'd want to go back and look at a deleted stack is that you might e.g. want to look at the events on the resources like to find out when they were created and deleted . although arguably we already trample all over that on updates, and this is just making the delete consistent. i am not sure what conceptually the right thing to do here is.";"1"
"i think alex did some special formatting when creating the header with this icon to getitto show up correctly. i might need to do some reformatting of this icon to get this to show up correctly in this case presumably getitto 60x60 , otherwise it appears kinda ugly. will see what i can do.";"0"
"i wish this was ""amphora_expiry_age"", butthat is just me being pedantic.";"0"
"changed to note that we kill instead. yes this is ipc fuzzer the garbage generating as i've used ipcdump from the bug.";"0"
"inline this empty destructor.";"0"
"boring, pedant nit: the unit test should verify correct assertion in all configuration setting. perhaps this test should be execute with and without namespaces enabled.";"0"
"dumb question... what does force=true does for us";"0"
"can we come up with a better name than ""utils.py"" this will become a trash quick with such a generic name.";"0"
"dex2oatd i 31595 31595 art/runtime/gc/heap.cc:412 0 so separate_non_moving_space is false.";"0"
"actually i would prefer to avoid creating this variable, because it is used only once on line 26, which makes this alias useless";"0"
"not to be analbutthere was no blank line here on purpose to cuddle up the comment below since the comment is tied to the with block itself";"1"
"ah, sorry... i should have paid closer attention. thought you meant so thatitwould silently not fail by calling ""false -c $< > $ .sym"" when the tool did not exist for other hosts. sure, that should work. eventually this entire if case will be going away once all our tools and build is supported on the other hosts.";"0"
"weak, equ";"0"
"there he is again. why have you got %q in your head";"0"
"i hate this";"1"
"damnitithought i was using the one you always push for. they are randomized in my head now.";"1"
"we should call terminate_connection even do_driver_attach==false";"0"
"this is shorter: client.get_all.return_value = envs";"0"
"oh damnit is so misleading. stack virtual-machine: /devstack$ lsb_release -a no lsb modules are available. distributor id: ubuntu description: ubuntu 14.04.1 lts release: 14.04 codename: trusty stack virtual-machine: /devstack$ sudo apt-cache search docker ... docker - system tray for kde3/gnome2 docklet applications docker.io - linux container runtime ...";"1"
"silly, i know, but would you mind sticking this in alphabetical order :";"0"
"explain the purpose in a comment, please. to clear it for such stupid guys as me";"0"
"let us just remove the the test if there is nothing special about these any more and below so that searching the code for blobinternal should not give hits.";"0"
"err, somehow i misread as this being aligned inside the condition. brain fart.";"1"
"could have done with a more descriptive commit message here imo is this trashing $path because $1 may not have been set in which case this review adds simple param/error checking";"0"
"should this be a fk to a user";"0"
"this function is useless anymore";"0"
"should be puppet-ceilometer i think.";"0"
"use jni_true : jni_false rather than casting a bool to a jboolean";"0"
"same...";"0"
"how about naming the other one typeflagfixup or something simillar and leave this as typeflag. having '2' suffix is a bit ugly : . alternatively, you could consider making this a static creator function 'sideeffect createfromtype ... '. since it seems that you only use it when creating side effects.";"0"
"potentially dumb question: is the "" n"" here going to wreak havok with window's crlf";"0"
"fake_host.get_server_objects.return_value = fake_host_sos";"0"
"get rid of white space/s";"0"
"you could save the router here cls.rot =";"0"
"the above 3 lines are useless";"0"
"considering the code exits immediately after, reason this is not a cros_build_lib.die";"0"
"does this trim for you or should you trim splitstr 0 before calling";"0"
"how does the proof look like that m_hproviderdetailscache can never be empty here if the assert is sound, the following if is redundant and should be removed";"0"
"ok, reverted back to the older style. just added a dummy top6_val in header for compilation to go through on 5250.";"0"
"should there not be a setappdata toolsmodule::draw, nullptr here";"0"
"these should be removed now that they are defined in vif.py and not used here at all.";"0"
"os_user_domain_name, os_project_name, os_project_domain_name... ids for each of those... os_service_type, os_endpoint_type, os_region_name... damnthere are a lot of v2 v3 options.";"1"
"why does it have to be an ""admin"" test i don""t see any operation that needs to be executed as admin.";"0"
"callbacks should be instantiated in __init__ .";"0"
"i do not think it is. at least for me, the kernel says ""fuckoff"" if i try to do that. well, eexist. which makes sense since there is no way to represent this configuration.";"1"
"useless change. drop it from your next patchset.";"1"
"even if you set here infinite value, granula has own timeout which will abort puppet.";"0"
"the rdo package name for pymysql is ""python2-pymysql"" butthere is also a metapackage ""python-pymysql"". pymysql does not exist.";"0"
"remove since no longer needed in latest ps, along with generated prebuilt libs.";"0"
"in a follow up patch, i'd like to see this controller using 'self.driver.run' and 'self.trans'";"0"
"this empty line looks useless";"0"
"missing die";"0"
"this one is dirty hack for avoiding cycle-import; agree with rewriting it later";"0"
"i like peter's suggestion of having remove return a unique_ptr.";"0"
"this chunk was removed. new code is: extern prlogmoduleinfo *pkixlog; #define pkix_magic_header pr_uint64 0xfeedc0ffeefacade #define pkix_magic_header_destroyed pr_uint64 0xbaadf00ddeadbeef";"0"
"setting the value to an empty string disables this feature.";"0"
"whatever exception vcnsbadrequest or vcnsapiexception raised in _vcns_update_ipsec_config func, i expect the ""except exception"" would lead to status to error and reraise the specific exception. does it satisfy my logic and what is the cons if exceptions are too board";"0"
"damnthis is no longer called clientsession";"1"
"i think you should leave out { inheritdoc} here; it is only useful when you want to edit the javadoc. all javadocs are automatically inherited; this is when you want to do /** { inheritdoc} * <p> * futhurthermore, in this override we blah blah blah */";"0"
"good observation, let me take a stab and upload a new patchset";"0"
"add override for all methods implementing the interface. also, i like them in the same order as the interface declaration and if it makes sense have them together. maybe its easier to change iccard order, pick your poison.";"0"
"why do you need a mock can not you just set the state self.lbm.vxlan_group = rv";"0"
"suggest call this _calc_create_member_attrs add_dumb_member starts with a verb so i'd assume it is adding a dumb member to this object when it is not.";"0"
"why do not you need a slow path in case of null for this one";"0"
">>> for attempts in xrange 0,30 : ... print float 1 << attempts + random.random * attempts ... 1.0 2.25490765394 5.88610193012 10.9756608109 18.828516494 36.7738677291 64.6381370751 131.065740283 262.218929847 519.842621974 1029.73002716 2054.10097772 4100.89386082 8202.94041362 16390.5565961 32774.8821217 65539.2872981 131075.690021 262154.678789 524305.600438 1048579.62423 2097155.88626 4194311.66124 8388626.657 16777216.9722 33554435.2353 67108884.7379 134217752.74 268435461.612 536870931.862 149,000 hours. that is a long time. you do not fuckaround. longest wait should be shorter. :-";"1"
"minor nit, i dislike backslashes here and prefer to indent differently like that : passes = num_projects < max_projects or project_id in host_state.projects";"0"
"tiny nit... i think this will be a bit more pythonic: if i.endswith '.pyc' or i in '__init__.py', 'deprecated' : ...";"0"
"complicated. why not wait here, like discussed, and fork/sleep/kill -9 just before";"0"
"nice catch. here should be removed.";"0"
"the joinedload is explained in the linked changeid was discussed back in v 10/12 or thereabouts . i see that in fact that has been reverted now : about the locking: availability_ranges are also changed during ip allocation, not only create and here. i am kind of torn... i really like the elegance of your immediate deletion we have long ago established we do not care about old_pools... we are not looking for conflicts etc so just deleting them makes sense. but, i still feel we can try our best to prevent ip allocation from an availability pool which we are currently updating; that involves the lock, complete with joinedload hack. you are right that i do not use that info... i can just use 'noload' to include the lock without loading the ranges like: pool_qry = context.session.query models_v2.ipallocationpool .options orm.noload 'available_ranges' .with_lockmode 'update' anyway. you are the third person advocating for nolock, so i'll take the hint. i will simplify it for next v. let us see what others think.";"0"
"this was a move ... i am trying to isolate this code from the json impl so that i can kill it";"0"
"tenant = body 'tenant' . l161 should be removed.";"0"
"uuid_strategy = utils.generate_uuid";"0"
"consider indenting the wrapped lines of the bullets, to fix restview syntax.";"0"
"ctrbegin*, libc_init_*.cpp";"0"
"oh, javascript. you are the worst. :";"1"
"these hunks are unrelated... i just modified this to dump in either direction.";"0"
"remove this white space";"0"
"this is stupid, can we just do the proper fix and stop passing bases as regs, indexes as bases, yadda yadda. the code is getting all caught up about something trivial. if we need new encoding kinds then that is fine.";"1"
"darn you, c++! o done.";"1"
"an* idp*";"0"
"> > this previously used a testnavigationobserver, butthis no longer works for the filesystem url following mustafa's r554850, because a top-level filesystem url navigation will be blocked on the renderer side. i wanted to keep this test uniformly handling both blob and filesystem urls, so i tried to use waitforloadstop , which just exits immediately if a navigation hasn't started yet. however, with blob: urls, that still did not work, because that navigation is scheduled on the renderer side, so the executescript that sets location above returns before we've received the beginnavigation from the renderer. hence this ugly extra dummy executescript. withoutitwe performed the checks below too early, and when gettextcontent below did a roundtrip to the renderer, we actually received the beginnavigation and created a speculative rfh, which caused getrenderframehostsforextension to fail. > > > > alternatively, i could wait for filesystem urls to fail with a console error, similar to what mustafa did on line 1118. > > does the console error approach work for both blob and filesystem urls if so, it might be better to stick with one semi-awkward technique for this file than have different ones in different tests. : otherwise, this seems ok given the explanatory comment. no, unfortunately blobs do not output the console error. given that, i'll stick with this approach. > > > separately, in light of mustafa's change once we are certain thatitsticks , we might want to kill the renderer if it actually sends us a beginnavigation with a top-level filesystem url to handle the compromised renderer case and add a separate test for that. > > yes, it'd be a good thing to add to the cancommiturl checks, which i am currently working on in";"0"
"this docstring is not accurate anymore.";"0"
"why this seems sorta silly";"1"
"here was an ugly hack for the dynamic columns, i've just made it less ugly not allowing it to violate abc signature providing function instead attribute.";"1"
"these commends do not add anything useful, you can remove them";"0"
"platform/wtftext/textencoding.h";"0"
"you should stick to $sysroot in src_* funcs";"0"
"useless ifdef";"0"
"i was going to say we could probably nuke this function and just convert the callers to use the object directly, but i guess we need the memoize, eh i feel like a dickasking for a test for this trivial function too, butittoo is missing a test, afaict.";"1"
"why is error_ok if you then trigger a die";"0"
"silly nit: blank line";"1"
"this sucksmaybe we can file a melange bug";"1"
"i am not sure we should stab function by invoking it";"0"
"stahp. i _will_ hit you thanks, as on parent, reword";"1"
"bifrost.py or bifrost_inventory.py";"0"
"extra indentation on the docstring body. entire block should be shifted left four spaces.";"0"
"you are rignt";"0"
"i'd kill all extended hid drivers, leaving only hid-generic.";"0"
"let us make that a decorator. the simply line in the .py file looks like hell";"1"
"keep this and comment with and";"0"
"one small errata corrige: test_spawn_nova_net_vif_no_vswitch_exception uses mocks as well, it fails for other reasons.";"0"
"self.assertraises async_process.asyncprocessexception, self.proc.stop";"0"
"i think these two are simple enough and not re-useable that they should be in-lined into emit_done_signal";"0"
"the whole setup is inefficientithink you should just start with __ and_ rot, rhs.asregister<register> , shifteroperand 0x1f ; __ lsrs tmp, rhs.asregister<register> , 6 ; // carry := rhs 0x20. __ rsb tmp, rot, shifteroperand 0x20 , al, kcckeep ; // preserve carry. if is_left { __ b right, cs ; } else { __ b right, cc ; std::swap rot, tmp ; } and exchange the ""rot"" and ""tmp"" in the ""right"" branch. drop this mov, the and below and both rsb below. it would make sense to rename variables rot->shift_left, tmp->shift_right.";"0"
"another bogon dead.";"0"
"breaks the build: build/core/target_test_internal.mk:23: *** system/extras/tests/wifi/stress: do not set local_module_path when building test wifiloadscanassoc. stop.";"0"
"i will refactor build.py in another patchset.";"0"
"nit: kill after an extra 20s";"0"
"i'll approve yours such that you can push first, then i'll remove those parts of my diff.";"0"
"why is not this a baseidentityplugin";"0"
"note to self and to nya : tast.example is important now :-";"0"
"this is kinda ugly, defining this so deeply nested, imho.";"1"
"i think yes. because when deleting firewall_policy, all rules which is related the firewall_policy should be removed.";"0"
"can we kill these property please, not adding value esp. if you are calling this recursively.";"0"
"can you git rid of the colon ... also i think per-style their should be a space after the ,. you can run pylint using the pylintrc under chromite e.g. pylint --rcfile=chromite/pylintrc cbuildbot_stages.py run it from chromiumos/ so thatitfinds your imports correctly";"0"
"i think its fine here. it should not happen unless the auth is somehow screwedup.";"1"
"kill, as per";"0"
"i think the official way to do this in arm tf as far as i can tell is round_up from lib/utils.h .";"0"
"*$% #! that was just sloppy... i meant to change it before checking it in :";"0"
"enable_trusts or use_trusts";"0"
"here and everywhere else: add /* no_silhouette */ next to false: false /* no_silhouette */,";"0"
"think of it as generalization of ""$ "": it expands each member of the array postinst_bios_args separately as if it wassurrounded by double quotes; if the array is empty, it expands to nothing at all.";"0"
"jacub: agree with your suggestion.";"0"
"i agree that delete with nargs should try to delete all the args, print errors on failures and return 1 for partial failure.";"0"
"jeebus, with this many mocks is this test actually doing anything";"0"
"> count is not a bool. use explicit comparison with zero. do not add hacks/tricks. try to reduce mental load of code readers. done.";"0"
"i am confused, is not that the cl that introduces the bug i already have that and it is why this is crashing right";"0"
"the id of the cluster on which the relevant action is to be executed.";"0"
"darn!";"1"
"def file_path self.classfile_path end";"0"
"i think we should ensure every plugin declares somehow the resources they manage and then use _lookup to build controllers dispatching to that plugin. but for the time being this work, even if it is ugly as hell";"1"
"is this intentional do we have a baremetal build slave ready for this";"0"
"please, remove this garbage file from your commit!";"0"
"kill $spawned";"0"
"#include ""platform/wtfallocator.h"" for static_only.";"0"
"either these need a refactor, or they should be removed.";"0"
"pathetic nit - can you please align 'metadata..., default=true, help=_ ...";"0"
"what kind of alignment would you prefer here parameters are aligned to opening paren of the function call, like in";"0"
"not sure how i screwedthat up. fixed.";"1"
"my bad, need to start constant with a 'k', krenewaltimepercentage. same for below.";"0"
"i am very much not in favor of mangling the uuid like this. in the future, i expect the instance object to validate the uuid, and thus this will fail. further, it feels like a dirty hack to make tests pass";"0"
"nit: lol garbage collect. perhaps ""remove""";"0"
"should be maurl, meavailablity and metype.";"0"
"if vipportcount == 2:";"0"
"is this really a google thing : no lazy initialization on singletons ! boo";"1"
"these newlines are not needed";"0"
"missing $db_mode var: $influxdb_grafana = hiera 'influxdb_grafana' $db_mode = $influxdb_grafana 'mysql_mode'";"0"
"please look into removing this. this is such an ugly construct and might actually be a resource leak. scrange does not have a virtual destructor and should not be used as a base class";"0"
"please use 'objects.transaction.get_by_uid'";"0"
"looks like a bad rebase. deleted some volume drivers.";"0"
"annoying extra whitespace if you'd like to nuke it";"0"
"here, you should remove is_new from primitive when target version >= 1.2.";"0"
"remove six and unnecessary outer for ret value.";"0"
"avoid overwriting rl_src2.low_reg by the kopmov below: if rl_result.low_reg == rl_src2.low_reg std::swap rl_src1, rl_src2 ; that should fix the obviously broken mov ebp, ebx cmp ebx, ebp cmovl/nge ebp, ebp";"0"
"get rid of this and just call validatedrawelementsinstancedbase";"0"
"i guess we can do that : silly me...";"1"
"nit: omit std::move here, as it does not do anything for a float";"0"
"darn, i made a spelling mistake a such a small cl :- will follow-up.";"1"
"# ofport = self.del_fdb_flow br,port,0,lvm,0 ; # cleanup_tunnel_port br,ofport,lvm.network_type add above two lines, which could finish the garbage collection before add, eliminating a separate fdb_delete rpc.";"0"
"you should replace tabulations with spaces.";"0"
"crapright. i need to make line 1008 raise instead.";"1"
"this big red space is an error. these are blank spaces which need to be removed.";"0"
"are you planning to do that in this cl, or a separate one";"0"
"i'd putithere, right before rspec runs: if options :update_librarian_puppet prepare_library end";"0"
"you have the code in this code review : either delete it, or put a fat comment on what this is about.";"0"
"once i had no calls for leaving it here, it'll be removed.";"0"
"valid_set self.gone_set";"0"
"needed for this to be excerpted as a whole file by godoc, rather than just the contents of example. godoc demands at least 1 non-test non-example exported symbol.";"0"
"looks wrong. {utils.get_role_permission role 'name' for role in user.roles}";"0"
"please leave __init__.py empty";"0"
"i think you want to add support for loading user_data to this so that anything that needs it later can getitby lazy-loading.";"0"
"this anchor needs to be lower case.";"0"
"this is pretty ugly. is this how a loop-based udelay must be implemented";"1"
"running pep8 locally is not catching these buggers. thanks.";"0"
"imho - no! this is what the original patch proposed and i am -1 on it. for the reasons described on previous reviews that can be succinctly described as: ""let us not shovel craplet us get rid of the crap";"1"
"drop the ' die'";"0"
"basically, i want to guarantee thatitis in front of everything else to make sure it is the first thing to handle the scroll events. in particular the fullscreen magnifier always adds itself on construction regardless of whether it is enabled or disabled this will always interfere with us if we just ""add"" rather than ""prepend"". i added a comment.";"0"
"that is ugly. please use regexps to parselines. and again, hide it behind some helper method interface.";"1"
"right, we can do that, but i am pondering a slightly cleaner way. lemme play with it a little bit and i'll rope you in.";"0"
"can we rename 'foo-addr-scope"" to ""foo-address-scope"" for consistency. i may sound stupid but just a thought. anyways it is useless as far as the functionality is considered ;";"0"
"those chars should be in their own constant.";"0"
"oh boy! stupid replace! done!";"1"
"remove useless passin general coverage consider them as dead code.";"0"
"typo: *s*tm32l";"1"
"we fuckedup years ago when we made sigset_t 32 bits along with time_t and off_t and possibly others . we can not unfuckthat without breaking compatibility.";"1"
"*live_migration_tunnelled*";"0"
"why we need this garbage collector will do the same..";"0"
"art/test/android.run-test.mk:334: *** missing separator. stop. you trailing end of line comments may be the problem";"0"
"wtfdes";"1"
"we should not be importing neutron any where here we want to get rid of this drive.r";"0"
"true if bluez daemon is about to quit due to newblue down detected.";"0"
"execute ha suit here too, please";"0"
"i think you can leave these two out. they have to be included by their mocks.";"0"
"i killed it in the cl that sits on top of this one. i just splititso that i could be sure i was not breaking anything at each stage.";"0"
"i like the cut of your jib, sir!";"0"
"ah yes... thanks for that. damnyou copy/paste!";"1"
"you should put here: times: 4 concurency: 2 it will reduce amount of time in gates";"0"
"jerk";"1"
"it should be false. otherwise: +-------------+-----+------------------+--------+---------------------------------------+ benchmark pos criterion status detail +-------------+-----+------------------+--------+---------------------------------------+ dummy.dummy 0 aborted_manually pass task was aborted due to abort signal. +-------------+-----+------------------+--------+---------------------------------------+ boris ubuntu: $ echo $ 0";"0"
"yeah brain fart, remnant of old java days. mea culpa.";"1"
"this change looks useless";"0"
"okay this is really my lack of ability to articulate or plain stupidity. i think what i wanted to reflect was one can do a create-firewall without supplying a router_id or port_id_list. and in that case the firewall will be in a pending_create state. the logical resource is created but has no binding to any router or ports. once we update the resource with a router or router + list of ports - these columns will be populated. so in that sense it is not required butthat only implies logical resource creation. the pending_create state is in line with the current implementation.";"0"
"all raw 'cp' calls need ' die' at the end. or use doins.";"0"
"i hate this bit of mock, it sucks its why i added the get_vbds helper methods and stuff, but i am not sure thats a better solution. ps, i am good with this change, i just felt the need to share my anger on this subject.";"1"
"doh, yeah, forgot the git add.";"0"
"oh fuck";"1"
"yes, you are correct. removed the help block from the child templates.";"0"
"self.updated_devices is not initialized in this classeither initialize it or passit in a param!";"0"
"nit prefer something like, but as you want. bb bb = null; while bb = block.pool != null { ... }";"0"
"something about this pseudocode, may be a stupid guess: classrollingupdate: def __init__ self, ... : self.last_update_time = update_time self.templates = templates self.current_batch_number = current_batch_number self.batch_count = batch_count def handle_update : #generate needed templates ru = rollingupdate update_time, templates, current_batch_number, batch_count return ru def check_update_complete self, rol_upd : if time.now - rol_upd.last_update_time >= self.properties self.pause_time and ru.current_batch_namber < self.batch_count: self.update_with_template ru.templates batch_count ru.batch_count += 1 ru.last_update_time = time.now return false .... return true";"0"
"sorry to be a pain, but can you rewrite this awful test asseparate assertions you can lose the pointless message too";"0"
"we need to assign a pid for this product. done : it is 0x5015";"0"
"nit: you should put this new arg as the last one, as in test_linux_ip_lib.py";"0"
"yeah, i can picture inlining that leads to that. or we should run the simplifier before this... the pattern for isequal/isnotequal would be pretty ugly.";"0"
"you do not have to use a surfaceview!!! you are not rendering anything. you are making your life 10x more complicated than needed. just use egl directly -- ie: move all your code in onsurfacecreated out of there.";"0"
"should we kill the timer here before suspend";"0"
"it looks like this is a phony target, but you do not touch it, or mark it .phony. it will trigger a rebuild everytime which in turn causes the acp to run everytime.";"0"
"dumb question, why do we ignore mod_wsgi since it is the only thing in the black list, can we add an explanation to the method documentation";"0"
"user_id_is_resource_id = false will be needed here.";"0"
"if ra_mode and address_mode and ra_mode != address_mode";"0"
"looks ugly here. make the string template consistent with indention";"1"
"small nit: env_dir needn't be in brackets";"0"
"i am hoping that you will not tell me that this is a horrible hack :";"1"
"nit: consider _validate_not_empty_string";"0"
"i'd add a javadoc reference for the bug for reference here and below. even /** * */ would be fine";"0"
"i think this is supposed to be gone also. you ran validate_json_files.sh right :";"0"
"done. also added comments to all the other .sh files.";"0"
"wow ... go awk ... any option that is a bit more readable.";"0"
"the else is useless, cert_file key_file are useless if use_ssl is false, right";"0"
"''sha256 hmac''";"0"
"richard, this change does not directly relate to state...i think it fits best here and aligns with the nova and neutron approach. stupid error on the ""neutron"". fixing.";"0"
"so do you want this here, just these alphabetized, or build* alphabetized";"0"
"thanks for the catch. darn html...we could use a formatter/linter.";"1"
"just to keep the logic physically separated and easier to follow. the marginal cost of running the loop twice is negligible.";"0"
"you should be able to get rid of this boolean.";"0"
"put a space between 'microversion' and .";"0"
"/me curses whoever changed 4 small numbers in the middle of a huge string. sorry guys.";"0"
"let us remove 'to be thrown'.";"0"
"stupid question, no need to unregister in the catalog";"0"
"thank you for addressing my idiocy!";"0"
"wtf!";"1"
"ok, maybe put them to ./lib/compress_cros_image.sh.";"0"
"need to kill off periph_l_regs here.";"0"
"nit: the line should end with a colon";"0"
"yes, you should mock pkg_resources.get_distribution";"0"
"use 'die' instead of 'echo; exit'";"0"
"i guess we do not use: version = self._compat_ver '4.0', '3.25' because we have the 3.0 case also, damnit is hairy hide.";"1"
"nit: maybe we canuse with _translate_exception entries = xx if not entries: xx else: xx here";"0"
"why did you change these decorators";"0"
"ok! i'll kill it here.";"0"
"i'd like to reuse here 'consts.oswl_resource_types'.";"0"
"$ source demo-openrc.sh";"0"
"rev-parse-short=12 head also consider: $ shellgit status --porcelain echo ""-dirty""";"0"
"can you add an assert here to the effect that: assert not stream_log or stdin == subprocess.pipe i think there are combinations of arguments that will make that make that false and lead to weird behavior below.";"0"
"we'll burn that bridge once we get there. ;- ;-";"0"
"nit: kill one of the 'required' in that sentence.";"0"
"say what you mean instead of ""screwing with us"".";"1"
"oh, hrm, you are right re checkline vs checkfile. i misread checkincludesandimports.";"0"
"i somehow can not see when this occurs. i see that sorted_row_find is similar to one on python docs page but without valueerror";"0"
"inmemoryhostinfostore is a fake. when constructed without any arguments as here , it is an in-memory database of labels/attributes seeded with no values labels: , attributes:{} . i do not need the fake here though, so i'll replace it with a dummy.";"0"
"should not this go before 'brctl addif'!! :";"0"
"i begin with apologies because i do not know much about cassandra and it is client support but i have a proper stupid question for you... why does not this classif not module exist in the client a lot of this seems to be ceilometer-agnostic.";"0"
"nit wouldn't -1 over : get should be ""gets""";"0"
"ugh, do we really do a *separate* lua_recovery job for *each* volume gross.";"0"
"is it really ok to kill edp";"0"
"you grep openssl, and you mentionned openssl, so use openssl library no";"0"
"perhaps neaten this up to reduce duplication, something like: function clone_and_checkout { git clone $1 $2 --depth=1; cd $2; git checkout $3; cd - } clone_and_checkout $builddir/tmp/tgt v1.0.62 clone_and_checkout $builddir/tmp/qemu v2.5.0";"0"
"thanks, i knew i was doing something stupid here..";"0"
"should we just get rid of the brackets or are they actually useful";"0"
"the json filter needs to die in a fire, imho. but... not right now.";"0"
"the hostutils import must be removed.";"0"
"missing space: ""..._dir; git...""";"0"
"get rid of this and use agent_ or host_ptr_ instead";"0"
"is there a reason for changing to 'openstack'. i would recommend not changing the source value... just in case someone is dumb enough to point this at a real db. having source as the same default as what a live system has might be dangerous.";"0"
"nitpick: importscript*s*";"0"
"-1: i think we should simplify this packages = 'mount.nfs', '/usr/sbin/mount' for package in packages: try: self._execute package, check_exit_code=false, run_as_root=true except oserror as exc: if exc.errno != errno.enoent: raise log.error _le '%s is not installed.' , package else: msg = utils.build_or_str packages, '%s needs to be installed.' raise exception.nfsexception msg";"0"
"let use here: $ id -u .$ id -g";"0"
"there are lots of changes downstairs on the indentations. do you really mean to do it";"0"
"i think you probably want return_code = vendor_rc_err;";"0"
"no need to call 'die' with eautoreconf ... it takes care of that for you";"0"
"no need in these two vars. just inline them.";"0"
"can we get rid of this ugly files/ convention too while we are here we've fixed it in most other places too.";"1"
"this seems to be a different bug. if key.getformat returns non-null, key.getencoded should return non-null as well.";"0"
"these look like nonsense.";"1"
"nitpick: you should probably dcheck the translate client too. same in function below.";"0"
"oh noes a mock in a gabbi test! gabbi hates mocks!";"1"
"i am using: pblendw psrlw instead of: punpckldq punpckhdq on sandy/ivy bridge there is now difference, but haswell/skylake has only 1 vector permute shuffle unit so 2 punpck cannot issue in parallel in these later machines, while blendw and shift can issue in parallel shituses the vector alu, blendw uses the vector permute unit on all 4 of these micro-architectures.";"1"
"bad interactive rebase. : done.";"0"
"yes, it was the job of passing 'management=false'. i will revertitas you requested, but please note that nobody uses this argument except for this particular function 'update_own_password'.";"0"
"ok. i will remove those from the comments.";"0"
"oh rubbishitsused elsewhere, but still happy to remove this use.";"1"
"agree that this seems ugly.";"1"
"insta-fails, because this defaults to /var/lib/mysql. instead, this should be hardcoded to /data/db much like the redis implementation hardcoded itself see in short, change this to ""mount_point = system.mongo_base_dir"" and set mongo_base_dir to /data/db in system.py sometime in the near future, a patch should address these crazy mount_point hacks.";"0"
"useless, you have already the usage which provide this info.";"0"
"you need this virt_driver=fake in the above if block for eq 1.";"0"
"white-space change should be reverted.";"0"
"this might be a stupid question: why do we need a while loop to kill the child";"0"
"ok, i will eliminate the docstring.";"0"
"this exec should be removed. we do not need to minify.";"0"
"i'd prefer to not have ugly hacks here. depend on the output of '--help' seems very fragile.";"0"
"this sucksbut any chance we can test with both exceptions that probably means a but if nasty test refactoring though :";"1"
"why not dereference the unique_ptr at the caller i do not see you overwriting what the unique_ptr stores...";"0"
"this is likely a dumb question, but why is an elevated context required to find the parent";"0"
"what do you plan for deprecating the old value, in order to avoid confusion for people wanting to update retries count";"0"
"why run.mysql_start o, oozie can not be call from here";"0"
"done made the following changes: * kept the kmetrics enums private and made the name more concise. * used map lookup instead of static array search. there were only 2-3 enum values when i started coding, that is why array was used instead of map. * got rid of metricsdevicemediatype since it is identical to devicemediatype except that devicemediamax was not defined.";"0"
"rsapublickey *publickey";"0"
"will only delete an empty directory. you might want to use ""exec -- rm -rf /some/path"" instead.";"0"
"i think you want to raise valueerror instead of calling die";"0"
"dpid, datapath = self.dp_listitems";"0"
"missing replicationservice param.";"0"
"create fake.managedobjectreference and passit as ds_ref";"0"
"as mentioned in the mongo patch, use kill vs. pkill -9.";"0"
"why not num_virtual_methods or just num_instance_methods";"0"
"could you move the quotes to where they belong sed should need to focus on replacing the values, not the craparound that which rabbit just happen to realy realy want :";"1"
"i'd letitbe thinking we might want to add other 'summary' actions. it comes when it comes. want to keep this cl really stupid. changing it at where all the options are anyway mangled.";"1"
"i think using generics would actually make this more simple: fn validate_formats<t, u, f> ptr: *const t, num: usize, f: f -> libvdaresult<vec<u>> where f: fnmut t -> libvdaresult<u> { // do validation ... // convert unsafe { slice::from_raw_parts ptr, size } .iter .map f .collect::<libvdaresult<vec<_>>> } and in the caller: let input_formats = validate_formats vda_cap.input_formats, vda_cap.num_input_formats, inputformat::new, ; let output_formats = validate_formats vda_cap.outut_formats, vda_cap.num_output_formats, outputformat::new, ;";"0"
"you need to remove it from existing environments";"0"
"it is definitely over-indented, we should start running flake8 or something similar.";"0"
"...ignore me thats rubbish.";"1"
"some timeout would be useful, otherwise u may never check 'self.stop_event.is_set '";"0"
"since you already modified this line you should remove six.text_type as well";"0"
"service_plugins=service_plugins";"0"
"need: tenants, more = api.keystone.tenant_list request, domain=none, paginate=false";"0"
"nice; bit of a pain in the assbut assertequals refusal to output the two values being compared makes for loops like this require custom msgs...";"1"
"please look into removing this. this is such an ugly construct and might actually be a resource leak. scrange does not have a virtual destructor and should not be used as a base class";"1"
"need to nuke this boilerplate.";"0"
"please do not give ""-1"" for your ignorance and no response for author's reply.";"0"
"this hacking check is silly, and i'd rather leave it disabled even after token/backends is removed.";"1"
"darn periods.";"1"
"afaik, not currently but maybe in the future. that is why i only remove 40-dns.sh.";"0"
"worth to add some comments about what ""nuq"" ""cum"" stand for";"0"
"nit: infobar it is a stupid capitalization, but we are consistent aboutit";"1"
"this should kill the script. doing this will get you an infinite loop.";"0"
"probably ""asshould be ""add"".";"0"
"crapyou are right. i'll have to fix that in each subsequent branch...";"1"
"you should have a sob.";"0"
"lol... dumb error. it will not forbid to enable it because it is registered by the catalog instance butitwill not appear in the generated conf file. lemme fix this.";"0"
"this is probably a dumb and pointless opinion, but admin.py does not give me the idea of a cli module, as this is. i personally prefer keystone approach, where the admin mgmt module is just called cli.py";"0"
"why are these subclasses like this why not pull them out.";"0"
"cthread*";"0"
"you have to add here big note that describes wtfthis part of code makes here.";"1"
"these commands should be removed. they are dangerous";"0"
"okay, i understand, it is because it is not only for pci cleanup, but also for kicking the buttof test_resource_tracker. hellyeah, good move !";"1"
"i want to kill all packages files. let us not add any new ones : .";"0"
"name is not required here just enable_if_convertible = nullptr";"0"
"useless i think";"0"
"this comment is not for now ok we must to introduce objects here, like: serverprofiletemplate, serverhardware, serverprofile, do you get me handle json's instead of objects suckswe can do this later with another patch, for now let us keep it.";"1"
"maybe just put the rm just above the ifeq $ use_ninja ,true";"0"
"those two classes should be removed.";"0"
"please initialize these three vars to none in __init__.";"0"
"use vm_mode.hvm instead of 'hvm' here";"0"
"it should be final_allowed_hosts please also add secure_cookies = false";"0"
"aha! overlooked that. why not add, for the stupid, like me: the decrypter is of course needed to handle all get requests.";"0"
"i can switch to using a constexpr here if you think the repetition of this nasty constant is too ugly. if we use ""uint64_t"", it would also allow me to drop the ""ull"" suffix.";"0"
"export libvirt_vol_pool=tripleo";"0"
"you can not use math.max ...this.values just curious.";"0"
"because it sucksactually, keystone sucks this context provides a way to use non-default service types and we should check that such types exists. method 'clients.services' does not return unknown services";"1"
"list of what public_key_ids list of strings i really think this attribute should be removed in favor of just including a link to the child collection instead";"0"
"new unit tests should use mock instead of mox. the above, mock'ified, would look like this: def test_list_instance_ids_empty self : driver = libvirt_driver.libvirtdriver fake.fakevirtapi , true with mock.patch.object driver, 'get_num_instances', return_value=0 as mocked: self.assertequal , driver.list_instance_ids";"0"
"it can be ignored, although the consequences of that config_protect wise may bite us in the assto say the least.";"1"
"so you are looking past the last endpoint to lay down the spec config this is super ugly.";"1"
"dude! self.stub_out!";"0"
"i will remove docimpact in the commit message";"0"
"it will list a little bit more then a previous command, cause arp pings will included too. they are really short-time, so there is high risk that they will not exist when we will try to kill them. as long as we do not check process existance before killing anyway, it looks good to me. just be aware of that.";"0"
"nit: i would provide 'fake_net' as a fake_network_id contant.";"0"
"should it be openstack-openstack-";"0"
"... hate you >.>";"1"
"h802 git commit title 'fix sqlalchemy api to make instance destroy also delete system_metadata.' should be under 50 chars";"0"
"we can not fold this into the regular case below oh, because we do not know whether this locale has -2 and +2 and we want to fall back. it really sucksthat we can not have icu4c choose the best string for us.";"1"
"use admin_clients=self.admin_clients instead.";"0"
"crapsorry i did not submit my comments from before!";"1"
"let us delete unused entries. if you want to see the history, you canuse 'git log -p'. while you are here, would be nice to uncuddle the entries: process_list = '/....../', .....,";"0"
"you've already mocked get_default_gateway_linux";"0"
"crapthis should be verybadpassnow.";"1"
"hate it but i know why you need the silly method :";"1"
"sorry is this is dumb - not very familiar with this code but why self.port and not port";"0"
"just spell out callback_semaphores_. do not be lazy.";"0"
"i think the dcheck line 486 make this if useless.";"0"
"throw an illegalargumentexception when the thumb is null.";"0"
"it is not dumb but a reasonable question. request.get_json only parses the body only when the content-type is ""application/json"", howver, docker does not set the appropriate content-type, which is bad, and this is the dirty workaround for the issue.";"0"
"i think you do not need both onwidgetclsoing and onwindowdestroyed. close or destroyed should be enough.";"0"
"ghanshyam, it will not go to the v3 controller, all of those test call the controller directly. actually the url is useless.";"0"
"my name is inigo montoya, you killed my father...";"1"
"this serviceproxy should be removed";"0"
"i remove it because puppetd is always called with puppetd, ""--logdest"", 'syslog', '--trace' as a minumal set of parameters, see line 175. so why should we to double passit here you could check an astute logs to make sure it would be double passed as well...";"0"
"'mock' is a third party import which it should be separated of others import.";"0"
"you can set 'openstack' 'image' 'registry' 'auth' 'insecure' = 'true', then let insecure = node 'openstack' 'image' 'registry' 'auth' 'insecure'";"0"
"this test is called without all tenants. so self.assert_called should be without all_tenants=1.";"0"
"it is direct check of ssh executor. if it does not work then it will fail. can be any command here. this one is just one neutral command. it is executed on start of a driver.";"0"
"reg_mask != 0u";"0"
"stupid little niggle, but i've always hated pad.lv. i think we can afford to store the real url here and not be dependent on poolie keeping a domain registered.";"1"
"we know which workflows are in sucess state - we can remove only them. anyway there is my mistake, i was thinking of running them every hour, so s/60/3600. i'll fix this in the next patchset.";"0"
"can you remove this useless blank line";"0"
"i do hate my reader, but i did it anyway.";"1"
"it is leftover junk. there is generic spi driver infrastructure in coreboot used on x86 platforms that i had originally tried to use. however it does not seem flexible enough for the arm socs with several spi buses and lots of configurability.";"0"
"your fake client here needs to have a fake client container.";"0"
"instances.instance.nova is mocked at #759, and it will be mocked again by the stack_context decorator, which will then cause problem - cannot mock a mockanything. that is the reason it needs to unsetstubs at the end. i will avoid mocking instances.instance.nova in the next patch to remove the ugly self.m.unsetstubs . thank you for pointing it out again.";"1"
"ok.. missed the while loop at the end of the work function. kinda ugly, but functional.";"0"
"also, major pain in the assthe sqlalchemy base classthat we are using for these models has a reserved 'metadata' attribute. i think it is used for table metadata. this is probably why we use 'metadetails'. i do not think i am getting around that one, would require changes in sqlalchemy.";"1"
"might be a stupid question. what does ""pull request"" mean it seems different from usual rpc methods. is it a part of rpc callback mechanism i am a bit out-of-date in the area of rpc callback. any pointer would be appreciated for my understanding.";"0"
"i dont think _check_update_parameters should return anything, especially not a tuple with 4 items. just grab them from the body again.";"0"
"kmaxvalue = bottom_right";"0"
"awkward sentence. ditch ideally. ""with at the most"" should probably be ""with at most"".";"1"
"why include your whole path here if i wanted to use 'audit.json' why do i need to have a '/users/praneshp/code/entropy/', why is it needed to specify an absolute path, just specify it releative to the program, aka 'audit/audit.json' or something like that. if u want others to use this code, then need to get away from having things that reference your special home directories and such, nobody wants to have that in config files...";"0"
"nit: nullptr /* stream_override_params */";"0"
"i am stupid and will forget to update year";"0"
"wonder if it should be gateway 'fixed_ps' 0 'ip_address'";"0"
"do you want to abort when these invariants are violated for user based tools i usually prefer a warning unless the error is fatal. butitmight be better to make this fatal so we can catch any errors handling one of these sections.";"0"
"apparently because i am a moronnice catch. done.";"1"
"yay! expected_failures are for the weak!";"0"
"as ugly as it is, i think the openstack guidelines say to use one import per line, do not they";"1"
"is not the note obsolete i see list_qos_policies :- : and note say it is not.";"0"
"here the same aliasseems useless and i dislike it";"0"
"why did you remove instance id setting to context";"0"
"i think the challenge is that if the assert fails for whatever reason the person debugging will have to got to the source code to understand what failed. i like your doc strings and would like to see something like that in the assertion method. something like asserttrue int self.delta.get < self.ping_timeout, msg=""it took {delta}, to have connectivity after live migrate, expected timeout was {timeout}"".format delta=self.delta.get , timeout=self.ping_timeout the goal here would be to make any failures clear to end users of the test.";"0"
"i probably do not need to do this, so i'll check. it might've been left over from ""this one white lie makes a shitton of stupid tests work because of dumb assumptions"".";"1"
"renamed it to android_app_list_model and replaced ""arc"" with 'android"" in all files in this cl. as for ""picker"", i removed it in most places as well but still kept ""picker"" in some places where i feltitis important to note thatitis a list of picker apps, not general android apps.";"0"
"please name ambiguous return values to make the function signature clearer: vid, pid string, err error";"0"
"given that using memory cache here will have performance and reliability concerns, i think a better option would be keeping a cache of all scripts tagged as ads in a separate cache and look that up here.";"0"
"this one seems pretty useless as well!";"1"
"this __init__ is useless.";"0"
"this is needed for ""!errorlevel!"" thingies below. as far as i understood, 'if ' statements are parsed as a single ""line"" in one go. by default without delayed expansion , interpreter substitutes variable values right away. so if %errorlevel% was 0 _before_ if , it is also 0 inside 'if', regardless of any calls there. i spend 3h trying to figure out this shititis highly confusing... using !errorlevel! tells the interpreter not to expand anything until the statement is really executed.";"1"
"maybe die early if $# < 3";"0"
"that race is already gone because we do not recurse into mkdirs.";"0"
"how about 'add get_instances_availability_zones into nova.az' the '..' is a little ugly";"1"
"it should be '$ram_id' instead of '$ramdisk_id'";"0"
"why this change it is not a h301 violation. it is h304.";"0"
"wtf why is it not in test-requirements";"1"
"dumb question. what is http_x_service_name and when is it used";"0"
"why not place this in the dirty bits iteration with a comment on why we need it for d3d11";"0"
"sorry, there is also a stupid bug. i will fix this in next patch.";"0"
"might be another dumb question: but can not we have a race condition here and in 'close_sdk'. e.g. one thread is executing line #72, while other is passing check on line #83 successfully i'd guess that all of that can be called from a single gl thread only, but not sure...";"0"
"manager should be removed here.";"0"
"done. created the coveragepattern classthat contain both java.lang.string and java.util.regex.pattern objects.";"0"
"this comment ould be removed now, as you are adding a log msg below";"0"
"it is better to describe what bug, for example ""fix xx failure when uploading to gcs""";"0"
"naming convention: use config_clamshelltype. yes i know there are things here using the wrong convention. people keep doing that. they need to stop. it is annoying me. :p also please put this up with the other physical behavior configs, like config_lidopenrotation.";"0"
"i agree that we should dump no more than once. for that we could have dump_on_hang_ non-const, and resetithere.";"0"
"oh, so you are. how annoying!";"1"
"why not time.time - self.session_start > = self.session_timeout";"0"
"root_helper = utils.get_root_helper";"0"
"i would put these inside ""is_service_enabled $octavia""";"0"
"well that sucksthat is also going to break any other usage of thread pool executors since the upstream python one also does this .";"1"
"sorry for my ignorance, but why wouldn't std::forward<callbackargs...> work here you probably canalso use result_.emplace here and do not invoke the constructor explicitly";"0"
"ok, i am fine with the simpler solution here for now i guess. hopefully it will not be here for to long in the end. darn renames.";"1"
"please use a mock object with a spec_set.";"0"
"this may be a dumb question but ... should not this be: {'metadata': { 'key': self.metadata.key, 'value': self.metadata.value}}";"0"
"okay, took another passat this and made the entirety of the promise tracking significantly simpler. previous code was copied from webvr 1 path which i did when i was young and stupid a whole 1.5 years ago.";"0"
"space after copyright crap";"1"
"damni forgot to fill this section";"1"
"this comment should be lower, where the attribute is actually set to false. and you can pull the default setting to true out of the ""case platform block"" so you do not have to repeatitfor ubuntu.";"0"
"if it is clear with the data objects only, i will remove the tables, edit them is horrible.";"1"
"when is 'is' a bytearrayinputstream what is the real purpose of this special case";"0"
"remove env vars here.";"0"
"i believe deadlockdetector is separate module and should not be bound to nailgun.";"0"
"ugh, this is a result of my stupid editor's configuration which automatically removes trailing new lines. will fix and re-upload.";"1"
"can the audit template be generated automatically by calling the nova clis for example or does it have to be populated by hand i guess one can massage the output of nova clis to putitinto the right format... is there a watcher reset that needs to happen when the operator wants to execute a new audit template";"0"
"setdaemon true is for that purpose. for daemon thread, parent thread can die without waiting for it to finish.";"0"
"hm, so this is not a user-facing check the hook value should never be settable by the user here . plus asserts can be turned off by the deployers. this is more to make sure there are not any typos or other silly programmer errors.";"0"
"you left my crappycomments : how about: overrides offlineclock with clock upon construction. returns // offlineclock to its original state upon destruction.";"1"
"use consts, pelase.";"0"
"darn, and the usual msvc std::max confusion.";"1"
"coward! :- cl:351570";"1"
"another passive trip point is necessary for ipa. there is a switch-on trip point at which the pid control kicks in, and a target control trip point.";"0"
"'rados.py'";"0"
"perhaps a stupid remark to add: ipv4 uses arp, ipv6 uses ndp so arpinger does not support ipv6.";"0"
"let me take a stab at this. i want the code to be maintainable and not upset the the style. give me a few tries and i will land it.";"0"
"damnit, how'd that slip through...";"1"
"is that the right name seems it should be records_tenant";"0"
"how about we kill those entry-exit stubs and just rely on the interpreter with mterp we should get enough performance benefits thatithink we can afford it.";"0"
"perhaps bestalignmentfortext: returns garbage when self is not first responder. if your method returns correct values when !self.firstresponder, and you do not have any particular reason to have this, pls remove it. :";"0"
"it needs two levels of dereference, which obviously does not really matter, but is kind of ugly imho.";"0"
"we'll need also a renderdrawable that receives a resourcevalue.";"0"
"useless doc on a private func, see recent tot :";"0"
"damnthis is so brilliant. done. :";"1"
"you should have a launchpad bug here. bzs are not appropriate for upstream work.";"0"
"hard killing the pid group regardless of cgroups would probably be good. at least with cros_sdk, each one is in a unique pid ns.";"0"
"yes, $dstdir and dstdir64 contain all unpacked for final packing.";"0"
"i was wondering if i needed that, but none of the rc files in system/core/rootdir/android.mk seem to setit. but even with that, i get: product_copy_files device/generic/brillo/brilloemulator/init.brillo.rc:root/init.brillo.rc ignored. make: entering directory '/derat/android-mnc-brillo-dev' make: *** no rule to make target 'system/webservd/webservd/init.webservd.rc', needed by 'out/target/product/brilloemulator/obj/etc/init.webservd.rc_intermediates/init.webservd.rc'. stop. make: *** waiting for unfinished jobs.... generate: device/generic/brillo/init.template.rc.in -> out/target/product/brilloemulator/obj/etc/init.firewalld.rc_intermediates/init.firewalld.rc make: leaving directory '/derat/android-mnc-brillo-dev'";"0"
"agree that use conf.ldap.user_dn_key.";"0"
"much as i like moving forward, i dislike aribtrary non-uniformity more. if we decided ""#prama once"" is acceptable. i'd request that we *first* have a dumb cl to migrate the relevant headers to use this. trying to decide which one to use / or pointing out the one to use in reviews in face of non-uniformity is unnecessary cognitive load.";"0"
"listing the related docstrings here seems silly, as they are listed below. why not just remove this section";"0"
"this should refer to cinder::init. cinder::base has been deprecated for months.";"0"
"i need a way to passthe compiler to the script, let me know if this is too ugly.";"0"
"this should read: $ cxx $ cppflags $ cxxflags -c -o $ $<";"1"
"self._model_policy_enforcer = enforcer.modelpolicyenforcer self._environment backslash is not needed";"0"
"h703 multiple positional placeholders";"0"
"nit: i know it just a sample, but since we want to kill the ssh driver soon-ish i would prefer it to be a sample from another driver, pxe_ipmitool being our reference sounds like the right one to me";"0"
"thats a bad cut and paste, and should be removed.";"1"
"i can not think of any concrete limitation right now. basically, we want to give a dumb proxy to all pseudofiles exposed by the os kernel. also i do not think these files could be huge.";"0"
"this impost should be below";"0"
"this value needs to be grabbed from keystone_sp";"0"
"i am having trouble understanding why this wouldn't leave a dangling pointer. when cmdlineparser goes out of scope it'll take save_destination_ with it and then save_destination will just point to garbage memory.";"0"
"i feel that run is kind of more implicit in the sense that if add works then run should work. kill on the other hand behaves like delete. what do you think";"0"
"the comment formatting is strange. just remove these comments, it'd obvious it is a dummy";"0"
"is nullptr getting wrapped with std::unique_ptr in this case";"0"
"this should be find_policy";"0"
"nit: leave a newline after a classdocstring.";"0"
"actually, make it ""luci.builder.defaults.*"", it composes better and there is more stuff i can imagine in the future under luci.<rule>.* namespace . it will also better convey that this shitis somewhat magical since it is accessed via an attribute of a function, so some magic is involved .";"1"
"better to deepcopy and put 'subnet' atttribute.";"0"
"static constexpr const wchar_t* kmicrosoftimeguids = {";"0"
"ah, i see, you'd have to change cros_set_lsb_release to treat """" and none the same way. up to you.";"0"
"this listener it is already too big, so let us extractit";"0"
"use <orderedlist> here - this is a high-level task flow and not a procedure. complete these high-level tasks to set up the vnx direct driver:</para> <orderedlist> <listitem><para>install xxx. you must install the xx tool on the xxx. see xxx.</para></listitem> <listitem><para>register ...</para></listitem></orderedlist>";"0"
"evil bashism. $# < 1 or $# -le 1 , but not this.";"1"
"maybe sync_containers = c for c in sync_store.synced_containers_generator self.assertfalse sync_containers";"0"
"please do not do mocks like this. mock out the thing you need to mock in the place you need it to be mocked. this sort of pattern is what we have with mox-based tests in many areas of the code and they are often a disaster.";"0"
"i'll try removing them both and if the sdk tools still build, ship without them.";"0"
"hmm, okay, maybe this makes my network nullable comment moot.";"0"
"useless break";"0"
"initialize_connection in basevd does not have **kwargs.";"0"
"capitalize first letter of each bullet.";"0"
"bad indenting here and below";"0"
"test case for failure of ""fsck ..."" is absent. what do we expect in that case";"0"
"this is really gross!! you do not need this check here. just have your readme say you must have it installed. the make target will fail anyway when you try to run vboxmanage.";"1"
"oh right....with mock if you do not set an attribute or a spec , it will create a random mock attribute value for you, so this would be not none and we can fall into a trap. damnyou mock and python 2.6!";"1"
"i have no idea what this function does but i am pretty sure we do not need it. the coreboot i2c model requires only very dumb read chip_address, data, length and write chip_address, data, length implementations at the driver level. other things, such as writing the register address, are handled in higher layers .";"0"
"remove these from the library interface and all your mincrypt/sha.h problems are gone.";"0"
"this negative logic is going to be tricky, as we add states. think about error vs failed, i think as we add values this will fail. can we select all the in progress states instead in factithink we really only want to expose the live-migrate ones to start with maybe just look for things in the status of ""running"" or do we want to include ""queued"", ""migrating"" and ""pre-migrating"" and maybe ""post-migrating"" is that enough";"0"
"lint is ok with this why did it choke on '*im = inlinemethod{opcode, flags, data};' in the original cl then, saying that the ';' after '}' is unnecessary!";"0"
"re-written this to be more explicit about the function causing the address flush. done";"0"
"crapthis should be <2.8";"1"
"this should be ids_to_ignore=router_ids, really";"0"
"you are just retrying a part of a transaction on bulk network create. it does not seams to work.";"0"
"do you mean 'sqlalchemy.orm.sessionmaker' here which is 'get_maker ... '.";"0"
"you do not need this host_p dict";"0"
"dead code, we do not like you! ;";"0"
"no kevin! say it aint so! you like staticmethods!";"0"
"stupid question: will this data stream always always match the data written on line 157 and on or is it possible that we will in a later version change the data we write/read and then this can go crazy if that is a possibility i would recommend making the first field you write out an integer, currently ""1"", to state that this is serialization format #1. in the read code, read the int back and make sure it is 1. if it is not, do not attempt to read the object stream since it is written by a later tool.";"0"
"rightitalked to anusha ramineni in the comments already and am going to remove that bit from the spec.";"0"
"please, remove these extra white spaces.";"0"
"hmm, he is correct. that sucks";"1"
"this ominous comment is kinda useless on it is own. i would just put the 0x2000 inline in the code and put a bigger comment there saying *why* it must not be changed.";"0"
"agreed with ed and dan on this one. the filters should be dumb... just get passed data and either passor fail some host based on conditions.";"1"
"it will be nice to put here: self.aborted = false so in benchmark engine we will be able to understand was this benchmark aborted or not. take a look at my comment here:";"0"
"damn.i've always stayed with the bsd options for portability...-d -t _should_ create the dir path imnsho... so i still do not think this scans well butitit is fine.";"1"
"please, use for my primary e-mail in community";"0"
"i think it'd be better to explicitly add lazy=true here just so it is clear what that true is for.";"0"
"merge mtk_state_error to mtk_state_abort. the comment in line 99 should become ""vcodec should be aborted"".";"0"
"how the heck did i miss that.";"1"
"self.repo_schema = {} ...return_value = self.repo_schema";"0"
"this should probably be lower cased -- rbac-policy";"0"
"give invlaid string for invalida name '#$%#$'";"0"
"replace all assert_eq with expect_eq";"0"
"ok, i tried, but i must be stupid. can you give me a hint how i would do this";"0"
"should we put this into platform/wtfhashfunctions.h e.g. struct simpleptrhash<t> : ptrhash<t> { ... }";"0"
"we are not going to refer to other components using link type. see line 37.";"0"
"how the helli am confused how i missed this...";"1"
"i checked and understand your comment. this patch removes garbage collection from the existing interface drivers.";"0"
"super damning nit: i think in log, you can say aes instead of aes.";"1"
"please, put here definition for all params.";"0"
"you can drop these 'die'";"0"
"you do not need to modify fake.py. you can simply passa ""methods"" parameter to create_one_server to fake any method of a server object. and i think this command should be ""os server add <floating-ip>"". in doc/source/commands.rst, you can see: * ''add'' ''remove'' - add some object to a container object; the command is built in the order of ''container add object <container> <object>'', the positional arguments appear in the same order here, server is the container, and floating ip is the object. i think i have done this in: so, maybe we do not need this patch.";"0"
"this should be settabstyle, unix_hacker is for simple, inlined accessors.";"0"
"plain sal_warn should be used here.";"0"
"kill extra line";"0"
"floating_ip.router_id != null' is redundant.";"0"
"sorry, it seems i put my comment in the wrong place. if a user explicitly chooses to download into '/' then we are not here to prevent stupidity, so i am not too concerned about the setting of --output-dir. the real issue i was trying to address in my comment is related to 'out_no_prefix'. if i have an object path like 'container/object/path/opt/swift/...' there is no warning or path checking to stop me setting out_no_prefix to 'container/object/path' and trying to write files out into /optithink there is a good case for stripping leading '/'s from the path after line 1066 before we deal with out_directory. that should give users the flexibility they need whilst removing a potential source of errors. what do you think";"0"
"would this retry be configurable hardcode value is ugly.";"1"
"put a newline above src_configure";"0"
"accept_type = req.accept.best_match self._accept_order or self._default_accept";"0"
"please do not mock prepare_params here. otherwise the whole checking has no sense -- you only check that result of prepare_params are passed as is and 'migrate_disks' are incorrectly passed as comma-separated string";"0"
"is there a reason not to do a libc_fatal here instead of an abort same as down below.";"0"
"do you think we should handle keyerror here in case a server returns crap";"1"
"i think it does not matter. if a pep8 fix enforces it, i'd be more than happy to do it.";"0"
"self.alt_client.create_cron_trigger tr_name, name, none, '5 * * * *'";"0"
"note these env's are actully for mesos, this is the mesos container i did not write the docker file . which needs to be done, this is the fast and dirty solution.";"0"
"order of assertequal args should be <expected>, <actual> it is stupid, yes, butitmakes the output of that method make sense when it fails.";"0"
"i'll kill it!";"0"
"useless <div />. suggest to follow {condition ...} style instead of ternary operator.";"0"
"import both on one line from neutron.openstack.common.gettextutils import _le, _li";"0"
"do not add a format here -- this is deprecated in favor of the gbm_format_* below.";"0"
"this deprecates awake_interval and uses wakeup_interval instead.";"0"
"this is ugly - we can not just do {ref: rabbitcookie}";"1"
"missing a space after the if. a few others are too, but not all, so might as well make the new ones non-ugly.";"0"
"you are aware that template_dict = self.templates is not making a copy, right this is nasty. do not do that.";"1"
"i am just going to get rid of all this noinline crapthe pragma should be sufficient.";"1"
"use ... , braces, and quotes: if ""${missing_module}"" == ""true"" ; then alternatively, since you've made sure the value is ""true"" or ""false"", you can do: ${missing_module} die";"0"
"this should instantiate a clusterdetails object instead.";"0"
"ditto useless sudo usage .";"0"
"==' is not case insensitive, so that is not an equivalent change while we are atitlet us get rid of that ugly straircase effect align all the pfont-> under the one on the if line if pfont->... pfont->.. pfont->....";"1"
"i meant that we should just crash if the caller passes null for dir_ro. doing so is a bug.";"0"
"actually it would be stupid easy to screwthis up. set base_image_file to a precise image of some sort without changing anything else and bam, this is broken again for no obvious reason. plus, as far as i can tell we've never used dib_release for this sort of version check anywhere else so it is repurposing a variable that currently just specifies which version of an image to download. yet another problem with our abuse of env vars for configuration. :-";"1"
"self.region_name = region_name";"0"
"i really got to learn git. ryan plz go ahead and change the owner as it is your patch. in the meantime i will figure out what stupidity i am doing.";"0"
"same condition as the if block above it and the value has not changed - should be collapsed into one block";"0"
"damnit.";"1"
"my fault: instead of sid_jump_to_specific_page use nslotid. then the build error on macos will go away.";"0"
"i think this is too broad - e.g. if you fat-finger any of the code in that block you'll be scratching your head think we should limit the exceptions we catch here and include the exception message in what we raise";"0"
"ugh. i hate nested #ifdefs. no choice, i guess... ;";"1"
"why is notitan ironicexception";"0"
"the active looks for a pid file. i did not see this generated. maybe it is my bad";"0"
"avoid string concatenation! cpu_usage_table = ... ''.join cpu_usage_table";"0"
"use pls self._assertequalobjects";"0"
"thank you very much for your review. this is really a stupid error due to my carelessness. i'll fix it in next patch.";"0"
"gah, none of this is mine - please oslo just take it:";"0"
"> there are no internal callers that rely on this optimization you put in a ""throw new assertionerror "" where the special case is, and the phone still boots if that is true, let us just delete all this filth.";"1"
"line 95-109 needs a modularization. def has_device dut, vid, pid : also why not use ""lsusb -d"" that will make the code very simple.";"0"
"here for libvirt destroy";"0"
"i did this in the previous patchset and boris disliked extensive mocking...";"0"
"this is redundant. convert_to_int ensures we'll have an int.";"0"
"would prefer to avoid hardcoded use of file__ioctl outside of selinux_file_ioctl. is this micro-optimization truly worthwhile";"0"
"i think this is a pep8 issue. this should go above 13 with a space below.";"0"
"openstack/common/middleware/request_id.py:from openstack.common.middleware import base oslo update.sh copies in dependencies.";"0"
"it should kill the service implementation in the browser process as well.";"0"
"why not just os.setpgid on the process to 'detach' it from parents and then keep the killpg to kill all children";"0"
"tenant.ping_rule = ping_rule";"0"
"it works fine on windows. the generation drop-down is always shown on focus. thus, the event here is good enough and announces the pop up on both mac and windows. i changed the announcement of the menu item. now it declares the whole text there.";"0"
"note that this will need to be uploaded to the new cloud's glance service before we approve the change.";"0"
"nullptr /* error_message */";"0"
"all args on the next line for a double indent or align the moblab_host with service_account";"0"
"damnok, let us fix this in migration code - so we explicitly add paths to release_rochestrator_data table with correct paths.";"1"
"remove it : btw, do you use pycharm :";"0"
"this is a dependency we should get rid of assoon as possible -- i know it is just because you ported the tests as-is, but add it to the cleanup list.";"0"
"is this required";"0"
"get rid of this enum, it is useless and unclear it needs to match the length in the array below.";"0"
"oops, i think i probably made a mistake, i should divide the lab by millisecondf instead of secondf. the number actually should be 1000 times smaller then the current value.";"0"
"this adds a ""naked"" printk";"1"
"remove kdefaultscreencastaspectratio , which should no longer be needed.";"0"
"why do not you assertraises like in";"0"
"none of these are accesses by the gps default implementation shim layer and hence should be caused by the legacy vendor hal implementation. wouldn't these belong here in that case";"0"
"this is finish_migration. not finish_resize.";"0"
"why u8 instead of something bigger does twister_random only give us 1 byte";"0"
"dcheck that oat_class= null";"0"
"it was used by the unit test, but i've just realized i was being a giant idiot and refactored it away.";"0"
"should be explicit about memory order, at least in a comment. sequentiallyconsistent for now relaxed is also quite common for dumb counters. those should probably use a more scalable data structure, but ...";"0"
"oh, ick. this needs to die asap. :-";"0"
"specificially, panics if it is not imo this is correct for this function. just wish go types were strict enough to make a validatedinstanceid that was not a pain in the assto work with .";"1"
"maybe a dumb question: if the last button is the one about to request tab, should notitbe !reverse to focus the status area or am i missing something";"0"
"please line wrap this to 80 chars.";"0"
"yeah, this really should not be an incomplete dict here anyway. just doing this would be much better: instance = objects.instance ... note that the existing code uses a string 'id' for the instance, which is not valid, and 'name' is not actually a mutable property which it should not matter for this to just remove it from the list of properties you set on the instance .";"0"
"nit: s/nonesence/nonsense/";"1"
"this line should probably be added by gerrit #41431 instead -- it is related to that and that commit is in this git.";"0"
"l101-115 looks unnecessary - just remove them";"0"
"actually as of last week, this stupid capability is no longer used anywhere. you can just delete it.";"1"
"i'd prefer using notfoundexception instead of creationg new one and this is not required field at all.";"0"
"you are right, i will get rid of it.";"0"
"n324 jsonutils.dumps must be used instead of json.dumps";"0"
"o, i mean merged the above 4 lines, like: kill_parser = subparsers.add_parser 'kill', help='kill current running swarming bots.', required=false, default= not sure what default should be here";"0"
"one difference between you and chrome is that they build with the ndk and you build with the platform. so to you, there is one bionic and it is already the latest. they might want to #include <android/api-level.h> #if __bionic__ and then they can say things like ""if i am >= jellybean, i have function f"" or whatever. now we've inherited the ndk, we plan to make a lot of this crapgo away via static linking, butthat is a way in the future yet.";"1"
"this sholud be true/false enum like const.ea_cloud_api_owned.";"0"
"you stub out self._disk_adapter._copy_image_file...";"0"
"ah crapi did not. intellij magic ftw. it did this in other places but i removed it";"1"
"i just think the prefix_ is silly. you might as well run around and start renaming everything to valid_variable and supported_option";"1"
"this was calling updateattempter::init method, not any mockupdateattempter::init , which was initialized with nullptrs on the first place so totally useless. this interface would require proper abstraction.";"0"
"i seriously dislike this extern coupling. thinking about a ""standalone"" header.";"1"
"no clue. would take some code archaeology, but even then i suspect the reason s to be dubious";"0"
"i've been trying to factor things out where it makes sense rather than trying to force it into ugly little funcs with no other use or easy testing the failed file logic at the end i can prob move out easily";"0"
"compiler does not like setting non-primitives object or array on the prototype object. these sorts of static objects should be on the static class";"0"
"remove the white space";"0"
"kill ""policy""";"0"
"nit: revert this white space change";"0"
"using data 0 was my first idea, but we'd either need to drop const from the parameter list and dirty the interface as elliott commented , or use a const_cast<>, which is pretty ugly. besides, we probably should not be making raw changes to a std::string in the first place. a std::vector<char> could have worked better here or wrapping the strdup with std::unique_ptr, but hopefully we'll get rid of this copying once and for all with";"1"
"notification_count_ = 0;";"0"
"please use self.execute which is set up by superclassvolumedriver";"0"
"couldn't you use or here self.num_scan_tries = num_scan_tries or conf.num_iscsi_scan_tries etc";"0"
"did not we kill this option for vcenter in liberty or mitaka";"0"
"what about f = getattr self.identity_api, 'create_%s' % entity_type new_entity = f new_entity";"0"
"wait a minute... do we need to run this as root we do not and should not! start shellinaboxd as root, so i am not sure why we need to kill it as root. i was able to change this to false in my local environment. can we change this to false";"0"
"missing field 'drive_size' initializer -werror,-wmissing-field-initializers cgptaddparams params = {0};";"0"
"imo setattr is uglier than a pylint skip :";"1"
"you! my old enemy!";"1"
"still loving this table. i am kicking myself for not cleaning this up ages ago.";"0"
"you should do this after waiting for the process to exit, as it may still be writing to the log at this point. i do not think you need s.fatal on l744 since it is already the last thing in a deferred function in your test function i.e. the test is done at this point, so i'd just do this: defer func { cr.close ctx if err := wpr.kill ; err != nil { s.error ... } wpr.wait // ignore error since we killed the process if err := wprgzippedlog.close ; err != nil { s.error ... } }";"0"
"is this some kind of very mediocre sabotage ;";"0"
"simply stopwatch.is_expired";"0"
"do we really need this, given that the script expect to be executed with cwd=chromium/src";"0"
"deploy the dashboard behind xx by using a xxx.";"0"
"nit: put a comma after ""running"" i.e.: die ""please check that servod is running, or""";"0"
"i suggest we kill that first sentence.";"0"
"is notfound more accurate in this case than novaexception";"0"
"you used plain type again here. fwiw above you fixed one by not having a local variable and the other by renaming the local variable. either works butitis a tiny bit nicer to be consistent.";"0"
"tmp_dir should be empty at this pointithink better raise exception from here if something wrong.";"0"
"since this is purely a data holder - why not make it a struct, get rid of all the inline getter/setters, and access data members directly this is ok for ""dumb"" classes, and makes for less code and complexity.";"0"
"this wont work the > is redirecting stdout to a file called ""{}"", i've confirmed this in the ci tarball created yum.log has data . what i do not understand is why find does not complain about not being terminated by a "";"" holy crapi see now, bash is weird .... echo hi > /tmp/data ya ; cat /tmp/data";"1"
"vdrok: yes, number of iron_base resources that are consumed by the user who launches an instance with this flavor. this interface sucksbutitis unfortunately what we have today in nova :";"1"
"this is ugly. maybe subclassoutput manager for each interface type";"1"
"this is the source of your test failures. s/to_dict/todict/";"0"
"yup, we will kill the l43 one with the decorator, this one needs more thought.";"0"
"damncinder.conf.sample!";"1"
"parentheses around ssl_vpn_conn are unnecessary.";"0"
"is this the uuid of the neutron resource whathever it might be network, subnet, floating ip, router...firewall, lb, vpn, in other words any object that has a uuid i think we should make that clear. perhaps an entry example for this table might be helpful. it sucksthat this model does not allow us to leverage db integrity constraints, yuk...";"1"
"s/dictionary/dictionary/ '.' should be removed after 'supported'.";"0"
"let us remove find_configs and use openstackconfigcollection.fulter_by.";"0"
"you should nuke them if they are not being used at all.";"1"
"this will not work. when you use the decorators, the mocks are passed in as parameters to the method. these are the same mocks that you use below in the nested mock structure.";"0"
"i hope you meant, ""ipv6-pid"" instead of ""pid-subnet""";"0"
"nit: i do not believe bools need to be in quotes.";"0"
"please have this dump the contents of ""body"".";"0"
"every daemon should getits own uid/gid";"0"
"listing an ancient and closed bug for work like this just makes it a pain in the assto deal with merge requests should them come up. please file a new bug.";"1"
"could we just use a string here instead of std::vector<uint8_t> it may be more convenient for our users. it kind of sucksthat perf does not give us the buildid at mmap time. the problem is that the dso on disk could change and get remmap'd. that will break it since the key is the pathname...";"1"
"it is a pep8 error. should be removed";"0"
"thanks, looks like i am stupid :p";"0"
"pid/tid does not matter here.";"0"
"i've no problem with cutting down on the verbosity, but do we really want to remove all logging of the request rest_client.py does do some logging.";"0"
"import abc, and use abc.abstractmethod/abstractproperty to express things that must be defined in subclasses";"0"
"my vote is to keep this change simple and remove all non-sparseboolean properties.";"0"
"please have i18n support here. disbled => disabled";"0"
"before: <template is=""dom-if"" if="" androidrunning_ ""> like storage.html";"0"
"why not just inline the code here like this: if mbisclippathcontent svgtokenmarker == mrowner.gettype !mafill.isset";"0"
"just interesting: is this lib an official way to track this";"0"
"nit: we should probably change this to log.info just because we are going to trigger a warning here each time through the code otherwise.";"0"
"am i being dumb here, but does not this raise the gnocchi.notimplementederror classas opposed to an instance of that class would it be more correct to instantiate : raise gnocchi.notimplementederror";"0"
"iirc, it is supposed to match the length of the title strings. gerrit sucksat showing this though so i can not tell whether it is correct here or not.";"1"
"running abort from a trybot is going to be dangerous -- it could at least abort other trybot runs, and potentially abort. suggest just not running it.";"0"
"this is c++, not c. if you do not want to init. the var. here, just move the whole decl. down.";"0"
"should be nullable=false as in migration.";"0"
"what are your thoughts on having a bool in uielement that controls whether it will delete children that would make this unnecessary i think i am not sure if that is better or worse than this.";"0"
"reserved_percentage and max_used_ratio are both ignored here. and this formula is the free_virtual capacity, we better change the weigher name to relfect this or should this weigher simply returns host_state.provsioned_capacity_gb directly";"0"
"boring comment: consider making unit test names a bit more intuitive you've already done a lot of effort in this way, but let us make them dumb-reviewer proof! consider: test_specific_flat_segment_is_not_partial_spec test_specific_vlan_segment_is_not_partial_spec or test_partial_vlan_segment_is_partial_spec as it pertains just naming things this comment too is totally optional";"0"
"actually , i want to write like this : ret = -einval; goto done. and thanks for your reminder!";"0"
"you clever bastard";"1"
"ditto. redundant but harmless for init since we will have already done this upon selinux_android_reload_policy but required for ueventd or other users of file_contexts only.";"0"
"afaik, both fencing-agent and python-tasklib are built and install on slaves, butthey are completely useless. i mean, we do not use them. we just install them.. this kind of legacy.. so you can set lower prio for moving them into gerrit.";"0"
"you can double free the objectithink. if you set destroyed, then the list_empty will be true both here and in sync_obj_remove_pt. you are not holding any locks in either place at the time of comparison.";"0"
"dead code, probably just extra crapi put in for no good reason, ha.";"1"
"yeah, i meant to delete this part and just have the part below. also maybe these should be bullets, not numbers.";"0"
"i think using is_sorted would be a clever abuse. since a reasonble alternative exists adjacent_find , i am using the alternative.";"0"
"maybe you can get this by picking a random form self.volume_list";"0"
"nit: self.plugin.get_network_info.assert_called_once_with also is this relevant to the test";"0"
"i think the print should be removed.";"0"
"want to get rid of #ifdef config_x86 everywhere";"0"
"it should be $metadata_secret";"0"
"nit: camelcase here and below, only trivial accessors get to be underscore_delimited in chromium.";"0"
"should not these mocks live up in _test_check_can_live_migrate_destination if do_raise is true";"0"
"that way, ""arg"" can default to ""null"", and we do not need to specify it in most of the xml files.";"0"
"ditto with delete_snat_namespace";"0"
"having recently played with servo on a stumpy, and then a kaen, ""empirically"" changes a lot depending on the platform you are using :- why not just cold_reset the device instead of doing the power button press then we know that the device is going to be off.";"0"
"silly whitespaces.";"0"
"i think the default argument is not worth it in this case, there are only a handful of callsites today. i'd just make everything explicit.";"0"
"ugly";"1"
"user_id = conf.castellanuser_id";"0"
"should enable_surface_synchronization be removed from layertreesettings";"0"
"from conversations with hboehm i was under the impression that there were lots of users of atomic-inline.h, but i only see three! i'll kill them... there are still hundreds of users of atomic.h, sadly. we need to think of a plan to at least make sure new code gets written with <stdatomic.h> instead.";"0"
"i am sure it is going to have some performance impact, periodic tasks sucks they run one after the other in a single greenthread. so periodic tasks like this which poke the bmc will affect the timing of other periodic tasks waiting to run.";"1"
"will not there be some extra "" "" if so, maybe you should consider using strip to remove those.";"0"
"remove _repo, its redundant";"0"
"should there be addcleanup for the mocks";"0"
"we should get rid of the '# noqa'";"0"
"how the helldid that = get in there";"1"
"#truestory";"0"
"you have some white spaces at the end of this line";"0"
"should domain_id be token_domain_id i do not see domain_id used in here.";"0"
"remove need_commit_confirmation";"0"
"you are masking webob.exc";"0"
"ugnh, darn people not emitting xhtml. and that htmlparser classhas a really ugly api... alright, i'll concede. thanks for trying.";"1"
"the options you moved from service_instance.py to here i.e. 'service_network_cidr' are no longer available in the manila.conf.sample file. you need to import ""manila.share.drivers.service_instance_helpers.neutron_helper"" in manila/opts.py and add manila.share.drivers.service_instance_helpers.neutron_helper.helper_opts to _global_opts_list. you can try the result with ""tox -egenconfig""";"0"
"you are also using this in the uicontroller, can the logic there be moved here to keep the number crunching out of the controller";"0"
"damni blame the test for not being complete then!";"1"
"put ' die' at the end";"0"
"please remove trailing spaces :-p 'sed -ri 's/ s*$//''";"0"
"this is a bit too generic. is this an hproffielddescriptor";"0"
"make it more pythonic : self.inactive_ip, self.active_ip = self.active_ip, self.inactive_ip";"0"
"is it ok to have the agent continue its execution when it is not able to send its heart beats controller will not be aware of this l2 agent unless it receives a heartbeat. just wondering if there is nothing dependent on agent state information.";"0"
"you dropped the fips configuration, check out the functional tests failures.";"0"
"globals are bad. create these in the parent process and passthem down to the subprocesses.";"0"
"this should probably be mchildwindow != nullptr";"0"
"i changed it to 0 and nothing broke so i guess it does not need to be -1.";"0"
"afaict hasattr is not useful here.";"0"
"nope, i totally copied it from somewhere else and did not touch it because std::stream is silly. i would delete it here since we do not know.";"1"
"am i right that the idea is to turn it into logger -t ""${script_name} ${pid} "" ""$ """;"0"
"this should trigger a cpplint warning, no the expected header guard should be shill_mobile_operator_info_context_h_";"0"
"this should be: ""$ "" die";"0"
"i just realized i forgot to delete the backgroundfetchedevent files. ignore this for now, i will delete them in a separate cl.";"0"
"nititis still not obvious from the doc that gerritchange entity is a child of gerritproject entity";"0"
"i think we were missing a destructor to delete the weak global for the method.";"0"
"!map !chromeos.machinelearning.mojom.graphexecutorproxy";"0"
"instead of if/else, how about this: if self.ca_file: kwargs = {'cert_reqs': ssl.cert_required, 'ca_certs': self.ca_file} else: kwargs = {'cert_reqs': ssl.cert_none} self.sock = ssl.wrap_socket sock, self.key_file, self.cert_file, **kwargs";"0"
"this name threw me off. is this infobar for android only does not seem so. p.s. it is sadly funny how many naming schemes people have come up with: foo_infobar_delegate_android. foo_android, foo_infobar_android...";"0"
"i am thinking about the remote case. in my head, a pid is a pid. since i am telling it to do things remotely, of course the pid is going to refer to the remote pid. the 'cros debug' tool already in chromite uses --pid.";"0"
"hi accela, 'in-use' path is covered in below 'test_copy_volume_to_image_status_use' test case.";"0"
"you should similarly die if vertica_source and vertica_package_file are not set";"1"
"maybe streamingringbuffer we canuse this for stuff other than client data.";"0"
"you can just do start_ == surface_id";"0"
"argh, i am an idiot. the 'and' should have stayed a nested if.";"0"
"! is_service_default $ovn_l3_mode";"0"
"use 'dummy_index' or '_' instead of 'j' and pylint.";"0"
"yes, this forces jemalloc to always purge whenever a page is ready to be purged. i guess my comment was not clear enough, the ""force always purge one"".";"0"
"it is a bug thatitdoes not error out when the generation fails though this line should be: $ quiet $ src /gen_syscalls.sh $";"0"
"ha_network may get a none value because of the race.";"0"
"this creates the $service_tenant_domain but not the $admin_user_domain or $admin_tenant_domain";"0"
"this classrepresents a single pair, so it should be called markerpair.";"0"
"please leave two empty lines between sections";"0"
"the linenos in these blocks are quite ugly. can we take them out";"1"
"a nitpick: why do not you simply return renderstate here imho the unique_ptr is an impl. detail. also, returning unique_ptr<> is dangerous--it is too easy to ""gut"" the glwindow object by a mistake.";"0"
"ok, let us punish them. the best punishment is to let them keep using format to so logging code is totally unreadable.";"0"
"no-one in the right mind will set retries to 0 or 1, come on! that said, this is correct to me: db_max_retries = 0 ==> i should not run and it is consistent! db_max_retries = 1 ==> i retry only one, and i shoot myself in the foot! i really do not see the problem here, butitcould be just me.";"0"
"dumb question. why does the conductor have to do an rpc call to itself";"0"
"i hate the backwards syntax...";"1"
"i think the futures of the classdefitemconsumers need to be handled.";"0"
"you already convert pid to int... so how about %d";"0"
"well, this sucks each git invocation even local, like 'git show' or whatever will make an rpc to google to get this stupid email. i am considering adding email support directly to luci_context stuff and make it available through auth := auth.newauthenticator ... email, err := auth.clientemail ... can we put this on ice until this is implemented it'll require some non-zero work to add the support to swarming and auth library . considering you'll be ooo...";"1"
"/* is_min */ false";"0"
"use contextlib.nested for the mocks so they are in the same scope rather than nesting them explicitly like this.";"0"
"this warning should be moved to the assignment in cpu_context_linux.cc now.";"0"
"you unset id here, that is why i asked aboutitin the test.";"0"
"adjusted the javadoc as requested. regarding mocking, this method is hidden api and does not need to be mocked. if mocks were to be used, the ""is..."" method would be mocked.";"0"
"this block of code should be removed.";"0"
"nit; ditch useless return";"0"
"hmmmm. i should be flogged in the town square for this one";"0"
"all conf values should be dumped when we load quantum, so printing it again here is unneeded.";"0"
"pdb might need to be removed";"0"
"formatting problem here: use %s instead of % obj s as you do not passa dict";"0"
"because of absents of ability to delete security group attached to instance, if no server check we could catch punch in a face with exception while deleting security group";"0"
"i do not see why all these mocks are explicitly created here. if you need mock_sock_dup, you can do just mock_sock_dup = mock_listen.return_value.dup.return_value this would avoid all unnecessary calls to different mocks.";"0"
"it should be added to both dumpers. dumper and cdumper. because there is not knowledge about what dumber will be used in client code.";"0"
"pep8 hates you for this";"1"
"yeah, and it is more than just the primitive version, it is transformed in more ways than just the primitivization. i think it is important to make it *very* fscking clear when we've done this. we only need it for a few code paths, so they should stand outithink.";"1"
"chatted offline with norvez ahassani . it looks like required_use=""dlc"" suits fine to the purpose - fail to build. however, we move the required_use=""dlc"" to test-dlc.ebuild and dummy-dlc.ebuild to avoid pollute this global ebuild.";"0"
"not really... 1. we removed that project. 2. that project does not have that bug upstream. some android idiot introduced that bug locally. the right fix is to just remove that project again...";"1"
"my bad, this should be empty func.";"0"
"why did you remove the parameters and go to a generic **kwargs that loses the self-documenting property.";"0"
"alphabeting sorting crapto make sure our test output is deterministic.";"1"
"this is a qualcomm driver, pulled in with commit a78d93e2aaa just a couple of days ago. are you sure we wantitdisabled here";"0"
"whatever's easiest for you is ok with me : another cl would be easier for reviewing i suppose but if you would rather throw it in here, or create the classnow and make another cl later to convert other existing code, i am fine with that as well.";"0"
"you are addict to this construction, though it is not a must here. i'd say, it makes reading harder";"0"
"the umpire structure is based on twisted, and we probably want to use twisted primitives such as deferlater instead of threading.timer.";"0"
"this is redudant. this should be removed or the one in conductors.yml should be removed";"0"
"have to think about this. do we have any builds that do not all envsetup.sh i'll ask brian";"0"
"is this tobefixed comment obsolete the bug referenced is closed";"0"
"typo assymetric - made my morning! also slightly confused as to why there is not a asymmetric constant defined in the secrettype class";"0"
"admin conceivably might also want to set -c and / or -i... i am fine with letting a dumb admin shoot themselves in the foot but i'll canvas opinions....";"1"
"yes. in ndk, this was hacked around by manually defining __has_feature. we'll need to fix this when upstreaming to libc++. i was going to take a stab at this upstreaming on friday.";"0"
"doh! rebase fail!";"0"
"do the dump before the check: if the check fails, you want to see the dump.";"0"
"you canuse dw_op_implicit_value instead of a full dwarf expression";"1"
"ra32_suspend should be rw19, for consistency with ra64_suspend.";"0"
"this should be processutils.execute in fact, please submit this fix as a separate review";"0"
"are we ok with raising an exception here we did not before. wouldn't a safer fix issuing a delete on first being not none having said that we should just issue a delete like 1 , because it makes no sense to select and delete, it is racy, and we want to kill the race entirely:";"0"
"add here indented to match the second try/except : else: self.fail 'expected an exception to be raised'";"0"
"so silly, indeed. :";"1"
"""unmanage"" is implemented for all drivers in base classas empty one. i just remove data was wasstored for share that anyway will be unregistered. so, i remove garbage here.";"0"
"you could actually remove l311 and l312 and it would work just fine.";"0"
"between'. no code is executed 'between' tests. there is nothing between tests. a black void! just me being pedantic...";"0"
"ah, why am i so stupid, thank you again.";"0"
"please remove a white space.";"0"
"ignorant copy-paste from atrace. not sure why they did it...";"1"
"this logic manipulate json data as a string. it is really a bad idea. json is a string representation of a structured data, so we should manipulate the data first and then dump it as json. this means: params = request.post.copy <cleanup params> return json.dumps params if post data is nested, you need to use copy.deepcopy.";"0"
"damnthanks for cathing this. error from my part, oslo needs to be updated so this patch is useful actually.";"1"
"maybe a stupid question: where's this variable defined";"0"
"please, remove whitespaces.";"0"
"do not like the length/depth this if clause is expanding to, butthat is just being nitpicky/anal. probably is a sign we should add __nonzero__ to validationpool, butthat is separate...";"1"
"this really sucksas a thing to need to do - it rather breaks the independance of os-brick and nova, because anytime os-brick wants to run a different command we need to change nova :- we really need a way in compute.filters to say #include os-brick.filters";"1"
"i disagree. the main problem here is that i am calling _do_node_clean instead of _do_next_clean_step in continue_node_clean. _do_node_clean should be a one time shot per delete like tear_down.";"0"
"i see what you want to do, but for image2, it seems unnecessary to reserve the space right after image2 and create oat_map pointing there if image2oat will be at the specified address. maybe if oat_begin is non-null, could we avoid reserving the space after the image also it seems that image2's oat_map_ and oat_file_ do not actually point to the same location. would it be possible to make them actually point to the same location is it possible to violate oat_begin + oat_size == oat_end with the current interface maybe we could get rid of oat_end in favor of oat_size";"0"
"it does not make sense to have these typedescriptor_init_impl::n*typedescriptioncount controlled sometimes by osl_debug_level>0 and sometimes by defined dbg_util";"0"
"are useless";"0"
"actually, this change is related to this patch. adding plan_uuid in the model makes the following statements useless pl_uuid = plan_uri.split '/' -1 # download the plan and insertitinto our db. pl = objects.registry.plan.get_by_uuid none, pl_uuid js_data 'plan_id' = pl.id this is why i changed it here";"0"
"this is pretty painful. a the poor developer needs to cross ref between two docs to accomplish a simple cidb change and that other doc is a bit long and rambling b it would be nice if we would automate the schema dump. maybe the dump can be created as a side effect of a test";"1"
"s/imporant/important/. my inner grammar nazi also wants it is -> it is.";"1"
"would be better to get rid of this and other white spaces below";"0"
"i think lxml is a third party library";"0"
"s5m *pmic* would help";"0"
"if you respin then please blow away the last empty line";"0"
"if vnic_type == portbindings.vnic_direct_physical:";"0"
"oh. yes, you eliminated the ar_image_buffer_* members. however, magic_window_projection_matrix_ still exists. since projection_matrix is part of frame_data, so can we just use that and remove magic_window_projection_matrix_";"0"
"use wget then. it is significantly less retarded then curl in my experience. ;";"1"
"the difference is whether you want to go ahead and append the new fragment if the original file itself is not valid xml, or just abortitseems like if that happens you have other problems, and adding some new junk to the end of the file is not going to help. i do not have a strong opinion about this, though, so i am happy to change it if you think the other behavior is better.";"0"
"this is a buggy line - you are registered things with the seed,but we need an end to end test here, so you should not do this they were registered with the undercloud by undercloud.sh .";"0"
"thank you! i hate locals ;";"1"
"rules for init go in init.te you do not need the domain trans for dhcp.";"0"
"only the .h for the .cc should be here, the rest should be below and sorted.";"0"
"this __init__ is redundant.";"0"
"this is kind of ugly.... uint32_t, u32 and int mixed in the same structure.";"1"
"so we cannot treat ""$"" as a dict to evaluate if a key is in the dict";"0"
"this seems useless, i think you can do something like: return iter setitertools.chain ....";"0"
"rpc_api_version should be bumped to '1.26'";"0"
"string returned to user must be translatable, wrap it in _";"0"
"no need to hide it, similarly to the ha network that has no tenant id which is also visible to the admin. no way to protect the system from stupid users... :/";"1"
"lol. i am clearly an idiot.";"0"
"rather than hardcode json, use json.dumps a dict.";"0"
"for optional arguments retries, gsutil_opts, etc , passby name, not positionally; positionally basically makes your life suckif you have to refactor the api say remove a keyword, or add a new one, etc . note that rule is basically true 98% of the time; the exception is for methods like {}.get, which is 'def get self, key, default=none '; in that case, since the api is never going to expand/change/etc, positionally passing 'default' is fine. for _gsupload, that does not apply; note this commentary/issue applies for all other usages of _gsupload this is the one i noticed, haven't checked the others for the same issue .";"1"
"this is where i think we should have subclassed hostinfo to be numahostinfo or something, and passthat into the connection here. stabbing our data into it like below is less than desirable i think.";"0"
"similar here just use oatfilestatus == kneedsrelocation";"0"
"bdms=bdms";"0"
"imo should be console_info = {wtypes.text: wtypes.text}";"0"
"i am sure i am missing something - why not os_storage_url, os_auth_token or are you deliberately avoiding them being sucked in from env next time swift is run";"1"
"hmm, since we have separate processes, one per listener, we cannot assume that we can only monitor the amphora at this level. my assumption is restarting the haproxy process would be handled by the agent and would happen before the agent reports a listener issue to the health manager. i am assuming that if the agent reports to the controller that the listener is failed it has exhausted the recovery options it has available and it needs the controller to fail over the listener.";"0"
"yeah, just like the one here below! sorry, i am dumb.";"0"
"nit: add a newline before getnameofwrapperclassame for mnativesbuilder below.";"0"
"yes, of course. do not know how i managed to screwthat one up. cl coming up!";"1"
"to run stand-alone need to mock utils.hash_path_suffix and use fake rings.";"0"
"the should be removed.";"0"
"of course....sorry i am such a dunce today.";"0"
"probably a stupid question, but should we be using github for the repository or should we be using git.openstack.org maybe this is a better question for sean";"0"
"kill the n while you are here";"0"
"use neutron_segment_types and cluster_net_providers from consts.py";"0"
"i guess this block should be removed";"0"
"i believe should should be false since you do not care about descendents of this uri";"0"
"auto_s and gr are not used. they should be removed.";"0"
"why do not you hook battery_soc_change and chipset_shutdown hook_second lasts forever.";"0"
"this guy here he has an rabbitmq.com email address says you have to set them i also tested without these parameters set and it does not work correctly.";"0"
"very crufty. the libchrome vs libbase question is an excellent one, and we should really come up with an actual plan on that front, but libutils is definitely something we'd like to kill.";"0"
": darn, this was in the cheesecake spec but you are rightitis not there. i do think these should be separate steps so yes, we should have this as a work item.";"1"
"i think you can garbage-collect this comment.";"0"
"this import should be removed.";"0"
"yeah, i has a dumb. i somehow thought that this object was returned from the aggregate lookup and was being updated.";"0"
"added const . inlining the constant makes formatting ugly.";"1"
"now we have ugly ifs above+concats. this should be solved in different way";"1"
"dmitry, but locking used only in case of cfg == null, and now we are not calling __wl_update_wiphybands in this case";"0"
"brace indentation is screwedup here";"1"
"should be project_id=project_id.";"0"
"this is ugly. ihmo, you can generate the state transition.";"1"
"redundant __init__. remove.";"0"
"obviously a typo. it should be command instead of a dot, e.g. ps -ewwlo pid,lwp,comm,cmd";"0"
"use a dash as a bullet instead of 'o'";"0"
"exceptions by utils.execute should be handled";"0"
"it is hook witch calls if node not found, it specified with conf.node_not_found_hook value, simple hook looks like: it is driver managed with via stevedore.drivermanager";"0"
"better way would be make the mocks assetup and make these return values asself members";"0"
"same here, it should be a datetime.datetime object.";"0"
"do not need to regenerate file_contexts or run checkfc above; you can just use $ private_fc instead.";"0"
"i should -1 this for such an awful spelling mistake. :";"1"
"-u, -o pipefail";"0"
"delete this block - catch the condition at the bottom of the function";"0"
"odd; damncreeping code, lol.";"1"
"nit: this should go in the anonymous namespace at the top of the file.";"0"
"please move these out so we are not hiding their return code i guess this fools bashate's local foo=$ blah checking";"0"
"nit: to be destroyed";"0"
"i think its better to clear the whole bitmap at the end of the gc since that will madvise dirty pages in the bitmap.";"0"
"this should be moved to line 2212 - no need to assign it here as the exception may be thrown below";"0"
"dumb question, and probably not directly related to this level of the implementation. so, what if the ssid has a comma in it is this the hex version of the ssid same for the udn below. i just wonder whether you may end up signing what you think you are meant to be signing.";"0"
"nit: should probably use american spelling ""color"" here, same below.";"0"
"combine the notfoundexception and emptyresponseexception: except notfoundexception, emptyresponseexception : # do not need crumbs self.crumb = false";"0"
"ptypedescr is unconditionally dereferenced further down, so this code apparently requires ptypedescr to be non-null as a postcondition of the typelib_danger_get call, so this should be an assert rather than a sal_warn_if";"0"
"then you can kill that guy.";"1"
"string must be translatable";"0"
"i know this is legal, butits pretty ugly. just do this: uri = 'swift+ 'v1/container/12345'";"1"
"trust_id=trust_id";"0"
"put this in backticks: ''keystoneauth1''";"0"
"stupid me";"0"
"the white spaces will be removed in the next patch set.";"0"
"beware that upstream in chrome they' re starting to frown on these single-count histograms.";"0"
"insecure is probably the wrong name to use here. insecure in tls is used to denote the fact host verification is turned off, not that tls is turned off!";"0"
"without this, i get make: *** no rule to make target 'linker', needed by 'all_modules'. stop. an empty ""linker:"" does not build the symlink at all.";"0"
"some pasted garbage in the middle. deleted.";"0"
"/* is_incognito */";"0"
"then you can just if self.clean_zonefile: here.";"0"
"unimplemented/invalid blas intrinsic. i also think we need to throw an error here and abort.";"0"
"in dvr case, mech_context is assigned by l1138, and then overwritten by l1154. so the value used by l1159-1161 is the one from l1154. am i missing something";"0"
"only the root disk is wipe by wipe_disk_metadata.";"0"
"i do not see this in the screenshot... but in the ux mocks in our email thread, it looks like your designer is using chips where they should be using buttons. for your teamfood that is probably fine, but i suggest moving this to a button before public experimentation. same for below.";"0"
"do not you want preservewhitespace=false here true is for when you insert your own indentation whitespace nodes into the dom which i do not see; with false xmlutils.toxml will do some basic formatting for you";"0"
"maybe i am an idiot but in this command you become the stack user, and in the next you are root seems to be a disconnect here, why are you switching to the stack user if the next thing you do is as root or is stack root";"0"
"gah. i must have rebased this patch stupidly at one point. will fix.";"0"
"why delete hosts here and in the main sync thread get rid of this.";"0"
"baselayout is eapi=0, and there is nothing here i see that needs it either ...";"0"
"how is this handled does it mean effectively no limitithink the command line requires a value for the limit which is actually kind of dumb since it does not work well .";"0"
"why not uint32_t* why decltype if so, the memcpy's below should really be simple assignments.";"0"
"then 2 zeros will be appended. sorry, i must be dumb.";"0"
"yes, this is rather dumb.";"0"
"this is a little lame returning a string. i'll change it to a mock.";"0"
"hm, right... it sucks the idea is to evaluate next alarms for 'and' conditional op if previous alarms are unkw .. butitdoes not work here if all are unkw. to implement such behavior i need to keep all previous state and set unkw if all are unkw. it will be easier to have expected behavior: stop at the first evaluation not matching the first rule.";"1"
"please add arenaunorderedset to arena_containers.h and use it to reimplement this class or get rid of this classcompletely; kill can be a static function in globalvaluenumberer.";"0"
"do we keep this, and are there any more puppet files we want to reference";"0"
"add/register a new datastore";"0"
"you could try: * state_sending_cmd11 * state_waiting_cmd11_done";"0"
"this actually looks ugly, why not use mock.patch like most of our tests do see";"1"
"i do not like overlaying structs but i have refactored this to be less ugly.";"1"
"argparseis dirt simple. you've already re-implemented a bunch of the infrastructure at this point ...";"0"
"error_nodes = nodes_to_remove";"0"
"execution fail here. you will need to enclose the string with double quotes. also, please fix this one as well: your -> you are";"0"
"minor nit, either add a space or remove one. :";"0"
"when will temp_file be killed";"0"
"this _is_ bigger than you can fit in a _signed_ 32-bit time_t. that is what the test was originally written for --- to show that we politely return -1 rather than invoke our right to destroy the planet through ""undefined behavior"".";"0"
"nit: use std::string instead of raw empty strings.";"0"
"typo in commit message useles - >useless";"0"
"this will remove all the whitespaces together with eols and converts output to the very-very long line of numbers. maybe you forgot some kind of filter like grep or awk";"0"
"assert_' should be inserted before 'called_once_with'";"0"
"apologies if this is another silly observation: the pipeline has the 'proxy-logging' filter twice. what is the reason for that";"0"
"is omnibox-output an ""input section"" this css classeems to be applying some bottom margin at 1 , butthe name of it seems inaccuarate, no how about simply changing this to omnibox-inputs, omnibox-outputs { margin-bottom: ...; } and remove the css class 1";"0"
"nit: multiline comments: /* * fdajfdsakjdfs fdsj * fdjjdsfk */";"0"
"i think it should be removed.";"0"
"why not setting the custom policy_file via cfg.conf.policy_file then we'll be able to kill that remaining argument for init , making api as clean and dumb as possible.";"0"
"i wish we could get rid of that automagic thing but i guess we have to live with this forever";"0"
"can we add a note here of why do we ""none"" when not there, or add the note in l477 nit stupid comment: i'd extract this to a separate function this one is growing too much.";"0"
"args='cat /command_options' if you add this line very little of the original start.sh needs changing";"0"
"this comment should be put in textcontrolelement.h.";"0"
"the classdoes not apply an 'abc.abcmeta' metaclasso i think it is useless to use this decorator.";"0"
"you can just delete all of these assertresponsestatus calls.";"0"
"invalid intendation";"0"
"i had forgotten, butthat currently fucksup all the indentation.";"1"
"remove or update";"0"
"nit: functools are stdlib.";"0"
"you are not, just human as all of us.";"0"
"or maybe put this text or appropriately edited close to bootstrap-ansible.sh message here above";"0"
"sake of argument: if not update_repo and copy_acl and push_acl : exit 1 i am being a bastard";"1"
"nit: get rid of battery_percentage and just return the values directly below";"0"
"i'd change it to this: * all 'puppet-openstack' classes and resources should be declared in granular tasks directly, not via 'openstack' module";"0"
"nit: codegenerator* codegen";"0"
"i will remove the pxelinux condition. uploading a patch soon.";"0"
"you should probably use assertgreater here instead of an asserttrue.";"0"
"nova can passthis to ironic via the ""instance_info"" field only, as this is a per-instance setting and should be removed when the instance is deleted.";"0"
"created_at,updated_at,deleted_at should be nullable.";"0"
"please keep spaces at the end of the preceding line";"0"
"runcommandcaptupreoutput cmd, log_stdout_to_file=blah, print_cmd=false";"0"
"these are dumb parsing routines. we do not need a valid request type to know how to respond to the request, as long as we have all the descriptors we need. in other words, the request is still ""valid"" even if we do not recognize the request type.";"1"
"this is done by addoverflowfromchild because we have added collapsed borders into visual overflow of table sections and table rows.";"0"
"yeah, probably my bad; i told him to putiton absoluteresource and _countableresource_; i meant to say, putiton absoluteresource and _reservableresource_.";"0"
"i do not know, actually. according to git history, leecam or drewry are the best ones to ask - i would ping one of them...";"0"
"i would've just made this a separate classfor maximal call-site simplicity, although it honestly does not bother me too much the way it is because shadowframe is already a mess. classlockcounttracker { std::unique_ptr<lockcountdata> data_; public: void begintracking ; void endtracking ; void trackmonitorenter ; void trackmonitorexit ; bool checkmonitorsunheldorthrow ; } struct shadowframe { .... lockcounttracker lock_count_tracker_; }";"1"
"just a comment, no action requested. if i was to go crazy which is not in-fact, in doubt ;-} , you could also add empty checking here as well, and you will find you can kiss strip out a few .isempty calls that if { } around getintfield. of course, not all of them, because an empty field is used to report an error ... whereas a zero return is not an error ...";"0"
"yea, but my inclination here would be to not have this #define at all. if this change proves to be performance neutral or better across more than just caffienemark and we can convince ourselves that suspend coverage is complete, then i'd just do it and remove the existing code. if not, i'd revert this patch. conditionally compiled modes are an invitation for destructive bit rot.";"0"
"what about not options.comper and options.compare == options.dump";"0"
"i am totally fine with pushing this toward a real boolean";"0"
"i wanted to destroy the objects in the same order as the original code. while looking back at the code, i think my first patchset destroy them too early which could introduce other issues, so instead in patchset #3 i've used scopedclosurerunner to ensure objects are destroyed in reverse order of the declaration and get the same ordering as before your change.";"0"
"the issue is with testmanifestversionedsynconepartbranch. it stubs out manifest_version.buildspecsmanager which is responsible for initializing manifest_version.current_version. that means it stays at the object default of none. then when the manifestversionedsyncstage.getnextmanifest runs, it tries to use manifest_version.current_version which is still none and we hit this error here when we try to print out none. there is multiple ways to fix this, butthey all kind of suck the test is trying to exercise just the stage without getting too much into the manifest_version internals. so i put the str here. it is a non-issue for forceversion because it is given a real string rather than pulling out an uninitialized due to test stubbing version of none.";"1"
"yikes, silly me!, you are right, i missed that change somehow. could we update the docstrings of such methods to explain that if a port is more than once in the list, that means we expect the event to happen twice, or three or n times . i guess that is the current behaviour, right . thanks for the patience rossella....";"0"
"i would have guessed that this would show up right next to: #define config_spi_flash_winbond ...that is in exynos5-common.h. should that define move here, or should this define move there";"0"
"ugh, i am an idiot. this comment makes no sense because i did not see that lines 330-333 were still part of this function. please ignore. sorry :";"0"
"the busy = prune id, 1, uid does not clear, it merely removes one entry if it needs to. i figured the 1 is very clearly not a ulong_max. its real purpose it to check if it is still busy after the sleep, if it is still busy, then we want to tell all the readers to 'go away', we kill them, then do yet another run to clear all the entries ulong_max. if it is not busy, then we preserve the readers and let one more run go unhindered. the one-line comment on line 663 describes what we are doing, it is obviously not enough comment ;-{";"0"
"if we end up being here, we would want to change the value of nework_name to conf.vmware.integration_bridge.";"0"
"since jsonutils.dumps takes care of invalid inputitis better that we construct a raw, faulty input here like this: req.body = '{""os-update_readonly_flag"": {""readonly"": true}}' self.assertraises webob.exc.httpbadrequest, req.get_response, fakes.wsgi_app";"0"
"might make more sense here. tool window close should be triggered by main window close.";"0"
"v8_inspector::v8inspectorsession is not an oilpan heap object, should be v8_inspector::v8inspectorsession* v8_session_;";"0"
"please, get back black line between os and six:";"0"
"resolvemavenhomedirectory as far as i can tell takes care of existence.";"0"
"l36-l38 should be removed instead";"0"
"mnotificationbadgebitmap = null";"0"
"for readability, please have one blank on each side of the = assignment operator. i know there is already code that does not do so, butitis ugly to read.";"0"
"maybe this is a dumb question, but what is a vif is it an object";"0"
"kwargs=dict cluster_id=cluster_id, **kwargs";"0"
"crapmy assumption about duplex is just wrong. in addition to testing link state, what else do we need to check to create the right list";"1"
"i am wondering why this was not failing before. did test_paycheck.sh failed";"0"
"this is a wip i know what i have to todo! dont control my wip flow >:";"0"
"i am not sure we should requre that since both sp_url not auth_url are nullable.";"0"
"at first i was thinking ""wtf, butthis indeed makes it easier to see intent of tests.";"1"
"style wise, do we want to move the #ifdef inside the function";"0"
"i think you've moved to using self.descriptor_cache.device_type .";"0"
"get rid of trailing spaces";"0"
"these are incorrect for sklrvp and should probably be removed.";"0"
"as is, this will not work. these wrapper objects are keyed off of their backing view/widget/window. there are still references to getid using the axauraobjcache in axwindowobjwrapper, for instance. there would be a weird split between the axwindowobjwrapper using axauraobjcache id's and axviewwrapper using ids from your unique id counter and they will not be guaranteed to be unique...";"1"
"please use die instead of rolling your own or return 1, see below";"0"
"what is the purpose of waiting in case if need to wait until program exits, i recommend next solution: local kill9=0 if ""$pid"" = """" ; then return 0 fi kill ${pid} >/dev/null 2> 1 for i in 'seq 1 $nailgun_start_max_wait_time'; do if kill -0 ${pid} >/dev/null 2> 1; then kill9=1 sleep 1 else kill9=0 break fi done if ${kill9} -ne 0 ; then kill -9 ${pid} >/dev/null 2> 1 fi return 0";"0"
"can you please put a space between ""libm_upstream_freebsd_src_files"" and ""+=""";"0"
"i'd use single, and i'd hard code these mappings as plurals does.";"0"
"it has problem if gtest can not parsethe arguments and dump the help information. so i change it to fgets.";"0"
"yeah, they do not seem to be needed, so let us kill them.";"0"
"empty __init__.py";"0"
"i'll run this by you in case my brain is not working correctly. build_packages_in_background is always true, right so not builder_run.config.build_packages_in_background is always false so this entire block of code should never run edit: so it only runs for afdo builders should it still not run on most builders";"0"
"it should be a symlink.";"0"
"yay! death to on these obscurely named suckers! another name idea: precommitdatause";"1"
"i still we needn't this check. i guess the driver will failed the abort live-migration when the migration is not running anymore, then the failed will record by instance action. so this check did not have too much help for race condition.";"0"
"dobin ""${t}""/clang++.sh die";"0"
"pete, just a nit: please end sentences with a ""."".";"0"
"please kill use_xinerama_version variable too since there should be only xorg left";"0"
"you want to use lib.gs.gsurltohttp on cbuildbot.archive_lib.getbaseuploaduri instead of hardcoding these";"0"
"this is already called in start_neutron_new - was there something broken that prompted this _set_config_files is pretty ugly and hacky so i wouldn't be surprised.";"1"
"the following cls remove all userptr and mmap buffers. only dmabuf will be used.";"0"
"please delete the comments code.";"0"
"the white spaces and the r can be very distracting while doing the inline review.";"0"
"cursed windows clipboard/done";"1"
"man, i suckat abc's.lol";"1"
"this sounds as if you were adding a feature. indeed, you are here fixing a very stupid bug. it would be better to use a wording that makes it clear, something like ""fix ganesha config option registry"" further improvements possible";"1"
"just a stupid question, but might not be important now. what if user specify -p internal:bus=spi and -p ec at the same time";"0"
"seems your editor also changed this, so another whitespace nit.";"0"
"that will require handling the mocks in that common function, which will look messy.";"0"
"this is a pretty stupid mechanism... if i need to change the code anyway, there is not much point to have it as a config option. they should've just put a weak-referenced noop uip_log in the code for others to override... ...but i guess that is outside the scope of this cl.";"1"
"yes, another story. in that case, conntrack is useful because sg rules are stateful.";"0"
"crapthanks for catching this!";"1"
"miss command=ofproto.ofpfc_delete";"0"
"lol, sorry stan. this is idiotic. not sure what i wassmoking yesterday, but you can take it out or leave it :";"0"
"the data is coming form userspace and may contain random garbage. from make_kuid docs: ""callers are expected to test for and handle invalid_uid being returned. invalid_uid may be tested for using uid_valid ."" so i'd have: kuid = make_kuid current_user_ns , parsed_parent ; if !uid_valid kuid { ret = -einval; goto free_both; } *parent = kuid; ...";"0"
"it seemed a extra black at the head of the line";"0"
"i wonder how much of the code that is being created to be asyncio compatible is actually handling this error since as far as i understand it, every usage of 'yield from' needs to be wrapped in a 'cancellederror' and the code needs to handle this occurring . +2 though to what eventlet does that is similar being bad since the code it monkey patches has no idea that a exception like 'cancellederror' maybe raised, at least code created for asyncio should be somewhat aware that 'cancellederror' s may happen";"0"
"wow, those __getslice__s are ugly";"0"
"and kill this line";"0"
"about deleting. if instance could not be deleted if dns record is not present - seems like a bug. automated ripping is ok avoiding instance . we already have discussed it. so. i think doing same with dns on instance fail is although ok. mgmt call seems like optinal ability but not the main purpose.";"0"
"you could call me pain in the neck, butthere is no from : we are not pushing anything from puppet master, agent are polling so i think we need another preposition here.";"0"
"this is a more general comment, but similar to the cli, i wonder if we should preface api names using ""lb-"", assomething like ""members"" is a very generic term. such name collisions is one place where quantum's approach of ""everything is a top-level-resource"" kind of sucks";"1"
"bnextch = false achieve the same goal i think, cheaper. if it is not a space the current character is deemed not consumed yet right bnextch is used to that at the end of the loop";"0"
"you *c*an set...";"0"
"there is only one waitqueue, no need to inititmultiple times";"0"
"somewhat awkward to have to specify m for every instantiation, and that d has to be specified in terms of the ""naked"" u type, when whatitshould represent is a value of the typed_flags<...> type";"0"
"done here and below so that the reader does not get the impression of leaked mounts. it will be cleaned up in cleanup_temps_and_mounts in common_minimal.sh.";"0"
"if !listversion lvc != null { .. return ... }";"0"
"shoot. i was hoping it was the other way. is there a way to write a seccomp filter across multiple lines it is too long to include all the or statements on a single line.";"0"
"damnit...";"1"
"you need to put this one on a $sync_db conditional.";"0"
"nit: consider this.insecure = options.hasownproperty 'insecure' !!options.insecure;";"0"
"nit: #endif /* config_usb_pd_tcpm_anx7447 */";"0"
"yes, you are right. i will push them by end of this day.";"0"
"this is incompliant with python3";"0"
"i did not quite get this comment project.domain_id has a fk to domain.id this way, this comment is valid for _generate_root_domain below, not to this";"0"
"same here - due to my lack of knowledge of earlgrey i cannot asses if this is a necessary change or not.";"0"
"qpid_* params are undocumented";"0"
"rather than adding these fixmes would it be possible to fix them, or just remove them for now these two calls do not seem to be used at all so i would just rip them out until they can be fixed.";"0"
"does using attribute naked really generate better code thanusing the right register lists";"0"
"oh, my god. i finally understand why john view the feature assomewhat useless. it is my error for my bad english. here, ""the volume api soft_delete"", my original idea is add a interface method ""soft-delete"" in cinder/volume/api.py, i do not want to add a rest api ""soft-delete"". i am sorry again. in fact, my implements about deferred deletion as you say:";"0"
"probably too late for me to be commenting about this, butthis docstring confuses me. it looks like all it does is return the node associated with the instance. where/what is the 'validate' part i know michael, it has nothing to do with your changes.";"0"
"son of a b* #";"1"
"v8_unittests_compiler_code_assembler_unittest_h_ here and below.";"0"
"h233 should not be added here.";"0"
"should be remove wightspace";"0"
"less code if you are willing to lose the per entry comments # dummy slots for servo micro use. interface_defaults vid pid = 'dummy' * 10 # buffer slots ... interface_defaults vid pid += 'dummy' * 10 interface_defaults vid pid + {...}, {...}";"0"
"yeah, butitaffects the outcome of the method because it leaves instance.device_metadata unset. but looking at instance.save it looks like it will be handled properly, so that is fine.";"0"
"yeah, might as well nuke these.";"1"
"this is quite an abuse of c enum. i do not know how much of proper code review is expected to this third-party code.";"0"
"you mean yaql colon within the string literal is the issue";"0"
"bool initmbr = false; this is c++ code. it is better to use c++ keyword to indicate a boolean value.";"0"
"map reflect.type is ok, but getting this reflect.type out of *jobconfig is not ok. try ititneeds two levels of reflecting indirection to get to the underlying oneof type, due to how absolutely retarded oneofs are in go.";"0"
"this command should be removed...";"0"
"are we going to move existing -ftrapv users like libpng over to this i suspect an abort will be a lot less painful to debug that the current sigills, which always end up on cferris' desk because of their non-obviousness.";"0"
"elf64_addr these are not in the roms. it is creating a buffer that spans the size highest address seen minus lowest address seen. however, that logic seems broken and things just happen to work because *location == 0 or == first loadable segment address in this path.";"0"
"they are screwed i do not think so, the original version did not, at least.";"1"
"darn, i was hoping this would obsolete the regexes completely. :-";"1"
"yeah, they are horrible, butthey mirror the memset names.";"1"
"i would prefer you instantiate the attributeerror.";"0"
"as in other files, consider verifying that there is no trailing garbage.";"0"
"wtf with generator as vm at least call it: with vm_genereator as vm: ...";"1"
"does brillo support platform development on windows android does not. otherwise, i am starting to think this is a mistake. we are doing command execution, but only in a very limited form. we are doing environment variable substitution, but badly. it feels like the best we can hope for is to achieve parity with the shell-- but we already have perfectly good shells. your example provisioning script looks identical as a shellscript except that each line starts with ""fastboot "". the ""too much room for hacks"" is probably a good thing --- sooner or later there is going to be some custom bullshitan oem needs you to do, and then you either hack that in to fastboot or have a separate shellscript you need to run in addition to ""fastboot provision"". this is why android's init is such an awful mess. they wanted it to be ""minimal"" but bad things happen when you collide with reality. especially in areas where oems are involved. the recovery image links in an arbitrary oem-provided .so to solve the equivalent problem there. yeah, the shells not lovely, butthe alternatives all tend to be worse... i think ""windows"" is really the only strong counter-argument, and even there that just makes me think ""python"" rather than ""shell although for the level of complexity you are talking about, a .bat file is probably sufficient anyway.";"1"
"this as well probably needs to change. i think the idea that peter had using the 'user.name' might help with these silly typos.";"0"
"if this returns null because of oome, we should be careful to not get another oome causing a recursive throw abort.";"0"
"to trigger buid.py to pull";"0"
"useless check, see l158";"0"
"that sucks";"1"
"nerd remove too";"0"
"originally i was going to keep track of the pid which is not returned by the wrapper. i'll go ahead and use the processutils.execute for now.";"0"
"remove blankline.";"0"
"pep8 - this is out of order.";"0"
"wow, very simple concept. as long as relocate returns bool we need to find the largest fragment in mpfragments as long as there is a non-naked fragment in mpfragments.";"0"
"i am an idiot, these are already running, apparently with the fake driver :";"0"
"ovs_git_tag=7d1ced01772de541d6692c7d5604210e274bcd37";"0"
"that sounds like it is blocking the user, right my concern is it is pretty easy for users to type a dumb search e.g. search for the letter 'a' accidentally , and then be stuck in a frozen browser. what do you think";"0"
"that is fine, i kinda prefer it as jsonproperty since that is clearer whatitis and i doubt the dumps/loads time is meaningful but dont' care that deeply";"0"
"you are not missing anything, i was just being stupid. sorry about that.";"0"
"it wassupposed to be in human, butitis a lame description anyway :";"1"
"see it in theaters now... devserver 7: kill harder!!!!";"0"
"above error was due to transport_url not being obvious thatitneeded substitution values. notifications_topics should be notification_topics = searchlight_indexer";"0"
"added all butthe last one. i may take a stab at that tomorrow.";"0"
"i've generalized this to include all context managers as alex prescribed. i've also left a general warning not to be an idiot about locking. unfortunately, it will not reach its intended audience.";"1"
"you should remove these whitespaces.";"0"
"we can start fetching the image data only when webstate is valid, butitdoes not matter if webstate is destroyed after calling this method. would you prefer to use: if !webstate return; instead of dcheck to make it safer";"0"
"$ local_path /libc better with: include $ call all-makefiles-under,$ local_path $ call all-makefiles-under,$ local_path /libc";"0"
"if it is performance-critical, a single vector will have better cache locality, so may be faster. i agree pair syntax is ugly. both of these arrays are stacks, so i would indicate that in the name. maybe something like mentrystack and mtypestack.";"0"
"this should be a helper function serversbyname d.server = duttestserver d";"0"
"1. should not this be a certificateexception 2. it is not that you failed to call ititis that the method itself failed. thus, i suggest ""checkservertrusted failed"", e.getcause ;";"0"
"to my knowledge it does not modify their model -- it just reads from it to set up the tree view. if you add/remove entire modules, i think some of their code i did not touch may muck around in ij's representation of module structure. sigh, i know that sucksi'll have to talk with alex to see how we want to synchronize with gradle -- it used to pick up changes automatically, but he just modified that to keep it from kicking off import tasks while you are editing the build files by hand.";"1"
"dummy";"0"
"remove. i think this was unnecessary before already. kstackalignment is size_t...";"0"
"get rid of fi elif echo $config fi";"0"
"have i mentioned that putting the tenant project in the uri is retarded *sigh*";"0"
"pp900_s3 is a child of pp1800, as you can see below.";"0"
"perhaps a stupid question, but what would the type of that pointer be afaict tasks_init is an array of an unnamed struct i guess i was also assuming that the compiler would take care of this..";"0"
"seems like you do not need here to inherit from both classes. utils.requestscenario is a subclassof base.scenario anyway";"0"
"this looks like a typo, do not you want getproperty ...http*s*... same below.";"0"
"nit: make this an even dumber struct by removing the ctor and changing line 103 so thatitzero-initializes the instance via: availablelanguagealiases available_aliases = {};";"0"
"what if we get kill -9'd";"0"
"not_if { main_plugin == 'contrail' }";"0"
"consider: typedef std::vector<uint8_t> bytebuffer;";"0"
"how about we just retain the socket: self._socket = eventlet.listen ... and then ...";"0"
"nit: may be it is more clear if you .strip ' n' at your _get_value_from_conf_file above, instead of doing it at each kill..";"0"
"yeah, i have tests, butthey are supposed to go in oslo/common when this gets moved there as well. i was not sure how to go about that... i have definitely tested this buggerthough : i am using the test/code from this change/iteration:";"0"
"those two features are not supported by pyrax which uses novaclient . i'd rather submit a patch to python-novaclient than put an ugly hack in the cloud servers resource. this work should be done in a separate blueprint.";"1"
"craplooks like is_backend_avail always returns false for sqlite in-memory and tests are always skipped... we should add a special check for this case.";"1"
"the chattiest uid, and the chattiest pid within the system uid of 1000";"0"
"looks like you have a bad rebase because _live_migration_copy_disk_paths only takes a single argument now, so we have this in the multinode jobs for live migration testing:";"0"
"that is just silly. if we really worried about that, we would also include the date and the log tag and the fact that this is of classerror!";"0"
"/*out_channels*/";"0"
"jni entrypoints are *not* used by quick. remove them. it is also wrong to do this ""direct trampoline"" with them, as they may throw exceptions.";"0"
"this ended up not being used and is a silly shortcut.";"1"
"so will quotas get screwedup if it is an admin user deleting a tenant's instance";"1"
"i do not see where this is used in this cl. is it already in use butthe import just missing";"0"
"the history is kept in gititis gerrit that is dumb!";"1"
"tavrc_msg *p_avrc = ...";"0"
"useless leading and trailing '-'. see the definition of 'rand_name'.";"0"
"if you made some operation on analready close vfs, you will have an assertion in the targeted vfs. so, it is useless here, no";"0"
"i was talking not about pid /var/run/supervisord.sock";"0"
"suggest remove extra parentheses.";"0"
"i'd extract this marshalling into a util function to avoid repeating it twice, buttwice we can still manage :";"0"
"we should use oslo_log here";"0"
"return value of make_chroot should be propagated. looks here like you are just ignoring if make_chroot fails.";"0"
"and this check is useless since you do .get 'start', none in the next line";"0"
"pool_id seems to be just the string. this would be like the following. >>> import uuid >>> ', '.join str uuid.uuid4 'd, 1, c, c, b, 3, 9, a, -, f, 2, a, 0, -, 4, b, 4, 1, -, 9, b, 4, 5, -, 0, 2, 5, 3, f, 4, 6, a, 4, f, 8, 9'";"0"
"could you move the mock ""_execute"" code into setup function for example: p = mock.patch.object self._driver, '_execute' self.execute = p.start self.addcleanup p.stop ... self.execute.assert_called...";"0"
"it should though the for_each_observer macro is dumb and expands to a non-constiterator. since we only use this internally in this file, i think it is ok to leave this as non-const.";"0"
"you should sob";"0"
"you should not need this any more. i killed androidconfig.h a while ago.";"1"
"how come you do not set closed_ = true always should you also null out contents_";"0"
"should this be better rounded by kbitsperbitmapword maybe, roundup roundup num_bits, kbitsperbitmapword / kbitsperbitmapword * sizeof uintptr_t , kpagesize though it may not matter as kpagesize is a multiple of sizeof uintptr_t";"0"
"because these vars are not used. i'll remove them.";"0"
"why is not this a nearlabel";"0"
"hope i did not violate any policies with my statement, to clarify: i called myself dumb here.";"0"
"it is not often you put 'suckers wanted' on a spec and one shows up so quickly ;";"1"
"why do we need this looks like an ugly hack";"1"
"i do not want to be nerdy, but i will be happy it this line will be removed";"0"
"yeah, because it confused the hellout of me that i was fixing the wrong copy of the code :-";"1"
"ok, let us discuss this on the next cl with the cancel/abort then.";"0"
"hehe sorry this was a brain fagjust re-visited and saw the cat here";"1"
"crapthat comment is in the final tree - but not in this change - i'll see what i can do.";"1"
"i would call this launchaboutblankinnewtabfromchrome launchnewtab to me caused me to think it was an ntp";"0"
".clear_hpd = ps8751_tcpc_clear_hpd_status";"0"
"updated to a single experiment with multiple mutually exclusive options now.";"0"
"shall we just kill this and amend if/when this lands";"0"
"mocks 0 see test_create_post_ok";"0"
"can we do this for a single ci job, so it does not take up time on all jobs. for example we could do this on the nonha jobs by adding a nonha switch to the toci_jobtype for loop in toci_gate_test.sh";"0"
"really for read i would have imagined that you wouldn't become ""completed"" until after the stop condition happened. i just figured that maybe write was finishing early. if it is applicable to both cases, how about at least combining it was the ""if"" test above seems silly to have: if a blah else barf if a blech instead of: if a blah blech else barf";"0"
"fuckthat... it will be used on this week..";"1"
"how about using socket.gethostname if we run both the frontend and the dispatcher on the same host will not this always be localhost";"0"
"i do not think you nee the ""sql backend"" bit here...the code is in the sql.py!";"0"
"the only justification i could provide is that we could have added an assert that the token being removed still exists to ensure they are not generating/storing garbage. we never actually did that, so this is fine.";"0"
"so why are why not doing the validation on the input waiting for the failure seems silly to me.";"0"
"should not we reuse the stuff we have in silent_call there is a logic which updates action logs 0 . also i think we can reuse check 1 which we already have, by just inheriting new classcheckbeforedeploymenttask' as 'checkbeforeprovisioningtask'. 0 1";"0"
"cur_ration is terrible name";"1"
"it was disabled first then enabled for testing. i will setitto disabled. probably need a conditional codec checking in the unit-tests too";"0"
"{{ keystone_admin_port }}";"0"
"simplify this by removing 'bool uptodate' and returning false here.";"0"
"damni am really bad at this. should not happen.";"1"
"special value =0.";"0"
"stupid nit: added vs available or accessible from the client perspective, maybe";"0"
"honestly, this description sucks. : no idea what is done and why and also what was done to test this change. imagine a canary build breaks and tree sheriffs need to go through cls quickly trying to pinpoint what cl might be at fault. this description does absolutely nothing for them, or for the people who might be going through the blame history and trying to figure out why a particular line of code has been changed..";"1"
"urgh, annoying... how much work is it to test the ""users"" how many are there in the first place can you not just inspect them manually and make the change otherwise i suggest switching to python...";"1"
"i think admin only can be removed.";"0"
"usually the pollsters in ceilometer interface directly with the python client. is that going to be case as well does ceph has a python client";"0"
"see my comments on patch set 1 regarding making all this logic shorter. or perhaps do sosassuggestion above which eliminated a lot of this";"0"
"i think the lines from here and below is clearer like: if message_lines: self.message = message_lines 0 self.extra_message_lines = message_lines 1: else: self.message = '' self.extra_message_lines = # fix whitespace here.";"0"
"minor: for start, end in self.netw....";"0"
"damnyou are right. my bad, the alias table was even malformed, butthis was hidden by the full resource table, which masked it completely. this is now fixed. thanks for spotting this.";"1"
"as per eike wants rtl_logfile_context_author killed without any replacement -- and yeah, that probably makes sense. could you adjust";"0"
"line 30 - lol. yeah, let us kill it.";"0"
"opps, that wasstupid";"0"
"this line must be removed, you are already doing the destroy in previous line.";"0"
"i think it should be mellanox's sdn not mellanox's nms";"0"
"temporary conversion ctors are unnecessary here now, so adesc.aname = aargname; adesc.adescription = aargdesc;";"0"
"hmm, seems i made a stupid rebase :";"0"
"forgive me. sometime i am dumb, and i love reinventing the wheel.";"0"
"this seems useless, as the above glgeterror has cleared the error state.";"0"
"makes sense, but if that is the kind of restriction someone wants to enforce, couldn't they just use the ""policies"" setting instead of the ""roles"" i do not mean to be a jerki am just trying to understand what extending the semantics of the roles-style property protections gets you that is not already available from the policies-style property protections.";"0"
"these can not be inline functions because gtest_skip depends on being called in the right function we could wrap it: inline bool checkxrrequirementshelper const std::vector<xrtestrequirement> requirements_vector, bool *setup_skipped { bool ret = false; auto check = checkxrrequirements requirements_vector ; if check != """" { log warning << "" n nskipping test due to reason: "" << check << "" n""; } if setup_skipped { *setup_skipped = ret; } return ret; } #define xr_conditional_skip_internal_ requirements_vector, setup_skipped if checkxrrequirementshelper requirements_vector, setup_skipped { gtest_skip ; } this also gets rid of the weird ""bool dummy;""";"0"
"i am not sure, why would we or we can make it empty in o, then remove completely in p.";"0"
"do not you need a ifeq $ host_os ,linux block, so this does not try to build on a mac";"0"
"theere is a possibility that the manager would still be running, we need to check if any processes left and kill them";"0"
"no, i meant parsing the output file. you have a canned.perf.data, and you pretend to run the daemon and then move the canned file into place... that seems crazy. why is not there an entry point into the encoder you can call directly";"0"
"meh, looks ugly... any suggestions";"1"
"that is enough. david can you remove your verified-1 please";"0"
"i think we should - you know we'll hititdown the line if we do not.";"0"
"you add sanity execution in l 987, so that please, run here only smoke suit";"0"
"ugh. sorry to keep sending you these badly formatted cls. fixed.";"0"
"this should actually be a fixme to passit in too, right looking it up right after we create it kinda sucks";"1"
"numa_topology = get_numa_topology";"0"
"ack. i am okay with two levels of encapsulation: encircledimagesource is potentially reusable beyond vectors, and the anonymous function is just avoiding duplication of the locally relevant ugly details.";"0"
"was there a reason for not calling cros_build_lib.die no one catches systemexit ... seems like you should replace all the other raises with .die ... at the very least, seems like you have an extra set of paren here: ....";"0"
"the oslo.service api just sucks";"1"
"so here you will reintroduce bug waiting to be fixed here you should probably rebase you work on top of it.";"0"
"why do you include this in your driver patch looks like a bad rebase.";"0"
"this looks silly. i'd just keep using n_registers_code_item instead of these.";"0"
"groovy is awful, so no. also, this is in builder, not gradle so there is no groovy available here.";"1"
"i like that better. this whole definition was a bit of a pain in the ass";"1"
"your indentation is messed up again";"1"
"we should remove gradleimport.current_build_tools_version and use this one instead";"0"
"it is soon time to find a poor soul to update the v8 cheat sheet :p";"0"
"output is mildly ugly, butitis stupidly useful in comparison.";"1"
"darn, you caught me. actually there was an odd issue -- assoon as i added a second periodic_task, this test started failing because dbapi.touch_conductor was getting called twice! i haven't dug into why that is. i'll file a bug and note it in the next revision. #1253426";"1"
"this madness wouldn't be needed if subnets were a dict.";"0"
"oops, silly me. done.";"1"
"one day we should get rid of these gotos...";"1"
"i wonder why these are brought in multiple times admin_password and admin_tenant_name and admin_user are dupes.";"0"
"remove control_drive param";"0"
"i think the < and > are not needed here and should be removed.";"0"
"here too, you must replace #!/bin/sh by #!/bin/bash";"0"
"i think you need to move them to the makefile, presumably bulid/core/config.mk, because envsetup.sh is not a musthave to do a build. for example, our buildbots actually do not run envsetup.sh.";"0"
"use ostringbuffer to construct the string. or at least drop the 2 useless intermediate string vars.";"0"
"i was going to be a smart-assand complain about how i'd find rsplit limit=1 more readable, only - apparently it is maxsplit, not limit, and - it does not let you do that: typeerror: rsplit takes no keyword arguments serves me right for wanting to be a jack-assp";"1"
"i guess google c++ naming would be hkdfsha256, not that we are remotely consistent about this. personally, i think ""hkdf"" and ""sha256"" look silly, but ah well.";"0"
"ah! did not realize getwebmediaplayer is a public method... that is nasty, but helpful in this case : done.";"0"
"nullable=false i think";"0"
"useless";"1"
"ah, you have removed a real code here. please, putitback!";"0"
"this comment is useless, after v3 dispeared nobody need to know the history.";"0"
"i'd prefer not to have the ""except exception:"" block on this test, or any of them. if an exception is going to make a test fail, just letitgo through and fail instead of throwing away the type, message, line number, and stack trace. basically, next time i am editing the ring builder and i make a stupid typo and get a nameerror, i want to see nameerror in my test output so i can go fix my mistake.";"0"
"port_id = returned_obj 'floatingip' .get 'port_id' or original_obj.get 'port_id' if port_id is none: return";"0"
"i think %d should be %s because obj_id is uuid.";"0"
"in the documentations current form i do not really see any real value in this scheduler: if it is designed to make scheduling faster, but does not work well with multiple schedulers, then what use case is that that being said i do think there is a real case where this is valuable see above comments .";"0"
"agree, that this line should prabably be removed";"0"
"fixup != nullptr";"0"
"remove all exra spaces";"0"
"nit: you do not need to set a return_value";"0"
"should be nsx.logicalswitch";"0"
"why get rid of this die it seems good";"0"
"why do not you return the entire replication_driver_data is replication_volume_ref enough";"0"
"i am dumb and forgot how this works. instead of calling onseekframesuccess we only execute onvideoseekedfortrackchange .";"0"
"does it still make sense to have these *_env names when they do not exist it is getting silly now, making up a name ""glib_env"" that never existed.";"0"
"i know it is kind of stupid butthere was a requirement that said that there should not be a period at the end of first line in commit messages. not sure if it is still true.";"0"
"this is useless since you overwrite msg.fields at l71";"0"
"i promise not to do anything stupid until i forget this promise";"0"
"you could remove this mock if you call ""drv.cleanup ..., destroy_vifs=false, ... "" in line 13676";"0"
"the 'param in params' is useless in this conditional if you add the 'params.get param ' check. you might as well simplify this down to 'if params.get param :'";"0"
"why is this change needed would it make more sense to have the scriptstate::scope in scheduledaction::execute localframe* because some call sites call scheduledaction::execute localframe* directly";"0"
"nitithink that we can kill everything after the comma now.";"0"
"yes, we will use that table directly without modification.";"0"
"change to ''run-playbooks.sh'' script. and on line 166.";"0"
"tuple repos 0";"0"
"it is ok, we'll remove this script entirely soon.";"0"
"version_prefix + self._build";"0"
"a little bit ugly but i do not know how to make it better= any advise";"1"
"die is always valid";"0"
"hah, i already vetoed that. trybot urls are not readable to the public, so it is annoying to put them in our git history for all time. the gerrit comments are better.";"0"
"the alternative is uglier imo...";"1"
"these should be emdashes without a space before and after the entity.";"0"
"looks like an ugly hack. why";"1"
"probably, 'client' should be removed";"0"
"crapthought i fixed that.";"1"
"kill too";"0"
"yeah, the str*cpy family of functions are a disgrace.";"1"
"is there any special reason this is a 'define' function and not a normal function i do not think there is any bottleneck here!";"0"
"yeah, i know it is dumb, butithink i prefer using 'child' everywhere. : classname, file name.. your conf option above is 'mute_child_*' already...";"0"
"fake git sha1 here. image is a mutant that was not built from any specific point in the tree. this will not be typical once we get to production / stable images.";"0"
"oh, stupid mistake, thank you.";"0"
"wtfkind of use case is this";"1"
"remove linebreak";"0"
"i apparently have gone through this idea but no, base64 encoding is an internal implementation detail of syncprefs. which, of course, makes the local variable above useless! removed.";"0"
"myisbinary, myisstrict. yeah, i know that is not as readable. i sometimes skip the ""is"" as redundant: mybinary, mystrict";"0"
"no need for that, basetestcase resets all mocks.";"0"
"please next time do not write ""trivialfix"" in commit msg. this is useless information. here should be why this commit needed";"0"
"i want to split ovs_core_mask and ovs_pmd_core_mask chunks.";"0"
"test_shellmocks raw_request and json_request of httpclient, because earlier sessionclient was httpclient child. test_shelltests self.client for httpclient and sessionclient, so now we need to mock sessionclient method too.";"0"
"self.fake_subnet looks useless.";"0"
"i think you need to indent the *'s, to make them recognized as bullets.";"0"
"key_set_id and mime_type do not appear to be used, so i would simply remove them.";"0"
"i think you want a $ here...";"0"
"i think it is better to remove the _ here.";"0"
"use a namedtuple for this so it is easier to tell what these two fields are supposed to be.";"0"
"remove initcap on 'example'.";"0"
"1 sucks i actually prefer the current version. any input from andreas";"1"
"why not simply self._server_id = self._post_server";"0"
"crapforgot to add this when committing the latest changes.";"1"
"this start, end, pid, filename are something that can go one heirarchy up, that way you will not need to repeat these again and again for each snapshot. these are constant for a document.";"0"
"kill those sections below if they are not needed.";"0"
"how about this one: # polling_interval = 2";"0"
"please also remove the nosuchrunner classfrom exceptions";"0"
"...but i'd rather we thought about which new _languages_ we add. i do not understand how you decided which ones to add here, so let us just stick with the same set of languages in this change and we can discuss increasing the set of languages separately. especially because the cldr data for non-mainstream languages is often of very low quality; i'd rather not include a language at all than include crapdata for it.";"1"
"that is a typo i do this the whole time - stupid bash messing with my mind . fixed.";"0"
"nit s/there/their/ aww matt you are usually so hot on commit message grammar :p";"0"
"although providing a default implementation of compare is less ugly than judging if compare_function is nullptr before. i prefer to keep separate item arrays for display and sort. the process is first sort then display, the keys used to sort are not exactly the same as the keys used to display. it suckswhen trying to think how to compare samples by their sample count.";"1"
"yuzhu: so i took a look at where i would think the documentation would be on guarantees/lack of guarantees of state after a watcher wassignaled with a readable signal and did not find anything that clarified this. is there somewhere else i should be looking given that we have some code that appears to assume that a watcher triggering with a readable signal canalways be read, and some that does notitwould seem making sure the documentation is clear about what assumptions can be made. willing to give me a pointer to the documentation i should be considering updating";"0"
"thanks, dazhao! i will remove all of these blanks.";"0"
"missing accessibilitycontroller* accessibility_controller = shellget ->accessibility_controller ;";"0"
"well, yes, typically one of the silly mistakes i am burdened with... done.";"0"
"these fopens should have been o_cloexec too.";"0"
"you can initialize them here mockimagemanager* mock_thumbnail_manager_ = nullptr;";"0"
"we should validate the id i< tag_obj.max_tag_length";"0"
"nit: unneeded initialization.";"0"
"wow, that is crap";"1"
"ok, this relates to the remove_items call in obj.py no longer being commented out. sysmeta should never be updated on a post of any kind";"0"
"blah = does not always work. in this case hostname= does not work and host= expects a host id # not a hostname.";"0"
"is the 'passhere useless";"0"
"it really ought to have a penalty for nested ternaries!";"0"
"this block should go after the 255/07 mms entry below.";"0"
"we don t ever implement any of these for real 1 2. if you want to axe some more code and i recommend it! , you can get rid of this line, the _server_routines_to_nop list, one bogus function from util/mach/child_port_server.cc, and five bogus functions from util/mach/notify_server.cc.";"0"
"get rid of bits_in_byte. you can do div_round_up add_out.pixelbits, 8 instead.";"0"
"oops, must have killed that by mistake";"0"
"trailing white spaces should be removed.";"0"
"0xff000000 is slightly more readable since the constantitis being compared to is the same as the one it is being or'd against in the else clause, though i am not sure we should bother to let the switch value take a 3-byte form. perhaps a stupid example, but what if we want analpha of 0";"0"
"ls -l keystone/common/sql/migrate_repo/__init__.py -rw-rw-r-- 1 perryse perryse 0 mar 9 11:11 keystone/common/sql/migrate_repo/__init__.py looks empty to me...... we do not wantitdeleted, we need the file so this directory is still a valid python import.";"0"
"i think it might be easier to just kill all children, something like trap ""kill -- -$$"" exit i think should work fine";"0"
"yeah, dumb assbug introduced in final cleanup. fixed all outstanding issues in cl:33676";"1"
"probably remove this bit about the working set of toolchain sources and download-toolchain-sources.sh since they are now irrelevant.";"0"
"can you remove this function i do not like i prefer that your remame the function has_action_plan_finished";"0"
"i'll go ahead and do this. reference code suckshere.";"1"
"if you are killing the upgrade, looks like you've got more code you could scrub";"0"
"you can remove useless extra space in the middle.";"0"
"the wording here is awkward. how about this: ""the caller is responsible for calling '_mock_offload_dir_calls ', if necessary. or just omit the assumptions, and state merely what _is_ mocked: ""this sets up mocks for stats reporting based on 'should_succeed', and then calls 'offload_dir ' once.";"0"
"hm. ugly but done";"1"
"we no longer depend on d2to1 when using pbr. this line should be removed.";"0"
"it gave up here and missed this trivial rename too. your explanation of there being too many files makes sense. stupid git. although i guess since the package changed, it could have been that too. if you do not understand what a package is, this file looks like it changed a lot!";"1"
"aha, stupid me : for some reason i thought this is printed for constructor's help and thatitdescribes constructor parameters.";"0"
"can we do this in init_host instead i hate these conditionals here.";"1"
"this method name does not look suggestive to me what about: _check_user_has_access_to_subtree";"0"
"why do not we use the hole-nan the pair type is a little ugly.";"1"
"note the new __lp64__ check. we do not want to fuck64-bit bit up like 32-bit was fucked";"1"
"agreed with paul that we should create a wrapper for the kill function, to replace all the kill call in this file, probably can do it in a separate cl. maybe something like this: bool killprocess int pid, bool* killed this will return true if signal is sent or the process is already killed, false otherwise. the caller canuse the killed to check if the process has already exited.";"0"
"you should reuse helper method on bottom.";"0"
"decorator looks ugly. better use mock.patch in code. also should add negative test";"1"
"yeah i feel that if we put the pid into the args we do not need these extra hops";"0"
"trailing whitespaces here need to be removed.";"0"
"yes. though i am not 100% convinced the new version behaves as it should because i have nothing to compare it with. it appears to work the same as the docs suggestitshould. %z - ""the timezone or name or abbreviation"" the %+ does look right from what i can tell stupid character issues aside .";"1"
"self.provider_subnets = net_common.deletablesubnet client, **s for s in subnets";"0"
"i am using std::function, perhaps this include is not needed for it removed.";"0"
"provide an overloaded constructor instead nulls are evil.";"1"
"this adds a single garbage collection list, cleaned up in the finally clause. unfortunately it adds an indent here, which makes the diff crappy";"1"
"yes, it is probably useless as i got rid of the shared_mem_acquire for this case in an earlier version and forgot to remove this.";"0"
"extra white space should be removed";"0"
"name looks a little ugly to me. i would create someting like clusterattributesplugin and used it, yaml has nothing to do with this at all.";"1"
"you could probably strip leading '#' but i do not care that much if you do not.";"0"
"how the helldoes this work also, if this does whatithink it does you should consider just reworking the methods already there.";"1"
"lets return a simple std::string here as pointed elsewhere.";"0"
"right, useless here.";"0"
"okay, i will remove the hardcoding internalurl.";"0"
"please stop the mocks with a cleanup action";"0"
"imo, this looks a little ugly : 'state != states.error' is the way nicer...";"1"
"we should remove post_deployment_end here";"0"
"not forever: the command will be killed at";"0"
"i want to ensure that none of the fields get dropped, for, e,g;, if resource_state got dropped accidentally in the code, there should be a failure.";"0"
"sorry, i did not make myself clear. i think you are adding qualifiers to make the conflicting symbols weak in cr50, correct can you alternatively tell the linker to hide *all* cr50 symbols and only expose explicitly whitelisted ones i.e. the fuzzer entry points that the fuzzer needs to call";"0"
"the thought was that a negative pid would always be invalid and it is , unfortunately an implementation detail made it so kill 2 would broadcast a signal to pgrp=12345 instead of pid=-12345. every once in a while but rarely there could indeed be a valid process with that pgrp.";"0"
"this is a hideous way of dealing with polymorphism.";"0"
"humm, ugly tabs";"1"
"so this whole check is bunk. i only have mocks here because i override the side_effect on #816 with one on #832. so this actually fails, properly, when i check build_req.destroy.called.";"0"
"it will be run undef haproxy";"0"
"ya, i do not like being a scheduler, lol; imho this sort of goes back to michaels blogs post question about why did not they just make this 'yield from' a comment or why did not python just adopt and embrace greenlet s and say have a interpreter option that would use greenthreads vs real-threads *transparently* since in the worst case u are placing 'yield from' on every line of code especially in i/o heavy applications and at that pointitmakes u wonder what the heck is going on with python as a language....";"0"
"it should be already killed in dependency.";"0"
"# convert defaultdict to dict for prettier yaml dumping.";"0"
"damni thought there were only two of them when i started. they must've been replicating when i was not looking.";"1"
"please add a consistent prefix like bootstage_ to each of these";"0"
"kill ceph-mds only if ceph is enabled with manila";"0"
"create_project and update_project below";"0"
"i'd like to have that here too, since input may have junk data after a valid cbor.";"0"
"i think this is fixing the wrong part, or not fixing anything. the failing line is: int i, ret = dma_error_code; this is assigning a dma_addr_t u64 to an int, which produces the warning. the value of ret is not even used, so the assignment should just be removed.";"0"
"responce is useless, you can remove the assignment.";"0"
"does this need to be localized if not and this is just a dummy sentinel value, does it need to be in english anyway";"0"
"it is should be flavorid, done.";"0"
"the const_cast is evil. can not you just look up the axnode from tree_ by id, and then modify that";"0"
"i have to agree mike, ""none"" will do. besides, we all know he's limited by technology. it is not like he's a mutant or something.";"0"
"it is really ugly having these hard-coded hex reg addresses w/no documentation as to what they are for anyone maintaining this code who is new to tegra . just sayin'.";"0"
"self.apic = apic_client.restclient cfg.conf.ml2_cisco_apic.apic_host, cfg.conf.ml2_cisco_apic.apic_port, cfg.conf.ml2_cisco_apic.apic_username cfg.conf.ml2_cisco_apic.apic_password";"0"
"use cros_build_lib_unittest.runcommandtestcase instead of cors_test_lib.testcase";"0"
"globals with destructors guess it does not matter for the dynamic linker";"0"
"please remove all the trialing white spaces";"0"
"there is crud for segment objects.";"0"
"nit: update_phase . the member should probably be renamed, too.";"0"
"i tried to get mgorny to always call 'die' regardless of eapi, but he is being dumb all the other args that escons passes come from the ebuild/user, so since we do not set them, it is not an issue for us.";"1"
"nit: throw a fake network_id or port_id in here since that is what our api would provide as noted above .";"0"
"you forgot the colon !";"0"
"should notitbe :classironic.common.boot_devices'";"0"
"this seems unnecessary. if you indeed want to force a gc, there should be a comment here as well.";"0"
"why does this and the reload later need to be done i do not actually understand how the __init__ is done so maybe it is a dumb question. test_seamicro.py imports this; is it a question of timing";"0"
"nerd snipe of trailing white space";"0"
"dockerctl shellpostgres su postgres -c ""pg_dumpall --clean"" > /root/postgres_backup_$date.sql";"0"
"i am all for not using silly refs. :";"0"
"you do not have to redefine this - just use updatesharemetadatarequestparameter in the wadl.";"0"
"can you just use sdkconstants.current_platform == sdkconstants.platform_windows";"0"
"these are not warnings, and possibly this whole subdirectory is pointless anyway. does lo run on aix on powerpc";"0"
"seems reasonable. should be !discovery_suspended !system_suspend_in_progress";"0"
"if your goal is to test that disconnect_volume was correctly called below, these 2 connection_infos should probably be mock sentinels. i.e. mock.sentinel.conn_info_vda and mock.sentinel.conn_info_vdd. that was you can assert mock.sentinel.conn_info_vda below. asserting none below is a weak test.";"0"
"show_port_body = self._test_add_remove_router_interface_with_port_id network, create_body remove l395 to 400";"0"
"grr, that sucksit is the small case that threw me, i did not even look to the start of the line to see classall classes should be shardcreate etc, not sure why they broke it here. please change <label> <shard> in your docstring to <board label> <shard hostname>";"1"
"this should be puppet-snmpd";"0"
"why are you removing a sirtref throwing and allocating an exception can trigger gc.";"0"
"this classhould be named vanillapluginscalingtest";"0"
"this also highlights a bug in the code... i'd removed identical block ranges in *any* operation, not just move. this would have caused big issues with say bsdiff... how lame.";"0"
"intellij now inlines the argument name. so, this now appears as ""isframeworkattr: false"". with the comment alongside, this appears as ""isframeworkattr: false /*isframeworkattr*/"" which does not look nice.";"0"
"can we extract this to a function all the exit points are die statements so should be fine.";"0"
"reconciliate with resourceresolver.";"0"
"i think you canuse the fileenumerator classin the base library for enumerating the pid files:";"0"
"indention off";"0"
"remove i18n.";"0"
"to be clear: i am not asking about mmap 2 . i know about that, and i could read the man page if i did not :- my question is what the elf specification says. are your mapped-in segments supposed to be rounded or is l304 just foolish consistency that should be deleted";"1"
"small dumb nit 2: do not need the global statement here.";"1"
"computers do suck";"1"
"extra space should be removed.";"0"
"dcheck file_name_1 != null ; dcheck file_name_2 != null ;";"0"
"we probably change this to os.kill to match the code as well.";"0"
"this function is *only* being called for a whole-chip erase. so i am pretty sure this is overkill, and it is not even what is expected. you should be trying to send the whole-chip erase opcode, not erasing individual sectors. among the overkill: you do not need to be passing an 'erase_info' struct. you are actually abusing the struct, as it should be set up only by the upper layers, never by a hw driver like this.";"0"
"useless. makes no sense.. removing it in next patch";"1"
"enable_security_gruop should be enable_security_group.";"0"
"seems long and annoying for a command line argument. --ipc";"0"
"maybe a dumb question but: why do not we just use processlauncher to spawn a single worker and reuse any additional services provided to us by service module, like that systemd notification";"0"
"i like 'slaves' and aleksey kasatkin too :";"0"
"i am gonna get rid of the venv jobs anyway. next commit coming.";"0"
"nit: forward declare app_list::internalapp instead.";"0"
"nit: end with a colon // content::urldatasource:";"0"
"dumb question ... where are these entry points currently loaded";"0"
"any reason to not just push this down into build-gdb.sh";"0"
"this is a damnnice test, +1";"1"
"i guess pep8/hacking is checking for the trailing period...thought we killed that.";"0"
"print is evil and wont passpep8";"1"
"this has been renamed assave_devices . done.";"0"
"this at least looks odd.. are you sure about the roles of the *reverse* iterators";"0"
"in the case where onchildwatchnotify has fired, you'd be calling g_spawn_close_pid twice on the same pid, i think. it is best to always reset manually managed members on destruction :-";"0"
"the privatekey.tostring method does not do anything stupid, does it";"1"
"of course, these 5 may be doing something useful on --mode jvm. it is possible they should stay but could live behind the same ""dalvik"" check as the one below. given the properties, i suspectitis* fine to remove them entirely.";"0"
"if ssh.rmvdisk fails, status should be error_deleting.";"0"
"this line passes the debug flag, the other line does not.";"0"
"style nit: put this in a new line, e.g. /** * the presenter... * ... */";"0"
"s/**configdrive**/**cloud-init**/";"0"
"we do not really care here. reportalertsdata is the one really cares.";"0"
"guest_id = {{ guest_id }} tenant_id = {{ tenant_id }}";"0"
"this is supposed to be a three-state flag. i use it for both detecting if we can stop checking for the host to schedule to and for storing default results. i stop checking in two cases: first when a wrong id is supplied or the host is found we can safely assume that there will not be any other hosts assosiated with specified volume if there are such hosts sth is probably very wrong and my small optimization will not do any more harm , we setitto false and return it. on the other hand a user may forget to supply or decide not to supply volume_id and in this case all hosts should passin this case i set filtering_result to true and use it as return value. if on the yet another hand it is set to none that means that we have a valid volume_id and are in process of filtering. i did it with two variables at first, with self.keep_searching and self.default_search_result, butthis approach appeared to be excessively verbose, so i desided to use a three-state flag instead.";"0"
"i do not think that is problematic. this information is in pyvmomi, but lots of things will have to change when me make that move. removing this list will be trivial. until then it is useful.";"0"
"the apn_types_key should be renamed data_apn_type_key";"0"
"so stupid.... i forgot to do the most important thing.";"0"
"sure. i'd prefer something a little more descriptive than just make.sh. any preferences make_gpu_tools.sh make_autobuild.sh";"0"
"why the move netaddr is 3party.";"0"
"drop the ' die' part as newer eapi handles this for you";"0"
"no because if no fw is running, hid enumeration will fail so we will not be able to test vid/pid. in this conditions we are a raw i2c slave, so i guess this is the only way";"0"
"i would agree that a log.warning should be thrown here.";"0"
"optional: you dn't write this, but i'd write ... const entry = this.ui_.directorytree.selecteditem.entry null;";"0"
"this caused compile-time failures in various linux-derived programs such as perf.";"0"
"done split off into";"0"
"if you want to do this in an automated fashion, you should post a task instead of calling this directly. in the real implementation, this makes an async d-bus call to powerd.";"0"
"i do not think readers are going to know if it is domain-specific drivers in general that is new and experimental or just storing domain-specific configs in sql.";"0"
"you do not need fileutils here. all those fonctions are wrapped in rake/lib/rake/file_utils_ext";"0"
"i did not want to abuse ""public"". these are internal turds that we want to remove. butthey have to be visible for now because frameworks code is using them.";"0"
"makes me think my previous question is in fact a dumb question.";"0"
"i guess this comment is misleading in shadowframe classin stack.h: """""" // this is a two-part array: // - 0..number_of_vregs holds the raw virtual registers, and each element here is always 4 // bytes. // - number_of_vregs..number_of_vregs*2 holds only reference registers. each element here is // ptr-sized. // in other words when a primitive is stored in vx, the second reference part of the array will // be null. when a reference is stored in vx, the second reference part of the array will be a // copy of vx. uint32_t vregs_ 0 ; """"""";"0"
"this whole chunk is a lot of new code. i do not see where it is tested at all. in fact, the only test adds in this patch are a few mocks to make some current tests still pass";"0"
"+1 it should be ""web content"", i have the same mental association as dcheng";"0"
"why not return the set arrays are ugly.";"1"
"this is another instance of uneducated programmers calling any kind of polymorphism ""overloading"", please translate it to ""override""";"1"
"minor nit: should be env=filtermatch.get_environment userargs, env=env";"0"
"probably because i am stupid :-";"0"
"really this seems kind of ugly";"1"
"i added comments on this issue previously. i made changes to make sure the notbuild and aborted status are not supported thus not changing the old behavior.";"0"
"apparently not, i guess due to adl, but added it anyway for clarity and build robustness adl sucks.";"1"
"hmm fixed_ips = fixed_ips = ...";"0"
"first line of docstring should end in a period";"0"
"not thatitmatters, but you need a space at the end here duplicated "" .";"0"
"doh, silly docstrings.";"0"
"can you clarify who can call this also maybe this is a dumb question but what is to stop a malicious origin just getting the auth credentials for someone else";"0"
"will this trash the sparseness it is an important step, butthere are other ways for us to go aboutitthis is good because it is simple.";"0"
"use cros_build_lib.die for this.";"0"
"this function is getting really ugly. can you rewrite it to clean up the error handling and the above bug";"0"
"hi marios, so far this patch is just a test to check whether this can mitigate lock wait timeouts. the aim of this patch is to validate the hypothesis regarding these lock wait timeout failures. honestly, i've never been a fan of this approach and i would push for this patch to be merged only if we are unable to do anything better.";"0"
"pedant bereaucracy: do you have a bug/blueprint for this patch";"0"
"this is the only call site where the cached vm_ref might not be the right one to use... eliminate a possible bug and just passin the rescue_vm_ref as a parameter!";"0"
"need to remove the white space around execute = putils.execute";"0"
"probably worth pointing out that sample_type is a *bitmask*.";"0"
"wait_interval *= cfg.conf.libreswan.shutdown_check_back_off";"0"
"this test will passassoon as this promise resolves, which is when the fetch finishes. if these reports were observable to scripts, would they be guaranteed to be surfaced before the fetch finishes timeouts suckbut maybe a 1-second t.step_timeout here you'll also have to convert this to an async_test to make it work i am afraid.";"1"
"the following steps are a procedure and should be numbered.";"0"
"this line is probably leftover. if so, should be killed.";"0"
"equal_to<oustring> has to be removed here, too";"0"
"i think you may be able to get rid of apn_type_key";"0"
"i recently added gating test section at line 175. please delete it and move test fuel agent section here.";"0"
"is not decimal / 2000.0 already a float if it is not, then you should use float decimal / 2000.0.";"0"
"oh, that reminds me... you really do not need to prefix all of these with ""coreboot:"". that is implied in this repository unless you explicitly say ""libpayload:"" . also, please put a space after a colon.";"0"
"recommend pcre_options = pcre_anchored";"0"
"you could have: mock_fabric_data = self._vmutils._conn_msps.mspsfabricdata.new.return_value fsk = self._vmutils._conn_msps.msps_fsk.new.return_value";"0"
"that should not be a problem because this is just a dummy read.";"0"
"it seems the above lines should be removed.";"0"
"from commit message: ""...it also updates grenade.sh and check-sanity to only dump databases that exist...""";"0"
"we hit the use-after-free on line 152 because we are using a non-null render_frame_host . while that case has been fixed, we are going to hit the same uaf on this line now...";"0"
"darn it! tabs.";"1"
"i am not crazy about this error being here because this is parseroot_device_hints , not eg find_device , but i guess it can be cleaned up later.";"0"
"maybe httpbadrequest should be raised instead of apperror";"0"
"i do not believe you need to mock cinder.db.snapshot_metadata_get, since you already have the snapshot_metadata in your dict here.";"0"
"what about a helper method to initialize view that takes in view, visibility and callback instead this map seems a little overkill to me.";"0"
"i am strongly against copy pasting an entire algorithm ...";"0"
"you are right. we want to restart dead child in any case. and the if state is superfluous, i'll remove it.";"0"
"i believe the dump can fail if there is another dump with the same level of details in progress. it is a separate thing to fix, but maybe when there are multiple dump requests for the same level of details, all requesters should get the result";"0"
"maybe the value for this should be maintained from executing env if it exists.";"0"
"this noqa is redundant";"0"
"enable_security_gruop should be enable_security_group";"0"
"i am not sure using base::strcasecmp and such is useful to us. the point is to provide portability to stupid non-posix platforms like windows, and we certainly do not work on non-posix already really, non-linux .";"0"
"these are useless variables you can simply delete";"0"
"is it not possible to get 'none' back here and tramp instead of raise error";"0"
"how does stderr_output get the value should there be something like, stderr_outpu = deferred_step_result.get_stderr/stdout";"0"
"this is cros_build_lib.commandresult";"0"
"this newline should be removed";"0"
"agreed for the logical change, but imho we should not document things that are not supported, or we should mark it assuckwhat about putting ' ignored ' at the end or maybe just put 'not implemented' as doc like you did for the others, even if we do not mark it implemented=false in this branch";"1"
"most australian dummy var name ever!";"1"
"i think this is a case, i vote to fix it in this patch rather file bug and fix it separately. i know we have this damnkpi, but let us focus on quality instead.";"1"
"this bunch of mocks is really suspicios, makes me feel like nothing is really tested though i know it is, butthat is definitely not a good pattern to use. i'll add maru and assaf as they have beter vision on this";"0"
"i'd prefer we used the stupid atomic_uint_least32_t here so we canuse explicitly-sized types in the rest of the code. allowing 1970s nonsense like ""unsigned int"" to leak back into the code seems like a mistake, even if the ill-considered standard tries to move us in that direction.";"1"
"if dx * dx + dy * dy > wiggle_max_dist_.val_ * wiggle_max_dist_.val_";"0"
"hmm as far as i can see, you never reset requests.request, which, imo, is a bad thing. a better way to accomplish what you want is by using mock.patch in a context manager: mock_request = mock.mock mock_request.return_value = requests.response mock_request.return_value.status_code = 200 mock_request.return_value.headers = { 'x-server-management-url': 'blah.com', 'x-auth-token': 'blah', } with mock.patch 'requests.request', mock_request : instance.authenticate mock_request.assert_called_once_with mock.any, mock.any, timeout=2, headers=mock.any, verify=mock.any, config=mock.any this will isolate the patch on requests.request to just the call to instance.authenticate . i will also frequently use the decorator form of mock.patch in this instance, e.g., something like: mock.patch 'requests.request', return_value=requests.response def test_client_with_timeout self, mock_request : mock_request.return_value.status_code = 200 mock_request.return_value.headers = { } instance.authenticate mock_request.assert_called_once_with";"0"
"this is minor nitpick. ugly ' ' can be avoided by using paren like from ... import classnotfound, notfound, ...";"1"
"good point, i'll whip something up!";"0"
"trailing whitespace should be removed.";"0"
"nit: this is decryption middleware !";"0"
"it is kinda ugly to duplicate everything from **kwargs and put that into post_body. we should passalmost directly 'kwargs' to 'json.dumps'.";"1"
"kill whitespace";"0"
"should this be "".sh""";"0"
"__nr_ and sys_ are the two common prefixes for the userspace constants for system calls. i forget which is sysv and which is the other one. so you need to grep your linux kernel tree for clone or read ""man 2 clone"" or whatever. what is happening here is that other than 'flags' and 'fn' being the wrong way round, __bionic_clone's arguments are the same as the kernel's syscall. that is handled in the next block. up here, we are stashing the two arguments that __bionic_clone_entry will need later. i'd like to reorder to remove the need for the later block, but some retard made this public abi, so i worry i'd break something. i'd also like to kill __pthread_clone and just use this more general form, but since we probably have to keep this for abi compatibility anyway... it is worth thinking about simplifying all this for the 64-bit architectures though.";"0"
"sorry to say this, but slack api design is crapeven for invalid auth, they return 200 ok, butthe response body has error message. so i need to parseit to find out the error";"1"
"using 'os.path' operations on urls is bad form: it assumes that the path separator is '/', which is the sort of monkey business that 'os.path'exists to prevent. put another way: a url is _not_ a filesystem path, and can not reliably be manipulated assuch.";"0"
"useless too.";"0"
"maybe introduce another bool into oatfilemanager that gets toggled, and have dchecks";"0"
"so this is an odd comment, butithink its easier to read if you add a colon after these lines, then include the above example after that. i was reading this all up side down by default and it was really confusing.";"0"
"''local_settings.py''";"0"
"i think we should just kill display_name here all together as it is pretty useless.";"0"
"oh crapi actually duplicated directory creation, it is already done in solar.yaml";"1"
"this docstring needs to be moved under the classerverassociatedstate object line below...";"0"
"here is still bug with self._cluster should be self._cluster_name";"0"
"the ordering of these mocks does not match the function call, also the functions should be mocked from where they are declared, it should be: mock.patch 'sahara.utils.rh_helper._get_os_version' mock.patch 'sahara.utils.ssh_remote._get_os_distrib' mock.patch 'sahara.utils.ssh_remote._execute_command'";"0"
"ok, butthe step does not say that this needs to be done on the node running the l3-agent.";"0"
"you are going to have to rebase. i think this whole method gets deleted...";"0"
"damnit. should be if not none, thanks";"1"
"you should use puppet :modulepath /pacemaker/lib/puppet/provider/pacemaker_common.rb if you want to refer to it.";"0"
"this _attach_interface_not_found_case is almost the same as the one of v2.1 api test, so how about defining not_found_case_exception = exc.httpnotfound in interfaceattachtestsv21 classand defining not_found_case_exception = exc.httpbadrequest in interfaceattachtestsv2 classand replacing - self.assertraises exc.httpbadrequest, + self.assertraises self.not_found_case_exception, in _attach_interface_not_found_case of interfaceattachtestsv21";"0"
"self.scheduled_task = scheduled_task";"0"
"derp... last minute rename fail on my part.";"0"
"> > hard-coding board names is a bad idea and from what i know, discourage by the infra team. > > see the below from assign_stable_images.py: > > > > # n.b. hardcoded board names are evil!!! this blacklist uses hardcoded > > # names because it is meant to define a list of legacies that will shrivel > > # and die over time. > > # > > # do not add to this list. if there is a new use case that requires > > # extending the blacklist concept, you should find a maintainable > > # solution that deletes this code. > > i am not sure if this necessarily applies to the tests as well. debayanalready added a message stating the need for skipping the test on these boards and we can change that to a todo predicated on the fix for the associated bug. > > adding +dshi for his thoughts on skipping tests for certain boards due to board specific issues. here are couple other examples of skipping tests for certain boards / builds...";"0"
"ditto as in test_chassis.py";"0"
"these are not the same thing. afaict, this is introducing a second level of approval for blueprints. first you have to get the spec approved at which point you can start working on it. then you have to wait for a runway slot before reviewers are permitted to approve it. if two reviewers found time to look at a proposed patch have +2d it, the idea that we should block merge due to not having a runway slot is just stupid.";"0"
"silly me! thanks, abhishek!";"0"
"damni forgot about that. i am gonna fix and chump.";"1"
"i am fine pulling this bit out.. and moving it over to a different bug.. just shoot me the new bug id.";"0"
"so, you are saying that part of this change is to kill the party is that a good thing :";"0"
"gross";"0"
"i am not quite sure what are you doing here.. you are adding to session object that is already added. and then you are deleting it! by the way i wrote a manual about this cases, and usage of soft_delete. model.soft_delete will produce n queries for each row, and if you use query.soft_delete it will produce only 1 query. so this solution has terrible performance. and i think it contains bugs.";"0"
"oh, i see what you mean. yes, i think that is correct, onchildprocessdied will eventually be called when the other client unbind and i guess we get killed by the oom. since cplh keeps it bound so when it does a restartitdoes not reuse it . updated the comments.";"0"
"no one's looking at this instr->state, since you manufactured this struct yourself. just kill everything here having to do with struct erase_info.";"0"
"just make these const values rather than nasty preprocessor definitions.";"1"
"i will suggest to add networking_huawei.drivers.dummy.config.config.huawei_dummy_driver_opts";"0"
"oh noes! i was going to remove this before uploading! my life is ruined!";"0"
"such debug symbols should be removed.";"0"
"damnlong name... shortening would be nice.";"1"
"remove initcap";"0"
"sh files are not binaries. seems weird to put scripts into /system/bin";"0"
"wouldn'titbe better to keep this in a hiera.sh";"0"
"i prefer to remove these all constants at all...";"0"
"remove white spaces here and elsehwere";"0"
"do we really should wait 15 min in worst case";"0"
"ton: sorry, my shitim mistook your name..";"1"
"explain why, because this is ""obviously"" stupid :-";"1"
"with this change this todo is redundant and therefore should be removed.";"0"
"remove cancel_content and set cancel_mock.return_value = dict";"0"
"we probably want to have check jni give an abort, otherwise we could just sigsegv or something.";"0"
"klass datetime";"0"
"crapthanks.";"1"
"why not just use the ids here names do not need to be unique in neutron";"0"
"ah, that is one part of the console protocol that i should have documented better. in case of success, the answer should always be ""ok r n"", and nothing more. the only exception is for the ""kill"" command which kills the emulator. i would prefer if you keep it that way. if you need to send information back, dump it with lines ending with "" r n"", then dump ""ok r n""";"0"
"yes. the problem is really about the 'params' damnthe name . how are we viewing it. are they parameters to the 'cluster_check' operation, or they are parameters to the 'register_cluster' operation. if they are for the cluster_check operation, we should leave them to that operation to find out the contents inside. if they are parameters to the 'register_cluster' function, we can leave it as '**params' for sure. hope you finally get my point. and, very sorry for blocking this for a long time.";"1"
"yeah, this will not work with absolute out_dirs, $ abspath $ $ v should be used instead";"0"
"you mean just prepend to the head like, add_search_path a add_search_path b add_search_path c result list: head -> c -> b -> a";"0"
"awful function name lol";"1"
"should this go outside of the try i imagine the attributeerror would be thrown from l360.";"0"
"err, umm, because our code sucksor some other reason parallel neutron-servers is an important part of scaling.";"1"
"i really dislike this... with success stuff... can we somehow refactor a bit this code, to make it cleaner because this solution looks a bit dirty for me...";"1"
"maxcol + 1 == maxcolcount";"0"
"please do not use plugin_meta to store parameters to methods...this is intended as long-term persistence of plugin-specific data, such as the partnerorderid stored above. i think it would be cleaner for the _ca_modify_order function to take a is_cancel_needed boolean, defaulting to false. then the _ca_cancel_order function can be removed.";"0"
"should be id=item_id instead of image_id=item_id";"0"
"this might be a dumb question but where can the user find the trove public key";"0"
"the first one is for failures during load/prelink, this one for spinfo_link_image failures.";"0"
"dammit - yes. will fix.";"1"
"once gchar and g_strcmp0 are removed, glib.h is not needed";"0"
"i hate this name. can we not use this it is not a size_t anything, it is a uint32_t.";"0"
"what, you do not think setup is long enough yet :p";"0"
"ugh - good catch on an ugly bug.";"1"
"that is honestly really crapwhy are not we making sure that the requestspec correctly has the good flavor root_gb attribute i was about to remove that legacy_build_request_spec method, tbh.";"1"
"oh, stupid me! using too many mocks does let you down sometimes... thanks, imre!";"0"
"i wonder if we should also kill the v2-upload since it is broken anyway... imho it should instead be replaced with a go-version instead.";"0"
"consider moving dhcp_properties out of properties. i am a little wary of adding dynamic allocation to a struct's ctor, since i tend of think of structs as ""dumb"". and, with dhcpproperties itself being a composition of multiple fields, i feel like the two levels of nesting is more confusing than helpful.";"0"
"useless this is already done by the amqpdriver.amqpdriverbase base class";"0"
"to go with the restithink these should be access_ip*";"0"
"i still say this requirement sucksand do not see any reason for it. that is ok though, that'll be my first patch to multi-attach code ;";"1"
"none of us would care if you reformatted all of fastboot 2-space. most of us would be pleased, in fact. we just do not have the ballspersonally.";"1"
"i was wondering, why do not we just make these three separate arguments then in setup , write something like: usbpd_info = self.args.usbpd_port, self.args.usbpd_port_prompt, self.args.min_millivolt if any usbpd_info and not all usbpd_info : self.fail 'if checking port voltage, please include all of: usbpd_port, usbpd_port_prompt, min_millivolt'";"0"
"i am not sure about this. it is probably not a good idea to make germd willing to kill any pid that gets sent to it, even if it is not something that the current process started.";"0"
"i suck";"1"
"return guaranteed only first match will be executed";"0"
"kill comment";"0"
"you'll probably want python-novaclient there too.";"0"
"well, you have -0x800000000 = 0x80000000";"0"
"the backslash is unnecessary.";"0"
"this suckswe should not need to do this. could we templatized the users like codegenerator of label instead";"1"
"seems like 'rm -f touch' could be 'truncate -s 0'";"0"
"the comment seems incorrect now. is this a concern";"0"
"nit: then just have this be results_url=results_url,";"0"
"i kept the test, expecting a dcheck to be hit. hope you like it.";"0"
"user data should be executed with privileged rights, should not need sudo here";"0"
"no go on dropping wtftried and died.";"1"
"this should still be a refreshonly otherwise you will migrate on every puppet run iirc.";"0"
"we want to kill use=cros_embedded and avoid dumping into the big bucket with new code";"0"
"alphabetized dbus client initialization.";"0"
"i think this param should be removed here";"0"
"pretty vague. is this a host a wificlient similarly below.";"0"
"stupid nit/opinion: if you had to respin i'd add a blank line here for extra readibility";"0"
"next time i'd cut this nonsense of avoiding an import..";"1"
"damngood idea! done.";"1"
"personally, i am not crazy about combining the ""get"" with the ""create"". it is trying to do too much for the dev, imo, and duplicates what the ""get"" and ""get_all"" methods are supposed to do. i'd rather the dev try the ""get"", see it does not exist, then call ""create"" themselves. but maybe i am stupid.";"0"
"you are not actually using this ret value here or below. you can collapse this into just if pipe ... ... .";"0"
"dammit python... a compiled language wouldn't have allowed this thx";"1"
"i just created a one-line function that'll get used 3 times, what the hell. btw, i think we are starting to over do it in this area. it is a damned shellscript after all.";"1"
"if you never care about the binary being in the list, you canuse -f to only output libraries: -f'%n#f' also, you could speed this up by executing 'scanelf' on all your files at once ... but you are probably only copying a handful of elfs at once, so it is not that big of a deal.";"0"
"nit: put this elsewhere in the file, like maybe above canswitchime , so the switch-ime tests are still next to each other";"0"
"nit: kill this comment";"0"
"general robustness nit bit of style in particular : do not assign to the attribute intermediate values. you mangle the hellout of boto_file throughout the following values- assign once the value hasstabilized. the reasons for this style do not strictly apply here, butthe style should be used regardless since it is good form; basically, if ever dealing w/ cpy initializers, threading, etc, take your pick, having intermediate assignment like this means you've got varying state that can bite you in the ass worse, if the init method goes and invokes methods to finish initialization, if an intermediate value is stashed on the instance, the method canuse that value w/out you getting an attributeerror; etc, thus assign once stable. upshot, the form i mentioned is safer, and it is also marginally faster the latter is true, but so small it is more a joke than a valid reason exempting extreme cases ;";"1"
"this newline should be removed to comply with hacking rules.";"0"
"i hate self.ports. why does not setup_agent_and_ports return the ports it sets up";"1"
"please add comments why we are creating one more 'retrieve_auth_url' with magic inside. it is not obvious from the code.";"0"
"you are right -- that was ugly. i think this is cleaner now.";"1"
"more rubbish";"1"
"should this step _add_keepalived_notifiers also be hold off until ex_gw added for dvr ri.keepalived_manager is initialized by process_ha_router_added above.";"0"
"this is annoying. how about just locking the cha lock eagerly and collecting the dead pointers when iterating over th emethod_code_map_";"1"
"gzip should be configurable";"0"
"grr, this is wrong, and it is because of the stupid namespace package.";"0"
"add a kimplicitnullcheck = false in code_generator_x86_64.h, and dcheck it here.";"0"
"again, we should define config_coderam_arch for mec1322. if it is crashing for some reason then let us investigate that, not add this hack.";"0"
"sorry pavlin, i have to be pedantic and tell you that this is not a new idiom :p. otherwise, done.";"0"
"this really needs to be extracted into a common method. we will suckat maintaining the api if we have this level of duplication. maybe a get_args ... method that is able to get that arguments for the live_migrate call would do the trick";"1"
"another mellanox issue so probably does not belong here.";"0"
"os_service_token should be ok_token";"0"
"remove white spaces, please";"0"
"ryan: please set yourself as author. it is your patch. will figure out what stupidity i am doing. sorry for this ;";"0"
"job_labels = job_labels.lstrip ','";"0"
"you should -f ${fname} instead";"0"
"it'd be nice to deprecate them, so we can get ride of them in the future vs supportitforever";"0"
"tried that. the _ and _le methods seem pretty stupid. they cannot deal with variables.";"1"
"dumb question. do not we have these meters from the rate of change transformers in case of libvirt too";"0"
"sorry...again...i mean test self.host_manager.default_filters";"0"
"we should not need to add two create methods. preferably at most one more.";"0"
"nit: parens are unnecessary and ugly but consistent with other methods in this file. so, no big deal.";"1"
"damnyou spotted that one...fixed.";"1"
"this should thrown the webdriverexception with the string, like you did in the previous cl.";"0"
"the cl does not delete it earlier, making it a member means it is deleted at end of urlloaderfactoryimpltest scope and it being the first member means it is deleted last by c++ rules. this is usually the paradigm for testbrowserthreadbundle make it the first member so it outlives everything , explicitly managing it via unique_ptr here merely resulted in it being destroyed before resourcemessagefilter which tries to post tasks in its tear down .";"0"
"i think it is better that pretty_tox.sh includes 'deleting .pyc files'.";"0"
"does pep8 can passit should be body = {'os-force_detach': {}}";"0"
"this needs to be consistent with the border drawing code i.e. fill not stroke . to getitto paint the difference between two roundrects, you can call something like gfx::scopedcanvassave canvas ; skrrect outer_rect = skrrect::makerectxy gfx::recttoskrect local_bounds , skrrect inner_rect = outer_rect; inner_rect.inset 1, 1 ; sk_canvas ->cliprrect inner, skclipop::kintersect, true ; canvassk_canvas ->drawrrect outer_rect, flags ; note this does not need any of these +0.5 hacks. butthis is not taking into account scale factor -- it will draw a focus borer of 1 dip, not 1 pixel. that might be incorrect. i am sorta hoping we can keep this drawing logic all in a general purpose routine. like paintomniboxrect canvasskcolor inner, skcolor border, float radius, gfx:rect bounds { // undo scale factor gfx::scopedcanvassave canvas ; skrrect outer_rect = skrrect::makerectxy gfx::recttoskrect local_bounds.scale xx , radius*xx, radius*xx ; skrrect inner_rect = outer_rect; inner_rect.inset 1, 1 ; // make paint flags set_color outer ; if inner == transparent { // focus ring: clip out inner sk_canvas ->cliprrect inner, skclipop::kintersect, true ; } canvassk_canvas ->drawrrect outer_rect, flags ; if inner == transparent return; set_color inner canvassk_canvas ->drawrrect inner_rect, flags ;";"0"
"you commented these out do not submit dead code please.";"0"
"kill these in a finally block just to be safe. less cycles to traceback especially the better.";"0"
"lol. get off my omnibox, you kids!";"1"
"why do not you want to expect both keyerror and attributeerror";"0"
"who deletes this objectithink you need to make renderthreadimpl hold a std::unique_ptr<> to the filter.";"0"
"if you have image_location 1 then you do not need image_location 1 because it will be included there.";"0"
"this should be a std::unique_ptr<mockfeatureengagementtracker>";"0"
"i actually think this space removal might do badness. also, might be nice to collapse this giant or into a regex";"0"
"darn. oh well, let us abandon this patch and maybe use your later suggestion proto, evt, etc instead to make it more obvious to the reader.";"1"
"is this a symlink do not have that device to check. if it is a symlink, we need the real pathname here or an explicit restorecon in the init.*.rc file.";"0"
"someday we are going to regret having these hardcoded everywhere. not that there is a better way to do it here.";"0"
"this will be called for every source frame. we might need to worry about sqrt, but i'd need to profile. i'll try comparing performance to versions that stub out sqrt. it is not much of an issue on my desktop, where the *total* cost to record the 3 latency derived metrics is 3us. it is >10us on my pixel 1 though. that includes re-calculating a sqrt from n frames ago to subtract from the windowedanalyzer's accumulator. so there is 6 sqrts total per source frame 3 metrics * 2 sqrts . all the sqrts currently use double precision, but i am pretty sure single precision would be good enough. in general, after getting the basics in place, i'd like to switch the double precision math over to single precision where we can. if we really need to, we could use a sqrt approximation. as long as the approximation is monotonic, it should be good at tracking relative performance deltas even if the absolute value might be off a bit. if we really really need to, we could also remove smr. rms only needs to call sqrt on a reporting event much less often and not when a sample is added.";"0"
"1. i remember i have removed the second check, let me check if i forgot to submit. 2. there is an watchdog abort issue when doing on/off stress test. and the function call nfa_p2pderegister also asked to do it. /******************************************************************************* ** ** function nfa_p2pderegister ** ** description this function is called to stop listening to a sap asserver ** or stop client service on llcp. ** ** note: if this function is called to de-register a server and rf discovery ** is started, nfa_stoprfdiscovery /nfa_rf_discovery_stopped_evt ** should happen before calling this function ** ** returns nfa_status_ok if successfully initiated ** nfa_status_bad_handle if handle is not valid ** nfa_status_failed otherwise ** *******************************************************************************/ tnfa_status nfa_p2pderegister tnfa_handle handle";"0"
"walter - should os-brick blow up if you try to disconnect butthere are still multiple connections - or does notitknow that information, because it is dumb";"0"
"yes you are clearly right... this is unsigned... and i missed the warning... because i am an idiot and did not have --enable-werror now, the part that confuse me... sql_column_notfound is defined somewhere to be 0xffff and used _only_ here afaict... i try unsuccessfully apparently to follow the code and concluded that that thing was populated using ultimately findcolumn . some of which return -1, which is the only value that seems to be possibly put there that _could_ match 0xffff module some sign extension by the compiler when promoting 0xffff";"0"
"i do not actually need all this junk...";"1"
"should be self.assertisnone poo.fast_cache_enabled .";"0"
"force wasset to true because there was no reason for initialize to go and do it is mildly whacked ""are we already initialized"" check.";"0"
"jamie, the dirty bit dirty_bit_viewport_state is a private member of statemanager11, so i put the check in statemanager11. how do you think";"0"
"nasty tab here";"1"
"nit: die ""impossible bus width!"" ;";"0"
"... register_input_dev: input_dev_create enable_irq handle_messages free_cfg_copy: free cfg_copy err_alloc_copy: release_fw";"0"
"for anything that is supposed to be a row please use scrow. you even introduced an overflow here assal_uint1 is never big enough for rows. scrow is a sal_int32.";"0"
"old_inst_type.memory_mb";"0"
"not related to your change: ...what a terrible name. this is not a constant...";"0"
"why changing the behavior here and below we used to abort with a check if we couldn't read the vreg. and should not we log warning we couldn't access this vreg it is useful for debugging at least, maybe by changing a kenablexx to true to enable it.";"0"
"might be worth an assert here that extra_bytes is evenly divisible by _to_copy";"0"
"huge nit: ""tast-tests: make video.webrtccamera informational temporarily.""";"0"
"fk";"0"
"sure, notfound would suffice. i changed in tests but missed here.";"0"
"remove this useless block";"0"
"this return is useless. remove it.";"0"
"you mean testlbaasservice.test_main it seems like an example of useless tests...";"0"
"i think you did your math wrong .. i think its bd_value_size - 2 * char_bit - count. i honestly do not know why we did it thus butthis is something i did not change :";"0"
"can this be removed in favor of adding a autorequire in the type description like here 1 1";"0"
"should probably be destroyhardwareresources mview instead";"0"
"policy_id should be policy_name";"0"
"this is useless anymore i thought.";"0"
"damnfixed";"1"
"you should be logging the warning here. the raised exception answers for itself.";"0"
"should be _retry=_marker";"0"
"if you are going to get all fancy and use std::regex which is fine you might want to use a raw string literal";"0"
"there is also a possible attack where an attacker sends requests with a bunch of invalid uuid tokens. these get stored in memcache.";"0"
"nit: remove the white space";"0"
"as far as i remember, the '{}' does not work in python 2.6. is it intended btw, why format at all why just not to use six.text_type getattr db_object, db_id_name .";"0"
"it might be time to rename this to ""pid"", then ""enter_pid"" is not inconsistent with ""pids"".";"0"
"use checkpoint_id instead of transaction_id";"0"
"oh so dirty hack lol= btw this could be done in one line of code deploy_id = args f.func_conde.co_varnames.index ""deploy_id"" butithink thatitwill be even cleaner if you just make this: kwargs.setdefault ""deploy_id"", _default_deployment_id f *args, **kwargs";"0"
"yes, it should be killed if it is still around. i'll add this to log message.";"0"
"is this to fool coreboot into thinking that the nor flash controller is on bus 9 maybe we should add a comment to explain what this is.";"0"
"/** * javadoc style for comments outside of methods. */";"0"
"just checking.. previously, all of this stuff logged at the debug level in the gate right i am concerned that we are going to loose some visibility by doing this. with this patch it is impossible for a user to change the logging level for these other modules as there now all hard coded to warn right i totally understand the motivation for wanting to remove useless logging. just wanted to raise this point though before we do this in neutron as well. i guess nova has been doing it for a while and it hasn't bitten them yet. thoughts";"0"
"this is useless check the code below already raise valueerror in that case.";"0"
"should this be a string, some int or uuid";"0"
"why do not you use **params instead of user_id";"0"
"using math.pow here, then right below you use **. i do not care either way, butitshould be consistent.";"0"
"use $syslog_log_facility_savanna, cuz $syslog_log_facility is undef";"0"
"can not we run q-bgp-agt independently without the server part think of multi-node scenario where one want to run q-bgp-agt on the compute node instead of the network node.. i might sound stupid but just wanted to express my thoughts..";"0"
"your _parseurl method's doc confuse me...";"0"
"putting jthis.getname in an lv and using it here would make more sense to me.";"0"
"mybutton.seticon hasmultipleitems platformicons.combobox_arrow_icon : null ;";"0"
"this is not posix; the exact ""we are bash"" moment i know came after you made me split the bash debug crapinto a separate file. for reference, take a look at load_environmnet_whitelist- note the array, and that that was in place all the way back to 08/23/12- specifically in the mainline code, not buried in a function.";"1"
"not more, than another adjustements";"0"
"this should probably go back to isbroken as its no longer just an accessor.";"0"
"useless, please remove it for now.";"0"
"boor => boot";"0"
"damnguess i am late to the party :";"1"
"it should be portpair..destroy then a method name starts with a dot";"0"
"please get rid of blank line.";"0"
"this is rather uninformative - perhaps it would be more useful if you output the value of ""amod"" or remove it completely.";"0"
"per dan's comment below... is this what you were planning else: l3_lib = kwargs 'l3_lib'";"0"
"you do not need add this dependency and the followings. just add to its own black: $ local_built_module : $ breakpad_output";"0"
"label these, e.g. nullptr /* salt */, 0 /* salt_len */";"0"
"same here, use cfg.conf.set_override.";"0"
"oh, cffi.... how i loath thee.";"0"
"you should use classfakeimage in fake.py.";"0"
"i think you dont need to add this extra line, i think you can do psiclassnewclass new writecommandaction... { }.execute .getresultobject ;";"0"
"did we ever fix those we we do not need to punch a bunch of seccomp holes to use them";"0"
"hmm, i'd prefer not having such ""checking hardware"" trick inside goofy itself - goofy should be independent. can we check some flag / files in goofy, and check shift_keys outside goofy ex, the script to launch ui / factory";"0"
"what is the difference between this and: fk 'constrained_columns' == columns";"0"
"thanks for you commentitis really stupid misstake. part of old code. sorry aboutit.";"0"
"remove stackforge here";"0"
"rtt * request count * k :";"0"
"probably nothing....i started by copying a different autotest.";"0"
"damn. i forgot to remove it...";"1"
"is any of them could be null if true annotate them nullable";"0"
"this is pretty ugly hack; this function is supposed to return the type of the adapter which has the vmdk and you are effectively changing the contract here";"1"
"please, choose services_reconfiguration_thread_2, cause thread_1 duration is more than 7+ hours and all job could be aborted";"0"
"whitespace snuck in... the bastards:";"1"
"any reason we are not using drm_ioctl_virtgpu_map defined in <virtgpu_drm.h> do we get lucky with the dumb map because in the host";"0"
"the colon makes this invalid yaml. you can either quote the whole thing or do something like other: - the blah blah: manage max_workers = 6";"0"
"i meant that ""vpx_util"" should be after ""vpx_ports"" below.";"0"
"i guess because we are not calling auth_plugin.get_token anymore...";"0"
"nit: rubbish character -> useless characters at the front of the json ...";"1"
"this should be string mabis";"0"
"agree, reported for this";"0"
"say elementlimit is -4 at this point and the next thing that happens is dividing by a bindingstride of 8. -4/8 == 0";"0"
"pronouns are killing me - death by a thousand needles.";"0"
"delete openstack baremetal";"0"
"umm..looks slightly ugly to use a '+'. maybe string substituting with another %s would be better not sure..";"1"
"why does not this metavar have <> i noticed neutron-net-id below also does not have <>.";"0"
"add a comment that this is meant to be replaced.";"0"
"this is a backport. if it should be changed, then in master first. nevertheless, l190 will remove it anyways.";"0"
"conf.database.build_timeout does not seem to existithink this is causing some of your jenkins failures.";"0"
"oh crapmy bad. could you change tegra124/gpio.h so that ""pinmux.h"" is the first include of the file before tegra/gpio.h , that should do the trick.";"1"
"brain fart i have no idea why i did this.";"1"
"/* libqmidev_dev_h */";"0"
"afaic, this does not make sense";"0"
"global context kinda sucksfor following code flow, but i know we rely heavily on this param global.";"1"
"that was exactly my comment as well. i think what sucksmost is that we have to do _pull_id_from_request and several other operations to extract things from the uri. this kind of defeats the point of using pecan, does notit have you tried generating controllers dynamically in _lookup";"1"
"ugh, what a gross api. i wonder if we can add a static method into treespeedsearch and see if intellij adopts it at least, what do you think about moving this into a local method for now, so we can at least name what is going on...";"1"
"want_g3_exit = 0;";"0"
"this is an openstack project butthe cla is not required.";"0"
"yes, there is a bug here, thank you, will fix. in the first place i do not understand why it is 'pop' here instead of 'get'. stupid cosmic rays...";"0"
"get rid of perf_command_line";"0"
"should this be ifdef, or are you checking the value";"0"
"nit: condense this into a call to addgroup header";"0"
"we can avoid calling portinfo with nones. if these parameters are not required at contruction times, they must be set as properties.";"0"
"i wanted it to be obvious this should not be set in prod, but i guess it does already have ""staging"" in it. removed the suffix.";"0"
"imho this should just always do check false , or at best 'if beingdebugged breakdebuggercheck false ;'. looks like breakdebuggereven used to be in an #if debug: but unless someone asks for that, just always check false here is imho ok. i think calling breakdebugger to get a dumpissilly.";"0"
"i can make this an int64_t";"0"
"suggestion: put the driver somewhere generic like drivers/audio.";"0"
"there will be trouble if the id is not autogenerated. the db will not autogen a uuid, butitwill gen a unique int id. thats whatits doing in this case. tracking will be stupid big so itll be best to use int id.";"0"
"you could make this final and remove the null assigment";"0"
"nit. actually, -a does not work, you must specify --args. also, name is run_remote_tests.sh.";"0"
"yes, that would be an ideal layout. we would probably only change the names of the checkout repositories in the manifest i.e. the git repositories would still be $aosp/platform/external/qemu.git and $aosp/platform/external/qemu-android.git in order to keep all git history. on the other hand, we can not create external/android-emu/ yet until we've completed the code and build-system refactoring, butthat is where we should shoot at.";"0"
"storage_, storage_mgmt_, external_ , internal_api_ and tenant_from_pool.yaml";"0"
"this is goo from the gpu process i.e. less trusted . you should kill the gpu process here if it is invalid.";"0"
"why not move the code from __init__ to here resize_func_name = self._session.xen_api_features.resize_func_name self._session.call_xenapi resize_func_name, ...";"0"
"ai_addrlen is a socklen_t, so i think that sizeof should be cast to that.";"0"
"should use a manilaexception such as invalidinput.";"0"
"this is a little ugly, but will help get soong enabled with use_soong=true and can go away assoong as we have prebuilt support in soong and can put an android.bp file in libc/zoneinfo";"0"
"i am just being paranoid... consider this futureproofing.";"0"
"fat finger: would be nice...";"0"
"should have a docimpact if we end up using a new conf option...";"0"
"missing a test case for _parseconfig_option with a non-existing conf.irmc.remote_image_share_root";"0"
"netmask hardcoding is terrible idea.... i hope that this is temporary solution";"0"
"there should only be a single blank line here, totally a nit.";"0"
"you probably need a docimpact";"0"
"this is an ugly comment that i wish sdake did not ask you add considering the fact that we have other dockerfiles like this and this comment now makes all the dockerfiles inconsistent. but more importantly, this comment has _nothing_ to do with this patchset. you are adding a comment to centos when you are building an ubuntu-binary patchset. _if_ this comment is needed, it should be in a different patchset entirely. please remove it from this patchset revert to patchset 3";"1"
"you are so old school. with argparsewe, the cool guys, call it ""args"" unlike those dinosaurs using optparse done with dissimulated disconformity";"0"
"as per ie43d10affc981d3446b1296cf05ef595154276a9 and i28981738a9e7f39343cf530c2642315f0a5b22f2 i believe self.header is useless now.";"0"
"maybe if instead of doing the delete_object in the background you could fire a delete_container request into greenthread and the explicitly unlock it with an object_delete in the test. then with that setup, if you wanted to get really fancy, you could give the retry loop a mock sleep that wants on an event which you uncork after deleting the object.";"0"
"i think you wnated osic";"0"
"why status running is considered as a valid abort";"0"
"trust_id = metadata_ref.get 'trust_id'";"0"
"sshlink.__class.__name__";"0"
"this check does not have any sense with ignore_count_of_proccesses=true, it checks nothing. if ignore_count_of_proccesses == false, then please check that at least one process exists. assert_true len api , for example.";"0"
"from operator's pov, it would look like your damnservice just started to fail and need reboot like a damnwindows machine this is not an actual wording, it'll be stronger . and there will come autorestart cron jobs etc. if daemon is run from some rc system, it'll most likely just restartitautomatically. so either way you'll have some restart logic, why not putitall in one place";"1"
"nit: you should also get rid of all .sym files under /lib/... and lib64/...";"0"
"you need to get rid of all these white spaces.";"0"
"posix says ""unsigned long"". so we can: 1. go with posix, and have to add struct statvfs64, statvfs64, and fstatvfs64 later. 2. go straight to 64-bit for statvfs but break expectations about these types. in printf format strings, say. this patch takes option 1. it makes me slightly sad, but i figure it is only a small extra helping of turdon top of the big fat turdwe already have.";"1"
"are you sure that running run_test.sh will produce subunit.log i tried that and it does not produce anything. are you sure about that";"0"
"nit: false /* forced_by_policy */, or /*forced_by_policy=*/false,";"0"
"mock.sentinel is the base object. although this is not wrong, if you want to use sentinels properly, they should be something like this: fake_result = mock.sentinel.result";"0"
"oops, i made a stupid mistake.. i am discussing with jay pipes in another patch.. sorry for this.. :";"0"
"since you are using kwargs, it would help to know what the possible args are that you support. i've discovered instance_id, key and value. also it appears that either a metadata must be provided or, b metadata_key and instance_id must be provided, or c a key and a value must be provided. butthere is more ... i am curious why you chose kwargs for these three while you have named args for metadata and metadata_key which are both defaulted to none. why not this may be a dumb suggestion, so my apologies if it is make the signature just __init__ self, context, **kwargs and glean the rest as you go";"0"
"perhaps should be pid= to guarantee pid is empty on an error";"0"
"do we just want to name the file keystone_context_filter.py and name this classkeystonecontextfilter. it seems a little redundant to have monasca as the prefix on the class";"0"
"uh-oh, is it possible to use something like crypto/signature_verifier.h instead";"0"
"this has to be the or else gerrit will not know to track the submodule. also - it is a stupid broken git ini file, so i think it is supposed to have leading tabs...";"0"
"consider ""ipv6-pid%s"" % i instead.";"0"
"no the param classis designed to be independant of oslo.config so thatitcan be used for things other than oslo.config, eg cliff.";"0"
"o/' take out the papers and the trash... o/'";"0"
"use calloc zygote_classcutoff, sizeof initiatingloaderlist . does the memset to zero for you, so you do not need the if != null then memset part.";"0"
"you really should be using timeticks for times.";"0"
"remove this entire if block. should be covered by build_toolchain_from_source";"0"
"ditto here, wrap w/ -n $public_tag";"0"
"self.staged_image_name repeat everywhere below.";"0"
"primary_ctrl_nailgun = self.fuel_web.get_nailgun_node_by_name ""slave-01"" instead of l207-l210";"0"
"fat fingers i guess";"0"
"please do not use '+' for string concatenation. syslog = '{0} '.format syslog syslog_sds = '{0}{1}'.format syslog_sds, syslog_str";"0"
"hey look, we can setitwith an envvar instead of writing crapto disk. what a good idea, right";"1"
"update comment. no longer excluding.";"0"
"#fuck never mind! do not ask me why but, in my mind, i was grouping it like even though i knew this already : chunksize / totalsize if totalsize else 0 what you said makes sense to me. what about putting some parenthesis: chunksize / totalsize if totalsize else 0 just to make it more obvious yeah, talking to myself here :p";"1"
"can we elaborate on the comment - something like - intent for doing blah blah. and lets call virtual_call instead of virtualcall";"0"
"no, it is not necessary if we leave the lazy-load since it is a not a db sqla fk that we wonder if we should pull or not";"0"
"where is ._deadline defined it should be defined in __init__ in timedtrigger or trigger if used in timedtrigger";"0"
"this message have already been serialized in json. the rejsonify or msgpackify it looks useless.";"0"
"i guess we can kill this one:";"0"
"zomg locals it be a hangin' offense";"0"
"is not this mocking more than was originally there that is, instead of mocking _get_guest_xml as a unit, you are now mocking every little piece inside of _get_guest_xml and letting it call down instead. is that what you intended edit: i am clearly late to this party, so feel free to ignore me. i would have thought _get_guest_xml would be tested by itself as a unit and then mocked everywhere else. i am guessing the old testing was using a faulty dummy xml which was hiding the bug.";"0"
"nit: the plus sign is not needed, and is inconsistent with other multiline string concatenations, such as l29-31 below.";"0"
"execute_action always returns none. so the test will always passmaybe have the function return true if it successfully sent the action off to be executed";"0"
"hmm, process_monitor is always going to be != none , because we use _get_or_create_process_manager. the if is unnecessary, and the .pid .active .xx attribute will do the work itself.";"0"
"aww damnyes. fixed.";"1"
"that messed up the formatting for some of the longer tables below.. so reverted the bullets altogether.";"0"
"if you did, you'd have _communicate attempt to flush a closed stdin ;";"0"
"nitithink this should be just another bullet point to join the above list";"0"
"comment is useless.";"0"
"remove in favor of the dcheck below.";"0"
"use ssh_authorized_key or install_ssh_keys";"0"
"emptyitemmodelitem seems like a misnomer here. should it be elysiumnewprojectactionmodelitem, or something in that vein";"0"
"because python is stupid.";"1"
"i do not need sudo anymore for testing with the dummy daemon, inherit from the base test case, instead of sudotestcase.";"0"
"yuck";"1"
"ugh - yea that is a stupid c p mistake. and you are right, i'll clean that up.";"0"
"what about 'not bool deserializing != bool name ' != is xor";"0"
"this broke the vs9 build probably due to an odd ordering of includes in the rtcd files. you do not really need them anyway.";"0"
"oh crapyou are right, good catch, how was i able to write such stupid test, using .assertequal was not even some evil way of monkey patching... fixing...";"1"
"could you remove these whitespaces";"0"
"this fallback logic is not needed anymore : kill ... rm -f ...";"0"
"done v6 lol drive-by -1";"0"
"whitespaces have to be removed here.";"0"
"dumb instinct tells me this should inherit from forbidden. can you help me understand why that is not the case";"0"
"what the hellthey did with their interface.....";"1"
"it fools like these should be indented to match the indentation of the ""with mock.patch... as ..."" calls above. i think it is all fine with python's scoping rules so i'll leave it up to you.";"0"
"the docstring now clarifies the metadata error bit- butthe reason --backtrack=0 somehow makes portage ignore metadata failures or eapi masking is not quite clear. i assume it is portage idiocy. either way, i was more aiming for a comment right around this line clarifying why backtrack wassuppressed- if it is to suppress fallback behaviour for metadata errors, that is a bit opaque.";"0"
"json_content is a dict passed in by line #52. looking at the rest of this function, _json_to_obj is really a _dict_to_obj";"0"
"add a comment: #endif /* __mach_rockchip_pm_h */";"0"
"all of those if's would be better as: if flags.<whatever>:";"0"
"this method should be removed.";"0"
"use 'restart_service knot'";"0"
"i'd rather see a #include ""__stack_chk_fail_local.s"" and have the android.mk add the appropriate -i file. this ../../.. nonsense is a bad idea";"0"
"this return api sucksshould be returning the exceptions imo, in doing so that removes the .apply_error_message overloading of patch objects. that said, enhancing that is intended as a separate rev, mainly to keep this patch managable for review.";"1"
"caps highlighting variable names is a nice convention but only if you make a note that that is what you are doing. otherwise people like me will wonder why you are being very shouty and will ask stupid questions.";"1"
"this insanity is spreading... i'll have to clean it up.";"0"
"there is autorequire:";"0"
"shebang is sh in the script and +x mode. it will run from shellbut not within the tox.ini without sh before it. not sure why";"0"
"this is quite an expensive call, any way we could make it cheaper i can' think of one, beyond a xenapi plugin, which sucksmore.";"1"
"yes it is there by accident. sean i think adding a line between eth0 and eth0.100 would make the draw more confusing";"0"
"i can make the registration code clear the pco value when not registered and setitto the previous non-empty value when it gets registered again. we can basically always update the pco value using the testing interface testing.py and keep the value around. do you need an api to set the action value specifically i.e. not the entire string, just the action value if so, which character s correspond to it also, are these values carrier specific if they are, then let us make the pseudomm dumb and always use an explicitly set value through mm1.i_testing.";"0"
"i hate this name. can we not use this it is not a size_t anything, it is a uint32_t.";"1"
"i think u-boot discourage mixed cases naming style.";"0"
"wtfis this ! windows-detection logic can we do it smarter if not, let us create a blueprint to fix it somewhen at least";"1"
"use ""$ "" - it does not re-interpolate.";"0"
"this should be moved down just below the 'overrides' comment";"0"
"value128_ = kuuidbase;";"0"
"i am sorry if that is a dumb comment i wonder whether those really belong here. should they be maintained in service repos instead";"0"
"because it is data ""pre-process"" before charlatanuses it and needed for parsing in yaml.load. it is ugly hack to handle recursive inheritance which not supported by charlatan. in any case this review ""frozen"" because too many hacks needed for integration charlatan in current fuel functionality.";"1"
"those initialization should be delayed until instance initialization.";"0"
"minor. oswl.version_info = version_info";"0"
"why : this is really kind of silly... there is no technical reason for it, and it is actually why i disabled the w292 warning in flake8 on my latest patch.";"0"
"why not file_data = s.strip ' n' for s in f.readlines";"0"
"the process does not need cleaning up. the kill logic has been part of the script for a long time, however when we pull the tar pid to kill via tar_proc.pid, it is the pid that already exited, but hangs indefinitely until the return code is read. when we poll for the return code the process goes away and the pipe closes and the script exits and respawns under glance api retry logic. the kill logic still exists for edge cases where tar may be stuck for other reasons.";"0"
"seems 3 slave will be enough here";"0"
"nit: useless empty line before";"0"
"group this with the other config_battery_* configs.";"0"
"evil!!";"1"
"missing a title for edge-vpn.";"0"
"yes we can! sorry not sure why i did not think of that, cleaned up, ptal!";"0"
"yeah, i wrote a bullshitabove ; it was my wrong assumption that we set updated_time at the end of action. actually it is opposite.";"1"
"interactiving should be interracting";"0"
"looks like an ugly hack. please specify empty value in config or calculate default value when you load config depending on field type.";"1"
"the resulting rabbitmq-env.conf file is just sourced... so this is a suboptimal trick to execute the command when started by pacemaker, see the problem is puppet expects a colon : to split the string into a var=value pair ... damn";"1"
"i do not think any of the json objects are going to work with keystone's crappyxml serializer... not sure how to check.";"1"
"yes - fields classattribute shadows the import in the classbody so you can not do the dictproxyfield assignment as a descriptor. this should be changed in all object files really asshadowing like that is dumb and a bug really.";"0"
"consecutive_ready_count = 0";"0"
"this does not work in the general case. the output of whoami is not always a valid group name. you may want to do $ id -g -n $whoami";"0"
"canusb_gadget_get_string run concurrently with usb_string_copy";"0"
"this does not actually validate anything. in looking at the usage, get the strong feeling you should be enhancing optparses types instead of adding one offs for every one that uses it";"0"
"nit: you can kill everything after the comma.";"0"
"is this script installed on every device if not, there needs to be a check message at the top. the scriptitself seems to have a 60 second sleep. that seems pointless here. ec_sb_firmware_update is allowed to run update things as the ""chronos"" user that seems fundamentally flawed from a security perspective. normally crosh makes requests to the system via dbus debugd and that takes care of elevated permissions. along those lines, since you are running this directly as the user, what is to stop them from hitting ctrl+c in the middle and screwing things up";"1"
"is_eligible_agent is staticmethod, should call by as_db.agentschedulerdbmixin.is_eligible_agent";"0"
"i think it is better do this: is_mac_address_compatible = port_dict.get '_address' .lower == server_profile_mac.lower";"0"
"yes, it is. foolishly uploaded assuming i could make such a trivial change correctly : ps2 is incoming";"0"
"this will be handled by performoperations, you can passa scoped_ptr with nullptr inside.";"0"
"i still think this comments suck";"1"
"why this useless block";"1"
"is puppet-openstack still relevant should we continue mentioning it here";"0"
"if you will have nested directories in your path that endswith '.rules', then os.path.exists dir will return true, but os.remove will fail, cause it cannot remove directories. use os.path.isfile instead. moreover, that fact than os.path.exists return to you that fact than file exists does not means that this file will exist when os.remove call will be executed. why do not use try: os.remove filename except oserror: some piece of s**t";"0"
"lol, fuckcopy/paste";"1"
"what if there is bit rot, and like a bit gets flipped, we need comment backups. haha";"0"
"this is redundant with the primary key. it should be removed.";"0"
"could we git rid of query_suffix_ feels like we canuse + base::utf8toutf16 features::answerserverquerysuffix at l89. wdyt";"0"
"good idea done and added more detail about why thoughtitmight smell like a layering violation";"0"
"bindonce internal::abstractpromise::execute, std::move promise";"0"
"just to point out... this finally block may not be run if we are killed by the build bot.";"0"
"make update and setthresholds private to darkpolicy and call them from getaction";"0"
"yaay! : it feels so good to delete all this cruft :";"0"
"""source admin-openrc.sh""";"0"
"is that even necessary if nothing holds a reference to the model anymore, it should be garbage-collected anyway.";"0"
"should probably be also a separate patch with a bug filed for it.";"0"
"gross.. :{";"0"
"this section is unused and should be removed";"0"
"let;s dump all this in the totp auth plugin and make ""get_totp_token"" private";"0"
"if you include <eh.h> before <future> you do not need _has_exceptions=0";"0"
"profileid=profileid, adapter_type=adapter_type, extra_config=extra_config";"0"
"use str_replace rather then this hard to read join";"0"
"not required. python will garbage collectitfor you. :";"0"
"is the ### per se a problem or just the fact that the first line has ### and the other two only a # i was using two level of comments ### and # to given them some hierarchy.";"0"
"sorry, i meant ""inner"" process when wrote this, but had fat fingers...";"0"
"in order to make these lists easier to change, consider formatting with one name per line: for w in annotate_barrier_destroy annotate_barrier_init ; do find absl/ -type f -exec sed -i ""s/ b$w b/absl_$w/g"" {} ; done even if you have a tool to fix the formatting do you , diffs are going to be hard to read if using the multiple-names-per-line format.";"0"
"bouyah you just killed me";"0"
"hang on, thats rubbish, ignore that idea. i kinda think if we want conf.image_cache_subdirectory_name to mean the same for vmware and libvirt, if possible. if we added a conf.vmware.make_cache_folder_unique that controlled if you add the my_ip to the conf.image_cache_subdirectory_name, it would be much simpler. admins that want to share the folder, then just set conf.vmware.make_cache_folder_unique=false, then they configure the cache directly, just like libvirt folks, by configuring conf.image_cache_subdirectory_name";"1"
"you missed indexer/__init__.py";"0"
"monkeypatching ftw! in all seriousness, monkeypatching sucksand we only use it as a method of last resort. enable_sudo_enabled_check is a bit too vague for my liking, so consider changing the name of the method to something like 'patch_create_process' so thatitis apparent to anyone looking at the invocation what is happening.";"1"
"nit: maybe combine these 2 branches into a single: if feature_info_->iswebglcontext { desire_multi_draw = feature_str.find ""gl_webgl_multi_draw "" != std::string::npos; desire_multi_draw_instanced = feature_str.find ""gl_webgl_multi_draw_instanced "" != std::string::npos; }";"0"
"volatile, please. atomic<bool> would be even better, but mingw might screwus there";"1"
"!= nullptr";"0"
"agree with ilya here - mutables here are the great evil if it was no idea to use their opportunities as a dirty hacks here : please use none here and check it in the child methods like: if extra is none: extra = {}";"1"
"ohh darn!! yeah. traceback will occur when an exception has been raised. i guess i will have to revert back to the earlier way of raising exception and logging traceback then.";"1"
"when i change the api i will delete it. having this kind of thing being a public millstone for the gc is ridiculous.";"1"
"subclassoslo_cache.backends.mongo";"0"
"ohter potential tests would be binding to the null name, and binding a stupidly large location.";"1"
"let us do the same as we do with cluster attributes: and you'll get rid of ugly l837-838";"1"
"can this fail if so, datefromtime should return a bool indicating success or failure, and we should check it here.";"0"
"admin_client should not be necessary here, you already have port_client.";"0"
"i believe that the exception should be thrown here";"0"
"kill blank line";"0"
"might be a stupid question, but why is this different from the addcleanup tool";"0"
"""lack of output is not better"" is a new argument against the patch, so i'll address that the current output is: xx -d '/tmp/image.lwgcgpoj' -o 'tmp' -i '/home/stack/overcloud-compute.qcow2' -- extracting kernel + ramdisk from /home/stack/overcloud-compute.qcow2 and writing them to /tmp/image.lwgcgpoj nbd 17554 0 nbd 17554 0 basename: missing operand try 'basename --help' for more information. /dev/nbd0 disconnected tmp-vmlinuz,tmp-initrd i went looking at this because the ""xx"" line actually distracted me into thinking there was a bug with the script the current output sucks";"1"
"can you please add a comment here. i am not really sure i understand why the disabled is overriden here";"0"
"does not a return value of ""null"" mean no password do we really want to pretend that a password does not exist here yes, i know - the alternative suckstoo";"1"
"mchildwindow != nullptr";"0"
"nit: at this point i would avoid the early return with: if license_texts: self.license_text_stock ... else: logging.error ... and just let the function end.";"0"
"when are these null are cancellable callbacks getting passed in";"0"
"useless spinlock";"0"
"this means that no db schema changes are performed, but we'll keep the code consistently using project_* whilst schema keeps on using tenant_*. what is your proposal as far as the model_base mixins that add attributes like tenant_id what is the plan for adding new schemas are we gonna have some tables that use project_id and some that use tenant_id as bitchy as it sounds i wonder if the db migration is the inevitable one-off cost we gotta bear.";"1"
"there is no policy on docstrings. feel free to add them where you want to, butthey are informational only and we do not follow any consistent standard. it is nice to try to stay consistent within the same file, though.";"0"
"nit: let us elaborate here a bit: // returns the homepage specified by the extension in its manifest, if it // specifies a homepage. otherwise, returns an empty url.";"0"
"remove vboilerplate";"0"
"thats a cherry-pick, which is sad. i suggest to fix errors in a separete commit";"0"
"kill, once you kill the below.";"0"
"i am not sure why we need to mock utils.execute twice. utils.execute is mocked at l.44 already.";"0"
"third arg should be 'compute_name'";"0"
"done. argh, stupid me...";"1"
"remove useless braces in this method";"0"
"instead of doing the "" regsize - 1 "" twice the first one is useless , i think you should just prepare the final shift here: uint32_t ror_shift = regsize - rhs.immediate regsize - 1 ;";"0"
"silly mistake, thanks. done.";"0"
"all these jobs are intended to be executed by zuul. without zuul_* shellvariables they will fail, so we need to add these parameters and passthem somehow so they can be executed on master branch";"0"
"ditto, albeit self.stack_resume.";"0"
"you are going to crash jenkins sending all those gbs! d:";"0"
"done but if kill or getpid starts to fail, i am pretty sure we have way worst problem that failing the test :";"0"
"afaiu this warning is not relevant anymore.";"0"
"i understand why you may want to mock objects for rules and policies. i do not follow though why you passthose mocks into create_policy here since it is only passed thru to registry_m, that is also mocked. i believe you should create a separate mock in the test case to represent a policy object. even better, you would instantiate a real object and passit into driver.create_policy. same for all other tests that call to self.driver directly. overall, for those self.driver tests, you do not really need to mock out policy and rule object implementations at all. you would need those mocks for tests that target qos_plugin.py, butthey should be moved into a separate file anyway, so consider avoiding unneeded mocks for this and other self.driver tests.";"0"
"same post message to api, as usual. ugly soluthion..but looks like we do not have a lot of choices";"1"
"personally, i do not think 'specifies' is useful at all. you can just put 'the interface type of disk. ...'.";"0"
"crapi'll fix it and resubmit. thanks.";"1"
"this reference to config_keystone_service_name should be removed.";"0"
"you are killin' me, smalls!";"1"
"is it on purpose that you skipped vmware";"0"
"this leads to a useless error message. use this instead: self.assertthat links 'self' , matchers.endswith revoked_list_url";"0"
"bash is nice, but dash is crap- if $1 contains spaces, this will misbehave. you'll need: local disk=""$1""";"1"
"again, naive use of strncpy can lead to problems in the future.";"0"
"curse you, clang-format! done.";"1"
"nitpick: return here and at #558 is useless.";"0"
"default password needs to be removed";"0"
"that sucks these three firmware-reading steps completely dominate the running time. doing the other stuff in parallel will not buy much... current running time is 15s with a broken touchpad probe, which seems to be broken just on my alex, but might be fixed by reboot . of this, only 2s is ""other stuff""... it would seem like ec and main fw should be able to run in parallel, since they use separate buses, no";"1"
"tox.ini is too late. gate_hook.sh is used prior to executing tox";"0"
"these are garbage debugging code";"0"
"you could have pushed a new patchset rather than complaining... you slacker!!!! ;";"1"
"we put copyright boilerplate junk in all of our files, can you borrow a notice from a nearby file and putithere too";"0"
"extra empty line should be removed.";"0"
"why not typedef'd to get rid of 'enum' everywhere or";"0"
"we seem to use gcc4.6 in l for host builds. for example, the bionic tests on glibc run with 4.6 in l. there is a 4.6 host prebuilt tree in l, which seems to get used heavily. in all of those cases, we fall back to the __sync implementations. those are stupid ans slow, so hopefully this is not true for anything where performance matters. this was not my choice. someone explained the reason to me, but i do not recall it at the moment.";"1"
"not awkward, just rubbish. thanks for saving me from myself.";"1"
"nit: useless empty line";"0"
"did this for two reasons: 1 $ includes is empty for sample_muxer dependencies, but fine for others. probably something stupid... 2 does not really make sense to have both in this file... kind of a waste. getting rid of it fixes my problem, but also 2, so... shrug.";"0"
"this is sucky and confuses everyone, but gtest's _eq/_ne macros want expected, actual instead of the more-intuitive actual, expected -- i think it is a junit thing. the failure messages are backwards otherwise.";"1"
"the # noqa is not needed any longer, i uploaded a patch to remove them all:";"0"
"mmmm.. this is the kind of code that requires a comment so that later maintainers do not have to search the git log to understand exactly what is going on. as far as i understand, you could completely remove the defined _stlp_use_exceptions here.";"0"
"delete the die calls here w/emake";"0"
"nit: subtree.extend children";"0"
"pig";"1"
"done. typedef a migratecardscallback.";"0"
"ha yeah i dont know what i was thinking on this, brain farts.";"1"
"please use the regexpfilter as commandfilter is the weakest of checks. please see";"0"
"perhaps i am a dumb dumb but does not keystone only use the messaging bus for emitting ceilometer notifications it is probably worth highlighting that unlike the other services it does not use amqp for rpc or has that changed";"0"
"""with with""! *slaps own wrist";"0"
"grr, silly error!";"1"
"i will use units.ki directly instead of gib2mib. will remove it from constants.py.";"0"
"should be build_arm_appended_dtb_image to match arm_appended_dtb.";"0"
"this will call 'die' when use=-cros_embedded. omit the die, or putitin an 'if' block, or use {...}.";"0"
"nonnls i wish eclipse's tostring generator would do that for us, i mean who internationalizes their debug tostring methods";"0"
"remove this newline. also, as a general note, i've begun using ""ret"" instead ""retval""";"0"
"the '.' should be removed.";"0"
"kwargs is a dict";"0"
"feh, somewhere in my vimrc is some bad mojo. i need to start afresh. fixed in next.";"0"
"this retry= should be removed.";"0"
"should this comment live in the object only not sure why this comment is here when all this ugly business has been hidden from the calling code.";"0"
"i think the . follows willonce in mocks, usually...";"0"
"this should be params=params.";"0"
"haproxy_packages should be renamed to haproxy_package as there is only one package.";"0"
"i would like to add two more tests: * test_delete_bay_with_name_not_found * test_delete_multiple_bay_with_name";"0"
"this part should be deleted, because attributeerror will be thrown.";"0"
"neither of these imports are used anymore, they should be removed.";"0"
"i intentionally named it something dumb to reflect the behavior, but i like _dict better :";"0"
"probably not for this patch but we should put all these mocks in a classo that the on_calls are not duplicated and can be shared with d3d11_cdm_proxy_unittest and d3d11_decryptor_unittest.";"0"
"use expect_ instead assert_ unless it would result in a crash otherwise or if you absolutely need to abort the test earlier";"0"
"much nicer than the ugly inline javascript html.";"0"
"should probably be called createentry instead of getentry then";"0"
"argh, stupid mistake on my part - thanks";"0"
"why not chromite.lib.parallel.backgroundtaskrunner with backgroundtaskrunner simulate_slave as queue: for slave in m_iter: ... queue.put slave";"0"
"this is fugly. consider adding a private helper method like finishtaskwitherrorcode to deduplicate +hide it";"1"
"i think it does not make big point.";"0"
"it will be good also describe available params for this mcollective agent in net_probe.ddl file as for example, or";"0"
"these backslashes are unnecessary.";"0"
"this cleans up the uart start/stop such that the uart does not false trigger and deliver spurious /0 characters that messes up the signature.";"0"
"seems silly to care if we are just going straight to pass";"1"
"true, you do not want that. does 'pkill -kill -e -p $$' do what you need";"0"
"i think this is a really good point. you already made die a macro for that reason, this should really be one as well.";"0"
"please, remove trailing white-space.";"0"
"yeah... this should not work at all, according to my understanding. maybe the flush is making this funky";"0"
"i think this is supposed to be ''novaclient.api_versions.apiversion''";"0"
"given this comment is correctithink that line 6313 should be removed. we do not want to force migration to complete prior to migration startitis pointless, is notit";"0"
"it is prior to the standard libs because eventlet.monkey_patch monkey patches core primitives in python and if it does not happen first thing you get into serious fuckery when it tries to use a non-patched package like time in a patched package.";"1"
"if we want to make better use of the existing atomic structure, we need to remove target line interrupt and its isr. however, we cannot prevent target line interrupt and its isr, even we support all the functions which have already mentioned by bibby. the behavior of cmdq is more like cpu rather than shadow register. if we use shadow register, we just need to change register set in vblank. but, if we use cmdq, we still need to make sure cmdq can process all its tasks in vblank. although cmdq is faster than cpu to access register, cmdq still has its limitation. in other words, we cannot insert too many tasks into cmdq. if cmdq cannot process all its tasks in vblank, we will see garbage line on screen. in chromebook, mouse cursor will generate too many tasks to cmdq. if we want to reduce mouse cursor tasks, we still need target line interrupt and isr to drop useless mouse cursor events, since last cursor event before vsync can replace previous mouse events. therefore, we think current solution is a better choice and it is also suitable for upstream.";"0"
"it seems that this ""lswitches"" is not being used";"0"
"so does this mean that the profile does not have a buffer, or thatitpoints to data stored by libpng";"0"
"agree with brandon logan that these comments are redundant and add no meaningful value, so should be removed.";"0"
"we'll want to prefix these hiera vars with wiki_";"0"
"*s*ervice";"0"
"done, with a slight modification: the data is actually read out multiple times during redirects.";"0"
"can you rebase to latest head this should be frozen to 1.0.13 or the dev node will blow up again.";"0"
"fixed the silly spelling mistake. thanks for pointing it out :";"0"
"this should be deleted, previously, it is because ' n' in reason strings become ' n' after json.dumps, this hack is to remove those ' n'. right now, it is not needed any more. deleted it and add description and a unittest for it.";"0"
"severity medium yeah they are considered breakable butitis still pretty damnhard :";"1"
"ctor overload hell. not in this patch, but consider getting rid of the ctor overloads in favor of init , initwithpaddingrect you'll need to define a rect struct or something , initwithalignment . or, a single init that takes pointers and ignores nulls.";"1"
"i hate to be that guy, but i really dislike when the description starts on the same line as the """""", it just looks so unclean and unnecessary to me.";"1"
"i think you need to os.environ.copy , or else this is all your env will have in it.";"0"
"consistent with discussion on #openstack-infra, given pid is used as the 'test' profile id, this might fail if pid == 135, which is likely to be the case with single-purpose jenkins slaves .. a bogus pid like 'abc' is fine in this case given there are no 'reserved' int pids other than 1 .";"0"
"use ha! you have a brain tumor too!";"1"
"i killed the global since it was unused outside this function.";"0"
"please consider os.kill pre_reload_parent, signal.sighup";"0"
"in ha mode, keepalived notify_master.sh tries to run: sudo -u #1234 ... which fails because #1234 is considered as the beginning of a comment";"0"
"goddamnit, please make it a regular multiline if >_< it will be same 3 lines, but without excessive";"1"
"done -- i have now modified java.util.logging.sockethandler did not even know there wassuch a crazy class you are analysis of datagramsocket and posix api is correct. we are letting them be.";"1"
"kind of sucksthat we lose the magic resolve thing from the previous bootstrap. unless this is done by the endpoint now otherwise, maybe add it so we do not have to expand via ""resolve"" when bumping.";"1"
"i guess ugly searchalgorithms::searchalgorithms_make_fixed_size would be ok here for this kludge-anyway";"1"
"use zuul_refname, this will not work with zuul_ref anymore.";"0"
"1 flavor_id_body should be here";"0"
"i still strongly think you should use an intopt.";"0"
"you should probably mark this as wip if you are still working on this.";"0"
"return ""/"".join self.dbaas.client.service_url, self.configuration_id,";"0"
"here you are unpacking the list and creating a string then passing the string to _ssh_execute. _ssh_execute then unpacks the string and creates a trash command.";"0"
"useless trailing '-'. it is already part of the rand_name method.";"0"
"writing disp_reg_ovl_roi_size should be in vblank period. if not, the ovl would be in a wrong state and display is black. this reset could recover this case.";"0"
"i disagree somewhat: that defeats objective #2. i personally believe that developing something 'natively', like for instance the plugin directory, is the sanest approach towards killing the coupling with subprojects. embracing the good pattern may still lead to a pretty mechanical translation, and we do not have to jump to lots of hoops. that would kill our productivity otherwise.";"0"
"this render_process_id dcheck seems a bit overkill, would just remove";"0"
"i prefer you fake instance with none value in the host field. otherwise, without your fix, this unittest still can pass";"0"
"whoops, bad copying job on my part. done.";"0"
"could use += here for these lines if you want, too: self.tot_data 'idle' += idle_delta_cycles";"0"
"let us remove these two lines, i dont see how they are being used.";"0"
"vnic_type != portbindings.vnic_normal:";"0"
"there should be only one license file and you already have it. so, this one should be removed, i supposed.";"0"
"you should be passing an instance_id in here: i point this out because i think if conf.fatal_exception_format_errors=true then this would result in a keyerror.";"0"
"maybe a stupid question but why should this go outside the try";"0"
"should passin a function and the id. e.g. def _delete_credentials self, id, fn : ... if id != fn cr : continue then call like self._delete_credentials project_id, lambda cr: cr 'project_id' then do not need to have the complicated logic below.";"0"
"nit instead of line continuation you should use parens.";"0"
"my google-fu is weak today: what is a ""span""";"0"
"oy, silly copy/paste from the method above... this method never returns anything, the return none really is redundant.";"1"
"use int systemcodevalue = and put checks below in try { } block.";"0"
"this should be bumped to the current proposed microversion, v2.16";"0"
"remove this extra blank line, it violates w391.";"0"
"how about using: self.asserttrue all states.success == execution.state for execution in wf_ex, task1_ex, task1_2_execs 0 ...";"0"
"you should probably replace 'goog' with a placeholder here, such as '<idp_name>'.";"0"
"i will remove b preifx";"0"
"please, please use keyword arguments. otherwise, it is going to hell.";"1"
"i think we generally only use this on things that return a maybe and might throw. same goes below.";"0"
"i have the overall switch called out a few points down. i'll kill off enable_step, because yeah it is overkill. +1 on calling it out.";"0"
"dumb question: is the empty string a valid configuration value";"0"
"not quite, it is not clear which fk failed. i noticed a bug, the session is not passed, it should be _get_role session, prior_role_id";"0"
"darn, you beat me to it!";"1"
"yeah, that would be helpful.";"0"
"#ifndef __lp64__ __notnull...";"0"
"is the pid argument useful here, since by the time it is returned the child has already exited...";"0"
"ahh fuck";"1"
"which bit all of it, or just the domain fk";"0"
"this one is also fc code and should be removed.";"0"
"this is how properties in the facet are specified per idea's conventions. it is ugly, but at least we are consistently ugly.";"0"
"the above line should be removed";"0"
"instead of directly importing the guestagent api, use the remote.create_guest_clientitdoes the same as what you are doing but having it accessed it from remote keeps it centralized.";"0"
"please also use insecure=conf.keystone_authtoken.insecure";"0"
"nit: while you are here... constexpr int kmessagecolumnsetid = 0";"0"
"i put them into two unittest. for mediamonitor, i emitted the signal to simulate insert/remove events.";"0"
"nit, only if you find it better as well : return i == children_.end nullptr : *i;";"0"
"you should bail out if smth fucksup state is ""failed"" or smth like this, need to check in real env";"1"
"_check_for_suid_sandbox i'd also passin the renderer pid to be explicit, but your call.";"0"
"this is kinda crappyi just realized you can not query layoutlibrary for the api level. we should have a capability for improved_view_info or something.";"1"
"for this, you'd just check the whether the size of entries is === 1. another option coul dbe to move the checks to the caller, butthat might be more clumsy.";"0"
"grammar nazi here: ""deletion of subtasks"" or ""subtask deletion"" get rid of ""with"" :-";"1"
"small nit: view_detail*s* why is the locator value none and what is the difference between: _container_view_detail_button_locator and _container_view_detail_button_template_locator";"0"
"well, we could also just put this in /coreboot and leave the other one in /firmware/chromeos. that would just look stupid, but otherwise work fine. i want to at least try upstreaming the kernel binding for the coreboot node, so i want to minimize the amount of things they are going to hate aboutit";"1"
"please remove those white spaces";"0"
"defining cros_workon_subdirs_to_rev when there are multiple projects or srcpaths should be ebuildformatincorrectexception .";"0"
"it is so unrelated i wouldn't use it. we do not have a bug for ""kill all the nibs""";"0"
"why not use initctl.pid to return the pid that way you do not have to manually parsestdout for the pid.";"0"
"this should be a plog error and then return false. see the failure_is_fatal handling in the mounts above.";"0"
"die is needed in wakeup in src/cpu/samsung/exynos5250.c.";"0"
"so config_nova_cells_parent_host is useless here, you can keep using just config_controller_host here.";"0"
"done. removed. sorry for being stupid.";"0"
"never use such in args default values of non const args: because in other case you will shitbricks:";"1"
"sounds like you are mmc_busy_wait_io. what about this mmc_busy_wait ->sdc_sts, null, sdc_sts_sdcbusy, mtk_mmc_timeout_ms ;";"0"
"indention should be: blah = blah stuff, stuff2, stuff3 ;";"0"
"i dont think there is any reason to create strings for this color, why not just use new jbcolor 0xff4caf50, 0xffa5d6a7 ;";"0"
"i left rootwrap* config parametes in ironic_lib as empty, so that whoever uses ironic_lib to run disk partitioner code, they have to set the correct values for these config parameters. otherwise the underlying commands parted,etc will run with the same user permission as that of the service ironic/ipa . so, i would prefer to leave this code this way. please let me know if you want to change this code.";"0"
"probably a dumb question but what does ""in use"" mean exactly bound drawing in flight";"0"
"maybe declare this f-n somewhere in private/bionic_utils.h";"0"
"you should probably add an equivalent of plog and use that.";"0"
"just make sure the png is not too small or too large";"0"
"you do not need the above for releases.";"0"
"yeah, lets kill this bit now.";"0"
"will not work. since most of these objects are being used on the qt thread, you have to use qdebug, qwarning etc. iirc, verbose_print is gobbled up.";"0"
"sgtm! ptal.";"0"
"the #if is ugly and upstream will hate it, but i can not think of a better idea. this is the last selinux tool to be migrated.";"1"
"done. i thought the input http in this file is just a catcher, all testes are for output http. this is why i want to call it output_http_unittest.py .";"0"
"stupid question: why is this a todo is there something else we should do";"0"
"this keeps it alive forever. lazyinstance<inotifyreader>::leaky g_inotify_reader = lazy_instance_initializer;";"0"
"make break this out so its a bit cleaner to read. $q.all {....} .then resolved, reject ; function resolves { .... } function.reject {.....}";"0"
"yep, you are dead right!";"0"
"i love how you used mock to manipulate the space time continuum instead of a flux capacitor!!!";"0"
"russell , are right , will address this in next patch later :";"0"
"either way it kind of sucks if you look, ovsbase already depends on ovsbridge in a kind of silly way. and having vxlan_supported, which instantiates an ovsbridge itself, in ovsbridge is not any cleaner. and this has to be in one of the two, otherwise testing becomes more of a pain because we need to have execute mocked out.";"1"
"pidtid_to_comm_map_ child = pidtid_to_comm_map_ parent ;";"0"
"this is a lie. please run vmtests with your change / trybot with vmtests.";"0"
"-1: if this is a json example, please correct the format, at least the space and indentation are ugly";"1"
"you could record the pid of the bot in a file after you kick it off, then kill the bots by using os.kill. even if you continue using ""ps a"", i think it is better to use python's re and os modules than shelling out to grep awk and kill.";"0"
"next_timer_deadline_ = next_timeout >= 0.0 now + next_timeout : 0.0;";"0"
"yes. i'll remove them for now, including empty functions below.";"0"
"it is too bad the client resource objects do not implement __hash__ .";"0"
"it should be removed, how embarrassing :- .";"1"
"meh-- did not realize i was being a moronmoved flags to after target in iosbuild; works fine now. abandoning this... although i guess the presence of -g in the base flags does bug me a bit. whatever.";"1"
"damn thanks for finding this.";"1"
"'kill -9' is generally impolite: it does not allow the target a chance to clean up. for ssh, the following should be sufficient: kill ${ssh_pid} if you've got some reason to believe that ssh may occasionally fail to quit, you can do something like this: kill ${ssh_pid} sleep 3 kill -kill ${ssh_pid} true";"0"
"if you add ""expect fork"" here, you can add -i to the minijail line below and save a pid!";"0"
"we do not want to always catch ""latest version"". we should catch latest-one changed, and case user made some ""non-standart"" installation and changes. like stupid copy-paste of %random% kernel files inside * warning message will be added";"0"
"i am thinking about moving mips-specific relocs out of this function as next step... to reduce if !defined __mips__ polution.";"0"
"nit: ditto! on using the appropriate amount of error i.e., 1us.";"0"
"maybe add dshito verify this he's mucked with chromeos_version.sh lately";"0"
"mpaccess = std::move other.mpaccess ; mpbitmap = std::move other.mpbitmap ; then you do not need the assignments to zero";"0"
"2017. we update the year when we add new files, but do not update it when we modify old files. it is dumb but whatever.";"1"
"this._notificationtimer = null;";"0"
"see above, i think we can kill off autosuspend.";"0"
"let us make all this more flexible so if we want to expand this in the future we can. change this to get_signal_queue_to_kill self, process . return the signal queue you need to kill a certain process.";"0"
"use self._ioutils.get_buffer instead.";"0"
"kill empty line.";"0"
"!svc_can_list";"0"
"it is how you get line breaks. : latex is so much better in this respect, as at least does not show up like garbage in your editor/review tool.";"0"
"this should be for arm only which is actually a standing bug on my part, i forgot to move this a while ago . these really ought to be export_includes of libunwind_llvm. do you want me to fix up the android.mk first";"0"
"looks like these always return a list, so we should be good. and no pagination. you lucky bastard";"1"
"since the colorbuffer owns the resizer, i would recommend using a smart pointer i.e. std::unique_ptr<textureresize> instead of a naked pointer here. if you do that, you will not need to delete the resizer manually in the destructor.";"0"
"why gltffile** is it not enough to use gltffile*";"0"
"nasty!";"1"
"please, get rid of backslash use brackets";"0"
"this means that any calling code that uses this needs to be built with _file_offset_bits=64 too. i guess the fact thatitis all c++ means we are safe because the mangled names will not match if you screwup";"1"
"i hate it too.";"1"
"d'oh... stupid copy+paste error.";"1"
"nit: destination_file_name";"0"
"could you please make all local functions static instead unnamed namespaces makes names ugly in the binary and in the debugger";"0"
"i think we should use stateful dhcpv6 subnets here";"0"
"this can go in the same bug fix as the quickstart.sh patch.";"0"
"what if the perf data contains a pid fork loop like a -> b -> c -a. and the sample is not in the mapped region of any of these. i think the sample would just be dropped, and there is no need to kill the whole thing simply because of one glitch in the data generated by perf.";"0"
"darn kids and your loud music. get off my lawn! :-d this was an existing typo, so not -1-worthy";"1"
"nit: maybe have gradle12_home and gradle20_home like you have java_home and java6_home.";"0"
"no need to do this, self.node already uses fake driver with fake power interface.";"0"
"they are not just aliases, wtftimeticks is a classthat wraps base::timeticks. the explicit cast was not needed before, but now that we want to convert optional<wtftimeticks>> to optional<base::timeticks>, the conversion is ugly. can not think right away how to simplify it more.";"0"
"we do not handle the dev field here. that means 'rootdev -c' will run mknod with garbage data. can you look into that";"0"
"backticks should be removed.";"0"
"it would make sense to include asses result of the current implmentation.";"0"
"suggestion s/hekad_timer_avg_duration/hekad_timer_event_avg_duration/";"0"
"region code may contain digits and symbol like ""latam-es419"" . what about just "".*""";"0"
"this is replaced by translated_log and should be removed.";"0"
"can you add a getboolean i think it would be useful. you can leave this for another patch it you want.";"0"
"why did you remove here map";"0"
"provide verbose description of what the hellare you doing here";"1"
"suggestion: name it so thatitis clear this is for snat arp entries only. e.g. _update_snat_arp_entries_for_dvr ..";"0"
"i am sorry i did not noticed before... passa file_to_write fp as an argument to jsonutills.dump";"0"
"this is slightly confusing...the script is run in dom0 in the context of install_os_domu.sh butitis run to customize the image of a ubuntu vm. it sounds like it runs in the live ubuntu vm, or that was my first assumption.";"0"
"this missed the point a bit - i wassuggesting argv be configurable so you can passin a dummy tlsdate since you hardcode /usr/sbin which makes any sort of isolated testing nearly impossible.";"0"
"ok so - if there is no device name in values - we will always create a bdm, and if there is none - we do the bastardized upsert. why not organize code around that to make it a bit more clear";"1"
"that is my bad because it had been ""stupid"" and i changed it.";"0"
"yup, as designed, because an iscsi initiator of '' is completely useless.";"0"
"to vilobh using a string instead cause it is a uuid";"0"
"i still prefer to use cancelable callbacks whenever i can if the factory is already there, why not use it . stuff may get posted to message loop, then everything gets deleted and only then the message goes through the message pump and invalid callback may be executed.";"0"
"bad indentations.";"0"
"those are useless anymore, so we can get rid of them.";"0"
"nit: you might want to use base::umahistogramenumeration here:";"0"
"do not need the /v3/fake here";"0"
"this replicates drm_mode_copy/drm_mode_duplicate";"0"
"everything below here should be in mapped_data:";"0"
"i was curious what nnk as the second most frequent user of this script thinks. personally, i do not find this very useful normally, and it is an active pain in the asswhen you are just trying things out. i am especially conflicted because so far the fact that the syscall stub generator does the same thing hasn't bothered me. though it is even less useful in practice. ""git commit -a"" is all i'd ever have needed there so far. note that that is done by the near-duplicate in bionic_utils.py, not this copy in utils.py. ugh.";"1"
"hum -s used with -s is used to show errors on stdout but you redirect this output to /dev/null, it is intended we can maybe curl on /horizon just tested and we need to add this: $ ln -s /etc/hiera.yaml /etc/puppet/hiera.yaml $ echo 'apache::default_vhost: false' > /var/lib/hiera/defaults.yaml add a test on the http return code on /horizon path just the http_code $ curl -sl -w ""%{http_code} %{url_effective} n"" -o /dev/null 200 wdyt";"0"
"you can just use nextcommitpositionoutput a=a, b=b";"0"
"why send them one by one instead of a single batch 'files' is repeated field, luci-config is capable of checking a bunch of files belonging to a single config set at once in factitshould be more performant that a bunch of separate calls . this would also simplify concurrency handling here because there'll be no need in concurrency anymore .";"0"
"note that we could potentially put this inside the context and add a function templates.extra c or something to getitbut i decided againstitbecause: * i believe explicit argument is a more friendly api. no spooky action at a distance, no functions to learn. * there is a lot of crapalready in our contexts. and the context is organized as linked list with o n access time, more crap> slower.";"1"
"we should really move toward getting rid of host_uuid.";"0"
"in fact, port_list_uuid should be empty";"0"
"nit: for c functions not c++ , use a void parameter, otherwise the compiler will assume the function takes any number of parameters, and will gladly accept both calls as valid: android_studio_get_optins ; android_studio_get_optins 42 ; this is legacy c crap-/ see";"1"
"this variable name is just hideous!";"1"
"this has no place in here, ap148 is something completely unrelated to your board";"0"
"i think that is okay, can you make a bug for fixing that later";"0"
"do we want to log that there is not an audit or is that silly";"1"
"s/examplei /example s/'iscsi_ilo'/ 'iscsi_ilo' driver";"0"
"this value is not being set by puppet. are we adding it here for potential future need";"0"
"today i learned what currying is in math terms. i also read 3 blog posts about how to curry in python, and some things about how it might make some things more generic. i am a math idiot, and a functional programming moronso i have no idea how this applies or even where to start.";"1"
"s/wether/whether. fun fact: 'wether' is a castrated male sheep :d";"0"
"sean the test is correct. please look at the unit tests for examples of how the condition works.";"0"
"could you wrap in a function defer func { cmd.kill cmd.wait }";"0"
"this change makes warning go away with build_packages.";"0"
"i stand corrected. i did not realize we even implemented that a long time ago , because i thought until recently we had services reporting their pid as 0. huh. i'll update the cl. so printing works with that";"0"
"can you add a comment about why a pid would be less than 0";"0"
"well, i personnally prefer using explicit comparisons like : if xx is not none: yy zz";"0"
"should these params be lined up the only reason i say should is b/c its such a pain.";"0"
"/tmp/chrome_root should probably be retrieved from the enviornment variable $chrome_root, if possible";"0"
"is this matching against the jobname if so we should change it to '.*-tripleo-ci-.*' so it does not match the gate-puppet-tripleo-puppet-lint.* jobs";"0"
"it is creating by loading /opt/kolla/config-heat.sh. i do not like it either butitshould works. is it better to export this values once again or checking if that files really exists moreover if this is good enough it should be loaded at the top of the file imo";"0"
"for discovery, the configuration file option ''node_not_found_hook'' should be set to load the hook called ''enroll''. this hook will enroll the unidentified node into ironic using the ''fake'' driver. this driver is a configurable option, set ''enroll_node_driver'' in the **ironic-inspector** configuration file, to the ironic driver you want";"0"
"nitpick butits actually not hard to make a jump table in python: {""full-cmc"": self.full_cmc_request, ...} request_type certificate_meta not important, but if you wanted to get rid of a big if block ;";"0"
"this file is almost exactly the same as in the android wear repository, where their team is responsible to maintain it. so, i am just acting like a dumb copy paste machine here.";"0"
"hang on, i should do this in a different order really...";"0"
"i would rather see this in stack.sh with your other addition.";"0"
"yay make everything plugglable!!!!";"0"
"i have difficulties in understanding this sentence the one starting with 'however, were this not possible...' it is either me dumb or the sentence need a bit of rephrasing for dumb people like me.";"0"
"why is tracing still running after --async-stop has been called or are you seeing async-stopisslow it is expected that we call async_stop first, thatitis fast, and that tracing should off afterwards.";"0"
"i am not sure that moving the copyright across causes any actual harm... the reality is that these copyright lines are mostly useless anyways. people should use git.";"0"
"nit: false /* is_fullscreen */";"0"
"these names are not meaningful, they should be called something like num_volumes, total_size and volume_size. and there should be an additional one for num_volumes_per_host.";"0"
"more #ifdef nonsense, see below.";"1"
"olga i disagree on this pointitis good idea to make names more clear. cause create_queues is somethine wired. as well scenario_ouptut is something else and should not be used for such thing";"0"
"you discarded a bunch of field copying here";"0"
"i think there is fundamentally a race doing this here, and i am very skeptical of the necessity to allow this on containers who is put_timestamp > delete_timestamp.";"0"
"just that this is written in the prd. i did not give much thought to it. may be, we can revisit if some of the experiences suckwith this timeout";"1"
"if you are stubbing out os.readlink it should work fine without /proc";"0"
"dammitithought i got all of my troubleshooting logs";"1"
"yeah, i had a more complex bit of code and removed the other stuff and did not refactor that to not be silly looking. oops. :";"0"
"excuse my stupidity, but why are you popping here";"0"
"get rid of stackforge";"0"
"please use a docstring. if bluefruit only acts a slave device, please state it here.";"0"
"kill the blank line.";"0"
"sure, seems like that will work: tried it out in crappyexample";"1"
"should be a net::error, i'll make the change. stupid callback signatures...";"1"
"yes, termination and cleaning up is needed, otherwise, things will break and it'll be very ugly for admin to manually clean them up.";"1"
"valid_filters needs to be removed";"0"
"i would get rid of the failure-message here.";"0"
"i hate typing this stuff out, is it possible to make this a util function";"1"
"multi-line comment should be: /** * blah, blah, blah */";"0"
"vendor_info == cisco_vmfex_vendor_info";"0"
"i thought so, but when i only used connection packstack was failing with the error in my wip comment or bz . considering neutron::server implementation it should be ok to just use connection and leave sql_conection undef or false, but well ... after few months with puppet everything is im possible ... unfortunately.";"0"
"remove this - exercise.sh stuff";"0"
"this is how properties in the facet are specified per idea's conventions. it is ugly, but at least we are consistently ugly.";"1"
"subnet_request.subnet_cidr is already an ipnetwork instance, therefore the call at line 52 will be useless even if harmless as well.";"0"
"ah, damn good catch! you are making me rethink the way we are doing things here. essentially, all we really want to do is make sure that what is in cryptauth matches the current gcmdeviceinfo. now thatithink aboutitmore, we probably do not need to store anything in preferences at all. i think we could just do the following: 1 inspect the gcmdeviceinfo and the local device metadata. if they contain the same supported features, we are done. 2 if they do not, then force enrollment/syncuntil they contain the same supported features. in this scheme, we wouldn't need to worry about the listvalues at all, since we wouldn't be storing any values in preferences. we could just extract a std::vector<cryptauth::softwarefeature> from both the gcmdeviceinfo and local device metadata. what do you think about this idea do you see anything that could go wrong here";"1"
"this seems like a crappyway to emulate the platform2 behavior, but my shellfu is weak.";"1"
"it seems silly to print out a deprecation warning always. why not set $auth_strategy = false. and then wrap this in an if statement that *if set* will print the warning message";"1"
"maybe a better name something like getinfobarcolors";"0"
"optional nit: i'd be ok with this being used as a dcheck.";"0"
"i tried to limit wifi changes to those that were necessary for the purpose of this cl. we should do a cleanup passlater to remove all these posttasks.";"0"
"would you use wtfstring in blink";"0"
"seems useless now.";"0"
"ah are you serious i really dislike fixed names somewhere in /tmp with absolutely unclear name.";"0"
"why drain_events here seems rather arbitrary.";"0"
"yuckwish there was a better way to assert this : oh well";"1"
"why did this block have to get changed was this some rubocop violation";"0"
"s/vid/vid s/pid/pid also the first occurrence of vid and pid should be spelled out.";"0"
"these externs should probably be conditional by architecture, although the linker would catch the problem if we tried to use them inappropriately.";"0"
"this logic should be removed.";"0"
"chunkedcopy and friends/i hate gerrit/you probably searched for the use and it did not show any results because gerrit's code review view is functionally retarded.";"0"
"just use 1.0f here. initialvalue is not needed. saresults.channel_b i = 1.0f; saresults.channel_r i = 1.0f; saresults.channel_gb i = 1.0f; saresults.channel_gr i = 1.0f;";"0"
"for some stupid reason, i thought that also checked capacity. i now see i was wrong. fixed.";"1"
"node_uid and task_id should be nullable=false, should not them";"0"
"let us extract the array of object to a displayinfo class";"0"
"jeremy is busy...let us throw him a bone :";"0"
"i am not sure why argv is on a second line. and damnthis function is big! :";"1"
"good point. well i forgot about the windows implementation, tbh i am not even sure ovs+windows is fully supported. i will ask around. to keep this change windows compatible it would make the code uglier and it will not be possible to remove the cache of registered ports. that sucks.";"1"
"qoses is soo ugly!";"1"
"last year you changed the defaults from naked array to a std::vector";"0"
"bordertype=cv2...";"0"
"correct. what the hellcould anyone do with this accidentally-public detail of the old implementation";"1"
"this only deletes subdirectories of $workspace...";"0"
"you should even autorequire the neutron package in lib/puppet/provider/neutron_plugin_ml2/ini_setting.rb";"0"
"damnit, i swear i know how to speel this word. fixed.";"1"
"yeah, annoyingly we currently have a mix. since these really belong in <strings.h> i just copied them across. one day we should just remove all the ""extern""s.";"1"
"i was looking at real_au_worker.py which imports the local constants. you are right that this module is importing chromite.lib.constants instead. ugly. i'll post a cl.";"0"
"replace with a if dexlist.isempty ... put a comment about this hack.";"0"
"nix the period to match the other listitems this is just me being anal";"1"
"stupid late question: perhaps in the future life we could use -d or --disassembler-options=force-...";"0"
"to match the model this really belongs in the same structure that we have phy_init in.";"0"
"to rehash the previous discussion. i would put a swapenabled member in rendertestparams and disable it in the null driver test, at least for draw call perf.";"0"
"that is the reasoning. to enforce this, i have added renderer debug urls to urls that can not be committed by a renderer process. this should result in a renderer-process kill if the renderer tries to do it. let me know if you prefer a dcheck.";"0"
"thanks for renaming all those. it is really a place to make dumb mistakes.";"0"
"you are leaking memory here by creating a new testmessagecenter, then not deleting it at the end of your test. if you attempted to submit this, it would be reverted due to the asan bots. please make test_message_center_ into a std::unique_ptr.";"0"
"of course. this makes sense. thanks! the only stupid question is the one left unasked :p";"0"
"nit: needs to be removed";"0"
"agree. this flush should be removed.";"0"
"should be ""start: execute disksetup.""";"0"
"those local tests are the only ones that still switched it to false, hence the expectation changes here. downstream, however, this should be a noop as it is true everywhere.";"0"
"i think we should remove tmp_dir at the end of script";"0"
"// the pid of the run_oci process. note that this is not the container's init pid. pid_t run_oci_pid_;";"0"
"you should return a os.terminal_size object, example: ts = os.terminal_size 10, 5 mock_os.get_terminal_size.return_value = ts";"0"
"you are hardcoding 0 here and using ec_ver_pd_chip_info_version above";"0"
"everywhere else we write !issettinggroupactive, why do not you do the same here";"0"
"suggestion: raw string literals are our friends here.";"0"
"self.attributes_schema = cls_facade.attributes_schema";"0"
"__str__ in this case is a bit off imo; and yes it is a bit of a javaism, but __str__ on an object generating a giant assxml dump that is not exactly pythonic.";"1"
"if __name__ == '__main__':";"0"
"i think you could populate both process info and thread info from the single ""ps -ewwlo pid.lwp,comm,cmd"" command run output.";"0"
"my english suckshaha ;";"1"
"this is bad, interopgrabbag should be used by the filters only, but here you read it in core. that is a no-go.";"1"
"good catch! darn clang's fast-and-loose acceptance of arguments! enums should have to be cast to be used as ints... with the adjustments to allow on chrome:// urls with active tab, this actually was correct before this cl underwent a number of behavior changes...";"1"
"if you are in the area doing tweaks, 'initializing', not 'initializeing'. if you overlook correcting the spelling, i do not personally care- just pointing it out since in chromite we were ultra analabout spelling.";"1"
"use arenavector please, i want to deprecate growablearray.";"0"
"done. per offline discussion, i will move this to v4l2vda and v4l2svda.";"0"
"good catch, damn.";"1"
"""refer to"" you seem talking about restrictions, butthere are a lot more restrictions in the spec. we do not need to explain all of this kind of restrictions.";"0"
"this is not clear for me why we put 'aborted' here. async=true means task will be aborted even if its status is 'init' or 'veryfying' so command will not wait for status 'running' . this change looks not correct";"0"
"nit: still useless";"0"
"i guess that i use nova and neutron to define ""the rest of openstack"", and both use them bare. of course, i think they are stupid in general, since whatever they are doing could be plumbed into log.info directly. that said, we could ping in the oslo channel tomorrow and see if there is a standard";"1"
"ah crapit is what i feared i wanted to check this in to test . the separator is going to be dependent on windows. it is likely the property will setitup correctly but for the case below where i make a path manually, i need to change that.";"1"
"i did not look at all closely at the native impl i plead incompetence there and it has already been heavily scrutinized , butitlooked like we'd actually get a dcheck failure if name was null so perhaps the docs here should be updated, or the code there should throw";"0"
"iqn = self.test_volume";"0"
"good catch! damncopy paste has bugs in it :";"1"
"these fake ids should be put into fakes.py.";"0"
"nits: should be sorted after ap20.h in future cls.";"0"
"you need to return here... now execution continues to line 136 where we'd crash.";"0"
"i've got something in the works to blow away this whole params/_require business, just you wait.";"0"
"i think the default value should be an empty object";"0"
"hooray for killing layout_client_after_edge. never understood that one...";"0"
"""already"" here implies that the ""kill "" above was not involved in its death. it is possible that the process exited due to the kill , since stopprocessandblock does not know anything about the pid it is killing. i'd therefore suggest instead that this message be ""process <pid> has exited"", and that you use slog this, 2 or something like that since this could be the normal case. are you sure you do not want to return true here";"0"
"it will be killed when the screen exits.";"0"
"i'll remove them";"0"
"i would recommend to put 'none' here as dummy content";"0"
"oh, it looks better in my pc chrome, i am interested in why i can see a useless indent in my ios edition..";"0"
"h403 multi line docstrings should end on a new line";"0"
"accessing mavalue needs to be protected against data races";"0"
"fair enough. butithink that if we are running into this case, we've got bigger problems. also, std::string is not _that_ dumb.";"1"
"these params should be nudged to the right a single space.";"0"
"should be fatal if n equals -1 dump errno or 0 ""did not push "" .";"0"
"upstream tried adding writefilewithmode, and they tried changing it from 0666 to 0640, butithasn't been sticking so far. at any rate, the code assumes umask will apply. you could take care of that here by doing. mode_t mask = umask 022 ; writefile... umask mask ; i agree it sucks";"1"
"cros_build_lib.die then drop import sys";"0"
"yeah, it kinda sucksbecause it is the single case we care about. if we could trust the program to always finish properly we could ask them to even write something to the fd.";"1"
"this will be the way callers those who instantiate httpproxy objects will be able to find out what tcp port the proxy lives on, so they can advertise this to their callers.";"0"
"not necessary, self.columns is a tuple.";"0"
"we probably could use sh here too instead of mixing sh and subprocess ...";"0"
"damnyou, waldon. : i figured we could add migration when we have a migration to do..";"1"
"remove this comment too btw the german *oder* was not translated to english *or*";"0"
"i think the + syntax for strings is a bit cleaner than .concat. also, use sdkconstants.prefix_android";"0"
"the ""if tag is null do magic"" thing is kind of shittyapi-wise. i do not mind doing some kind of sanity checking to help catch mistakes but i do not think that is the right interface.";"1"
"seems each project is implementing its own layers which kind of sucksbut mark the symbols you want exported with: __attribute__ visibility ""default"" or if you want to be super, add a new libchromeos header that adds a define for this, and then fix all the platform projects to use that instead ...";"1"
"this seemed odd to me, too, but i was a coward. i am pretty sure it is harmless, though, and ccross just pointed out that in the 0 case the error message would be a lie anyway.";"0"
"can you please add a comment here to explain why we kick users into chrome for desktop pwas";"0"
"part of me thinking about disk_gb for here. butthats maybe silly.";"1"
"is it sensible to use #if defined google_chrome_build , #else, #endif so that the four chrome interfaces are only supported in google chrome builds, and that the one chromium interface is only supported in chromium builds if not, why not";"0"
"device is doa because this > 31 chars in length. f***ing system properties...";"1"
"add /*true_fallthrough*/, ...";"0"
"nit- not required, driver_info is always a dict.";"0"
"and then you can just assign max_builds = self._options.max_archive_builds";"0"
"tenant_id' should be removed.";"0"
"i disagree. i believe that would impose a burden on every caller of common_minimal.sh even if they did not need cgpt for their function.";"0"
"explicit tag is not required. also why this cannot be written as $.externalrouterid != null";"0"
"this conflicts with your commit message saying thatitshould only contain nova instance ids.";"0"
"lame.. this is causing the failures. x.x";"0"
"please delete at least one of these configs";"0"
"since _get_classis mocked and it ultimately return the utils classwe may not need to mock these utils classes in the ops tests. for example in test_vmops in setup we have something like: self._vmops._vmutils = mock.magicmock . this will no longer be necessary. is this change in the scope of this patch what do you say cbelu";"0"
"style nit: add /*out*/ for out parameters /*out*/bool* top_test";"0"
"optional and regex should be removed.";"0"
"per hacking standars, the falcon import should be moved down below standard lib imports. with a blank line between it and the imports above and below.";"0"
"is it simpler to leave master version def run_ostf self, *args, **kwargs : self.fuel_web.run_ostf self.cluster_id, *args, **kwargs";"0"
"it is an address, right can notitjust be a %p sorry, the pri shitjust hurts my eyes :-";"1"
"holy crapjust like real software!";"1"
"these are garbage changes that do not show up in the actual diff / patch..";"1"
"why should this ever be false in this case";"0"
"yes, 'version' looks like useless.";"0"
"is there any need to preserve the old code in a comment better to just delete it";"0"
"yes. this is the only caller that we care about. there is another caller that dumps debug info on the host but i've deliberately left that as ""tl"" because it is more of a dump of what is stored in the actual headers. i did not want this fix in the resource table because it does not care about the frameworks in general. this classis supposed to be that glue.";"0"
"style: these braces are not needed - to match surrounding style, remove them.";"0"
"grr, i guess the rest of these commit the same offense, but ... man i hate it.";"1"
"nope, this was me being stupid ;";"0"
"will not this line crash with attributeerror since you do not have those methods start, stop on your fake manager";"0"
"can this command hang what happens if tgtd dies";"0"
"dumb question, what standard are we following for the language codes i notice this change adds zh_cn and ko_kr butthe previous entries are ja instead of ja_jp and es instead of es_es";"0"
"check if we get postamble where all pixels are black.";"0"
"i do not know how all these config files work; my question may seem stupid. what makes the 'exec' happen only on the 'start' path, and not the 'stop' path";"0"
"const uint16_t* too.";"0"
"butthe behavior of exit -1 is even more implementation-dependent than the behavior of exit exit_failure where the latter is at least defined to return a status of ""unsuccessful termination"" ; i am pretty sure the original -1 was misguided cuteness or pure ignorance and not relying on deprecated features of the c++ standard imo does not carry any ""wtffactor""";"1"
"very, very ugly variable name ""summ"" .";"1"
"grubby should be listed here.";"0"
"there is no 'vm' here, so 'vm.lastrun =' should just be 'var lastrun ='.";"0"
"super is best used for notification; __init__ really is not that form, usually you need to control the flow. some folk argue super should always be used... butthey are also stupid and wrong. my way is the one true right way. ; joke aside, it could be super if we wanted, butthis is not notification... thus avoiding it, especially since super basically forces you to have the same prototype the whole way down. google for ""python super considered harmful""; full elaboration of the above is there.";"0"
"this is actually owned by both the daemon and brilloaudioservice which should be a strong pointer . should we make it a shared_ptr and not worry about when it dies";"0"
"according to self.wait_until_ports_state implementation, selfagent.check_ovs_status.reset_mock seems useless";"0"
"also you canuse iselementtextequalto here and get rid of dashboardpage.getclustername";"0"
"done. suckswhen you copy/paste stuff without realizing you misread one of the conditions. :";"1"
"right we should either remove all the if/elses or leave them all. further cleanup can be a separate patch.";"0"
"remove all the trailing white spaces";"0"
"whenever want to use coreos, cluster_type=coreos";"0"
"that is a bad name. what is lazy aboutit most team members were not in favor of lambdas in the past. that is where codeoutput came in.";"0"
"yes, need to pylint the sucker.";"1"
"this is kinda dumb and inefficient in some cases. we can probably first memcpy the whole data_ to make it word aligned, do the conversion in the loop, and then memcpy the result back to data_ . we canalso check if begin_ is word aligned and skip the memcpy when appropriate. hdyt";"1"
"please run tools/conf/generate_sample.sh.";"0"
"that is, the localframeclient must be an emptylocalframeclient.";"0"
"self.db.delete_health_monitor is already a mock.";"0"
"the idp's need to be a list so that we can handle multiple idp's, so perhaps it should be something like: keystone_sp: idp: - { name: '', entity_id: '', metadata_uri: '', metadata_file: '', metadata_reload: '' }";"0"
"hmm. i was actually hoping to add something to the novaobject.__init__ that would just take a **kwargs to prime properties of a new object for convenience. imho, you should mirror what everything else does and provide a staticmethod for constructing a pcidevice from a db object.";"0"
"imagesv2fixture should be imagesfixture";"0"
"according to file_con's only sh is shellexec. so vold can create this, and execute it. seems suspect.";"0"
"nit: you could indent these mocks, so they are distinguishable from the code below";"0"
"loop_ = nullptr;";"0"
"hey look, bullshit tm";"1"
"you are overwriting the first rv without looking atit";"0"
"$stores_real 0";"0"
"does pbr not leave a .egg-info directory when packaging maybe devstack does that or maybe that was only when using ""setup.py develop""";"0"
"juergh, please do open a bug on launchpad and assign yourself! i agree, stuart totally stole your trial bug :";"0"
"goddamnthose unrelated changes :";"1"
"because i am retarded. will fix...";"1"
"todo toyoshim : remove this member once resourcerequest gets it.";"0"
"fair enough, yeah the whole retry on *all* conflict sucks the api in ironic should be smarter and actually tells what is retryable and what is not by either using a different http return code or headers such as retry-after. unfortunately none of those are done today we have a bug to track it";"1"
"still not sure of why this needs x_file_perms. are you sure you can reproduce this on an aosp tree";"0"
"this sounds dumb to comment on, but good note here. saves someone later asking why the code was commented out instead of removed.";"0"
"if you change these, you need to change the places in the code that finds these objects by these ids";"0"
"it is better to add docstring e.g.: :param value: wtfis value here";"1"
"thanks, that is an interestin use of __eq__.";"0"
"should scrub key_data after creation of aeskey.";"0"
"auth_token, auth_uri, tenant_id, username should be removed.";"0"
"do we really need to protect against the file system changing under our assi think that is a bit excessive.";"1"
"we call server object add_fixed_ip method, so the mock is useless.";"0"
"should have tempest in here also.";"0"
"i guess you may want to remove these two sentences.";"0"
"silly tool, it is only 5 retries :-";"0"
"if is_enabled config_display_spd_data spd_content != null";"0"
"$ gb_uwinapi should not appear here";"0"
"damndocs.";"1"
"w292 is a warning that a file should end in a blank newline. h404 is the hacking rule about always having a single <80 char summary of all docstrings -- something i personally think is silly and since nova also ignores it: i figured we could as well.";"0"
"... you are overwriting w0 again after this without using it.";"0"
"call destroy your body of your _clear";"0"
"i think we want to get away from using bt_hdr for this kind of thing; layer_specific is bad hack that is not great for readability.";"0"
"may want to add an s+, or equivalent to this grep string. i've seen real-world /e/n/i files with weird whitespace.";"0"
"do not store this into self, it is useless.";"0"
"leveldb.sharedcache.bytesused is only in canary so i omitted that step. still mark as obsolete";"0"
"netapp legal can choose to have the code submitted or drop the copyright's. they are useless... git history shows clearly who comitted the code and provides an author tag as well.";"0"
"what if upon trimming, all data are deleted and self._data is empty";"0"
"if we are going to change this, let us also remove bluetoothdevice::take";"0"
"replace this function with below one- def _test_add_remove_router_interface_with_port_id self, network, created_router : port_body = self.client.create_port network_id=network 'id' # add router interface to port created above resp, interface = self.client.add_router_interface_with_port_id created_router 'id' , port_body 'port' 'id' self.assertequal '200', resp 'status' self.addcleanup self._remove_router_interface_with_port_id, created_router 'id' , port_body 'port' 'id' self.assertin 'subnet_id', interface.keys self.assertin 'port_id', interface.keys # verify router id is equal to device id in port details resp, show_port_body = self.client.show_port interface 'port_id' self.assertequal show_port_body 'port' 'device_id' , router 'id' return show_port_body";"0"
"sucker yeah, that would have been so much better.";"1"
"i think it'd be easier to clean up the abort logic here first. the way this is written sucks move this check into dorunningstep first thing and have it return an empty result and an error. alternatively, remove it entirely and let autoserv get brutally murdered right after starts. less logic is better. i do not think anyone cares if an abort before autoserv starts is cleaner than an abort during autoserv running.";"1"
"using a singular 'with' is a bit ugly, and it dislikes assignments... this just looks better.";"0"
"this should be created and targeted for mitaka. i took care of it.";"0"
"is this a doc string or a comment and, please use ""returns""";"0"
"i hope this is not a dumb question but how many cpus do the dsvm tests run with in the check queue i'd like to know for sure how many workers we are testing with.";"0"
"passing integers as addresses is a sure sign of trouble it certainly was on exynos . we very intentionally check the types being passed in so stupid errors like reversing the order of arguments by accident do not bite us.";"0"
"programmer humor must die in v3 api :";"0"
"run the command for your cpu. for intel, run this command: xx for amd, run this command: xx";"0"
"defining segment_index becomes useless here comes useless";"0"
"invalidvolume should be raised here.";"0"
"no, we can not - because we can not write to that directory. and hidden files in /tmp are terrible.";"0"
"i have stupid question. does this test run agent.py l54";"0"
"this also could result in malformed protos";"0"
"nig: s/specify for/specify";"0"
"nit: one day someone pep8 maybe is going to moan that the swift imports should come after the builtin lib imports";"0"
"str2dict looks a bit like an overkill, but i can see how it is more bullet-proof this way.";"0"
"ick, sure looks like configs that do not already set the bind_port are just going to get a keyerror gross. i was expecting something more along the lines of a logged warning that says in future swift releases the bind_port will be required. even if we can pull this off with out a warning/deprecation - we should at least get a better system exit than stack trace.";"0"
"dirty business of mixin's: in the context of where this is called, this is going to be the l3 plugin, so you do not need line 324 and you can just do self.";"0"
"nit: sorry if this is a dumb questin, but why do you need the blocks can not you just reuse the objects vector like it is on line 88";"0"
"opportunistic bugfix.";"0"
": i told you that i am dumb in naming, did not i : please suggest any, it is absolutely above my imagination :";"0"
"so add it to node model. that is a dirty hack and not a way to get if node is running. are you sure that will work on virtualbox for example";"1"
"oh, darn. coming right up!";"1"
"all your classmethods should be staticmethod";"0"
"these should not be there, i see you need <jni.h> and <stdint.h>";"0"
"should this also passthrough the authorization_code_ttl";"0"
"will adding this line suffice rtmsg.rtmsg_dst_len = prefix_length;";"0"
"agreed! this annoyed me too... but couldn't figure out an easy way to do it.";"0"
"the line above should be removed.";"0"
"and here, if ha network has no more available ip retry is no use, just waste of time, and let neutron server do useless work, delay execution of other api process.";"0"
"die isnt needed here";"0"
"/* libqmi_poller_h */";"0"
"if this is the only one on the next line we probably only want one extra tab.";"0"
"yes. i do not know if it wasstrictly required for this cl as childneedsstylerecalc is cleared again on the way back up , rakina can answer that, butthe existing code would have marked the ancestor chain when dirtying a locked element since we start checking for display locking on the parent in markancestors, so this should be a good thing regardless of the other part of this cl.";"0"
"this should be delete=oper.delete";"0"
"lets shoot for 10 years at least!";"0"
"the error messages are shityou can not use 'user-name' in an ini file, it has to be 'user_name'";"1"
"this can be suggested as a new spec when we get on to puppet 3. biggest issue with it is we use splat and regex matching in node definitions. i personally like an expressive site.pp versus bludgeoning hiera into being an enc. i also dislike the 'more magic' of hiera data bindings that this would require.";"0"
"i think we also need to run ceilosca_devstack.sh before this or should be included in ceilosca.sh";"0"
"crapthis is getting long. so since these are officially deprecated now in h can we finally start cleaning some of this stuff out in i";"1"
"okay u just burned my brain.. please call it in normal way: for flavor_args in self.config: or for flavor_config in self.config: or something like that.";"0"
"more than these roles you are using them pretty generically.";"0"
"i think you also need append here for response_interface into response_interfaces";"0"
"this has recently been added to history so it threw me off a little. should this be part of the coordinator i think coupling the vc to tabgrid feels kind of weird. i think also a comment could help wdyt";"1"
"lol, ""sucksis probably not the right word for the admin guide. maybe we could try and quantify it ""inefficient"" i think the main hangup with container sync was that put/100 continue support was not working - it is been worked around with a pre-flight head i believe.";"1"
"does this work i tried pkill -9 locally and it does not seem to kill my dalvikvm.";"0"
"oh sorry, you should still be building llvm-rs-cc.exe, but not libllvm.dll/libclang.dll. do you have the following cls in your client:";"0"
"cros_build_lib.die again.";"0"
"sensitive_fields=sensitive_fields";"0"
"this variable assignement is useless.";"0"
"remove the user_only, it is not needed anymore";"0"
"you'd better not use the ' 'to a newline.";"0"
"that kinda sucksalways binding_failed .";"1"
"i uncommented this and did not see a single failure over a bunch of runs on both host and device.";"0"
"what style guides are we working with /* * xx * yy */ is preferred.";"0"
"oh, in local_post_install_cmd we have to use $ local_installed_module instead of $ .";"0"
"ah, silly oversight. fixing.";"1"
"this in particular suggests that this should not be a bionic test. you are allowed to add your own gtests to cts...";"0"
"1. yup agree. maybe we can reduce it to 1 hour for the 7 tests 11a, 11b, 11g ...etc so we can complete this test in 7 hours. good suggestion! 2. i see, i'll add more comment on top of it. the basic idea is that we should not ping dut too often. i think at least >= 5 mins maybe we can choose 10 mins or 15 mins . we wanted to test the capability of dut to maintain an idle connection with ap this involves time synchronization, wake up from power-saving mode . dut should remain the connection during the test. --> this recall me that i should also disable power manager powerd to prevent system entering s3. in wifi firmware, it should send out ""keep-alive"" packets to ap periodically for example, every 10 seconds to prevent ap drops it.";"0"
"this should be collapsed so that the _lw is all in the log.warning";"0"
"the official spec says that multiple values per key should *only* be allowed if the key *also* is specced to support comma-separated values in a single key. i.e. if ""foo=x,y"" is a valid header, then ""foo=x;foo=y"" should be as well. in all other cases, supporting multiple header values is not in spec. the problem is thatitis dumb for all the server implementation code to have to check for whether or not a header value is a list, and it is also dumb to make single-value headers lists just for the sake of consistency. so... happy to change this if you want me to, but i do not like the tradeoffs it leads to.";"0"
"sounds like this should not be a dcheck but should be a reportbadmessage.";"0"
"i actually kind of like option 2 especially given how few adb_creat callers there are , but actually i was just being stupid here --- i'd missed the errno side of this completely and was just thinking about the debug logging.";"0"
"these deps are not needed since we already install them in testenv above";"0"
"so this the should be const charclasspcharclassptr = asyslocale.getcharclassptr ;";"0"
"this should be vlan and vxlan trunk support. i will edititin the next commit.";"0"
"or just use uint64_t flags. we'll have moved on to other things before the other 59 flags get used... actually, fuckit --- you canuse your last flag as android_dlext_use_flags2 and add a flags2 field anyway.";"1"
"should be enable_service h-eng h-api h-api-cfn h-api-cw";"0"
"i am just going to kill waitforservice because it is dumb";"1"
"#endif /* config_lid_angle_tablet_mode */";"0"
"this should be a uuid i think all id's here id, volumeid, serverid are uuids";"0"
"here the fact that we keep trailing empty fields is annoying.";"0"
"nit: skcolor target_color = should_animate_ initial_color_ : target_color_;";"0"
"how about initialize is_loaded to false and here use =. drop count and below return is_loaded.";"0"
"use 'dobin' instead do you need the .py prefix there is a pref to not install like that anywhere. newbin util/unpack_ftb.py unpack_ftb";"0"
"the engine and connection is managed by get_session and uses lazy loading. it is better to use them rather than write twice.";"0"
"are all of the id s in this file actually resource-ids if so then let us call them all resource_id, for clarity.";"0"
"given that the old code was wrong -- there is no ""config/envsetup.make"" -- let us just kill this. it is all clearly dead code. git says ""initial import from cupcake"".";"0"
"should be fs_type, sysfs_type";"0"
"silly nit: per hacking these need to be double quotes, also the summary goes on the first line check the convention .";"0"
"this is kind of silly.";"1"
"need to be inside a _begin_decls.";"0"
"so this will kill execution entirely. is this something we want to do or do we just want to drop the particular result we are looking at";"0"
"maybe a stupid question, why are not you not using the decorator instead of the contextmanager, given the current with statement encompasses all the method edit: doh, nevermind, just saw good dan's point in ps12.";"0"
"use mkdtemp and nestedtempfile";"0"
"should add ' die' here";"0"
"lp1444546 moved to the next mu. note should be removed";"0"
"oops. changed to set this mock verifier to a signedexchangehandlertest's member field.";"0"
"let us eradicate the black magic: stdout, stderr = utils.execute 'chroot', chroot, 'dpkg-query', '-w', '-f=${package} ${version};;' pkgver_list = stdout.split ';;'";"0"
"ncolfield should be size_t as well.";"0"
"lack of punctuation here is confusing. # this upgrade is a dummy since there was a mid air collision; moved to 19_*.";"0"
"-1: next line will crash with a unhelpful error if there is an error and there is no 'data'...";"0"
"ah crapmy bad. i misread the proto docs.";"1"
"useless conditional if you follow my suggestion.";"0"
"the old thread would only kill the sync service thread if it failed to write the errmsg. what do we really want";"0"
"should we deprecate and kill needs_reload then, once tabloader logic is in lifecyclemanager as well the only client is session restore now, iirc. maybe add a comment with a todo and a bug for this";"0"
"i think a patch is needed for utils.drop_unique_constraint instead of migration patch if migrate_engine.name == 'mysql': ...get fk from table ... test fk columns in uc ... drop fk ... drop uc ... create fk";"0"
"""forcing shutdown of service $service: pid=$service_pid""";"0"
"hmm, are you reimplementing a worse i915_gem_object_get_pages";"0"
"just asprintf this, or return a std::string. no sprintf in new code.";"0"
"can you please use mock instead of mox if possible";"0"
"suggest just returning the session here, and create the client instance later, tuples are nasty when undocumented, i thought this was an error at first";"0"
"my mistake: this needs to be 'manageable'. otherwise it'll hit the 20 minute timeout in the set_nodes_state workflow above.";"0"
"can you make the text match ""a non-admin user will not be able to execute actions.""";"0"
"i think we can get rid of these, they should be unused";"0"
"info: normal status messages showing measurable units of positive work passing through under normal functioning of the system. should not be so verbose as to overwhelm real signal with noise. should not be continuous i tmm alive! messages. how can a race be a normal functioning of the system the race should be killed, or the log trace is useless, and should only _bug_ the developer to do something aboutit";"0"
"actually there is already a command for taht 'restore default command' so i guess that is fine. but at least add some comment below to explain the 'hack' because that is really not obvious, and in 1,2,5 years a poor dev will stumble upon this and wonder 'wtf:-";"0"
"graph_type=none and in body if graph_type is none: graph_type = default_graph_type.";"0"
"why is this needed we should be using instance objects now so this is ugly.";"1"
"fixup! is a git command that gets executed when running git rebase --autosquashitis not meant to be published that way.";"0"
"this function is useless and can be removed";"0"
"kill the white space in the comment.";"0"
"maybe a dumb questions, butthis does not look like a fake butitis in fake.py, what am i missing";"0"
"sounds good to me. let me save one of those. thx!";"0"
"errr. i was trying not to touch these, but what the heck! i renamed other flags too and reflected them in the crrev.com/c/1287016 : thanks";"0"
"assertin";"0"
"done. that was just for git cl lint complaining about sprintf-vs-s*n*printf - nothing important...";"0"
"one thing that might confuse dumb people like me is that here we are talking about deprecation from a deployer perspective, as we'll migrate the same api over to the new repo and it will be consumed in the same way. so perhaps make this dumb-proof by stating specifically what you will deprecate";"0"
"i did not know you could do this with isinstance. will do";"0"
"why are not you calling successful_completion or failed_completion for this part";"0"
"thanks. very helpful. we will use this convention.";"0"
"changed resp = self.ssh.lsfcconsistgrp fc_map_id keep this function the same";"0"
"i misunderstood what you were asking. there are too damnmany different kinds of macros, all with very similar names! i thought you were asking about macros like _posix_advisory_info which must always be defined, but whose value tells you whether their feature is supported. obviously these ones need to be defined. but now i guess you were actually talking about ones like _posix_ss_repl_max which should _not_ be defined if you do not have the optional feature it belongs to. obviously these ones need to _not_ be defined. as for _posix2_fort_dev, note the ""if"" in what posix actually says: ""if this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809l."". the little "" fd "" next to the name means that this is part of the optional extra fd fortran development . we do not have that, so we do not need to have any of the defines, and it is probably less confusing to just remove them. though, as you say, in this case at least they let us setitto -1. if glibc does not have a macro, that probably means we do not need to either and also probably means we _shouldn't_ have it --- i can not think of any part of posix we support that they do not .";"1"
"creating a new fake client splits the actual and expected values across two different files. instead, just mock out self.scenario.admin_clients with a mock, and check for return values as appropriate. that is what you'll need to do once merges anyway. that will also let you get rid of all of the code you added in fakes.py.";"0"
"dislike this span10 classare they necessary and these divs in general";"0"
"the 'create_static_client' is improperty. the ops has no ideas about that term. i prefer to use ""xx for 'glance.num_retries' as 0""";"0"
"m_open .__iter__.return_value = iter lines";"0"
"stupid question for peter/bill/vince: what does this ""200 * cfreq"" mean vco can not be less than 200mhz is this a requirement for all plls";"0"
"this was dumb and obviously never found any bugs. i renamed it to prettyprinted to clarify thatitdoes not print anything, but merely returns a string. the previous override on the clusterfuzz side also just replaced this with a non-printing method.";"0"
"ignore this, i am talking rubbish. i'll change to datetime.";"0"
"it is just an oversight. we should clean these up and make our execution consistent.";"0"
"afaic, it should be in objects.cluster";"0"
"its a little gross that pthreads had this state for dlerror";"0"
"consider checking that in.dataavail == 0 at this point. i.e., there is no trailing garbage.";"0"
"nikhil: do we need data migration";"0"
"good thing you wrote it this way : - you would've gotten screwedif you wrote ""org.conscrypt"".equals because jar-jar would've helpfully changed the string for you.";"1"
"might be worth keeping since it is run as part of cts. presumably nobody is stupid enough to modify dalvik and implement destroy , stop and stop throwable";"1"
"$ source admin-openrc.sh";"0"
"root_password should be passlib.utils.generate_password size=conf.default_password_length";"0"
"move this ngdoc down to above function hzinclude";"0"
"you may want to move the cleanup step before the _wait conditions, cause we'll have to delete it anyway";"0"
"so what event is a positional argument of a well defined api. when you test your callback you find that out and fix the damnsignature.";"1"
"i think you should refactor this into a function: killwithtimeout pid, signal, .... then in your code here, you would do something like: if killwithtimeout pid, sigterm, kwaitpidpolltimesforsigterm { return true; } if killwithtimeout pid, sigkill, kwaitpidpolltimesforsigkill { return true; } // in case of killing failure. log error << ""timeout waiting for process "" << pid << "" to be killed.""; return false;";"0"
"the above seems like it would be more appropriate to modify the existing ""attach_block_device"" action than create a new one...";"0"
"you are jumping to the destroy_workqueue on a non-existent wq.";"0"
"you can remove has_ipv6 from 101 and 104, and here do: else: # kill the daemon if it is running ...";"0"
"nit: nonexist*e*nt.";"0"
"thanks p draig, i'll address those nits.";"0"
"argh, i hate these long imports, but i was the one whomoved the code, so it is a beast of my own creation. :";"1"
"ergh, this method is crapthen, it should raise and not return notimplemented fair enough, butitdeserves another change for modifying that... :-";"1"
"yes, this is stupid. fix it right now.";"0"
"damncopy/paste wrong thing : looks good to me.";"1"
"why this you only have c++ code. also, use -std=c++11";"0"
"should this be under the live tests section how does running this compare with running tpm_utility_test with use_tpm2";"0"
"sessionlengthlimitmodel:: should not be needed here or below.";"0"
"please use mock instead of mox.";"0"
"fuckyeah!!!";"1"
"you already assert the call count, just make side_effect=raise_timeout";"0"
"this extra white space should be removed.";"0"
"those sneaky whitespaces!";"0"
"i know, but i hate it. but i'll rise above my tastes for you, my boss!";"1"
"why do you kill ha-guide here";"0"
"i would prefer to use std::pair<oustring, oustring> here. we can do that in another commit.";"0"
"die is like a logging command -- passin the args and letitdo the string formatting for you die 'foo: %s', bar";"0"
"net_db.id it will crash here..";"0"
"with the ""1<<7"" multiplier below, is the dummy supposed to be decimal 127 because 0x127 is 295 which is potentially a valid dvfs_avg_lpf result.";"0"
"small nit. put bl_status_watchdog above bl_status_csum_valid to maintain the bit order above.";"0"
"good catch, should be removed.";"0"
"that d get rid of silly things like this cast";"0"
"why are you skipping two every time you are iterating on line 220 already.";"0"
"dev_dbg for all of these; definitely no naked printk.";"0"
"yea, this kinda sucksi'll think about how we can improve this.";"1"
"something's not right here though. my build failed with a linker error with this snippet. i will look again and let you know what the problem is.";"0"
"this exclusion of the left parens does not look like an accident. should we be worried about a use-case biting us in the future";"0"
"sp.tx_vo_state != vo_wait_tx_video_stable, so you can remove this and put the break in the else block above.";"0"
"probably those as well. the pointitto make sure we get through all the initialization that can fail before sending ok, and those look like things that could fail. maybe a better solution would be to open a pipe before forking the daemon and using that to send the okay instead of stderr.";"0"
"ignore this, brain fart.";"1"
"could we not do these as: get /trusts trustor_user_id=myuserid get /trusts trustee_user_id=myuserid";"0"
"i think we should always passthe enforcer, see rulecheck bellow";"0"
"we should remove osl_seterrorreporting to sal/osl/unx/compat.cxx in a follow-up commit";"0"
"yeah, it was the only way i could see to allow different providers to set different defaults especially, if they do not support the default proposed by the reference implementation . btw, there is an error in uts which i do not see locally , where the service driver is mocked out, but validator is not set. will push another patch today.";"0"
"may be worth describing what authn_request is, you are mutating it a lot in this function";"0"
"testl ecx,ecx is smaller.";"0"
"ok, conf.interface_driver value dumped.";"0"
"technically this gets kinda weird around the defaults. create_resources takes a default as a 3rd param butitis a flat hash. we may just wish to do something like... $octavia_flavor => { ""octavia_${amp_flavor_id}"" => { 'id' => $amp_flavor_id } } $octavia_flavor_defaults => { 'ensure' => 'present', 'ram' => '1024', 'disk' => '2', 'vcpus' => '1', 'tag' => 'octavia' } $nova_flavor_defaults = merge $octavia_flavor_defaults, $nova_flavor_config} create_resource 'nova_flavor', $octavia_flavor, $nova_flavor_defaults nova_flavor< tag == 'octavia' > > service 'octavia-worker'";"0"
"i guess wsa stands for windows sucksabsolutely. i will remove this code, it means we will just have to live with the code retrying until it dies.";"1"
"i am a big jerki promised you a rubber stamp, butthis should say 'openstack imports' rather than 'nova imports' since this is a project-agnostic module. using 'nova' in the examples is fine. apologies for pedantry.";"1"
"my mistake, it should be ca_file instead of ca_cert. done.";"0"
"putting parens around ::android::singleton... should fix it and confuse the hellout of cpplint .";"1"
"useless ref";"0"
"here's your pep8 error trailing whitespace";"0"
"i am not sure why the diffs are so screwedup like this. all i did was remove this line and ...";"1"
"in order for an environment var to be picked up it needs to be executed in a shell";"0"
"er, to clarify: with or without this change, ssl_renegotiate in boringssl always failed. boringssl can not initiate renego, only acceptitas a client. which means this line is not reachable in boringssl ports, so it does not actually matter that ssl_set_state is, strictly speaking, a no-op in boringssl. reaching into the ssl* and messing with its state machine is kind of insane. openssl's renego api is terrible. given that, i am not sure what the test is doing when compiled against boringssl since it apparently does not notice. butthis change should not make things worse.";"0"
"use lib.git here. you canuse git.rungit 'add', ... and such.";"0"
"i think you canuse try: sync_utils.waitfor some_func, duration_secs, self.args.current_sampling_period_secs return true except type_utils.timeouterror: loging ... return false";"0"
"dammit, missed l101... okay, will respin the change now";"1"
"cleaner: use ref com.intellij.openapi.util.ref instead. e.g. final ref<boolean> result = new ref<boolean> false ; ... ref.set true ... return ref.get";"0"
"please get rid of trailing whitespace";"0"
"instead, it could be data = template f for f in fields if f in template";"0"
"this is such a nit i feel like an idiot even mentioning it. if not x with an else always bugs me. i always have to double take by the time you get to else because it is a double negative. this pattern is below and not something you need to change. just a rant.";"0"
"we should probably also maintain a drop count per pid, so we can see in the tables which specifically chattiest pid's got hurt when the per-uid spam filter kicked in.";"0"
"ugly hardcode. legacy, i know";"1"
"this conditional include shouldnt be needed when all printfs are sal_infos then ...";"0"
"sdkconstants.attr_translatable, sdkconstants.value_false";"0"
"these should be disposed in dispose right";"0"
"taskhelper.update_verify_networks";"0"
"the next line does not do what this comment says it does since it is not populating the trust. remove the comment since it is out of date.";"0"
"nit: useless";"0"
"could you add a comment to describe why we should not reach this";"0"
"vsql command should be replaced by exec_vsql_command";"0"
"withparaminterface should be removed now.";"0"
"andrew: what do you think about the udelay is it a stupid objection on the other side, sifan claims the controller fails sporadically without the reset. maybe it is ok to resetitbutitneeds to be accounted in the commit log.";"0"
"the portage trees are indexed by the sysroot path with a trailing / . agreed, this is kind of ugly :/";"0"
"ok, talked on irc and we do not a great solution for this. perhaps if conductor start starving workers we need to tune up the workers_pool_size value.";"0"
"in model you have not added this column, this caused failure of neutron-dsvm-functional tests. also do not we need an fk on this column";"0"
"please asscloses-bug: #1438737""";"0"
"commit message looks ugly. openstack recommendations:";"1"
"indexer.metricdoesnotexists exception does not exist... or github search sucks";"1"
"this line is not needed. in factitis useless.";"0"
"make use of $ceph_data_dir configurable.";"0"
"yep, time.sleep gets monkey patched into eventlet.sleep.";"0"
"struct rsexpandkerneldriverinfo was rscpucore.h. if we modify it there, we could get rid of this header file all together.";"0"
"style cleanup: s/basicblock *bb/basicblock* bb/ s/bb != 0/bb != nullptr/";"0"
"use rlog.d everywhere.";"0"
"hahaha. gross.";"1"
"remove final newline";"0"
"well, this is broken with the dumb battery gauge anyway, so ok.";"0"
"can we remove widgetcreationtype and kwidgetcreationtypekey";"0"
"yep, i am dumb. :";"0"
"crapcopy/paste issue looks like";"1"
"those two globals are used only once in the code which makes them useless.";"0"
"please just get rid of this and passpdata->is_soc_exynos5 directly into mixer_resources_init_exynos";"0"
"what if nendrow>=maxrow or nendrow<-1 the entire loop wouldn't need to be executed then.";"0"
"i think the dust needs to settle before we add anything like this to the c library. memset_s would probably be a less bad idea. all those annex k functions are ugly and unnecessarily awkward, butthey made it into a real standard so there is not much we can do to argue against them.";"0"
"indeed, that is pretty ugly. it is a bit less ugly if you actually use x86::codegeneratorx86.";"1"
"one global per worker, with list of tasks to kill sorted , so it could quite efficiently check if it should kill or not.";"0"
"oh, the default return_value is default a sentinel : so let us be explicit about mock_soft_shutdown.return_value=true.";"0"
"yuckfor making classloading slower...";"1"
"since you are touching this, it feels a bit stupid to set these fields and then clear it right after, could you change it to only setitwhen needed also maybe add discard too";"1"
"i got the point. i'll remove a default_ephemeral_device param.";"0"
"use sdkconstants.classactivity";"0"
"are these std::vector<> overrides use ""override"" then.";"0"
"current usage is afaict always a dict, but wtflet us let anything but none in. none == no body from the json arg, not an empty body.";"1"
"yup. stupid mistake";"0"
"shoot";"0"
"this whole script sucks it wassomething i hacked locally a long time ago and only now thought about adding. lemme rewrite it using the same style we have in other scripts.";"1"
"in the kernel where they dislike* typedefs.";"0"
"check triggers abort internally when matched, which might be a bit too aggressive. i just verified that all inputs on framework side are coming from internal sources, so we might be okay with the daemon being kicked and restarted.";"0"
"i, personally, like tests that also execute all the methods.";"0"
"we are cowardly lions. i'd prefer to keep the change which causes massive bugs separate from the change to install this from shill.";"0"
"i just have one suggestion to avoid the nested mocks. you can try something like this as it applies to all of your tests: with mock.patch.object self.service, '_rbd_image_exists' as mock_rbd_image_exists, mock.patch self.service, '_get_restore_point' as mock_get_restore_point... ..... so multiple mocks will be in the same level instead of several levels.";"0"
"add: * deprecated use uicccontroller.getuicccard instead.";"0"
"monitoring_ip is to be removed";"0"
"this is anuseless summary line. please say which classis being removed here.";"0"
"use a snazzy auto here unless you hate your reader.";"1"
"you should be doing dpms off here.";"0"
"i like thatitis docced, butthis docstring does not seem consistent with the name of the method. is it returning if it failed, or if it is in the process of deleting";"0"
"delete is a kwarg, so prefer to passin via delete=self.delete";"0"
"instead of this porn just create image from url";"1"
"we are still using the native awk on os x, which is bsd and does not support include, iirc. and i am not sure, but i believe gnu awk does not build on os x for some stupid reason i never wanted to debug. if you can fix that and ensure that each darwin ndk release has a valid prebuilt/darwin-x86/bin/awk program, that could work and save some typing.";"0"
"i know, it might make sense to pre-allocate. that is a different fix, again. i've eliminated some of the useless kmallocs already--this one is not obvious.";"0"
"they keys are feature names, however i am removing this function in the next patch since generating input_fn is getting simpler";"0"
"it means that cid is garbage if status is not a successful status.";"0"
"i was wondering what you thought of moving this code up, after line 188, eg if is_whole_disk_image: # these are dummy values ... kernel = 'no_kernel' ramdisk = 'no_ramdisk' and after line 209, add the aki_path and ari_path, and the above if/else will not be needed.";"0"
"damni thought i did. nevertheless, i changed the signature of this function in another patch, can we let this one land as-is since the other one has the right docstring change-id: ib333a7ad4d4628e2e5a66ddc91fafc378679f69c";"1"
"self.is_admin_project = is_project_admin";"0"
"i know the version above sucksbut i'd suggest for small lengths, just be exhaustive. assembling with even just 100 immediates should not be too expensive, hopefully. even though your code is randomized, it may not be testing really well, with the few entries being pushed. and we do have time, considering oatdump_test taking several minutes to dump images... for the larger bit lengths, i have no good idea. an actual prng with a known seed would at least make it reproduce-able.";"1"
"why is this reimplemented";"0"
"because if top activity r.havestate == false is in the died process, it should still to resume next.";"0"
"alright but i really really want to kill --force-dark-mode! done";"0"
"the name is a bit ridiculous here. cutting it down to something less complex would be good peripheralmanager_peripheralprovider_provider_interface_h_";"1"
"ah, sorry for this stupid mistake. and it should be at rather than get by the way. done.";"0"
"you call local.close in a goroutine on l21, but do you need to have a ""defer remote.close "" after this line to make sure it is closed";"0"
"do user daemon threads not count as registered we intend to ignore them if they do not shut down in time...";"0"
"should ""die"" here";"0"
"i believe that imagecopyfailed should be raised here";"0"
"this could be uint64_t, butthat just looked ugly getting pushed onto gvsizes64 even though it obviously works .";"0"
"the compiler gets confused about base::bindonce storefiles, {{policy_path, policy_blob}} with error message ../../base/bind.h:272:25: note: candidate function template not viable: requires single argument 'closure', but 2 arguments were provided i'd have to use base::bindonce storefiles, std::map<base::filepath, std::string> {{policy_path, policy_blob}} which is kind of ugly.";"0"
".call is still useless here. this applymethod 'applychanges' will work";"0"
"bug is a bit extreme here... just bail out instead. same goes for the other uses of bug here.";"0"
"use sdkconstants.fd_res_layout instead";"0"
"this should be passed via parameter and be defaulted there";"0"
"tenant_id = tenant_id or service_tenant";"0"
"this should have ' die'";"0"
"should be ioram sette,";"0"
"it took me a month to understand what this code wassupposed to do, so who is being stupid here : . first, i find out if the destination is 1 cell or a range, and if the source area is large than the selected destination area 1271-1279 . the largest area of these is taken for the comparisons 1282-1283 , as this will be the actual destination area copy/paste some blocks and you will see what i mean if my text is not clear . the first comparison is whether source and destination area overlap 1284-1288 . when the source area contains references, these probably will go wrong when there is an overlap. as this may produce data loss e.g. formulas that get wrong references , it _must_ be avoided. this code was there from the beginning, but with errors, disabling the wrong options. my first patch fixed only a part of that. the second comparison 1294-1327 handles something else, the question whether shifting the cells in the destination area will fit on the sheet. this comparison is not necessary for integrity, but for user friendliness. without the comparison, the user will get a message that the result will not fit and no harm is done. rainer bielefeld wanted the possibilty of fitting on the sheet reflected in the en/disabling of the shift options. i do this check by going from the maxcol/maxrow position back for the width/height of the destination area and checking if the cells are empty. if not, paste+shift will not fit and the appropiate shitoption is disabled. i feared a performance penalty with this method, butitested it on an old. slow machine complete build of libreofiice takes 24hrs with a destination area almost maxrow high and that gave no noticeable delay. but because of this performance penalty danger, i want you to have a good look at the code. perhaps it will be safer to leave it out, perhaps there are more efficient ways to check the fitting. i hope my proze give you the explanation you want. perhaps i should put some of it in the code as comment";"1"
"as above here is mistake with cluster_name, it should be self._vmops = vmops.vmwarevmops self._session, self.virtapi, self._volumeops, self._cluster_name,";"0"
"self.mock_cctxt = self.mixin.client.prepare.return_value";"0"
"because translate_cinder_exception is using functools.wraps, it grabs __name__ off of the function. i figured mock would be able to handle that call just fine, but for some reason it does not. i guess it needs to be a string, but mock returns a mock object. more info here:";"0"
"pxe_irmc is already proposed in power spec i guess you just need to add managementinterface for the drivers proposed";"0"
"/* can_move_object */ false";"0"
"this will kill all the processes _matching_ self._command, maybe use killall instead";"0"
"micro-nit: this does not belong here. you are used to sneaking changes that are not strictly required..";"0"
"it is sucky, but we'd have to mount the image, chown the files and then unmountitagain. afaik there is no other way to do this in a hook/callback right now";"1"
"really it is still in most brillo mk files afaict.";"0"
"existing sucky name, will change";"1"
"nasty one. commit diff for 30008dfb2b5f29252687f975072ccf85e7d3590f ""fdo#32869: added navigation buttons to writer"" does not help. shows other commit 6101a8f5f579023e52732603661a39b535e0ef0b which introduces new id in shells.hrc +#define str_shellname_navigation rc_shells_begin + 62 this equals to 23312. guess this was a typo. commit 8c041824b67caa53d3f7f96803b7a69ced6614b5 ""all these ids and their associated resources were unnecessary"" removed this id again. end of story.";"1"
"this symbol needs to be removed.";"0"
"author should be removed";"0"
"i hate mispellings, ill update this tomorrow. thanks.";"1"
"this classneeds a docstring.";"0"
"too many ""sent""s here : either the first sent should be removed, or the ""is going to be sent"" should be removed.";"0"
"really i think i'd prefer not to even get into showandget in this case. once we know we are going to exititseems dumb that we go on and try to show at all... but i am not sure what the right way to do it would be.";"0"
"well, we can either bail or not bail here. if we bail, then we have to propagate that error all the way back up to the user, which sucksa lot; if we do not bail, we'll never migrate those directories. if we do propagate it up, the user's stuck with half of their cryptohome moved and half of it not moved. ugh.";"1"
"date should should just be yyyy-mm-dd";"0"
"fake.fakedeploy needed for fake driver.";"0"
"sgtm. i was thinking a warning, butitcould be really spammy.";"0"
"we are not patching anymore, so you can drop eutils";"0"
"you mean this enabled_opt = cfg.boolopt 'enabled', default=false, # and so on";"0"
"ca_cert = params.get 'ca_cert' , may be better";"0"
"if this has to be unaligned then i'd prefer an int32 of padding.";"0"
"i would agree our rest api backends need it. those warnings are annoying and useless.";"0"
"packstack should be packstack";"0"
"the = should probably be lined up.";"0"
"yeah, looks dumb. fixed now";"0"
"is not this auto it = std::find handlers_.begin , handlers_.end , handler ;";"0"
"you need to synchronize between rpres_start/stop and rpres_remove. the spinlock will not do it.";"0"
"please add a comment saying there can only be one blob stream.";"0"
"s/cancel/kill/";"0"
"crapneed to remove this.";"1"
"seems your condition is a bit screwedup here...";"1"
"so what the device like you described is good for do we need to go to all the trouble of introducing the ability to write into flash in coreboot just to support this made up failure more of a device broken in a very specific way just to allow it to keep rebooting";"0"
"saving two letters makes this look ugly. please just use board_user_prefix.";"1"
"the tun/tap driver should be fine with multiple access. it is just a dumb ioctl target.";"0"
"and volumes_ceph, images_ceph and ephemeral_ceph are all false.";"0"
"probably should add your s-o-b here.";"0"
"it is worth caching the correctly scaled image; calculating it on every paint will create a lot of unnecessary garbage.";"0"
"i think no matter async is true or false, step 3 should be executed. only step 4 is executed when moved as true and async as true.";"0"
"syscall to futex if busy. if one writer in process, never hits a syscall.";"0"
"just a nit pick but remove should be remove. not patch worthy";"0"
"i also considered adding $ hide here, but makefile.ckati has no echo to say it is building something. my other thought was to put either "" "" for !showcommands or "" echo building $ $$"" for showcommands, and using = instead of := to delay the evaluation of $";"0"
"use emovecallbacksandmessages null to remove all the messages.";"0"
"s/worker node/jenkins slave instance/";"0"
"precisely why, the table with the fk must be dropped first.";"0"
"ratelimitexceeded should be removed here.";"0"
"you need a die here";"0"
"use 'newbin recover_duts.sh recover_duts'";"0"
"patching time is known to suckwhat about just using low fake value for current_time";"1"
"there is reason for this hack. test_migrations.py, that should be performed with separate engine";"0"
"bad rebase all around";"0"
"crapbizarre that i got the opposite one in each of these files!";"1"
"rui these things happen because we merge code that has not enough unit tests. :- i suggest to return here new_data";"0"
"memcache should be memcached.";"0"
"you do not need to setup an addcleanup to stop the mocks. the infrastructure will do this automatically.";"0"
"unrelated, but we should probably kill this code fork and just have one way always be used ...";"0"
"use cros_build_lib.die instead of logging+exit";"0"
"move this line between smsmessagebase.textencodingdetails and cdma.smsmessage.";"0"
"why do not you just use ifneq $ jack_server , false here";"0"
"end all help strings with a ""."" add the: ""that the privsep daemon""";"0"
"should we just drop out early if featureutilities.isnotouchmodeenabled !infobar.supportstouchlessmode is there logic we need to execute if we are not actually goign to show the infobar";"0"
"notifies that existing baseaudiocontext has been destroyed.";"0"
"john garbuttyou are right, i'll remove them.";"0"
"that is messy. why we do not use jar here $java_home/bin/jar should be there.";"0"
"it is actually an oslo.config.configopts object or just say configopts for short";"0"
"errno=0; /*ignore res*/ strtol ... ; if errno barf ;";"0"
"nit: these 2 mocks would look a lot better as method decorators.";"0"
"oh, damnthis does not work with constexpr. i am fine with any solution: remove constexpr, or remove the dcheck.";"1"
"oh, i screwedthis up when i took out not_darwin. this is a case where we want one set of files for darwin, but a different set for both android and linux.";"1"
"this should be an invalidschemaerror.";"0"
"share_id=share_id";"0"
"would you like to try some invalid bs such like : 0b,0g -1b 12.34m since the variable blocksize directly load from config file, a stupid user may likely to put something wrong.";"1"
"i think they should die a horrible death, butthere is a very off chance that somebody is still using them. in the past ibm hasstated they will get 2.x implemented and we can make these go away. they are slightly better thanuseless at this point imho.";"1"
"i am pretty sure we modified the toolchain to default to -fpic, like the arm one. this is also why __pic__ is defined to 1 and checked in the builtin-macro check . note that the x86 toolchain uses -fpic by default not sure why . maybe we should change the mips toolchain to the same then damni am going to check if this compiles with -fpic :";"1"
"nit: consider using tempfile_ext.namedtemporarydirectory";"0"
"this should not be necessary as you use devm_gpio_request above.";"0"
"1. done 2. actually, it should pow 2, _sample_width * 0 - 1 -1. it is a signed pcm value. 3. done";"0"
"this looks horribly wrong. why is this casting phys_to_virt to an int here also, why are virtual addresses being used in a scatterlist generally they want dma addresses, not kernel virtual addresses.";"0"
"oops... this is a useless comment i forgot to remove.";"0"
"put please at this block err_msg";"0"
"this looks wrong. you have self, 2 mocks, 2 other arguments. you are missing a mock.";"0"
"stack = mock.mock stack.stack_name = 'stack' complete_stack = mock.mock complete_stack.stack_name = 'stack' complete_stack.stack_status = 'create_complete' self.mock_orchestration.stack.get.side_effect = stack, stack, complete_stack this would provide the behavior you want, right";"0"
"changed to 3: . i was trying to follow the principle of not trusting one's inputs, but since the input is an internal function i see how that is a little foolish.";"0"
"argh. i was about to comment asking you to change this to just passing in a classlevel variable, butthen i realized you can not. damnyou python.";"1"
"make this another dcheck to avoid the ' '";"0"
"better to put this on the stack once rather than temp on the stack and malloc and dup.";"0"
"defaultframeheader::setframecolors will unset the theme and unsetitfrom all the buttons with a nullopt.";"0"
"huh, indeed, i am being stupid, the rest should not be needed.";"0"
"it looks like in the existing code, we are already calling invalidateoptionsmenu around the same time we are calling drawtoppanel. how about if we get rid of your flag and always call invalidateoptionsmenu in drawtoppanel. you'll want to remove the existing calls to invalidateoptionsmenu where drawtoppanel is called at the same time.";"0"
"not sure you really need this as memory will be released anyway on exit, but if so, you do not need the if tctx guard as freecon null like free null is a no-op and besides you aborted earlier if getcon failed.";"0"
"dumb question - could there be a case when the destination is 'volume' and the source is 'blank'. not sure i really understand the buggerpicture here. so please for give me";"0"
"this is the glance team's code, which is using their api and not the nova api. doing this would very likely break large amounts of their tests. this needs to be reverted unless there is something i am missing";"0"
"use std::string and stringprintf from base/stringprintf.h instead";"0"
"dumb question: what does this do i can not find docs on setmaskstobounds.";"0"
"part of me thinks we should push these methods into the object, butthats a bad coupling, so maybe here is best. anyways, we can sort that later as the pattern becomes clearer, so i will not block on that.";"0"
"i remember porting that partithink i still have the code. here it is: private static final string sdefaultignoreassets = ""!.svn:!.git:!.ds_store:!*.scc:.*:<dir>_*:!cvs:!thumbs.db:!picasa.ini:!* ""; //$non-nls-1$ private string mignoreassets; /** * sets the pattern to use for ignoring asset files. * <p> * patterns syntax: * <ul> * <li> delimiter is : * <li> entry can start with the flag ! to avoid printing a warning * about the file being ignored. * <li> entry can have the flag { code <dir>} to match only directories * or { code <file>} to match only files. default is to match both. * <li> entry can be a simplified glob { code <prefix>*} or { code *<suffix>} * where prefix/suffix must have at least 1 character so that * we do not match a '*' catch-all pattern. * <li> the special filenames ""."" and "".."" are always ignored. * <li> otherwise the full string is matched. * <li> match is not case-sensitive. * </ul> * * return the pattern string */ nonnull public string getignoreassets { string patterns = mignoreassets; if patterns == null patterns.isempty { patterns = system.getenv ""android_aapt_ignore"" ; //$non-nls-1$ if patterns == null patterns.isempty { patterns = sdefaultignoreassets; } } return patterns; } /** * returns whether the given file should be ignored. this can be customized * with the { code --ignore-assets} flag. * * param file the file to check * param reportskipped if true, report skipped files as warnings * return true if the file is hidden */ public boolean isignored file file, boolean reportskipped { string path = file.getpath ; int nameindex = path.lastindexof file.separatorchar + 1; if path.equals ""."" path.equals "".."" { return true; } boolean ignore = false; boolean chatty = true; string matchedpattern = null; assert file.exists : file; boolean isdirectory = file.isdirectory ; int namelength = path.length - nameindex; for string token : splitter.on ':' .split getignoreassets { if token.isempty { continue; } int tokenindex = 0; chatty = token.charat tokenindex != '!'; if !chatty { tokenindex++; // skip ! } if token.regionmatches tokenindex, ""<dir>"", 0, 5 { if !isdirectory { continue; } tokenindex += 5; } if token.regionmatches tokenindex, ""<file>"", 0, 6 { if isdirectory { continue; } tokenindex += 6; } matchedpattern = token; int n = token.length - tokenindex; if token.charat tokenindex == '*' { // match *suffix such as *.scc or * tokenindex++; n--; if n <= namelength { ignore = token.regionmatches true, tokenindex, path, nameindex + namelength - n, n ; } } else if n > 1 token.charat token.length - 1 == '*' { // match prefix* such as .* or _* ignore = token.regionmatches true, tokenindex, path, nameindex, n - 1 ; } else { // match exactly, such as thumbs.db, .git, etc. ignore = token.length - tokenindex == path.length - nameindex token.regionmatches true, tokenindex, path, nameindex, path.length - nameindex ; } if ignore { break; } } if ignore chatty reportskipped { warning "" skipping %s '%s' due to android_aapt_ignore pattern '%s' n"", isdirectory ""dir"" : ""file"", path, matchedpattern != null matchedpattern : """" ; } return ignore; } // unit test public void testisignored throws exception { aapt aapt = new aapt ; assertfalse aapt.isignored new file ""a."" , false ; assertfalse aapt.isignored new file ""foo"" , false ; assertfalse aapt.isignored new file ""foo"" + file.separator + ""bar"" , false ; asserttrue aapt.isignored new file ""."" , false ; asserttrue aapt.isignored new file "".."" , false ; asserttrue aapt.isignored new file "".git"" , false ; asserttrue aapt.isignored new file ""foo"" + file.separator + "".git"" , false ; asserttrue aapt.isignored new file "".svn"" , false ; asserttrue aapt.isignored new file ""thumbs.db"" , false ; asserttrue aapt.isignored new file ""thumbs.db"" , false ; asserttrue aapt.isignored new file ""foo"" + file.separator + ""thumbs.db"" , false ; // suffix asserttrue aapt.isignored new file ""foo "" , false ; asserttrue aapt.isignored new file ""foo.scc"" , false ; asserttrue aapt.isignored new file ""foo"" + file.separator + ""foo.scc"" , false ; // prefix asserttrue aapt.isignored new file "".test"" , false ; asserttrue aapt.isignored new file ""foo"" + file.separator + "".test"" , false ; // do not match on non-directory assertfalse aapt.isignored new file ""_test"" , false ; file dir = new file files.createtempdir , ""_test"" ; asserttrue dir.mkdirs ; asserttrue aapt.isignored dir, false ; // custom rules aapt.setignoreassets ""foo:bar"" ; asserttrue aapt.isignored new file ""abc"" + file.separator + ""foo"" , false ; asserttrue aapt.isignored new file ""abc"" + file.separator + ""bar"" , false ; assertfalse aapt.isignored new file ""abc"" + file.separator + ""barf"" , false ; assertfalse aapt.isignored new file ""abc"" + file.separator + ""abar"" , false ; // standard rules get replaced: assertfalse aapt.isignored new file ""abc"" + file.separator + "".git"" , false ; }";"0"
"we want to remove run_test.sh";"0"
"checkimage ; should be below buildstatuspanel ; loadsupport ; buildimageviewer ; buildstatuspanel ; checkimage ;";"0"
"that is just ugly.";"1"
"eh we are not killing here, we are looping over any ondisk groups, trying to wipe them via removethisgroup which goes recursive . we have to do this because from an api perspective, we can not just wipe ourselves then recreate. well, we could, butthat suckssince it'd blow away any settings that had been pushed into our group things like memory limits, cpu affinity, etc .";"1"
"yeah, you are right, my bad. ::testing::return is kinda dumb like that:";"0"
"delete this; c++ string already get initialized as empty";"0"
"that is all darn, i looked at this cl expecting something more fancy here...";"1"
"what the......why did the rebase screwthis up";"1"
"this is pretty useless. see _diagassert if you really want to assert, but we usually do not bother with null pointers.";"0"
"fix soon, will change to json config for kill ugly string parser. thanks anyway.";"1"
"i hate this, we've got to find a better way then using system properties.";"0"
"bum";"1"
"elif $# -ne 0 ; then die ""do not know what to do with $ "";";"0"
"""subnet_ip_availability"" is not contained in columns, so the formatter is useless.";"0"
"put backticks on this one too please";"0"
"john: this is not a cut-paste. the one from libvirt driver is already in utils as 'convert_version_to_int'. this is the reverse of it. will move it to utils.";"0"
"bullshitlet us fix this!";"1"
"a little confusing. how about collapsing this block from like 636 to: if kwargs.pop 'management', true and self.management_url is not none: url_to_use = self.management_url else url_to_use = self.auth_url";"0"
"if true, outputs failure band in goofy console.";"0"
"to be fair, we did it w/ secmon too. but we noted that is shares the page tables by design. so we could suckout the contents of things and transfer to the new address space. however, i am not sure what the abi is here.";"0"
"again, only ignore errno == esrch";"0"
"if size_str is not 0, the following process is still needed, i think. size_str = re.sub r' . d*', '', size_str";"0"
"dammit. missed the commit message.";"1"
"nit: this line should be removed";"0"
"dolph, actually, the docstring here means resource_to_validate is not existing in the kwargs...";"0"
"use dcheck-dag instead of dcheck here and below .";"0"
"i want to be sure that the cgroupisset before running the jailed process. if it forks a child before it is in a cgroup, then the child could escape the cgroup.";"0"
"monaudioinfochangedcalled should be false.";"0"
"i think you should be use 'apidict'- name 'apidict' -- original name instead 'apiresource'";"0"
"i was going to suggest something along the lines of: $ control_files : $ target_control_files_dir /% : $ autotest_dir /% $ hide mkdir -p $ dir $ $ hide cp $< $ $ control_files_package : $ control_files $ hide mkdir -p $ dir $ $ hide tar -cf $ -c $ dir $ autotest that way you wouldn't end up blowing away all your copied files when any of them changes. on the other hand, that will never clean up extra control files that exist in intermediates, but have been removed from autotest. really, we need to package this in autotest and spit out generated dependency files. the same could be said for all these other artifacts that we are creating. i suppose this is fine for now.";"0"
"useless remove of line";"0"
"this one is just stupid. no idea how it got here. let me delete this.";"0"
"yucki hate this. 2 spaces is imo sufficient to be visible and clear, without wasting many of those vital 80 charactesr just because code is a little bit nested. *checks with a quick spot of grep* however, taking a look at devtest*.sh, i count 233 lines with exactly 4 spaces at the start of a line, only 6 with exactly 2. i am forced to concede that 4 spaces is, in fact, the accepted practice in this project. still, yuck i wonder if i can make a campaign for 2-space-indents the foundation of my eventual bid for ptl";"1"
"wrapping swdev_id should be detected and stopped here.";"0"
"what are you take into account in order to simulation a migration live, block ,dirty page, bandwidth";"0"
"alarm name looks wrong rabbitmq_rabbitmq - surely too many rabbitmq's here";"0"
"+1 for stupid eclipse. i did not even notice this initially. thanks for pointing it out...";"1"
"we were told to remove these from our cinder drivers as cinder team is not ready to adopt this yet. just use _ ""xx"" as before.";"0"
"really dumb nit: two spaces after api :";"0"
"i think this should probably pull from slaves.";"0"
"bah, silly! will fix it.";"1"
"nit: i'd have found this easier to read as: i - 1 == lastextensionstartindex + 1 apologies if i am being stupid: is the +1 correct e.g. i assume this is the kind of input you are trying to catch: ""a"", ""b"", ""stuff"" // ""b"" is invalid when i = 1, lastextensionstartindex == 0 is not the check: i - 1 == lastextensionstartindex or i == lastextensionstartindex + 1";"0"
"does it apply to openstack/neutron-*aas too";"0"
"can this logic be a dcheck excessive callbacks are strange.";"0"
"so if we did this, num_failures_by_type would end up getting set which is not representative of what actually happens";"0"
"i'd stick to the more passive ""... is specified to throw..."" since these horribly inconsistent apis are not our fault :-";"1"
"whitespaces are bad";"0"
"i do not think so when i put this in, it wasso when you resize the window, you see black instead of white in the new space.";"0"
"missing space, i am sure hacking will kick you in the nuts at some point.";"1"
"yes - slave engine support should not be implemented in library.";"0"
"i think you should kill this as we already have: same with the others like this.";"0"
"ansible should be ansible";"0"
"i think you want a lower rating here, since the resolution is so much lower.";"0"
"i'd rather have rpc_api.param_adopt_stack_data here instead.";"0"
"nit, no reason to quote individual variables over just the whole string. easier to read that way.";"0"
"fyi - you can be lazy and leave out the </li>'s if you want, javadoc handles it";"0"
"there is a strange assymetry between create_iscsi_target and remove_iscsi_target . could you perhaps make remove... have the same signature as create... and extract the vol_id using the split like create.. does";"0"
"i was going to say this is badly in need of a comment. there is a comment on the original in rbd_utils . could you please move it over, too";"0"
"seems use unretained this should be ok, media_thread_ will be destroyed first.";"0"
"throw runtimeexception instead. i think this failure should kill the app unconditionally.";"0"
"all the issue i identified and maybe the ones i missed makes me think that this coverage is not enough, please consider adding more tests to cover corner cases like the ones i spotted.";"0"
"sorry for insisting, i still believe these ""reserved cookie"" stuffs should be moved into ovs-agent. i suppose ovs_lib will be in neutron-lib eventually. having these ovs-agent specific code here can involve unnecessary compatibility burden in future.";"0"
"arrgghh!!!!!!!!!";"0"
"and a ""g bs s"" to you too";"0"
"we have some utter shitlbaas tests due to non-uuid tenant id's, but backwards compat is king.";"1"
"super ultra pedantic nit: s/which/this/";"0"
"why is filter_properties_list filled with empty dicts";"0"
"just idle curiosity...but why is neutron the only project experiencing this issue i can see that every project does its own monkey business, so that makes me wonder if we'll ever get rid of this nonsense.";"0"
"needs to end on previous line.. no trailing comma necessary";"0"
"if you want to terminate ofp handler, why do not you introduce the functionality, rather than abusing appmanager.close";"0"
"should be extracted to task_deploy, or name of the name has to be renamed, i.e. 'dump_graph_if_enabled'.";"0"
"seems like fatal is the helper to use in this codebase, so i used that instead of d +abort .";"0"
"these testcases should change to not to include mocks to _get_number_of_gpu_devices_connected";"0"
"consider using trap "" rm -f $tmpjson"" sigint sigterm to cleanup the script on ctrl-c and kill";"0"
"new thought.. i am wondering if we should ""cover our asshere and say something like: should a backend's grade be in dispute, it falls on the current project ptl to make the final decision after listening to all sides concerns.";"1"
"you never index over these, so why make them an array. just have 3 fields, like: n_32000 n_44100 n_48800";"0"
"sorry did not notice this last time, such useless constructors should be removed";"0"
"you can git fetch any cl, because cl's are never deleted in gerrit. if you mock out return value of getprojectmanifestbranch to return a commit object, then you will get result of 'git log <commit>..fetch_head'.";"0"
"if iworktypes.h is included, then iworktypes_fwd.h is unnecessary.";"0"
"seems that linkedstatemixin is useless here.";"0"
"rebase and this line should be gone...";"0"
"the problem is here: oslo.config-1.2.0a3.tar.gz#egg=oslo.config-1.2.0a4 -> oslo.config-1.2.0a4.tar.gz#egg=oslo.config-1.2.0a4";"0"
"dumb unicode question, can you just .encode 'utf-8' instead";"0"
"true, though any app doing work while installing a new split is insane. and if you are insane, there are already enough ways to crash yourself. the copyof sounds like a good fix for this, though.";"1"
"dammit. i'll fix, upload and submit.";"1"
"oh, does androidconfig.h prevent you from fixing this in the android.mk because you can not -d because that is a redefinition, and you can not -u because the -include hasn't been processed yet this is the kind of bullshitthat is motivated to slowly kill androidconfig.h. if it helps you do the right thing here, let us submit the build/ patch anyway. given whatithink you are saying here, i think that gets both of us closer to our goal of sanity throughout the tree. llvm has the exact same problem.";"1"
"should we use fabs or std::abs like in polynomialregressioncurvecalculator";"0"
"this function is never used... is it me being stupid or that is not normal";"0"
"nit: name these unpackstatebitmask i initially thought they were separate sets of dirty bits.";"0"
"do we want to return a boolean like the c++ posttask";"0"
"comment what these bools stand for e.g. /* is_native */";"0"
"you can probably kill this comment now";"0"
"tls_disabled should be removed now.";"0"
"you need to stop the mock mock = mock.patch.object .... mock.start self.addcleanup mock.stop";"0"
"sorry for my ignorance, but can you explain how this is related to time_out below";"0"
"make this take a bool so it could be turned offagain";"0"
"this call here makes it seems like there is only one router_snat port per network/router. but, look at l338, it returns the port with ipv6 address on it! should notitbe looking for the port that has a fixed_ip on the given subnet_id this makes me think that the code you added on l352 is just a band-aid. i tend to think that this call here is just plain wrong. should not we fix this by looking getting the csnat port here that matches the subnet we passed in";"0"
"if we actually had lexers that could extract that, i'd agree w/ being analaboutit. we do not consequences of not using standard styles . changing it, butitdoes not matter.";"1"
"this naming convention is terrible, since our documented header names here show these as ""arraystart"", ""array1start"", ..., ""array3start"". numbering 2-4 internally just means we are going to mess this up in the future.";"0"
"kill the trailing blank line too";"0"
"my fool added jsx";"0"
"... ignore the stupid question. let us pretend like this did not happen :";"0"
"/*compiling_boot_image*/";"0"
"should be using _lw instead of _";"0"
"ah, i did not know they are global. thanks for the comment, i better go and educate myself on stevedore before making silly comments. :";"0"
"this is a test for an exploit against the kernel, so it makes some assumptions about how the kernel works, the sizes of data structures in the kernel, etc. i can see why this code might use __kernel_size_t, although dan would know better. these exploits are more difficult to write if clean code is required. :- dan: we do not allow netlink sockets anymore, right if so, maybe we should just kill this test entirely line 117 should be returning -1 for all >= 5.0 builds, right";"0"
"s/excceding/exceeding s/lendth/length";"0"
"at first glance this commands records the pid of su itself rather than the binary it starts. a more careful analysis shows that the string in the single quotes is a part of command which /bin/sh -c runs. consider explaining the trick, it is not obvious at all. also a space before the leading single quote character totally changes the meaning of the command and breaks the script $ greeting='hello' $ sh -c ""echo $greeting""', world' hello, world $ sh -c ""echo $greeting"" ', world"" hello";"0"
"me too. curse you partials.... :- . i am glad i learned how to use them though";"1"
"returnedcomponent.setforeground item != null !item.ispublicattribute jbcolor.gray : table.getforeground ;";"0"
"why are you creating the hboundtype then it seems useless.";"1"
"please, put this to __init__ self._topics for consistency with previous.";"0"
"damn seems i did it again ; will fix with the inevitable next rev.";"1"
"ugh, todo remove this turd";"1"
"need a docimpact on this please.";"0"
"use this buildtoolsversion = rootproject.ext.buildtoolsversion";"0"
"damn.how did i miss these others :-";"1"
"original_fs_size = self._get_fs_info fs_label 'total_size'";"0"
"yep, but if you want to actually be clean on versions, you should make the call the way it was. later, when it is 3am, shitis on fire, and you are looking at raw messages on the bus trying to figure out what is going on, you'll appreciate diligence here :p further, assuming you'll have some other rpc stuff in ironic to clean up, you'll want to not have any implicit assumptions in places in the code that will teach people to do the wrong thing in places where the assumptions do not hold. we have the same conductor-first rule, but we try and generally succeed to make our clients and servers cleanall the time so nobody gets confused why it is okay to cheat here and not there.";"1"
"self.key_matrix should be private, i.e. self._key_matrix.";"0"
"ha, wtfthis is not even validated/asserted. bonus points for fixing that";"1"
"this seems to me to be another id_ != id problem. did we ever decide the proper usage of id in the context of cloudcafe";"0"
"i can do that. are these redundant or actually useless though";"0"
"you are getting crazy here. : with the null termination below and this assignmentitmakes me think you did something wrong. why not have a char suffix = '0'; then you can suffix++ below when creating a new string as well as using it here.";"1"
"c'mon... this is some crazy nitting here :p";"1"
"this statement alone has no any side-effect, hence is useless.";"0"
"these log tags are going to be kind of shitwhy not just let the user override the tag if they want to i.e. volleylog.settag ""mileage""";"1"
"s/called either *aodh*/called: *aodh*/";"0"
"suggest making these public final and getting rid of the getters.";"0"
"please initialize mforcerouting in audiooutputdescriptor cstor";"0"
"you never know when you'll need big endian win32.";"0"
"this is useless. you canalways passnull to free 3 .";"0"
"... which means they are now out of sync why can not you use the values as they exist already in common.sh";"0"
"referencetypeinfo* new_rti. or should you just return a new referencetypeinfo instead";"0"
"some junk here.";"1"
"since these apis can not be used by anything other than the smart card process they should be hidden so they will not show up in the sdk. to do that please add a javadoc comment that includes the hide tag, like this: /** * hide */";"0"
"you should use versionutils to report that this is deprecated. you can see an example in /cinder/scheduler/manager.py";"0"
"hvmap is a dict contains hypervisor object";"0"
"comment is misaligned, and should say uint32_t usr_len now.";"0"
"excuse me, would you like to tell me why the line model = ""virtio"" rather than model = network_model.vif_model_virtio";"0"
"getforcedpicmodel coulbe be replaced by ispicdefaultforced. it could be removed.";"0"
"nothing to 'setdown' a.k.a. hooks.run and threadconfig.unsetconfig";"0"
"this should be moved to iscsideployprivatemethodstestcase and delete iscsideployvalidateparameterstestcase.";"0"
"do a $ call pretty... as with the boot.img.";"0"
"useless docstring";"0"
"subnet_id = myfixed_ips 0 .get 'subnet_id'";"0"
"please, add 'self.addcleanup group.destroy ' to not copy-paste destroy all in each test";"0"
"suggest uuid.uuid4 in place of random.randint .";"0"
"you already have same methods in the helper _get_share_path and _get_share_name_by_id , so you should stick to one style.";"0"
"remove angle_vert, angle_horiz, and mma_weight_n as they are now unused.";"0"
"-1: kindly use constant names you have used with properties here to avoid the maintanence over head !";"0"
"my stupid bad.";"0"
"tab != 8 spaces and tabs are evil";"1"
"should be added param ""cleanup_in_classfalse"". because it is true by default.";"0"
"how about calling assert_called_once_with";"0"
"omfg!!!1!";"1"
"as binary_list is initialized as 0, maybe just leave the comment without code for filling header and encoding_pattern.";"0"
"this check makes me sad because the alternative is ugly... :-";"1"
"no, but i can change it to lollipop. i just hate these stupid-assnames, and do not have an api level yet.";"1"
"most of this crapshould be cleaned up/better in next patchset.";"1"
"please put your s-o-b on the line following the 'cherry picked from' line.";"0"
"can we actually make this a separate 'thirdpartyvpnhandler' the rest of this handler should eventually go away and that will make the deprecation easier to track / revert / etc.";"0"
"just make sure that no one else reads the current selected client and attempts to an operation on them..e.g. maybe go to the memory view and attempt a heap dump/gc on that dead client.";"0"
"should also mock ironic.conductor.utils.node_power_action";"0"
"probably dumb c question: why is this here";"0"
"yucktestneutronv2 needs to die in a fire with all of the scaffolding it does.";"1"
"there is is_uuid_like in ironic.common.utils.";"0"
"they will die in next cl, but okay...";"0"
"why is this needed why not simply set 'get_vm_summary_info' to return 'fake_info' instead of attempting to make a mock behave like a dict";"0"
"we should not need to do this nonsense, now we have ""migrate_data_obj.livemigratedata.detect_implementation"" in the compute manager, butitneeds a closer look.";"0"
"maybe add a line here";"0"
"the same, just for debugging to dig out the jenkin's failure.";"0"
"do not you think it'd be better to passthis option through env variable or through run_tests.sh i mean, i think it should not be hardcoded.";"0"
"rabbit_ha_queues = false";"0"
"you could kill this space.";"0"
"sure, i will add someone from chrome team after you lgtm.";"0"
"why are you remving test001 ... test011 please, keep it.";"0"
"just use the side_effect lock_to_use.side_effect = self._lock";"0"
"nit: comments are whole sentences, so they should be terminated by ""."".";"0"
"task_2_action_exs = db_api.get_action_executions task_execution_id=task_2_ex.id";"0"
"this is ugly but simple. implementing setup_got_nosave for got_reg = ecx is a feasible alternative but not required for this cl.";"1"
"$ build_dir /tmp can be removed on 'make clean' before the cleanup rules which terminate the stale simple_http_daemon instances and need those pid files get a chance to run.";"0"
"alexandre: correct, vixl recognizes those three constants and moves the const to a temp reg otherwise. andreas: lol, i love how you call your code 'specialized'. someone was pretty anally retentive about selects. i'll see what i can do. ;";"1"
"return !clientpid kill clientpid, 0 == 0";"0"
"there is no way to do this without code change yucknot for you, in general.";"1"
"can you rebase this patch i think i got rid of stats_type a while back.";"0"
"imho, trailing whitespace should be eliminated.";"0"
"all file_lines should be executed before start of apache server";"0"
"should this be primary_account_info_ = account_info";"0"
"i have some better code that i accidentally wiped out today. ptal.";"0"
"no, this is actually fine, i was just being my analself and verifying things outside of a mocked world :";"1"
"patch crap";"1"
"oh, wow, you have 11 parameters in there! yes, base::callback is not really a variadic template. it is a fake. i hope soon this is fixed... it is a shame really...";"1"
"death to ret! mwahahahaha.";"1"
"looke like overindendation";"0"
"catching exception so broadly bothers me. it looks like in the cinder is down there is a connectexception that is raised, which would be a more narrow catch. it also seems like if we do have a catchall we should dump the details of here of the bdm to tell the admin that a resource was not cleaned up and might have leaked.";"0"
"we should kill this classprobably in a followup and instead use proper methods on presentationavailabilitystate as this is adding indirection that we do not need.";"0"
"strcat / strcpy should never be used in any production code. use strlcat / strlcpy instead. besides, this is gross and broken.";"0"
"damnmissed that one in the re-merge. thx";"1"
"err... shit yeah, i am. fixed it locally, uploading shortly since that is a bit of an asskicker.";"1"
"may i suggest an example of how this used for newbies like me who haven't got a clue... maybe that is useless to know because eclipse does it for you, so feel free to reject... ah nevermind there is an example section at the end. great :-/";"0"
"typo: *s*tm32l";"0"
"you assign the value just to echo it. i wouldn't bother as you can implement this func in one line: awk -f= '/ '$1' >/ { print $nf }' ${2:-${version_file}}";"0"
"can probably just remove all of the really's";"0"
"method ""get_keys"" has 4 common cases. you covered only two of them. here is list of cases that should be covered by tests: 1 self.extra_specs is none and prefer_resource_data is true 2 self.extra_specs is none and prefer_resource_data is false 3 self.extra_specs is dict with data and prefer_resource_data is true 4 self.extra_specs is dict with data and prefer_resource_data is false";"0"
"to be pedantic, kick-start is a hyphenated word ;";"0"
"this is the hack the commit message is talking about. vboot uses the same callback to first read small parts of the kernel partition keyblock, etc. and eventually the whole kernel body. there is no proper way to distinguish the read's purpose from here and i do not want to plumb timestamps through to vboot, so i am using ""anything larger than 1mb is probably the actual kernel body"" as a heuristic.";"0"
"yes, there will be multiple clean ups and they will happen sequentially. this was implemented by browsingdataremoverhelper and merged to browsingdataremover in";"0"
"iterables.concat is lazy, there will be no unnecessary loops.";"0"
"put oslo.serialization one here as it is in the same category.";"0"
"i think so, without the signer these artifacts are completely useless.";"0"
"damnit!";"1"
"use testtools.matchers.haslength so we can get a better message if it fails";"0"
"you do not need the ""vim: ..."" this is being removed in all files...";"0"
"so this is a dumb question. if we want the node's power_state to be 'off' when the node is new/registered, why do not we just do that, instead of here. i am worried about if the state ever becomes none in some other weird situation, and it seems more obvious/explicit to setitto off when registering.";"0"
"oh good point, brain fart on my end. i'll fix this because it'll bother me.";"1"
"initialize init_pid_ to -1 here so it does not have garbage in it";"0"
"these two assertions mocks _delete_snapshot and _delete_volume should be placed at l542 because they are actually related to l537, then these two mocks should be reset and here at l556 they should be checked that they are not called because we have do_delete=false at l547";"0"
"feel free to remove these comments - some of us have been doing that as we come across them. they are a pain to maintain and people should be using intellij parameter tooltips anyway.";"0"
"is the syntax here ""dosym target link_name"" a la ln google is oddly unhelpful.";"0"
"small nit, please remove this white space:";"0"
"dumb question... should not you check that auth_strategy == 'keystone'";"0"
"micro-nit: write here testdecode 1 /* num_concurrent_decoders */ ; for clarity";"0"
"this manual event multiplexing is yucky. we are not using ga for any graphing atm. i would recommend skipping any ga updates at all. toolbar is what matters.";"1"
"*vm_concierge_pid_out to log pid instead of address, i think";"0"
"interpolate $fuel_migrate_vars as ${fuel_migrate_vars} if you do not have spaces";"0"
"just like the cryptohome ebuild, i do not think you can get rid of the opencryptoki dependency here either. iirc, some entd scripts even if we do not run them any more start up pkcsslotd.";"0"
"gtest should go below base";"0"
"nit: what is special about depending on telemetry_dep that requires a comment and setting the dependents apart from the other tests";"0"
"whitespaces! kill them all!";"0"
"dammit. i hate the interface for that thing. too prone to copy and paste error that has no visible effect. i'll fix this.";"1"
"you do not need a teardown, use cleanups instead.";"0"
"useless empty line at end of file removal. json.dump does not create empty line at end of file json specification simply does not care.";"0"
"should be vmwareapi.vmwarevcdriver";"0"
"the colon is correct. it is a dummy command.";"0"
"i occasionally hit these two warn_on s... perhaps we have a race somewhere";"0"
"currently vm_destroy goes ahead before vif.unplug; so these code block may not take effective at all as vif has been destroyed along with vm destroy.";"0"
"you'll also want select ec_software_sync select virtual_dev_switch somewhere vboot related kconfigs that essentially should always be set for laptop-type devices... it is a little redundant and stupid that you have to setitmanually, i know . this cl might be a good place to add that.";"1"
"i do agree. while its kind of beautiful, it can be a pain in the assto understand. will try to simplify it instead of a one-liner.";"1"
"__ does not support pointer to member function, unfortunately. i tried several things. i *think* that the problem is that ->* has to be one token";"0"
"stupid question, is aodh enabled by default in the overcloud";"0"
"ditto server_client.py";"0"
"hmmm. weird case, per this is not an error condition!";"0"
"damnthat is right! still hasn't landed :";"1"
"let us remove onsubmit as far as we've got rid of <form/>";"0"
"you do not need 'if' here, because default value is $::os_service_default";"0"
"nit: this and onassistantcontrollerdestroying should be moved down between onhighlighterenabledchanged and ondeeplinkreceived to match the declaration order in header.";"0"
"there is no firewall_chain. could you please generate example.conf by executing ""tox -egenconfig"" again";"0"
"this will never happen because of kill -kill";"0"
"the sucky thing here is that we ll output multiple publics with the same name. that might confuse the processor or at leastitcould in theory, butitmay not in practice . it ll certainly confuse humans, though: if you thought you knew what rtlcapturecontext + 9 meant, think again. i wonder if we should introduce our own mangling, like ${reserved_or_unlikely_char}${original_symbol_name}_block_${number}.";"1"
"i am still puzzled about whether bionic gets its machine-dependent elf headers from linux or from netbsd or .";"0"
"if these are iscsi only should not they be in the iscsi driver seems like a lot of nops.";"0"
"i am a bit confused here. is not this equivalent to line 1920 did mock_execute get called did node.maintenance get set the other thing i notice i think is that this test and the test above l1873 are very similar except for the values returned by the mocks. have you considered creating a helper function that these two can call after setting up the mocks";"0"
"this is too much. could you write this as a regex matching the full bss line in both its variants and then extract a group from that regex sorry to be a party pooper.";"0"
"i am trying to figure out where that came from. this change has been a disaster right from the outset - for some reason my brain decides to go fuckthings up. i think the intention here was to detect cases where icu lied to us about the new size, butitshould return u_buffer_overflow_error again and we'd fail.";"1"
"kevin, i think it would be better if you tried mocking timeutils.utcnow yourself using your method. the return value of mock.patch.object is a patcher classinstance not a magicmock instance.";"0"
"we should not crash here, but is not this an error that has to be reported with a silly ""general error"" dialog, of course... perhaps a sal_info could be useful here on master";"0"
"bloodyoptimizers! ;";"1"
"they are useless; but heat_config 'heat_api/cert_file' will not be in the catalog. if that does not matter i can remove it.";"0"
"this has nothing to do with the threading. it just tests if eof was reached in webm_guess_framerate then actual calls to webm_read_frame does not return eof as well.";"0"
"why is this needed if fontlist is not holding references to svxfontnamebox_impl anymore, that is enough for the svxfontnamebox_impl dtor to be called.";"0"
"you haven't just deprecated the devtest_overcloud.sh --build-only functionality, you've completely removed it. keep the deprecation warning, and maybe have this call out directly to devtest_overcloud_images.sh directly to preserve the old behavior for a while";"0"
"silly me. i was xref-ing without your patch.";"1"
"oh, this needs to be defensive i think kill the renderer if begin_frame_response_valid_ is already true";"0"
"did you fool git into thinking there was a change here";"1"
"hmm, this is kind of ugly - sqlalchemy driver details leaking into the abstraction";"1"
"this comment belongs to the removed code and should be removed too";"0"
"before this cl, this refers to two completely independent implementations -- with use_andriod_emu, that from qemu/android/utils/sockets.c without use_andriod_emu that from qemu-android/utils/osdep.c worse, the two implementations did not even share a common header. yuck";"1"
"crap so what happens is makefiles need tabs stupid , and i have vscode to expand tabs to two spaces. i'll get this fixed up.";"1"
"nit: wtfwhy not just updat eportsets_by_ring_path right here w/e";"1"
"please leave that cl as-is. reverting isolated lines would be insanely frustrating for you.";"0"
"yes, i overlooked that this does not get flattened here whichg does happen in plain with_items";"0"
"mistake by stupid rebased";"0"
"this will cause triggers to fail i think... or is this recipe doing something dumb";"1"
"typo in function name: tonumericwi*th*outdecimalplace";"0"
"ugly tab here";"1"
"sorry for the stupid question, but what is occ";"0"
"probably. conditionals in rst are terrible.";"1"
"retry_number = 0 # this counts 're-tries', not 'tries'";"0"
"kindly remove the white space char";"0"
"sorry. i am retarded. i've been fixing the opposite bug lately, getting rid of calls to integer.tostring so fa_ir looks right to humans :-";"1"
"host_state = fakes.fakehoststate 'host1', 'compute', {} should probably be moved to setup as it is the same for all tests.";"0"
"please, use cfg.listopt instead of cfg.stropt";"0"
"compatible_specific_boards = compatible_boards.difference cbuildbot_config.generic_boards use .difference, and negatives in var names suck:p";"1"
"so sequence wise: 1 copy this builder to new bucket as part of this cl. then land it. 2 after 10 minutes, update cq.cfg in depot_tools to use new builder for extreme safety, you can do experimental and split this step into many cls . 3 another cl removing this block.";"0"
"use browser_ and nuke this function.";"0"
"this should be marked for translation.";"0"
"can we use a stable release of qemu and tgt instead of building it from master master could fail to build or break in the future. also you do not need the entire git history while cloning the repo please use depth=1 which is much faster example: git clone git://git.qeemu..../qemu.git --depth=1";"0"
"please remove.";"0"
"oh, i see. lame. generally catching exception is just hiding problems elsewhere. okay, i guess i could live with this patch since it just parallels that above, but now i hate both parts. how about this as a compromise: add two log.w statements in both catch blocks so we can at least aid debugging and clean them up if necessary. both built-in providers and 3rd party ones....";"1"
"look who just caught a very darned unlikely potential leak of b64_password";"1"
"ovs_db_serice=""ovsdb-serve"" ovs_vswitch_serice=""ovs-vswitchd"" ovs_db_pid=$ovs_dir""/""$ovs_db_serice"".pid""";"0"
"let us do it in follow up. btw one of follow ups will just kill it.";"0"
"how about a helper define to make this a little less spammy #define __cleanup__ fn __attribute__ __cleanup__ fn ... __cleanup__ close_file file *f = null;";"0"
"this is the wrong folder. it should be tools/base/build butthen the code below is wrong. you'd have to put project.parent.builddir/../$project.name";"0"
"is the executor going to initiate this kill";"0"
"this previously used a testnavigationobserver, butthis no longer works for the filesystem url following mustafa's r554850, because a top-level filesystem url navigation will be blocked on the renderer side. i wanted to keep this test uniformly handling both blob and filesystem urls, so i tried to use waitforloadstop , which just exits immediately if a navigation hasn't started yet. however, with blob: urls, that still did not work, because that navigation is scheduled on the renderer side, so the executescript that sets location above returns before we've received the beginnavigation from the renderer. hence this ugly extra dummy executescript. withoutitwe performed the checks below too early, and when gettextcontent below did a roundtrip to the renderer, we actually received the beginnavigation and created a speculative rfh, which caused getrenderframehostsforextension to fail. alternatively, i could wait for filesystem urls to fail with a console error, similar to what mustafa did on line 1118. separately, in light of mustafa's change once we are certain thatitsticks , we might want to kill the renderer if it actually sends us a beginnavigation with a top-level filesystem url to handle the compromised renderer case and add a separate test for that.";"0"
"this seems rather obscure. also, do you really need sudo to kill a child process";"0"
"should die here";"0"
"crapi meant say 'check for null' here.";"1"
"return strip seems like we should call here instead of passing the burden to the caller. this should remove several or the strip calls later in the code.";"0"
"integration testing using local devstack results in the following exception: 2016-06-28 16:31:03.700 21947 info gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.mechanism_driver req-22ad080d-835f-48d7-aa6a-cc40977b7000 admin - apic aim md extending dict for network: {'status': 'active', 'subnets': , 'availability_zone_hints': , 'availability_zones': , 'name': u'l2p_g1', 'provider:physical_network': u'physnet1', 'admin_state_up': true, 'tenant_id': u'b5e5a304199f49bdbc4a4c0577fc2578', 'description': none, 'ipv4_address_scope': none, 'ipv6_address_scope': none, 'mtu': 1500, 'router:external': false, 'port_security_enabled': true, 'vlan_transparent': none, 'shared': false, 'provider:network_type': u'opflex', 'id': 'e3a90685-c739-4a66-b216-92a80c8752e0', 'provider:segmentation_id': none} 2016-06-28 16:31:03.704 21947 debug keystoneclient.auth.identity.v2 req-22ad080d-835f-48d7-aa6a-cc40977b7000 admin - making authentication request to get_auth_ref /usr/local/lib/python2.7/dist-packages/keystoneclient/auth/identity/v2.py:87 2016-06-28 16:31:03.734 21947 debug keystoneclient.session req-22ad080d-835f-48d7-aa6a-cc40977b7000 admin - request returned failure status: 401 request /usr/local/lib/python2.7/dist-packages/keystoneclient/session.py:419 2016-06-28 16:31:03.735 21947 debug keystoneclient.v2_0.client req-22ad080d-835f-48d7-aa6a-cc40977b7000 admin - authorization failed. get_raw_token_from_identity_service /usr/local/lib/python2.7/dist-packages/keystoneclient/v2_0/client.py:202 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper req-22ad080d-835f-48d7-aa6a-cc40977b7000 admin - the request you have made requires authentication. http 401 request-id: req-f2e9497b-8650-43ec-938e-f9e9c61da1de 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper traceback most recent call last : 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper file ""/opt/stack/gbp/gbpservice/neutron/plugins/ml2plus/drivers/apic_aim/apic_mapper.py"", line 195, in tenant 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper auth_url=auth_url 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper file ""/usr/local/lib/python2.7/dist-packages/keystoneclient/v2_0/client.py"", line 166, in __init__ 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper self.authenticate 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper file ""/usr/local/lib/python2.7/dist-packages/positional/__init__.py"", line 94, in inner 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper return func *args, **kwargs 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper file ""/usr/local/lib/python2.7/dist-packages/keystoneclient/httpclient.py"", line 584, in authenticate 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper resp = self.get_raw_token_from_identity_service **kwargs 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper file ""/usr/local/lib/python2.7/dist-packages/keystoneclient/v2_0/client.py"", line 200, in get_raw_token_from_identity_service 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper return plugin.get_auth_ref self.session 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper file ""/usr/local/lib/python2.7/dist-packages/keystoneclient/auth/identity/v2.py"", line 89, in get_auth_ref 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper authenticated=false, log=false 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper file ""/usr/local/lib/python2.7/dist-packages/keystoneclient/session.py"", line 520, in post 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper return self.request url, 'post', **kwargs 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper file ""/usr/local/lib/python2.7/dist-packages/positional/__init__.py"", line 94, in inner 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper return func *args, **kwargs 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper file ""/usr/local/lib/python2.7/dist-packages/keystoneclient/session.py"", line 420, in request 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper raise exceptions.from_response resp, method, url 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper unauthorized: the request you have made requires authentication. http 401 request-id: req-f2e9497b-8650-43ec-938e-f9e9c61da1de 2016-06-28 16:31:03.735 21947 error gbpservice.neutron.plugins.ml2plus.drivers.apic_aim.apic_mapper";"0"
"set_tag = port_id";"0"
"this common block should be refactored into a function like ""void update_global_motion_use prediction_mode mode, const mv_reference_frame *ref_frame, int *global_motion_used """;"0"
"this is in devtest_ramdisk.sh. do we still wantithere";"0"
"thanks! can you add a todo here to remove _unittests after _tests is ready along with a link to the bug it'd also be good to explain this in the tast tests that run these executables.";"0"
"no, jumo. a combination of juno and jumbo : darn fat fingers...";"1"
"strongswan.py _driver is unnecessary since we are in the device_drivers dir.";"0"
"you should be using a mock instead of implementing you are own fake.";"0"
"correction, missed the lockless updating of tempfile.tempdir guess what my next nit will be . also does not dumb assprograms that use tmp rather than tmpdir. final nit... this is duplicative of what tempdir_decorator is doing.";"1"
"so, it took me writing several comments about how this was wrong to realize it was right. if you respin, a comment about how any one filter that asserts presence in an empty list obviates all the rest would help slow-witted people like me.";"0"
"it is needed. see the pep. the way i understand it, in order for the n+1st-loaded package to be able to compose into the namespace, the nth package's __init__.py has to have this in it. we do not know of a scenario where someone other thanuswill be playing in this space, butitwould be a dickmove to preventit";"1"
"/me killed by a rebase :";"0"
"dirname/basename are for chumps!";"1"
"this is odd. why do you need the why not just env->exceptionoccurred or just ""ifs == null is there a case where env->exceptionoccurred and ifs != null if that is the case, you'll need to clear the exception before you proceed.";"0"
"if log.exception _le ""xx"" already prints out the exception information any way even if the exception err is not provided, why do we need to supply the exception err - log.exception _le ""xx %s"", err";"0"
"this is wrong, it should be self.ucsmsdk.fabriclancloud.classid ,";"0"
"oh, i skipped the zygote compaction in the sentence. sorry, bogus comment.";"0"
"this is gross. not sure how else to fix this though, the whole string/bytes thing in py2/py3 is super annoying.";"1"
"only 'parsedrv_info_mock.assert_called_once_with' must be located in the block 'with' because it mocked via context manager. the remaining mocks at level test-case can be outside the block 'with'.";"0"
"indent with tabs, not spaces you could one-line it by doing: rm ""${d}""/boot/{config,system.map}-${version} you should add ' die' after each 'rm' since it is not automatic";"0"
"not sure why you deleted this but left the rest. the bots are just going to start dying again.";"0"
"we could get rid of teardownclassif it only calls super teardownclass";"0"
"hey jordy - i think you were looking an old version of the mocks. this button should never be disabled; if it is disabled, users will not have the ability to retry contacting the server.";"0"
"can we call this responsexmltemplates because they are only used for response and not requests.";"0"
"this is insane ! let me add a useless comment ! i disagree !";"1"
"lgtm. small thing: is the update and delete needed to finish the crud";"0"
"huh. can we just passthis for that argument, then or do we really need a dummy child";"0"
"i find this one weird, ""delete"" should only take one argument, why does this need two is this more of ... ""remove an implied role"" damneven the spec says delete:";"1"
"not a big deal, buttoo many levels of nested block may make people confused. what about using if-break and for-loops, ex: if !childnode i .haschildnodes break; for var iternode = childnode i .firstchild; iternode != null; iternode = iternode.nextsibling { if iternode.nodename == 'node' continue; .... }";"0"
"frame_sink_manager_ is a mojoframesinkmanager. i have renamed it to mojo_frame_sink_manager_.";"0"
"this is dumb.. we have to wait a second or 2 before calling the confirm_resize of the instance because we will get an error from the call saying the resize failed. even though it had not problem. this is likely because the task description or id is set after the verify_resize state shows up or some race condition.";"0"
"i'd suggest: local makeopts= $ usex cros_host '' extra_dirs=chromeos emake ""${makeopts }"" die";"0"
"self.mock_ip is already a mock object. you should do this: self.mock_ip.get_namespaces.return_value = ns1, ns2, ns3";"0"
"this one is good, we spit out a warning a die in a fire if this is below 1.";"0"
"note: these lines here are the only lines from the cl. gerrit is total garbage at doing diffbases so i gave up.";"1"
"leaks a subprocess error when it should be raising devicenotfounderror.";"0"
"this should not be called every time _check_bw is called since _check_bw merely checks the bandwidth and should not handle the actual file's existance . i suggest calling this *before* the wait_until_true. you can even call this multiple times until the size is correct using another wait_until_true for this .";"0"
"i think thats because those are uibuttons and this is a uibarbuttonitem!";"0"
"ifneq $ filter external/%,$ local_path , my_strict := false endif";"0"
"wrapping with exception here is not right. this should be side_effect=n_rpc.remoteerror";"0"
"all of that is useless";"0"
"remove all the coments too";"0"
"i curse over inability to do this in python2, too :";"1"
"i think this red mark means extra space that should be removed.";"0"
"if spawn failure, would it generate unhandled deferred see line 191 comment. perhaps having a unittest case with first spawn success but upcoming spawn fail. mmm... is it possible";"0"
"why do not you use here openstack.common.importutils";"0"
"done damnit. so messed up by msdn. i did auto_rotation_state == ar_enabled in the beginning. then i thoughtitis better to use bitwise format in case ms changes anything in the future. bang...";"1"
"based on hacking, the zmq import should come after this next section of stdlib imports";"0"
"typo: burdon should be burden";"0"
"here you should be more precise what is poor and not flexible.";"0"
"i think the only header you may need from here is omnibox_pedal and components_strings.";"0"
"i am just a simple engineer hand editing xml like a chump...";"1"
"stupid question but why are you using the dict compat and not getattr";"0"
":' , okay i will change it, but i hate you ! :d";"1"
"let us all be clear here. all of this is a hack. we are in the grimy underside of python here.";"0"
"drop this die as well as the one below you canalso one line this func as well as in src_install : emake -c util/superiotool cc=""$ tc-getcc """;"0"
"frick it...";"1"
"crash_dump should not be allowed to ptrace itself";"0"
"mixing mocks and fakes is usually confusing. please return empty strings/urls.";"0"
"fit::bind_method this, componentcontrollerimpl::kill";"0"
"yep, damni had this right in the first version and brain-farted my way into doing this to avoid the circular import of flavors.";"1"
"ah crapthe header is wrong, thanks for pointing this out";"1"
"this might be a dumb question but can not there be duplicate names";"0"
"remove it for now, i will add it back if necessary.";"0"
"what about resources += _getresourceleaves item for item in node.values";"0"
"you are totally right, i am a dumb ass";"1"
"comments of alembic should be removed.";"0"
"grid_height = screen_height/grid_num; sample_height = grid_height/sample_num;";"0"
"you may end up having data = null; as per";"0"
"is notitbad to encourage inlined version callers may already have a cached runtime or classlinker and now you are hiding this in helper function.";"0"
"that page recommends .assql might work for new enough versions of django . did you try that if that does not work, i am ok with this. and sad about how dumb django is.";"1"
"strict name ordering is desired, please move this before policy_spec.";"0"
"done, grudgingly. i accept those nonsensical camel-casings when it comes to stuff i like, butthis is just a part of mso.";"0"
"change_id should be a positional/required arg.";"0"
"ugly....";"1"
"from my understanding of the code, you do not actually need a dictionary. it appears that you just need to be able to set arbitrary attributes on a dummy object. you could >>> import userdict >>> u = userdict.userdict >>> u.slavetoken = 'slavetoken' >>> u.slavetoken 'slavetoken'";"0"
"with the alternative format i suggested above this would be: sort=key1,key2,key3";"0"
"holy crapyou are totally right. this is an artefact of the code being inline.";"1"
"we are never supposed to return the body to the client and then add to it, there is alread a dcheck !data_complete_ here, and i've added dcheck data_complete_ in the body getter.";"0"
"wouldn'titbe better to use the os.kill function then execute a subshell";"0"
"use ha queues... if you change this option, you must wipe xx";"0"
"never use which bcz it is not built-in and not picked by all distros. if type docker >/dev/null 2> 1; then die ... fi";"0"
"this should be ""attrs=none"". please rebase your patch set and you will see how other fakes handle this.";"0"
"why not use the settimezone method and do something like: string tz = systemproperties.get timezone_property ; if tz != null { settimezone tz ; }";"0"
"happy to educate my ptl. :";"0"
"> goddamnit unnecessary > please make it a regular multiline if >_< it will be same 3 lines, but without excessive done";"1"
"padding = self._block unused_start:127 if padding != 0 * len padding : errors.append error ...";"0"
"you need to add a dummy option here like ""default"", otherwise the first zone will always be sent to the scheduler whether the user selects it or not. see the snapshot selector above for an example.";"0"
"nit, default_vlaue = default_meas_range_value i hate the length of my suggestion but default_value seems too vague";"1"
"# vif_type = ovs";"0"
"the problem is that tools/telemetry/find_dependencies content/test/data/gpu errors. indeed the directory does not contain python scripts, but html pages. note that content/test/gpu/bootstrap_deps contains these directories. buttools/telemetry/find_dependencies content/test/gpu/bootstrap_deps does not list them. clusterf*ck.";"1"
"yep, i will remove them. i copy-pasta'd from the gspathtest function above, which had them. i'll remove them from both.";"0"
"note: this will need to be replaced by a looptimer in the future";"0"
"missed doc-stings for other than 'node' params.";"0"
"yeah, that is just like all those tests that use list comprehensions as a poor-man's for loop that i do not like : it is old cruft, and i'd prefer new code use the style i advocate : one of these days, i may get off my buttand try to clean up some of that";"1"
"/* create_bitmap */ true";"0"
"no try-finally for you, zipfile!";"0"
"just noticed this: mind using 'git.openstack.org' instead of github :d";"0"
"we should remove zeromq since its not an amqp service its a queue yeah, butits not compliant with the amqp standard";"0"
"yes, you are right. even though the servicewatcher is useless at this point, we should still resetithere.";"0"
"i believe this needs an abc.abstractmethod";"0"
"dumb copy paste, removed.";"1"
"add global ignorance of foreing key during altering table -> ignore foreign checks globally in 004 migration";"0"
"ha, i won : get error as below: 2015-03-06 10:58:47.617 debug nova.filters req-65932138-002b-440e-b428-661940426bc6 admin admin filter aggregateimagepropertiesisolation returned 1 host s from pid=14378 get_filtered_objects /opt/stack/nova/nova/filters.py:84 2015-03-06 10:58:47.617 error oslo_messaging.rpc.dispatcher req-65932138-002b-440e-b428-661940426bc6 admin admin exception during message handling: 'cpu_allocation_ratio' 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher traceback most recent call last : 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py"", line 142, in _dispatch_and_reply 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher executor_callback 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py"", line 186, in _dispatch 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher executor_callback 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py"", line 130, in _do_dispatch 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher result = func ctxt, **new_args 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/server.py"", line 142, in inner 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher return func *args, **kwargs 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/opt/stack/nova/nova/scheduler/manager.py"", line 86, in select_destinations 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher filter_properties 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/opt/stack/nova/nova/scheduler/filter_scheduler.py"", line 67, in select_destinations 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher filter_properties 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/opt/stack/nova/nova/scheduler/filter_scheduler.py"", line 138, in _schedule 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher filter_properties, index=num 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/opt/stack/nova/nova/scheduler/host_manager.py"", line 460, in get_filtered_hosts 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher hosts, filter_properties, index 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/opt/stack/nova/nova/filters.py"", line 78, in get_filtered_objects 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher list_objs = list objs 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/opt/stack/nova/nova/filters.py"", line 44, in filter_all 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher if self._filter_one obj, filter_properties : 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/opt/stack/nova/nova/scheduler/filters/__init__.py"", line 27, in _filter_one 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher return self.host_passes obj, filter_properties 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/opt/stack/nova/nova/scheduler/filters/core_filter.py"", line 56, in host_passes 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher filter_properties 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/opt/stack/nova/nova/scheduler/filters/core_filter.py"", line 96, in _get_cpu_allocation_ratio 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher 'cpu_allocation_ratio' 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/opt/stack/nova/nova/scheduler/filters/utils.py"", line 29, in aggregate_values_from_key 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher aggregate_vals = set aggr.metadata key_name for aggr in aggrlist 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher file ""/opt/stack/nova/nova/scheduler/filters/utils.py"", line 29, in <genexpr> 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher aggregate_vals = set aggr.metadata key_name for aggr in aggrlist 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher keyerror: 'cpu_allocation_ratio' 2015-03-06 10:58:47.617 trace oslo_messaging.rpc.dispatcher 2015-03-06 10:58:47.618 error oslo_messaging._drivers.common req-65932138-002b-440e-b428-661940426bc6 admin admin returning exception 'cpu_allocation_ratio' to caller 2015-03-06 10:58:47.618 error oslo_messaging._drivers.common req-65932138-002b-440e-b428-661940426bc6 admin admin 'traceback most recent call last : n', ' file ""/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py"", line 142, in _dispatch_and_reply n executor_callback n', ' file ""/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py"", line 186, in _dispatch n executor_callback n', ' file ""/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/dispatcher.py"", line 130, in _do_dispatch n result = func ctxt, **new_args n', ' file ""/usr/local/lib/python2.7/dist-packages/oslo_messaging/rpc/server.py"", line 142, in inner n return func *args, **kwargs n', ' file ""/opt/stack/nova/nova/scheduler/manager.py"", line 86, in select_destinations n filter_properties n', ' file ""/opt/stack/nova/nova/scheduler/filter_scheduler.py"", line 67, in select_destinations n filter_properties n', ' file ""/opt/stack/nova/nova/scheduler/filter_scheduler.py"", line 138, in _schedule n filter_properties, index=num n', ' file ""/opt/stack/nova/nova/scheduler/host_manager.py"", line 460, in get_filtered_hosts n hosts, filter_properties, index n', ' file ""/opt/stack/nova/nova/filters.py"", line 78, in get_filtered_objects n list_objs = list objs n', ' file ""/opt/stack/nova/nova/filters.py"", line 44, in filter_all n if self._filter_one obj, filter_properties : n', ' file ""/opt/stack/nova/nova/scheduler/filters/__init__.py"", line 27, in _filter_one n return self.host_passes obj, filter_properties n', ' file ""/opt/stack/nova/nova/scheduler/filters/core_filter.py"", line 56, in host_passes n filter_properties n', ' file ""/opt/stack/nova/nova/scheduler/filters/core_filter.py"", line 96, in _get_cpu_allocation_ratio n 'cpu_allocation_ratio ' n', ' file ""/opt/stack/nova/nova/scheduler/filters/utils.py"", line 29, in aggregate_values_from_key n aggregate_vals = set aggr.metadata key_name for aggr in aggrlist n', ' file ""/opt/stack/nova/nova/scheduler/filters/utils.py"", line 29, in <genexpr> n aggregate_vals = set aggr.metadata key_name for aggr in aggrlist n', ""keyerror: 'cpu_allocation_ratio' n""";"0"
"tegra_update_cpu_speed must be called under the tegra_cpu_lock. maybe get rid of throttling_lock, and just use tegra_cpu_lock";"0"
"i plan to collect all local_clang_*flags_<target> cls into b/17677366, and minimize them later.";"0"
"better passby value, bool bistextcat or just ""bool istextcat"" to avoid the ugly ""misunderstood hungarian"" prefix";"0"
"use cros_build_lib.die instead";"0"
"would it make more sense to make this a std::string since all of the startswith calls are going to convertitanyway. it would also get rid of the strcmp calls. the server modification lines could be changed to: service.erase 0, sizeof xx - 1 ;";"0"
"you dont need autospec for these mocks.";"0"
"quit correcting me! me dumb like rock. so you are saying you'd be fine with fail_attempts and success_attempts : i am just going to go with rise_threshold and fall_threshold.";"0"
"you should call fprintf stderr, __va_args__ first...";"0"
"for nova, not for swift. swift is just a dumb object store in this scenario.";"0"
"how exactly this one is very obvious.";"0"
"''sudo ./launch.sh'' - to look as a inline code insert";"0"
"oh, sorry. i was confused. thank you for explanation.";"0"
"do we want to ' die' if this fails";"0"
"keystone_service_host and keystone_service_port should be used here";"0"
"maybe a dumb question, but do we need portmap is not this just s/portmap port.uuid /port.local_link_connection/";"0"
"you already have the include below. the inherits should not be necessary";"0"
"nit gatbage->garbage";"0"
"damnyou are absolutely correct. clearly that was missed entirely. well then meh.";"1"
"wtfthese lines do not line up";"1"
"oh wtfi copied this from another app so i did not expectitto be wrong. sorry about that. fixed.";"1"
"lock_dir should be removed manually after the test";"0"
"assertin should be used here and below";"0"
"maru, you mean that fake_route2 and operations on it are useless and fake_route1 would be enough, do not you";"0"
"chris, if we use {{smoke or ...}} here, then we will have 1 iteration on gates, which is almost useless. look at this result:";"0"
"poor little 0... all alone in the world world being this line ; .";"0"
"feel free to put this into it is own bug/patch, i think it should go in asap.";"0"
"oops this should be removed";"0"
"pep257 with these docstrings.";"0"
"you are touching puppy here - should be another commitithink.";"0"
"merge these two doins calls into one, and delete the die call";"0"
"ok on not having build/target/board/*/vendorsetup.sh. i still think thatitis better to put the default lunch registrations there ... but given that they are going in envsetup.sh, this path is not necessary.";"0"
"itym ""... owned by parent pid 1. this commit ...""";"0"
"stupid sun. ukraine my arse";"1"
"these 4 lines should be useless. headers are string already, so you can drop that. :";"0"
"why is this device_target_id";"0"
"why not just send in opengl_alive here, and dump it with the other variables";"0"
"is this an in/out value that is, does it indicate both dest length on input and bytes copied on output if notitdoes not need to be a pointer, right";"0"
"does it own the oat files i assume so . then it should be unique_ptrs.";"0"
"for interactive sessions this is useful as an emergency exit, and it matches 'ssh' behavior so should not be taken out altogether. on older devices piping input will still hang even with this cl, and putting "" n ."" at the end can give users a way to close out piped input, so it is not totally useless. but if you think it might cause problems it seems reasonable to take it out for non-interactive inputs.";"0"
"meganit *alert*: i wonder if there'd be any value in refactoring the block l941:l946 into a function , the need of mocks would still hurt.";"0"
"instance_proper*t*ies are you running unittests before submitting";"0"
"idk, i must have fat fingered this after i had ran tests before uploading the previous cl. i have brought shame on me, my family, my cows, etc.";"1"
"this should go in a subdirectory of $ out_dir to avoid soong accidentally clobbering any part of the make build";"0"
"rbac-policies english plurals stink sometimes";"0"
"ugh this means that this code is now dead too and changes all sorts of craplater in the file for legacy configs. i wonder if it'd just be easier to if contain the verity work like it was before. what do you think";"1"
"on the other hand, running roothelperprocess as non-root seems ridiculous :";"1"
"/* retrievable */";"0"
"this seems useless now, as you already moved the function to ironic-lib.";"0"
"use page_size=utils.get_page_size request here.";"0"
"this is comparator for std::sort , should behave like an opeartor<";"0"
"do not you want to reset_changes on this too otherwise, it is left dirty.";"0"
"''ceph.conf'' and ''manila.keyring''";"0"
"the panicinfo command line can call this function after a reboot, in that case this will dump junk.";"0"
"fixed in this cl. using 0u is a bit ugly too :/.";"1"
"dumb question: what is this ""getattr type self ..."" trick does is it because this is intended to be a mixin and you need the real id_column from its subclassjust curious.";"0"
"dumb question. why do you need to put '# noqa' at the end of this and also at line 27";"0"
"sorry, brain *fart*. yes";"1"
"damnit was not cherry-picked to master!";"1"
"y u hate {s";"1"
"docstrings are absolutely hideous for this kind of thing. if we have enough of these cases it might make sense to use a templating library like jinja2.";"0"
"nit: you could use your stringbuilder above to do this concatenation.";"0"
"remove vmax.";"0"
"obj_mock.clustercollection.all.assert_called_once_with";"0"
"i see this was just moved, butitis kind of silly and it is subject to a race condition anyway. this will not hold up this patch, though.";"0"
"let us remove the observer after calling #showsurveyinfobar";"0"
"we should move the logic first, and not add this duplication. i am agreed with ndipanov. also, i feel this is enough logic to warrant a separate method. that would remove the need for that claim resources comment, which is no bad thing.";"0"
"nit: pep8 for multiline docsting. here and l171";"0"
"#endif /* __android__ */";"0"
"maybe provide an example of why --recurse-submodules is a solitaryallowconjoined";"0"
"the slave nodes all the possible";"0"
"goto fail_sys";"0"
"why store this as a bool, rather thanusing something like the 'webcontentsecuritypolicytype' enum";"0"
"with this option i do not get any respone after setenv stdin=usbkbd";"0"
"can you use the dictionary from line 495 above so that the build number is not hard coded here thanks! _m_client.getwsapiversion.return_value = self.wsapi_version_latest";"0"
"imho, curly braces look useless here if you write the code in one line.";"0"
"just typecast block to a uint16_t * and loop over it below.";"0"
"useless parens around vars here";"0"
"nitpick - todo is supposed to be followed by a colon";"0"
"is this a libvirt only change";"0"
"wow, kwargs*";"0"
"you are implicitly clearing all w1c bits every time you write this, which is bad style. you should have a w1c mask that you apply every time you read this register, and then explicitly set bits you want to clear before the write.";"0"
"i've not tested this, so it might be stupid... within the scope of a single router we will not have overlapping ips. could it be possible just loading the subnet and verifying whether fip_db 'fixed_ip_address' falls into the subnet's cidr the advantage would be doing a single query for the subnet instead of a query on ports table for each port.";"0"
"god yes. that felt stupid.";"1"
"this is just a drive-by fix of us doing stupid things ;";"1"
"i am not sure that address_pairs == attr_not_specified should trigger a delete of the address pairs";"0"
"do you want to use an elif for this block";"0"
"translation func should be used.";"0"
"this thread is an infinite loop, should we kill it at teardown or somewhere else";"0"
"this is unnecessary, the default oustring ctor already contructs an empty string. btw, to clear use oustring::clear instead of ="""". i think there is even a clang plugin that mocks about this in some tinderbox build.";"0"
"true, butthere is not a reason to have crappymessages either. to me, ""string must not be empty"" is infinitely better than ""string must not be at least 1 character s long..."" note that these messages will be delivered to the vendor's daemon or client software, so having a reasonable messages looks more professional in my mind...";"1"
"yuckcould openjdk have a finalizer to do this instead";"1"
"why is this $${...} i think this will be expand to <pid>{fio_dev}";"0"
"/** javadoc";"0"
"why not yaml.dump config, stream=f, default_flow_styel=false";"0"
"it seems the only valid value is ""root"", else you get 501 yuck butthis is correct for now.";"1"
"i am thinking these three mocks could be collapsed into one. once you mock foo, foo.bar and foo.baz automatically get mocks created for them dynamically when referenced.";"0"
"cookie=self.default_cookie,";"0"
"this could also happen if issued_at is not in token_data.";"0"
"destoryed => destroyed";"0"
"oh, i guess here should be noauth = faultwrap sizelimit noauth osapi_compute_app_v21 done";"0"
"nit: how about just ""kill -hup dnsmasq threw %s""";"0"
"was a rebase goof. sorry.";"0"
"damnsorry guys. :";"1"
"why not manipulate the keyvaluestore of dhcp_properties_ directly keyvaluestore raw_properties_ getkeyvaluestorefor dhcp_properties_ ; raw_properties_.setstring ... ;";"0"
"yuckthere has to be a private header for this!";"1"
"empty_list is an empty list, and thus will be converted by the else block into an empty array.";"0"
"do not need this because you are stubbing out readlink";"0"
"this seems more like a canonicalization of any ip address. i am not sure it should be an ipv6 util.";"0"
"nit: delete one of 2 lines";"0"
"__metaclass = abcmeta";"0"
"should nuke the whitespace around the = operator here.";"0"
"it is better to add this new target to the list of phony targets. .phony: mirror-centos";"0"
"this is incredibly ugly - i'd prefer to wire the scrolltoloadlistener directly to the articles section.";"1"
"actually, this is incorrect. this should be pointing at $ndk/prebuilt/$host, not $ndk/toolchains/$host this is for awk and friends .";"0"
"i asked for this because i like less coupling with the conf object.";"0"
"fix these url's.";"0"
"damnsometime i am gonna learn english ;";"1"
"oh, look. the stupidity that makes me rant so has already taken root. i suspectitis not too late to fix this, and fixing this rates as a mitzvah in my book.";"1"
"> kill -0 basically validates the pid that is a smart way to validate a pid. i will update makefile with kill in a separate cl. > there is another case here though where the master could be dead butthe pid is valid and does not belong to the master... maybe check the command line as well or cwd of the pid fds etc i believe thatitshould be considered as unhealthy status of twistd. for example, if ""make status"" returns 0 for a process running, but unhealthy, then puppet or most of system management tool would believe thatitis not running, and the following /etc/init.d/buildbot start would fail at the following check : we could also update the above python check function, but i believe that the example case you provided should be handled by a separate process checking for the health of a service: ""the pid is valid and does not belong to the master"" in other words, /etc/init.d/status should return ""running"" if a process is running for the service either it is healthy or not. if ""make status"" should not be limited to the usage of /etc/init.d/buildbot, then i'd suggest to have another make target for health checking. however, once buildbot is migrated to service_manager, this makefile will no longer be used.";"0"
"this really should be collapsed down into just log.error _le";"0"
"because i am stupid and failed to resolve the merge conflict correctly.";"0"
"we should not reintroduce this turdif you need the .c file, you need the #defines and vice versa , so just remove them from here and the .c file.";"1"
"oh, right... damnmaybe something like this... static const struct pll_div apll_1800_cfg = pll_divsors ... ; static const struct pll_div apll_1392_cfg ... static const struct pll_div apll_cfgs = { apll_1800_mhz = apll_1800_cfg, ... } i guess that is getting ugly in other ways again, but at leastitdoes not have the raw divisor numbers lying around like that. or i guess you could just leave out the array and switch-case it in the code which one you choose could even make it a 'u32 hz' argument instead of an enum then, although i am not sure if that would really be a good thing .";"1"
"this should be other-requirements.sh, as it is hardcoded in plugin.";"0"
"the pid_file here is unnecessary and a security risk ; just have the method return the pid like tracepath_tool does";"0"
"sorry - i was not clear. your logging when the remove succeeds is good/useful. i just did not want the null case as that'll get hit alot in normal operations..";"0"
"fair enough - the right solution would be to wait until cryptohomed actually dies. mind if i post a follow-on cl";"0"
"done! i went off of media_player_brige.cc... i will clean it up when i get rid of mediaplayerandroid.";"0"
"this variable names is the name of a variable parseby this codec, that is here, a list of pattern, so somethings likes patterns. if you just return parser.getvariablename, this will be 'list', and that no so stupid.";"1"
"remove_nginx should be deleted.";"0"
"yeah, this seems like pretty crappybehaviour.";"1"
"damnyou :";"1"
"the chdir should also be removed.";"0"
"this use_slave kwarg is not used anywhere not that i really understand what this slavery business is all about";"0"
"use 'mock_engine.return_value.run.side_effect'.";"0"
"daemon.user/group attribute are currently useless. i will finish the refactor in next ps.";"0"
"is this right i fixed the arm version of this file recently, butithink the mips version is still utter crap the x86 was always fine. i told mips about this at the time, but haven't heard anything from them since.";"1"
"after this, we'll execute the 'if' body below which will call appendrestore .";"0"
"you might not have an error on this write and will keep the logs cleaner, to radzy pointed this out and i think it was a valid suggestion. if it keeps throwing errors, then you end up with an ugly log. i think the ""attempt"" is valid.";"0"
"damn i could have sworn i tested that in the golo. but you are rightitis not working for me. i'll switch it.";"1"
"personally i would change ""and remove some of the cruft that has crept in over the years"". i do not think that we need to bitchabout stuff in the past and take our destiny into our own hands.";"1"
"abort is safer. the compiler can fuckyou over here if you ever do add an enum value but forget to fix the switch.";"1"
"gosh, that is much better!";"0"
"remove juno, it is eoled already.";"0"
"add die";"0"
"i do not think these chars are needed because mirror::throwable::dump adds ' n' to add the stack trace.";"0"
"this is the other thing i do not like about __has_* --- unlike __gnuc_prereq they do not carry their own use-by date :-";"0"
"this is not correct. a d register can never be through a fpureguster, it must be created out of a fpuregisterpair.";"0"
"true, but all of those classes die in the next cl anyway, so i would not worry about the template here.";"0"
"why strip $chost from $minimum_gcc";"0"
"so are you saying you are not sure we need it serban";"0"
"given os-pci is also the name of the namespace as well as the alias perhaps it would be clearer to have a different dummy value here";"0"
"small performance optimization instead of getting ref you should use count and if count is 0 raise exception";"0"
"personally, i find the ""function"" keyword to be useless noise";"0"
"why do you pop an element you still just take first one below, so it is useless.";"0"
"this is a mouthful to make that assignmentithink its making a new observer can this assignement be more direct, we should not need the local ptr cache_storage_observer_ = makeunique<cachestorageobserver> getweakptr xxx->getcachestoragecontext ;";"0"
"could you defer to kill launch, unless it is successfully returned.";"0"
"this ensures we flush any resize and paint events.";"0"
"let us get rid of the goto. use destructors to handle cleanup, and just early-return when you hit a failure.";"0"
"there is only a handful of users. switch them to static_assert and kill the cruft";"0"
"hmm. to me it seems like the same logic, when a combination of any of these are in prof_diff updatereplace would happen. allocation_id+ instance_id allocation_id+ network_interface_id eip+ instance_id eip+ network_interface_id";"0"
"remove this useless line please.";"0"
"looks kind of ugly from code design stand point... please align indentation in next line 212 so that the first character is below the first character of ""prevent""";"0"
"right. lines are either driven low or floating high. ...so we can only send a stop bit if someone else is not driving the pin aka holding it low . ...so i think we are on the same page";"0"
"there is no existing cranky overlay, so you do not need this blocker. delete it.";"0"
"uint8_t* ptemp_src = ...";"0"
"can you explain more about this alternatives how this can work in congress how puppet will do that";"0"
"damni usually catch these.";"1"
"rather than doing this and the ugly writel wrapper , please do something like this: static uint32_t *grf_emmcphy_con = uint32_t * 0xff77f780; static uint32_t *grf_emmcphy_status = uint32_t * 0xff77f7a0;";"1"
"nit: #endif /* config_usb_pd_tcpm_mux */";"0"
"right. however, at least i often have some junk files around!";"0"
"wrong indentation level two white space righter";"0"
"oh look, someone who was calling hash_cleanup_listdir with positional args!";"0"
"please assdocstring to the public methods";"0"
"yep. and i'd kill the other one with the empty enum type in exchange.";"0"
"use patcher for these mocks, you have a plenty of methods with such mocks, so it is better to initialize them in setup method";"0"
"worst commit message ever. please describe what you added, and why you added it. perhaps break your commits up to manageable hunks with git add -p";"0"
"edit_node_interface*s*_screen";"0"
"yeah, annoyingly we currently have a mix. since these really belong in <strings.h> i just copied them across. one day we should just remove all the ""extern""s.";"0"
"probably should use something other than the dummy validator";"0"
"this cl makes all the tests hermetic and no longer need to modify files on disk , so removes pythonpath crapand temporarymasterpasswords.";"1"
"please use docker-py >= 1.0.0 rather then a hard pin";"0"
"in general hardcoding /tmp paths is a bad idea, especially when you consider $$ is a pid # and pid namespaces make collisions much easier you can do something simple like: trap 'rm -f ""${tmpfile}""' exit readonly tmpfile=""$ mktemp """;"0"
"but can we leave it stupid for now for the sake of getting it going";"1"
"s/message_callback_/message_callbacks_ why is this a naked type while we have typedefs for eventtypestrings and subscribedevents";"0"
"looks like you are missing a newline here :";"0"
"add platform/wtftextencoding.h";"0"
"oh sucky, i see what you mean. ok, lets go for your fix now. i'll think about how we might clean this up another time.";"1"
"use cros_build_lib.die to do the print+exit";"0"
"this docstring needs to be revised. you can just say do nothing here.";"0"
"> for regex patterns always do r'' . in your case: > > r' ... *%s:%s ... ' % data.vendor_id, data.product_id > > meanwhile .0-9: is equivalent to . match any char . the 0-9: is > useless here because . overrides it. > what is the real pattern you want to match here in /sys/bus/hid/devices there are directories with names like ""0003:06cb:2393.0001"". i am just trying to look up the one which contains the vid and pid which genericinput found. you may have noticed i do not write a lot of python. what i have seems to work, but i am sure its not the best way to do it.";"0"
"resp is a tuple, and i thinks it can never be none.";"0"
"damned, right.";"1"
"internal parens are unnecessary";"0"
"co*n*verts";"0"
"oh man. i completely misunderstood this issue. removed entirely as it is no longer necessary, per your comment.";"0"
"you must have not seen my comments before you committed yours. refresh your browser to see my notes; it was just a silly mistake.";"1"
"ah, thanks for the clarification";"0"
"this way of patching is a bit dirty because if we want to change how the client works, then we have to patch your writer too.";"0"
"/*out_header*/";"0"
"remove the ""such as"" i think this has led people to read things into it that they should not. and if you care about what is in it, you need to be using getbestdate*.";"0"
"i do not know why it was named coffee pot : probably due to the name of the project. but if you tell me, i'd be glad to add it. name of device should not be unique";"0"
"1 it does not hurt 2 it should fail too 3 the error handing in this driver is atrocious, we should really fix it up. i think the right thing to do is to propagate the error up and fail out of everything. choosing conf 0 will likely not result in the desired behavior anyways. 4 gerrit's handing of line breaks sucks";"1"
"kill the extra spaces";"0"
"can not this be done as a decorator still it should be executed on __call__ see";"0"
"wtf!!";"1"
"consider const createapp = app_management.fakepagehandler.createapp;";"0"
"please skip it only if it is not an internal error crash - if there is a dump message, we still need to show the dialog";"0"
"i meant: length != 0 i typed too fast, too!! silly me!";"0"
"socat must remain. it is not useless and actually required";"0"
"missing last_modified field.";"0"
"mohammad, is it easy to do what we are doing in this test with mocks, i.e. return a fixed value if so, mocks seem fine. if not, i'd stay with fakes.";"0"
"damni miss clue as to what the variable contains :-";"1"
"nititis better to use assert_called_once_with here, which indicates the context_update_store has only been called once.";"0"
"yes, it is to kill a warning exposed by -wall. done.";"0"
"ya, damni thought empty might be ok ; i am still unsure if this is how i should do it, i managed to make the reason for adding it moot so i may just pull it for now";"1"
"probably something stupid -- it is restored.";"0"
"using wtfbindrepeating here caused some content_browsertests tests to fail, eg webrtcimagecapturegetphotostatefailsbrowsertest.grabframe/0 1 whereas if base::bindrepeating is kept, test passes. 1 i tried to use crossthreadbind and converttobasecallback, butitstill fails. so maybe i am missing something blink::mediastreamvideosink::connecttotrack *track, converttobasecallback crossthreadbind wtfbindrepeating singleshotframehandler::onvideoframeoniothread, base::makerefcounted<singleshotframehandler> , media::bindtoloop std::move task_runner , wtfbindrepeating imagecaptureframegrabber::onskimage, weak_factory_.getweakptr , wtfpassed std::move scoped_callbacks , false ; jbromanall: wdyt also, i see base::bindrepeating being used in third_party/blink/renderer/modules/mediastream/. what is the criteria for not using wtfbindrepeating there can it apply here";"0"
"all the other files have have_malloc_h, so this will get killed when one of us deals with that.";"0"
"leave isexc and resetcc, please.";"0"
"not worth a -1 but you have one useless line here.";"0"
"no need for semicolon at the end";"0"
"made this into an enum. lmk if you have better ideas for the name";"0"
"assert buildid != null codebase != null; and remove the 'if' below";"0"
"not -1 over this, butitseems like we could turn a lot of these functions into a common function. also, the mocks could be pulled out into reusable mocks.";"0"
"it should be moved into taskmanager.";"0"
"i am stupid, of course we do not have cssvalues here. we could just add a create-function that takes a string. as you can see, the cssvalue one immediately converts to string anyway. static cssunsupportedstylevalue* create const string value { return makegarbagecollected<cssunsupportedstylevalue> value ; }";"0"
"just a stupid idea, i am not even sure that works: for item in requested_networks: if item 0 and item 1 : msg=_ ""meh meh meh"" raise exception.mehhhhhh reason=msg could it work for both neutron and nova-net";"0"
"this kind of comment is useless, because the code is soo obvious.";"0"
"were you going to split this off into a sep target so objdump wouldn't be run by default or you going to stick to exporting it to a dummy command";"0"
"useless cross-depends. task 'rabbitmq' already depends on primary-rabbitmq";"0"
"can these be private";"0"
"iiuc wkwebview json deserialization, this cannot happen.";"0"
"do you want to delete orphans as well i would think that you would.";"0"
"xiyuan is there a more direct way to check if running in a fake gaia env in autotest";"0"
"blank line probably not needed here";"0"
"breaking this out into a separate ""trailinggarbage"" test.";"0"
"ah, heh, that does something perhaps unexpected - in a non-const environment, cow_wrapper::get will make the impl object unique. this is not what happens in the original code. butthis entire setup is buttugly anyway - i suggest to write three methods for the three calls from outside this classgives much better control about what actually happens with the impl ptr.";"1"
"and need to handle situation when request contains incorrect body: name or release_id are missed, name is incorrect value, release_id is incorrect value, empty body";"0"
"so i would suggest to probably shoot for: try: size, body_iter = df.verify **bunch_of_args if size and not zbf: for chunk in body_iter: # rate limit business ... except dfnotexist: return except dfquarantined as err: self.logger.stuff i might even think it possible to do the close and raise quarantine stuff in a finally block in the iterator.";"0"
"i have a problem with commiting to diskimage-builder. i will commit assoon as possible.";"0"
"i think the deps are useless, they are the same has the global testenv .";"0"
"nit: continuation of docstring lines should be lined up with first double quote. pep257";"0"
"no need of ""else"" here. if not added: self._add_initiator_to_array initiator_name if self.is_initiator_associated_to_host initiator_name is false: self._associate_initiator_to_host initiator_name, hostid";"0"
"incompatible with python3. i think it is better to write something like this: try: import cpickle as pickle except: import pickle";"0"
"this is a greedy match. is it what you want >>> re.findall r'< .* >', '<a><b><c>' 'a><b><c'";"0"
"i'd still request that you remove itithink it makes the api unnecessarily dirty.";"0"
"grrr...i blame...crapmyself. done";"1"
"jeez reading back 'alive=false if i < down_agent_count else true' is comically stupid. why not alive=i >= down_agent_count. anyway i like jakub's suggestion.";"0"
"remove all support_checksum since your i2c has implemented it.";"0"
"apparently covered meanwhile by f088a556ca17658b442da6ad9ddd52be138750ef ""remove anuseless check i had added"".";"0"
"correct. i let this be here to run the tests on the bot. for the final version, will remove this after the libaddressinput is updated.";"0"
"nit: /* read_only */";"0"
"btw. one of the reasons i reverted this is that this hidden attribute is used by zipinputstream to modify the behaviour of close. what a load of crap";"1"
"strerror errno is almost always more useful than errno.";"0"
"-1 to that suggestion. i'd prefer to see a general logging cleanup rather than adding this rubbish at random places";"1"
"dumb question: in this little drawing, what are the bounds of the physical display";"0"
"you need easymock.eq 0l with just '0', easymock is trying to match an int argument and not finding it";"0"
"1. i think all these transformations should be done in objects layer. 2. could you please explain, why we have hardcoded mac_unix here what if we are dealing with infiniband hwaddr";"0"
"actually, thats probably a silly idea, ignore that.";"0"
"please change dummy to fake";"0"
"ugly, but nice bandaid!";"1"
"1 3 see earlier comments about fiddling w/ the patch multiple times, leading to the current el busto'd form to get gerrit to actually take the cl. emails already sent to pull the gerrit logs and run down that cause. 2 yeah, i am a moronthat was there prior to the gerrit mayhem. 4 this pathway in general for this is wrong, including prior to my changes; it would allow throwing out a newer version of a dep during this fallback testing, being inaccurate. frankly not particularly sure if it is even worth maintaining the ""you should update to tot vs patch conflict"" bits- the conflict detection/handling really, really is at the wrong layer here. sorely tempted to rip it out unless someone thinks it is worth keeping- which case it would have to be at the validation pool layer...";"1"
"consts.oswl_resource_types.vm";"0"
"disregard, being silly. duh stdlib";"0"
"annoying nits...:0 weight_properties";"0"
"hang on, thats rubbish, ignore that idea. i kinda think if we want conf.image_cache_subdirectory_name to mean the same for vmware and libvirt, if possible. if we added a conf.vmware.make_cache_folder_unique that controlled if you add the my_ip to the conf.image_cache_subdirectory_name, it would be much simpler. admins that want to share the folder, then just set conf.vmware.make_cache_folder_unique=false, then they configure the cache directly, just like libvirt folks, by configuring conf.image_cache_subdirectory_name";"0"
"god, who gave that classuch an obnoxiously long name. he should be lit on fire.";"1"
"hey, i guess this line should be right bellow import socket.";"0"
"you should use your _get_job_lock lock here lest you get a nasty race.";"1"
"i saw that in the log when i ran generate_gni.sh butitdid not change rtcd.h files.....";"0"
"you do not need to line wrap ebuilds to 80 cols. we letitbe longer as it makes things more readable, especially once you delete the string to die.";"0"
"lets make this ""page* const page_"" to indicate that we can never change the page for a category unlike free_list_";"0"
"this kind of looks silly.... !a_loc.equals b_loc is a lot more readable.";"1"
"another bad function name. isoperatorconciderednonroaming";"0"
"if extract_thread_list is enabled it splits the raw data and the ps dump as well as the procfs dump. previously it returned just the raw data and the mappings from pid to cmdline. i went ahead and modified it so it returned the rest of the text dump as well, which contains our proc dump and any future dumps that get added later. any future text dumps will have to implement two cases: either extraxt_cmdline extracts the raw data, or it does not. then it gets passed to extract_tgid which will either extract the raw data or it wont. as you can see this is going to get cumbersome. i'll fix this now and have the raw data be extracted before any sort of text extraction happens -- not sure why this was not done in the first case.";"0"
"kalignment = kobjectalignment";"0"
"do not think minijail is needed for logging setup anymore. eventually you will want to run the daemon in a minijail dropprivileges , that can be done in a later cl.";"0"
"and change this to tag != null *tag, and then set tag_len";"0"
"any reason to have this stored in the 9 and 11 renderers, instead of the base class";"0"
"did you mean to nuke this docstring";"0"
"> added here what about the calls from the embedder";"0"
"nit: remove extra space here";"0"
"this insanity is spreading... i'll have to clean it up.";"1"
"drop all the sections below";"0"
"add expect_false using a path/id that does not exist.";"0"
"confirmed that this works fine in dumb mode via internal actions enter dumb mode";"0"
"when submitting angle cls.. use bug=angleproject:#### and bug=chromium:######. bugdroid and gerrit will assume any unlabeled cls are chromium, so it is best to be explicit.";"0"
"i prefer this test code reusing. the difference of arguments ""ex"" and ""except"" is instance and type only. so how about changing here to - def _test_migrate_server_deals_with_expected_exceptions self, ex, excep : + def _test_migrate_server_deals_with_expected_exceptions self, ex : instance = fake_instance.fake_db_instance uuid='uuid', vm_state=vm_states.active inst_obj = instance_obj.instance._from_db_object -1564,7 +1564,7 classconductortasktestcase _basetasktestcase, test_compute.basetestcase : self.conductor = utils.exceptionhelper self.conductor - self.assertraises excep, + self.assertraises type ex , self.conductor.migrate_server, self.context, inst_obj, {'host': 'destination'}, true, false, none, 'block_migration', 'disk_over_commit' -1600,13 +1600,12 classconductortasktestcase _basetasktestcase, test_compute.basetestcase : 'disk_over_commit' def test_migrate_server_deals_with_destinationhypervisortooold self : - ex = exc.destinationhypervisortooold - self._test_migrate_server_deals_with_expected_exceptions ex , ex + ex = exc.destinationhypervisortooold + self._test_migrate_server_deals_with_expected_exceptions ex def test_migrate_server_deals_with_hypervisorunablailable self : - ex = exc.hypervisorunavailable - self._test_migrate_server_deals_with_expected_exceptions - ex host='dummy' , ex + ex = exc.hypervisorunavailable host='dummy' + self._test_migrate_server_deals_with_expected_exceptions ex";"0"
"de gustibus non est disputandum";"0"
"shame on me that i've missed this earlier. i think you need to bump the version to 1.25.";"0"
"oh, lordy. we are all going to burn in hellbecause this is hard-coded here.";"1"
"inner loop removed. i can not make sure the performance penalty of using memory_order_acquire instead of memory_order_relaxed. some race situations are hard to produce.";"0"
"you should get yourself an oak-rev5 or -rev6 ...";"0"
"no, rejectpromise was already called in step 4. we just need to delete the job here.";"0"
"can we drop ""read: "". that just seems silly. of course reviewers should read the commit message.";"0"
"please put the declaration into the for header. for sccol nidx = 0; nidx <= nlast; ++nidx";"0"
"you need to use $ here. gen may be redefined elsewhere.";"0"
"we could do this via view_delegate . maybe we could get rid of applistview::getassistantviewdelegate if this is the only place calling it.";"0"
"these docstrings are the same as above. in general the test names are clear and i would remove all of the doctstrings";"0"
"oops, that was dumb. i actually had caught this while you were reviewing and fixed it. i added verifications in every test that disconnections do not occur on success.";"0"
"refactored to use the new crudmixin.";"0"
"and damnit gerrit, these comments were on the ""this is technically incorrect"" box, not here!";"1"
"no, we do not need to wait. the implementation of setactive is as follows: public void setactive boolean active { if mactive == active { return; } try { mbinder.setactive active ; mactive = active; } catch remoteexception e { log.wtftag, ""failure in setactive."", e ; } }";"0"
"this can not be right if it was correct before should notitbe 1e6 and since you'll be returning a float i am not sure i buy the argument for losing accuracy.";"0"
"fmt = self.fmt";"0"
"this is what .die is for";"0"
"let us assume i am an idiot should not be hard , what if i am using neutron recognize this is likely a section wide issue .";"0"
"grubbing down into internals here kind of sucks";"1"
"oh right, shite";"1"
"great catch. let me just wipe that egg off my face. :-";"0"
"good finding! my original code is crap";"1"
"returns the pid...if it exists";"0"
"done. i am also killing ""system/core/fs_mgr/include"" here.";"0"
"delete qos_support. you have qos below.";"0"
"should it be shellcontainer postgres su - postgres withoutityou are getting warning about linux postgres user access to /root";"0"
"consider adding a test for mousedown on the scrollbar, mouse up off the scrollbar. we should get the same gsb, gsu, gse.";"0"
"remove this dead code, please.";"0"
"users is to vague and has been used to describe operators, domain admins, consumer/developers, etc.";"0"
"this is pretty ugly, just drop the period";"1"
"i trust you tested with --buildbot --debug did you verify thatitactually submitted the changes i think you need to provide a fake pickle now with --mock-slave-status to getitto actually submit changes this used to be automatic but was not anymore .";"0"
"please remove all trailing whitespaces.";"0"
"triagerelevantchanges.shouldwait returns false, so this build will should be self-destructed. so the metadata should be true.";"0"
"yes. can we rely on wtftextencoding nullstr emptystr returning wtftextencoding null";"0"
"nit: you should also destroy the log_collector_ at this point.";"0"
"could have putitin the regexp using regexp.quotemeta, but whatever";"0"
"technically, anonymous arguments are not allowed, butthe declaration might get even uglier... no need for space after < although i guess you can optionally use it... :-";"1"
"seems like one of logger or interface should die. my money is on interface dying.";"0"
"so i was wondering why we would want to do this at all when it is most likely that those are already set on an instance, and if not - they can be lazy-loaded on access. the problem comes when we are migrating an instance because we need the ""new"" pci requests. we use a horrible hack to get the newer ones from the db. we should really be adding pci_requests to the migrationcontext object and consuming them from there as is the case with numa topology.";"0"
"yuckchange history :";"1"
"indeed. once the libcore cl lands, i'll rip this field out of this classand make this classdelegate to the libcore class";"0"
"konstants should be const . and if they are const members, they should probably be static members.";"0"
"a... with ha queues are: while you are atitmake the list consisten and following our conventis: cinder -> openstack block storage ceilometer -> telemetry";"0"
"nit /get_node_uuids_from_chassis_node_list/ /get_nodes_uuids_from_chassis_node_list/";"0"
"nevermind, i clearly suckat python";"1"
"dammit";"1"
"delete k.ptr;";"0"
"yuckmasking possible typos. i guess it needs to stay this way, or perhaps you could add a warning message 'invalid touch type, default used instead'.";"1"
"/* double_slot */ false";"0"
"uploadartifact only supports uploading to self.upload_url";"0"
"bad rebase :";"0"
"locals is yucky";"1"
"you need to change fakes.faketask to add there update_at field";"0"
"yep. silly me.";"1"
"or the simpler: if mrefreshprogressrunnable != null { removecallbacks mrefreshprogressrunnable ; mrefreshisposted = false; }";"0"
"having description to each of the testcase would be beneficial to the lame user to know whats happening with this testcase..";"0"
"why add mocked out sleep here";"0"
"minor nit - 'subnet' misspelt.";"0"
"these alignments are off.";"0"
"you should remove *ars and use extra_args just as you did above.";"0"
"nit: make this constexpr previewsstate kdisabledbits = ...";"0"
"not sure i understood you, butitook a stab anyways,";"0"
"silly me. possibly something we want our linter to catch :";"0"
"damnit";"1"
"this function is a little silly for just writing three registers. maybe you should move the code that builds hctsiz and hcchar from raw length values in here as well";"0"
"you need the device key. it would be good if we could getitfrom creation, btw. this is kinda ugly.";"1"
"a 404 however would make sense is ""resource"" did not exist. there are cases like... you know neutron. when you get a 404 because a resource does not exist, whereas the truth is that the resource does not exist on that specific instance of the server, because the extensions that implements it is not defined. this was a place were some idiot me proposed initially we should instead use the 501. i justified myself saying i was talking about jeans from a famous brand. i think 400 is the only one that makes some sense. however, as a side note, i think you too are aware that we are using 400 for quite a lot of stuff. and the only way of distinguishing the various errors is the message. messages are good for humans, not so for machines. are we still completely -2 on the idea of sending application error codes within error response bodies";"0"
"put str_split instead of str_replace";"0"
"i wanted to say - specially : apologies for the stupid acronym.";"0"
"use utils.startdaemonthread";"0"
"if you are using a virtualenv, you should never have to use sudo. in fact, 'sudo pip' is a bit of a anti-pattern by itself.";"0"
"suggest move getting the dumb member id to a separate line so that this is readable.";"0"
"yeah, but my compose function is going to look pretty stupid as a part of this patch if i do not use it. ; your suggestion is definitely a much better cleanup though.";"0"
"all of the above should be local vars pypi_mirror_url* below too";"0"
"probably a stupid question but is there any way we can just have this string passed as a command line switch when launching renderers";"0"
"just need to init field here, not to passsuper.__init__ self.host_app = host_app_path";"0"
"/* libqmi_qmidev_h */";"0"
"given previous comments it is better to get rid of the resizing";"0"
"bad indentation. did this even passcheckpatch again, same comment with using proper primitives and not needing manual memory barriers.";"0"
"as the next cl suggests, i think it is time to remove dumb mapping. let us discuss in";"0"
"nit: s/#000/black/";"0"
"this should not be needed if you properly initialize cmdline above";"0"
"ah, no. it just my stupidity and lack of tests which i am about to write . so, would you prefer _entry role=none, roles=none, ... or _entry roles, ... and checking type role == 'list' both a bit weird... like a have a feeling it would be unexpected for most that 'role' can actually be a list.";"1"
"admin-openrc.sh, also line 216";"0"
"interesting, ya, sucksusing and supporting a old/unsupported evzookeeper driver that nobody is maintaining anymore . i""m core in kazoo and other y! is also so hopefully can avoid that in the future...";"1"
"i will update it asap. it should be removed.";"0"
"why do we keep propagating the usage of ""const char*"" instead of using ""const std::string "" this is especially weird since you do have std::string which you have to call c_str on to call these methods...";"0"
"i am trying to structure data and you ask me to include a dict with some random fields. i hate you.";"1"
"fileid and recordnum are not used, why are you doing this";"0"
"should this be atomic<uint64_t> can we document the intended semantics my guess is: can be updated and reliably read by exclusive owner, and is read occasionally by other for logging purposes. in the latter case the result is only a hint, and may occasionally be garbage.";"0"
"oh, i copied that ""clever hack"" from that build rule in libcore/javalibrary.mk that you deleted only a few weeks ago: if anyone can propose a better way of doing it, i am all ears.";"0"
"more pedantry: this docstring makes sense only to people who are ware of the tail-f ncs mech driver... no need to address, definetely not a blocker";"0"
"should self.tenant_name be self.project_name";"0"
"remove comment";"0"
"damnit, i forgot to modify it. thanks for the catch.";"1"
"for the sake of future py3k: try: import __builtin__ excapt importerror: import builtins as __builtin__";"0"
"this will kill all modes > 2160...";"0"
"sorry, i wasstupid. i thought this disables memcache caching. so, please ignore me.";"0"
"why admin creds are used for share creation";"0"
"are we really polling that sort of sucks";"1"
"1. close the editor if the module has been removed 2. close the editor and delete the useless file that we cant do anything useful with anyway";"0"
"pretty please kill this typedef";"0"
"you do not use **kwargs below, why do you need it";"0"
"nit: if would be worth it to check if we get something that is not a personalised tile before adding the dummy data. otherwise, when the backend is turned on before you can remove this code you would get duplicates in the same section and crash.";"0"
"wait, actually, tv_usec is defined as unsigned long. tell the linter to shut up!";"1"
"you should use objects.consistencygroup.get_by_id , since you already use consistencygroup object here.";"0"
"..., i've changed that, vim fools me... done";"0"
"recommend actually constructing the url via ""net.url"" and setting the host value to catch: a accidentally supply a full url, or make a stupid typo b use the string field to mess with api access naively e.g., ""example.com/eatyourface """;"0"
"nit: dump this all into a separate function self.do_stuff_to_summary_options_from_diagnostic statiscs_names";"0"
"eqlx_cli_timeout is no longer being used and should probably be removed.";"0"
"stale comment, given that dir is now created by init";"0"
"!= null, or are you following jemalloc style";"0"
"is msdc a common abbreviation it is better to use non-abbreviated version when it is used first.";"0"
"i think you can just call $ get_abs_build_var target_out_unstripped , instead of double $ dirname s.";"0"
"these two first friends look useless.";"0"
"while you are here fixing, drop these whitespaces...";"0"
"fan_is_suspended = 0;";"0"
"i am not loving this direct reliance on __module__ == 'ceilometer.storage.base', seems brittle to me. why not just change the eventsnotificationendpoint instead, to adopt a suckit-and-see approach on the call into record_events i.e. wrap this call: in a try-except-notimplementederror block, and simply fall out to marking the notification as handled in that case";"1"
"we used to have procfs.h until very recently. there used to be a copy in bionic and another forked copy for the ndk stuff. i removed bionic's copy when we removed libthread_db from bionic, on the understanding that -- since both are only useful for gdb -- the ""true"" copy should be with gdb. but now it looks like we are committing random hacks against gdb instead that is fuckedup.";"1"
"getstatus is in classh, were you missing object-inl.h that this include gets for you amongst a lot of other stuff";"0"
"a quick audit of labelbutton revealed that checkbox and radiobutton are the only users to toggle multi-line, but i wonder if this behavior would still be appropriate for other buttons. perhaps that is okay to ignore for now, butitmight help to leave a comment here that this is intended for the checkbox and radiobutton subclasses of labelbutton.";"0"
"in that case i think the nacl module should be killed by the browser and all memory should be regained, so i do not think it matters if there are memory leaks. that is an os job.";"0"
"ha...i was looking for the dcheck to add here, but i believe it is sitting right in front of my eyes...i'll have to add a version that is assert_blocking_allowed so my feeble brain can see it.";"0"
"does ironic programmatically decide to delete the instance, or does someone issue an api call or via nova to delete it. and why would you want to make it available again if it couldn't be trusted";"0"
"delete is the classmethod which calls the credential_api with the id.";"0"
"otherwise here it gets expanded incorrectly: ... dm_verity.dev_wait=... partuuid=%u/partnroff=1 231324650 abcd898e89f 4651321 ...";"0"
"the update to eapi=4 means you can drop all these die statements";"0"
"haha, did you do this because i made such a big stink about char in c++ you are welcome to do arrays.equals on the byte s. :";"0"
"i think _le should be used here.";"0"
"example: <div dir=ltr><span dir=rtl>abc</span></div>, converting logical caret position abc 0 to visual in this case: - abc 0's lower-level side the line begin sentinel of level 0 , and higher level side is 'a' of level 2 - it is owned by the higher level side 'a' - there is no neighbor box, as line begin sentinel is a dummy";"0"
"i see. ssh -t -t can let you kill ssh process and remote process, but i am not sure about adb.";"0"
"this should be force = body.get 'force', true";"0"
"can we call this pcidevicepool";"0"
"darn whitespace : only do it if we need another patchset...";"1"
"can you add an endline after the colon pretty please it'll make for easier copying and pasting.";"0"
"this should probably be testtools.testcase.testskipped";"0"
"you can create tmpfs up to the size of ram + swap. however, tmpfs_check would not passif creating dib_min_tmpfs*2 sized tmpfs would be bigger than ram. the only thing this does is _shrink_ tmpfs's to be only the size we presume them to need to be with dib_min_tmpfs.";"0"
"so umm file_bugs=false so just remove the bug_template=_bug_template.";"0"
"endpointurl should be inside <replaceable> tags";"0"
"darn, man :";"1"
"can not we use here just self._batch = cfg.conf.batch_polled_samples or even get rid of self._batch";"0"
"looking at the failure logs of your trybots, it looks like cryptohome tries to do #include <crypto/scoped_openssl_types.h> this line fails.";"0"
"i am not sure that this is really possible, but i am analand wanted to add it just in case.";"1"
"afaict git-r3 can not be used yet, because it has depend="">=dev-vcs/git-1.8.2.1"" but portage-stable currently has dev-vcs/git/git-1.8.1.5-r1.ebuild.";"0"
"sorry, did not see this earlier rather use the pimp member to do this here and elsewhere further down - calling lock repeatedly seems inefficient to me, when we already have a shared_ptr member";"0"
"that repeats the ugly instantiation twice. it ""encapsulates"" the typedef better, though i do not think that is really that important in tests. with respect to the name: the assembler classis assemblerx86_64. thus the name.";"0"
"i may sound like a complete idiot... :- but still... how about this mod except oslo_messaging.messagingtimeout: with excutils.save_and_reraise_exception : wait = random.uniform 0, transport.conf.rpc_response_timeout ceiling = transport.conf.rpc_response_timeout * 10 new_timeout = min self._original_context.timeout * 2, ceiling log.warning _lw ""modified timeout for % method s call "" ""to % new s seconds."" , {'method': scoped_method, 'new': new_timeout - wait } self._method_timeouts scoped_method = new_timeout - wait no need to call import time and call sleep , but still achieve spread!";"0"
"yes, because: if ovs l2 pop => l2 pop is true in ovs if ovs only => l2 pop is false in ovs if l2 pop only => does not make sense at all.";"0"
"ahrg, stupid backport mistake... will fix";"1"
"but is that what we want and what linus intended , or just us carrying over old stupidity into 64-bit";"1"
"i'll remove it from here and the others above!";"0"
"sure gary, i am going to work on that if all run well i will push a new patchset.";"0"
"those blasted patch requests are the worst... this and the 'path_info' in resp.environ check above are a bit overly defensive for my tastes. it is just distracting. ""why is this code here how does this happenisswob broken should i re-read pep333 "" wait... should i /me wastes an 10 mins nope - must be present - phew.";"0"
"oops! i am going to nuke this comment entirely. new patch coming up.";"1"
"child here should be a plain cbb, so: bssl::scopedcbb output_cbb; cbb child;";"0"
"yeah, that seems silly. the macro name is almost as long as the inline text, and it encourages you to use the bad form that does not include a message. not sure what they were thinking there!";"0"
"i have a couple of concerns here. the most minor one is that this now forces us to use this decorator only on instance or classmethods; is there anywhere where this is not the case the second concern is that, if i recall correctly, the get_context_from_function_and_args function was created because the decorator was used on some methods where context had to be searched for, which argues that, for those methods, it is not the first non-self argument to the method. this means that, for those methods, this could result in a notify still containing the context, but missing the first argument to the method, which may be rather useful. also, it is worth pointing out that there are no other consumers of get_context_from_function_and_args . it is used in nova/openstack/common/notifier/api.py, butthe version used is of course from nova/openstack/common/context.py. given that, this patch should probably also remove the function, assuming my two concerns above are not a factor";"0"
"do you have already a potential fix from what you describe here i do not see a way out. if we need to kill overlapping ips, maybe let us just do that...";"0"
"this is a dumb question i am only starting to look at this patch . why not leave 'logical name' of the node, at the api level, and internally, continue to stick with our node_uuid eg, can not you get the node's uuid from rpc_node";"0"
"it is describing from the point-in-time of 'until'. so, stuff will be happening until a certain point in time, where some stuff happened before it. damnenglish grammar :-";"1"
"remove this left over from experimentation with std::current_exception , that havn't worked.";"0"
"a space is needed after failed!! _le 'import pywbem failed!! '";"0"
"you still need the cachectl for bcache...";"0"
"why are we adding all this crapback in you can not passcts with most of these set to false. we left in the only ones you could actually mess with and still passcts.";"1"
"can you get rid of this trailing white space";"0"
"i think you need a install -r tools/pip-requires";"0"
"yeah, that does look ugly... :-/ i take back my comment and agree that expect_true is better. btw, i think that reinterpret_cast is the way to go here regardless";"1"
"you can stop inheriting from test_l3_agent_scheduler.l3schedulerbasemixin then in line 49 use helpers.set_agent_admin_state. simpler, less usages of that stupid mixin... win win.";"0"
"darn, i did such a good job not being rude :p";"1"
"darn! i am on it";"1"
"openstack_user_config.yml.aio";"0"
"openstack foundation should be removed.";"0"
"iwyu: #include ""third_party/blink/renderer/platform/wtfwtfsize_t.h""";"0"
"still very new to the ndk, so this is probably a dumb question: do not we run both gcc and clang when i run this it prints gcc, and i do not see an option in --help that switches between the two or anything in run-tests.sh that would indicate an undocumented switch .";"0"
"this hurts my brain, and i like partial normally. : you are damnclose however: try this instead: self.http_client.request = self._retryrequest self.http_client.request note that http_client is an instance, so grabbing it is instancemethod like above, gets you an instancemethod- meaning self is prebound. no need to do the classshenanigans. downside, it creates a reference cycle, but you've already got them here.";"1"
"ret should be a size_t. also, move the declaration to its first use.";"0"
"""oss"" is pretty ugly. maybe write out ""operating systems"".";"1"
"this is different than other fk. should be fk_host_history_revision_resource_history_revision";"0"
"code was moved. i agree that magic constants suck";"1"
"please use brillo flags. hasswitch should die in a fire.";"0"
"i guess this is safe, i'd guess the final character will be overwritten if this is just a dumb read";"1"
"use 'self._get_column_value_from_single_row_table' instead of assertin";"0"
"this default_interface stuff is kind of ugly. but not fair to hold up this cl for that existing problem. :";"1"
"not using grubby as per above comment.";"0"
"couldn't this be just object_container_acls.get acl, none";"0"
"tast/local is obviously unavailable : i've changed to use os/exec instead.";"0"
"as i said before, we will not support rule notifications. kill it.";"0"
"i think this separator should be removed the cryptix part is for twofish right";"0"
"same comment about using mock here.";"0"
"nit: you've screwedup your alphabetical ordering :";"1"
"add /* component_id */";"0"
"this changes the parent classloader for this classfrom null to myparentclassloader. not sure if this is intentional.";"0"
"lol, this one always made me sad.... i guess its making similar behavior as the jsonutils one, but man it feels slightly umm, stupid to do this for lack of better word .";"0"
"is not this the only reference to persist.sys.localevar can not you kill that one right now";"0"
"somehow, i managed to miss the rest of this thread. i wonder if i fat-fingered the mute button in my reader. anyway, i tend to agree with you. maybe this check is not worth adding.";"0"
"maybe just me, but i'd prefer if you used some other word here. how about s/suckare unreliable: /";"1"
"fs_unmapped should be fs_inst_mapped right";"0"
"how is memcpy more endian friendly in this case you are never accessing any of the bytes directly, you are just dereferencing a 4-byte opaque ptr and passing it as on opaque 4-byte blob to ntohl in the function call below. you never perform bit/byte operations on it until then. so, memcpy is superfluous here. the only benefit to using memcpy here is thatitis safer on platforms with hard alignment restrictions, as x could be unaligned here. so for that purpose, we should leave the memcpy, not for endianness.";"0"
"i think i need to kill the { and } here";"0"
"the test for c != null seems redundant with the !hostext on 232";"0"
"you are correct. we do not set stdout to anything in the invocation i care about in so stdout should be nothing. rats";"1"
"please group these with oslo imports on l20";"0"
"you really do not need a function, and even less a closure here, c'mon!";"0"
"nit: unknow*n*.";"0"
"i see. so if main code is corrupt, boot loader will also have pid. we just need to be sure that we always load the same pid, b/c if main code were valid, but had incorrect pid, it would not be recoverable. this seems okay for now, but we would prefer to only have pid in bootloader so that an incorrect flash can be recovered, but you can consider that for next generation chips.";"0"
"begin is useless here.";"0"
"can this block be replaced by _get_initial_power_state this is anyways a dup of _get_power_state.";"0"
"i think it would be more logical not to store the results after runner.abort , because the user expects that the execution will stop after the first sla fail. but okay, i have removed this";"0"
"all of your docstrings should end with an empty line.";"0"
"thanks, wtfi wrote..";"1"
"i lose the ptl seat and now you are changing all the dictator-like naming i've come up with. what is next, abandoning lieutenants ;";"0"
"drop all 3 puppet jobs";"0"
"> this line is still longer than 80c done, thanks :";"0"
"i think that as a user, if i create a distributed router using 'true', then create for example a vpn resource with 'true' and it'd fail on me, i'd yell something like ""neutron is stupid"" followed by ""who built this crapthen probably something about someone's mother. yes, we should be consistent : all boolean values should be consistent. then there is the matter of what do other cli clients do, and what about the shared 'openstack' cli client";"1"
"saxon genitive does not apply in this circumstance.";"0"
"one other nit use icccardstatus.card_max_apps.";"0"
"as long as you are here, can you nuke this extra space";"0"
"the first two checks are kinda silly what you really want is probably usb_dev->num_endp > 2 .";"0"
"you might have a race condition here. you probably want to disable the users first and foremost before doing anything else. a user could potentially be logged in, and creating tokens and credentials while you are deleting them, and you could end up with one hanging around after you thought yoyu had removed them all. this is non-transactional, after all.";"0"
"i believe that you mean /.bashrc";"0"
"this should go to a mixin from here and restore. not in this patch though.";"0"
"anali know, but my english minor dictates that i inform you thatitshould be ""misconfigured"" instead of ""miss-configured"" :p";"1"
"good point, how silly of me :";"0"
"remove linebreak.";"0"
"this looks very smelly, don tmt we already have a more robust way to parsebcp47 tags";"0"
"can we just do policyrestart instead of startunboundsession";"0"
"traitorous fingers ;p thanks for the +2 anyway";"0"
"it could take up to two frames to load lut because of need to wait for vblank when disabling/enabling lut. so every load lut would block for two frames. thats why i want to use a worker.";"0"
"that is fine. ncurses is going to be on the image anyways, so i can leave that enabled. the other two were the ones i really wanted to kill off libsamplerate and dialog because it does not seem like any other packages wantit";"0"
"use ""tdf#75360"" to refer to the bug report, remove the link below, and add a more descriptive message than ""fix bug"".";"0"
"we raised an error.testnaerror in autotest, but i cannot find the equivalent in tast. any suggestion is it ok to mark it as pass";"0"
"couple of nits: - what needs to be destroyed this - avoid using first person pronouns in documentations.";"0"
"string literals should be used only to initialize constants and after thatitis pointless to use these literals directly.";"0"
"the line should be removed.";"0"
"would be better if it was except nvpapiclient.nvpapiexception instead";"0"
"use ''iptables''.";"0"
"better to describe whatitdoes rather than why it is here. the ""why"" can be found in the commit message/git blame. it does not hurt too much to include it here although it may suffer from comment rot.";"0"
"hmm, i'll see. this code started off as a straight port from the bash which is why there is globals like this . i think i'll kill off the --testing arg completely once i am happy this code actually works, and the unittests give good coverage it should actually already . so in light of this being destined for death, i am not sure i want to bother with this restructure. if i planned on keeping it, i'd defagree with your classobject approach.";"0"
"because if we start from the root, we'll break fk of parent_id. i'll mention it in the comment";"0"
"nit: let us nuke the numpopups param for sake of simplicity.";"1"
"we had long lines for names before, and personally i dislike split string literals, especially when there are no spaces. i'll see what does not look horrible.";"0"
"agree. what the heck is this. max jitter if so, please use jitter";"0"
"i've implemented cferris' atomic suggestion by making this private and making the api hard to abuse, so i think you should both be happy.";"0"
"another isempty vs null mixup";"0"
"you already initialized to null in line 93, so why do it again";"0"
"move_tab_to_external_screen and set_full_screen should be separated methods.";"0"
"force lc_all=c else you can get localization here. also, that is fuckinghorrible. ;";"1"
"use operating_system.chmod instead of direct execution of chmod through shell";"0"
"i did audit all callers. all callers had to try {} catch illegalargumentexception { do something else instead }. this is silly.";"1"
"kill the struct, make the server a pure function called schemahandler, and then use handlerfunc schemahandler when adding it in run";"0"
"i'd rather insert this into the first block of includes as unsorted as that may be";"0"
"i think we should drop the 'hardware_' from option name";"0"
"hi ed, i've torn down my build system, but i manually re-created ext-gw with what the script will have generated: 1: lo: <loopback,up,lower_up> mtu 65536 qdisc noqueue state unknown link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: em1: <broadcast,multicast,up,lower_up> mtu 1500 qdisc mq state up qlen 1000 link/ether 78:e7:d1:22:4c:a8 brd ff:ff:ff:ff:ff:ff inet 192.168.185.125/16 brd 192.168.255.255 scope global em1 valid_lft forever preferred_lft forever inet6 fe80::7ae7:d1ff:fe22:4ca8/64 scope link valid_lft forever preferred_lft forever 3: em2: <broadcast,multicast> mtu 1500 qdisc noop state down qlen 1000 link/ether 78:e7:d1:22:4c:a9 brd ff:ff:ff:ff:ff:ff 4: em3: <broadcast,multicast> mtu 1500 qdisc noop state down qlen 1000 link/ether 78:e7:d1:22:4c:ae brd ff:ff:ff:ff:ff:ff 5: ovs-system: <broadcast,multicast> mtu 1500 qdisc noop state down link/ether a2:97:66:38:22:2c brd ff:ff:ff:ff:ff:ff 6: ext-gw: <broadcast,up,lower_up> mtu 1500 qdisc noqueue state unknown link/ether 7a:4f:06:23:69:ea brd ff:ff:ff:ff:ff:ff inet 198.51.100.1/24 scope global ext-gw valid_lft forever preferred_lft forever inet6 fe80::784f:6ff:fe23:69ea/64 scope link valid_lft forever preferred_lft forever 7: brbm: <broadcast,up,lower_up> mtu 1500 qdisc noqueue state unknown link/ether 4e:30:9a:3f:76:43 brd ff:ff:ff:ff:ff:ff inet6 fe80::282e:4fff:fee7:620e/64 scope link valid_lft forever preferred_lft forever 8: virbr0: <no-carrier,broadcast,multicast,up> mtu 1500 qdisc noqueue state down link/ether 0e:e8:06:47:b0:14 brd ff:ff:ff:ff:ff:ff inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0 valid_lft forever preferred_lft forever $ netstat -rn kernel ip routing table destination gateway genmask flags mss window irtt iface 0.0.0.0 192.168.99.101 0.0.0.0 ug 0 0 0 em1 192.168.0.0 0.0.0.0 255.255.0.0 u 0 0 0 em1 192.168.122.0 0.0.0.0 255.255.255.0 u 0 0 0 virbr0 198.51.100.0 0.0.0.0 255.255.255.0 u 0 0 0 ext-gw";"0"
"removing will break *some* users of ironic - ironic still works without the clusteredcomputemanager. ccm allows for better scaling and ha, as we only support ""one"" compute hostitis buggy as heck, too instance action races . this work will allow us to kill that off:";"0"
"i'd rather have the mlock in the individual methods rather than here.";"0"
"that kind of conflict resolution should make this a backport.";"0"
"darn, typo";"1"
"super-nit: use maddhandlerscount, mwritecallcount, etc. or at a minimum addhandlerscount, writecallcount, etc.";"0"
"hmm, how do you create gems without a gem creation ioctl only dumb gems";"0"
"i'd have to add another library to the pdk. this is annoying.";"1"
"_get_vioses is not tested anywhere. i actually think it would have been better if you had kept the mocks of vios.get";"0"
"d'oh, that is awful english on my part! fixing.";"0"
"this should be i18n or, at least, androidimportprojectaction#wizard_title should be used";"0"
"you canuse assertin and assertnotin";"0"
"is this really the right place this seems like an awful hack...";"1"
"oops i am an idiot and can not read, it is not actually published :";"0"
"these =>'s should be lined up";"0"
"jesus, you are starting to make me think i have a brain tumor!";"1"
"i still disagree with having this flag ""long_running"".";"0"
"please use 'mock.patch.object', like: mock.patch.object vmops.vmwarevmops, '_sized_image_exists', return_value=false mock.patch.object vmops.vmwarevmops, '_extend_virtual_disk' mock.patch.object vm_util, 'copy_virtual_disk' here and below.";"0"
"struct completion arb_cnt_complete tegra_rpc_max_sem ;";"0"
"can drop the die";"0"
"that would force me into wrapping ioexception, not worth the trouble.";"0"
"i think i am missing something here, but i do not know this code at all wall, so sorry for the dumb questsion. if we fallback to the integration bridge, i would have expected to see this tried first, then if not found, attempt to look up the integration bridge";"0"
"actually, i can not do this one in this review because the interface requires a name not a full instance, which is stupid.";"1"
"why have this line: self.assignment_api.get_domain domain_id when you have the same call just storing the return value next domain_ref = self.assignment_api.get_domain domain_id";"0"
"can you test without these special run bindmounts the above ""/run/:/run/"" should pull in the entire run filesystem including /run/lvm and /run/lvmmetad.pid.";"0"
"you miss an unittest with host=fakehost";"0"
"it should be versioned as in methods below.";"0"
"ocd here, but why the heck is there extra spaces in front of your copy right";"0"
"all of this wasspecific to commandexecuteimpl and should be removed";"0"
"i think the cleanest style here would be to make this: classlinker->iscompiledimagemethod m and then embed maybe... into classlinker as iscompiledimagemethod. it'd be nice to avoid exposing the debuggerto inner notions of oat files.";"0"
"i'll remove this in the next upload i hate it when i see something to change after i've already added a comment in gerrit";"0"
"removes this crapfrom bionic's <grp.h>.";"1"
"exceptitis not a boolean. it is the string of files to ignore, e.g. ""cvs:.git:.svn:*.foo""";"0"
"should this be ifneq $ findstring mips, $ target_arch ,";"0"
"why is this removed i think there is some crapin the virt drivers that keys off whether or not the properties key is in the image_meta, but i'd have to dig to confirm. <later> well i dug and we have a bunch of code that is just doing image_meta 'properties' so apparently it is not a problem, else we'd be keyerror crazy. i am just not sure why the change is here related .";"1"
"why is this key_name and not keyname as in instance.py";"0"
"you are not following because i am not making sense. my argument was based on future code superimposed onto this function. i'll use your suggestion in the next version. it is late... i need to quit before i say more dumb things.";"0"
"in the no_wake i think logically this needs to be int ehw wake_signal group.";"0"
"ok... i get why you've got those print statements in there. kill them, and invoke the test with -v; it'll give you better output, making those prints unnecessary for debugging/development of these unittests. frankly, unittest runner's default of being stupidly quiet is obnoxious. :";"0"
"nit: these two temporaries do not add much value.";"0"
"burn the wit h h htab";"0"
"<literal> ass.";"1"
"i hate console programs eating random characters on my terminal. butthat is a question of personal taste";"0"
"this limiter should be removed";"0"
"run the following command to install virtualenv as install_venv.py is not packaged. ./run_tempest.sh -u not_exist_tests";"0"
"hrm, i can not reproduce this now on either keystone v2 or v3. i am going to chalk this up to either a keystone anomaly or something stupid in my part. my $$$ is on the latter.";"0"
"prefer you use delete_key as there is already a delete_group, delete_host etc";"0"
"i've just learned thatitold a stupid thing : yes, i will change this to wait. thanks for this catch!";"0"
"ah, good point... butitsucksto have the cut and paste, hmm... getting the values for these configs from the oslo ones seems crazy too. i guess this could work as it is if we have to.";"1"
"the breakpad tools are generally hostile. you could do something like: $ hide if ! $ breakpad_dump_syms -c $< > $ 2>$ .log; then cat $ .log > 2; false; fi";"0"
"self.group_configuration, self.launch_configuration,";"0"
"i would rather see this parameter removed. there is only one option, so it is useless anyway.";"0"
"pid == 0 is legitimate getcon or setcon call . and why do we need this separate check when you already handle this in openattr why can not we leave getprocattrcon and setprocattrcon unchanged and only deal with this in openattr";"0"
"see you in hellcommon.h!";"1"
"node.start is now called automatically inside the constructor, so it is unnecessary. i'll delete it. node.stop and node.start are called in the destructor for symmetry . by itself that does not isolate the tests because the destructors do not necessarily get called immediately--only when garbage collected. separate patch that isolates the tests from each other.";"0"
"container_pid is not a child of session_manager, so iiuc this will never be true. do not you need to compare pid to run_oci_pid_";"0"
"huh. is there a 'cmp' equivalent too, that would let us kill cmp.exe not that i want to distract you and add things to the critical path, but just thinking longer term.";"0"
"one last possibly stupid question. are caller and owner_limitation the same value here they both seem to pull x-<target>-id from header";"0"
"that shitis unfortunately required. when 'next' button gets display: none the focus returns to body, not to modal. modal stops to get keyboard events better solution";"1"
"use ""die""";"0"
"tbh, i sort of think this makes the notification agent 'too dumb'";"0"
"nitpick: avoid overly long lines, 120 characters is enough to wrap the head around.. ;- and make it look ugly in the debugger";"0"
"done. yes, those settings can be derived by executing 'syncontrol diag'.";"0"
"iirc it made for a ridiculously long line that then had to be broken in very ugly ways to passpep8 :";"1"
"can you put all this stuff somewhere outside pytest like factory/py/locale.py. gooftool has a separate copy of this and it would be nice to consolidate later . if you do that, the remaining tasks are small enough that you could just put them into vpd.py. of course we should really find a way to reuse chromeos's l10n libraries but i will not make you do that here :";"0"
"nit: ""we need to kill"" -> ""first remove"" avoids first person and the unclear word ""kill"", plus shorter";"0"
"scrow instead of sal_uint16. if not scrow then at least a 32bit type.";"0"
"well that wassilly of me";"1"
"> this is not really good form because if someone implements these methods for kitkat one, they will not know there is this corner case that does not work. > > probably better to passin the bool in the lollipop and higher constructor instead. then if someone wants to use attached state in kitkat one, at least they'll realize the initial value is missing, and then fix tracking properly. that does mean inlining webcontentsaccessibility.create here though, which kind of sucks or maybe it is easier to just put a comment in the kitkat one that mentions this corner case";"1"
"these mojom enums should live in //storage/common/quota too.";"0"
"liar! you want 2018";"1"
"you could just delete these vars since they are empty";"0"
"it should work. i confirmed that the following command worked. ipmitool -v -i lanplus -h host -l administrator -u id -p pw sol activate";"0"
"this should have been const void*. i understand thatitstems out from curl's callback which stupidly does not use const , maybe have this function be ""nice""";"1"
"we do not need to call collect_au_log in the first place if log_dir is missing. >why do not just let collect_au_log to check any parameter it gets in that kind of implicit handling is bad, it is how you end up with javascript: > '5' - 3 2 // weak typing + implicit conversions = headaches > '5' + 3 '53' // because we all love consistency > '5' - '4' 1 // string - string = integer. what > '5' + + '5' '55' > 'foo' + + 'foo' 'foonan' // marvelous. > '5' + - '2' '5-2' > '5' + - + - - + - - + + - + - + - + - - - '-2' '52' // apparently it is ok > var x = 3; > '5' + x - x 50 > '5' - x + x 5 // because fuckmath";"1"
"oh sry, the actually line is: mock.call .bind admin=mock_deployment_get.return_value ""admin"" , users= ,";"0"
"is not the client always linux hmmm... client is a terrible name. i've no idea what i am looking at here. i was planning on moving those files that currently have ""client"" in the name. there it seems to mean ""device"". usb_linux_client is the device-side code, usb_linux is the host-side code. likewise adb_auth. adb_client.cpp does not fit this pattern though --- it is a mixture and for file_sync, client is the *host* and 'service' is the device.";"0"
"nits, as long as you are here might as well remove this extra space and align the rest of the below with the above.";"0"
"yeah, that sounds right: anchor_node_ should be weakmember, frame_ should be member.";"0"
"why side_effectithink it is better to use return_value e.g. self.wrapped_keystone.create_user.return_value = user_list";"0"
"cpickle will perform better: import cpickle as pickle";"0"
"this looks odd. you might write it like this instead to clean it up a bit: from setuptools.command.sdist import sdist sdist.run self";"0"
"i will take a stab at rewording this.";"0"
"this function is useless since you would have to first convert your input to a dict first";"0"
"return 0 on success and use int please.";"0"
"instancenotfound should be catched explicitly";"0"
"this function may be more readable if there were comments with examples of what the expected inputs look like.";"0"
"btw, 'ecmascript6' significantly increases bundle size by adding dozens '$jscomp' variables like 'const $jscomp$async$this=this;return $jscomp.asyncexecutepromisegeneratorfunction ...' and es6 polyfills. it is awful :";"1"
"based on the old version, it looks like lxc should be built even if use=daemon is not sent. so how about this: cros_go_binaries= ""${ego_pn}/lxc"" if use daemon; then cros_go_binaries+= ""${ego_pn}/lxd"" ""${ego_pn}/fuidshift"" fi";"0"
"actually, it should be snapshotnotfound, which like shareresourcenotfound is a subclassof storageresourcenotfound.";"0"
"you should kill is_checked now";"1"
"full_listing need to be set to false, it is override limit and get all containers.";"0"
"awful hack inserted.";"1"
"write should be write to be consistent with the bullets above";"0"
"ew. does it have to be a uint32_t";"1"
"i think a listopt might be easier to manage than having to concatenate several regexes in one string.";"0"
"also looks like you can just get rid of mapsize and use page_size instead.";"0"
"this should be moved to test_hostops.py as we are trying to completely remove test_hypervapi.py.";"0"
"do you really mean to passthis string by value my inclination would have been const std::string method_name";"0"
"oh derp. now that you've pointed out, that is obvious. i was thinking for a while how this should be indented. eh, wood for the trees and all that... :";"1"
"putitinside #ifdef support_checksum";"0"
"yes, i mean _test_create_instance is called only with vnuma_enabled=false. i did not find other usages like _test_create_instance ..., vnuma_enabled=true";"0"
"sahid's comment seems reasonable.";"0"
"actually, the info was duplicated here, as exception->dump would dump the location.";"0"
"drop the 'die'";"0"
"i do not like this. you are partially parametrizing the test along a different dimension/variable, in a nested for loop. i see two options: write out every single case as a separate dumb test, or parametrize properly. i suggested parametrization due to the shape of the problem; you are just testing cases in the cartesian product of various sets of dimensions {web, logdir, build, ...} x {short, long} x {true, false} {web, logdir, build, ...} x {short, long} x {servo, firmware, ...} this is the worst of both worlds: you are copy-pasting the test across {web, logdir, build, ...}, and parametrizing across {short, long} x {server, firmware, ...} you are paying the complexity price for the parametrization while still keeping some duplication that the parametrization is supposed to remove.";"0"
"if you are approving my comment on the context, you do not need this which is quite ugly imho...";"1"
"add your own s-o-b line below the others, please.";"0"
"add here default_flow_style=false too";"0"
"self.device_auto_dir = autodir or self.auto_dir";"0"
"it is the idea. we want to monitor infinitely for /proc/$pid to die.";"0"
"please, add tests for: * get_nic_interfaces_for_all_nodes * get_bond_interfaces_for_all_nodes";"0"
"ya, trying to remember why i did not do that; think the reason was because i can not really add docstrings to thatitgenerates some of its own that are crapand the docstrings are somewhat useful here.";"1"
"heh. must have had your head phones on this morning while david and i were debating why __del__ sucked and should not be used i still posititis a language fault rather than implementation ; in looking at this, i get the strong feeling the __del__ is required. a todo stating ""rebase to snakeoil.weakrefs.weakreffinalizer"" would be wise.";"1"
"should we be concerned about integer overflow here";"0"
"i honestly hate his block of conditionals and i am pretty sure it will take revenge on us sooner or later, but hey, welcome to bash.";"1"
"what about one that has a subclassthatitreturns this is checked in your duck typing proxy at least.";"1"
"maybe a stupid question.. but why swapping nxadvance and nyadvance does not do the trick. more to the point if nxadvance is wrong in this case, how come nyadvance is right";"0"
"nit, why not just write hostinfo = fakes.fakehoststate 'host1', 'node1', {....} if you have to update the patch, how about we simple it.";"0"
"sorry about that, that was a dumb move on my part. i will fix on the next revision.";"0"
"put the trailing space outside of {%trans%} please, it is error prone for the translators and does not even have any meaning when translating";"0"
"these vars do not seem useful. you do not even use them consistently you have a n.next below";"0"
"nit: #include <unordered_map> and we probably should just use std::map";"0"
"i will satisfy your thirst for pedantry in the method's docstring.";"0"
"max_limit = int cfg.conf.pagination_max_limit should include in try block";"0"
"hello, yamamoto-san. thank you for your comment. you are correct. re-runing run_test.sh hit this as an error. i am working on it.";"0"
"execution on link died here - saying probe_result is not hash-able as a set. can you check here";"0"
"compute_node_id should'nt be nullable";"0"
"localdomwindow is a subclassof domwindow, so it is obvious that local_dom_window.h includes dom_window.h . i am fine with this include though.";"0"
"should this be remote_path instead of final_path";"0"
"this line should be removed";"0"
"nit: message should be: oauth1 is disabled";"0"
"you probably want to protect this with #ifdef __cplusplus.";"0"
"security bug: we can not allow log_id_kernel through this or the logd socket interface as klogd is an internal daemon that is part of logd. revisit as this should be fixed and institutionalized in the liblog writer, reader and within logd itself. we will not fix it in the context of this cl.";"0"
"pep8, pyflakes and flake8 should be removed here. see my comments in other patches";"0"
"you've already set new_tgt_name= tgt_alias on l#292";"0"
"i'd call this something like includingdebugsymbols vs ""real"" unless this somehow relates to your fake stuff";"0"
"you canuse contexlib.nested in here since you have multiple mocks.";"0"
"fake_port_id = fake_show_data 'interfaceattachment' ""port_id""";"0"
"equal_to<oustring> has to be removed.";"0"
"ick. resource_data is such a nasty internal hack. not as nasty as what we used to do with metadata, of course, but still... is there any way we can not expose this to the user if we just disallowed external_reference for resource types that have resource data most of which do not even have a sensible external resource_id anyway do we have an idea of what might be affected";"1"
"nit: maybe ""navinovariationsynthetic"" since users are not disqualified from the normal navi onboarding";"0"
"that sucksbut ok, i am not asking to improve the client.";"1"
"int cnt = config_i2c_retry_cnt;";"0"
"no worries, september 27 might be a day of saying dumb things, as it happened to me too yesterday. thanks for fixing.";"0"
"get_vbus_status should be is_vbus_present to match struct ppc_drv definition .";"0"
"i agree those lines should be removed.";"0"
"what this is a end user message. get a reporter, and abort after.";"0"
"silly typo. :";"0"
"maybe just move this inline in the header, mostly because ifdefs are ugly. :";"1"
"''iface.transport_name''";"0"
"check hasstylusinput somewhere so watcher_ is never started for devices that will never see a stylus";"0"
"kill is_checked!";"0"
"this is an abuse of methodreference. we should have a fieldreference classas well if we want to do it like this. however, i'd keep this as uint16_t* or uint32_t*, see below.";"0"
"oops, stupid mistake. will fix.";"0"
"damngood catch.";"1"
"use 'hascurrentmethodinput ' and change the comment below accordingly.";"0"
"i think log error is not needed, and should be removed.";"0"
"i hate this name. it s too long.";"1"
"ok for the first version, but pls add a comment here that we should really enqueue before we've preparsed the func. then the interaction w/ aborting will also be simple: you'll just need to tell the preparsing to not abort.";"0"
"the uuid needs to be reserved in neutron side somehow.";"0"
"nit: /** * ... * private {arcpickerapplistmodel} */";"0"
"what the helli started writing that butthen decided i did not need to reply here after all and removed it. stupid gerrit....";"1"
"you may want to drop 'for' here for complete sentense.";"0"
"just to make sure ,we specified block_size assize >> spi_packet_log_size_bytes - 1 but here we'll still assize >> spi_packet_log_size_bytes blocks transferred";"1"
"can we avoid exposing std::priority_queue here i am worried about calling methods on that, messing up our bookkeeping.";"0"
"neither of heat, ironic and ironic-inspector are in tripleo.sh as well. should we remove them too";"0"
"this line was a bad copy paste of testcommandlineerror001 and is putting an invalid entry in the classpath. this is now emitting a warning that was not detected before.";"0"
"move this below the onclick defined below, to match the logic for simple doodles.";"0"
"sendmsg should return assize_t changing its type is an abi violation. please do not do that. is there a specific reason for this change";"0"
"stray blank line.";"0"
"hmm, ya i could see that being hard/a pain in the ass";"1"
"ah, silly me.";"1"
"this looks weird. i think you can leave the changelog unchanged, since the renaming is part of the ""upgrading to havana"" item below.";"0"
"may be it should be 'aparna vikraman'";"0"
"according to comment above all self_client should be replaced on self._barbican.";"0"
"use tcu_throw it will fill the __file__ and __line__ for you.";"0"
"this should be kusebakerorbrooksreadbarrier. from object.h: #ifdef use_baker_or_brooks_read_barrier ... uint32_t x_rb_ptr_; // for the baker or brooks pointer. ... #endif";"0"
"how did you test these without screwing up your machine";"1"
"so you've removed the pinctrl for gpio4/31 from gpio_keys, but now it should be put here in the btmrvl node.";"0"
"'1' is too far from real life, put at least 5";"0"
"oh heells yes to that - i hate those strings";"1"
"how about just: return job.jobstate in self._completed_job_states";"0"
"well, your code is explicitly validating that the value passes through that is what these tests are for , thus it does matter a bit. not likely to bite us in the assbut should be dealt with.";"1"
"err, then you need to dump them do not you otherwise the user hit a failure and there is no way to find out whatitwas.";"0"
"just moved from another file, and i stand by my naming damnit! ;";"1"
"switched away from callbacks, see comment message.";"0"
"i really want to replace all this crapcode with std::string, but not today.";"1"
"i think that bare-precise not contains the required php5-packages. /modules/jenkins/manifests/slave.pp: $standard_packages = .. $::jenkins::params::php5_cli_package, # for community portal build ... if $bare == false { $packages = $common_packages, $standard_packages } else { $packages = $common_packages } ...";"0"
"now all ttrh::get usages were eliminated in this cl. done";"0"
"gfx::kplaceholdercolor instead of black then you probably do not need the comment";"0"
"the following mocks are not used and should be removed from the test: mock_open mock_copy, mock_rmtree mock_file mock_dump mock_json_load mock_random_name";"0"
"use a set from the beginning so that you can remove this ugly hack.";"1"
"yes. if that one fails we have already a corrupt calc model and it would just crash later.";"0"
"they are actually no longer used. they were going to be used in the gradle build file, but re-architecting made them obsolete.";"0"
"maybe make this a subroutine called something like setcurrentvalue";"0"
"""current user must have permission to run kvm vms with libvirt""";"0"
"you can probably remove this last sentence.";"0"
"base_vendor_id or at the very least hammer_vendor_id";"0"
"do you think we should assthis to basetestcase i see that this will be repeated for every controller.";"0"
"unfortunately, this will not be sufficient. we need to use 'gtest-config --libs' and 'gmock-config --libs'. since both of those suckand do not provide a .pc file i guess we'll have to add a new key here like 'config_libs' that'll execute '$1-config --libs' like it does for pkg-config.";"1"
"consider objects.tostringhelper";"0"
"talked with peria-san offline. in short, i am not happy with this hack. i'd rather prefer changing/removing dcheck in threadstate::runterminationgc.";"0"
"drop the die calls";"0"
"you've deleted the setting of this variable in the 9999 ebuild, so i do not see why you need to edit this code ... that said, if the ebuild is inherting cros-workon, then this will never be executed as cros_workon_project will be set";"0"
"aas' is reserved for as-a-service, so i guess you'll have to use 'asshere.";"0"
"i am fine with it either way. i just think ksmatchers is an ugly name and can not think of a better one so would be nice to only have matchers.";"1"
"maybe add a comment here, reminding the reader what the empty ssid is about.";"0"
"comment still has awful english. please fix.";"1"
"i hate die . if we'e here and running code we need to do something better. or when building catch it there.";"1"
"if not checking the return value, then you do not need to save it... here and other places. maybe i am analbut i always like to make sure my assumptions like test setup occurred.";"1"
"it seems like the fundamental issue here is that adb_socket_accept does not set errno if _fh_alloc fails. maybe consider fixing that and then kill the errno checking in this func sorry, i should fixed adb_socket_accept myself when i last touched it";"0"
"this 'terminationflag' is somewhat ugly... global variables are always ugly.";"1"
"the false is arbitrary and non-obvious.. specify it as a kwarg, e.g. catalog=false";"0"
"you are creating a list of snapshot objects, not a snapshots object.";"0"
"dumb idea - but maybe we can set the id here to be the id of the cfg.conf.nsx_v3.dhcp_profile_uuid - say someone wants to query all of the neutron ports assigned to this profile";"0"
"please use self._logger.error instead of print.";"0"
"bah - no service id for templated eh. yay crappypycadf audits";"1"
"add dchecks for comments stating assumptions like this, here and several times below.";"0"
"we should probably use packagemanager.feature_leanback_only.";"0"
"// fchmod is necessary because umask might not be zero.";"0"
"this classis useless.";"0"
"checkpatch hates all of these m_xxx macros";"1"
"tmpdir=${tmpdir:=/tmp} ctsymdir=$tmpdir/core-stubs-builder-$$";"0"
"this would be a case to use cros_build_lib.die";"0"
"i realize fatalerror should not return, but if we are being this analit seems odd that there is no free 3 .";"1"
"why is not there an actual type for this or all the other functions returning uint8_t* not that i hate uint8_t or anything : .";"0"
"maundotext == matext.getstr should avoid teh allocation of a temp copy of oustring triggered by tostring . although ti probably would be cleaner to add an overload of == to support oustring == oustringbuffer directly";"0"
"just out of curiosity, why this couldn't be in the destructor might be a stupid question, but i do not work too much with c++.";"0"
"nit: you called it 'amt_mgmt' in fake.py or use amt_management to be consistent with the other *_management here.";"0"
"label is useless...";"0"
"darn, braille captions already took a,b.";"1"
"i'll take a stab at this in a later review matt.";"0"
"is not this what ""management=false"" is supposed to do i think you can revert this. make sure you haven;t broken the admin/public mechanism.";"0"
"in cinder you have: def create_rpc_dispatcher self : in nova you have: def create_rpc_dispatcher self, backdoor_port=none, additional_apis=none in oslo you would like to have: def create_rpc_dispatcher self, *args, **kwargs why also you do not use *args at all, you do not use it _get_apis, and you do not use it in _get_serializer";"0"
"can you use 'alarm_definition' 'id' here i'd like to get rid of alarm_definition_id since it is redundant";"0"
"did rustfmt do this it looks ridiculous.";"1"
"huge nit: please insert a space after the colon.";"0"
"should the default value be false rather than true that way camp is enabled as a conscious choice by an operator rather than as the default choice.";"0"
"missing :param image_source:";"0"
"i think we should probably use a different heapchunkcallback for native dump casting random non heap native memory to object* and then examining it seems not correct. this would also remove the need for the heap bitmap lock here.";"0"
"silly typo. i can fix that with an additional patch, for the next stage of the arp fix.";"0"
"fuckfrench :";"1"
"hate to be a pita, but unfortunately plle has its lock detect bit plle_lock in plle_misc, not plle_base. i know you are not including plle in your list of plls needed for coreboot, but if we ever need it for sata or xusb or pcie, this code will not work. just a heads-up.";"0"
"i think this is an important case to handle. it should fail with an error and the image, if already created, should be killed.";"0"
"if we provision default pools in devstack this goes tits up and we can not recover easily.";"0"
"hehe, i think this is jlucci ;";"0"
"nit: added braces because the body is longer than one line.";"0"
"yes, you are right, there is a double free happening here, god catch. dumb mistake. do you think that there must be symmetry why can not something get a factory create and ordinary destruction";"0"
"they are useless, butithink we should clean this up it with another patch";"0"
"add a dummy javadoc";"0"
"can you un-duplicate this code w/ the other file put in a function that cmt can call. it'll suckhaving to keep it in sync";"1"
"oh yeah, i like it too. you can guess that this whole setdefault junk came from copying setting of logger above.";"0"
"nit: constexpr size_t knumofframestopurgecacheentry";"0"
"i think we should instead trigger this from renderframedevtoolsagenthost::didstartnavigation.";"0"
"you canuse system_tools.systemtools.runinsubprocess.";"0"
"implementation* memcached*";"0"
"damnhow did i miss thatitworks for :type: butitdoes not render :rtype:";"1"
"should not be necessary, now that stub state is encapsulated in objects you should get a clean slate on every run.";"0"
"fortunately we have only gdbserver in the subdirectories.";"0"
"magnum currently works with k8s, swarm and mesos. k8s/flannel were simply being used as a consistent example within the spec.";"0"
"i just realized this is going to fail on rhel 7, as ntpd is substituted by chronyd.";"0"
"whoops, this is junk that i missed. if we 're not doing authenticated encryption, then we do not need to choose an authentication function at all. i am just going to take this line out.";"0"
"it was also not immediately obvious to me why you were adding a bool to an int, but i getitnow. is there any way to make this more 'idiot-proof' for the next reader of the code";"1"
"i agree with you, this code is duplicated and should be removed.";"0"
"the whole __main__ block needs to be removed..";"0"
"well, this it this page! that is a silly reminder now, is it now : i'd suggest you remove it.";"0"
"ditto, i do not see how storing .tar file is better than storing .tar.gz..";"0"
"not a deal breaker butthat kinda sucksis there a ""things to do after v2 launches"" bug list this sounds like it should be added.";"1"
"here we can check its value != null value.startswith...";"0"
"deferring to vadim for reviewing maybe suggesting better ways.";"0"
"should not this line be uncommented";"0"
"todo: implement qcow2 base.";"0"
"''netdev-dpdk''";"0"
"i'd rather move the abort code out of the map on client death than move this in, its something i've been on the fence about.";"0"
"please try to be consistent with the rest of the header file and do not use a space after the #. i agree this is ugly, butitis the netbsd way.";"0"
"for some reason sqlalchemy orm engine does not notice changes of json our custom column type column/attribute so i had to do this dirty hack:";"1"
"probably do not need both of these methods bool areexperimentalflagsenabled experimentalflags flags return experimental_flags_ flags != knone; }";"0"
"while you are atitplease replace this with asserts over mock_calls for these two mocks. they are way more readable.";"0"
"remove useless counter fail_services in check_api script";"0"
"remove "" "" it is useless";"0"
"the values from the request_handlers_ should all be const-ified.";"0"
"how will the user know which host succeeded";"0"
"...stub out self._disk_adapter.run_vios_command_as_root...";"0"
"this is redundant with your change to u2f_hid_device.h.";"0"
"i think it still sounds like a shit should be something like ""process of sending to collector""";"1"
"> hahahahahahahahahahahahahaha. yaya... gonna use settimeout instead to cleanly trigger finalizeframe.";"0"
"ohhhhh.... goddamnit! i even looked at this bit as well because sonny said it would explain your amplitude issue, but i did not see this... i guess we need to really watch out for that difference.";"1"
"network_ref is an opaqueref which is useless outside of xapi. please log the network uuid instead self._session.call_xenapi 'network.get_uuid', network_ref";"0"
"i could just remove all these verifymarking, verifymarkbitsareclean, verifyevacuation and clearmarkbitsinpagedspace now. wdyt i guess we could have a todo in verifymarkbitsareclean , that said the mark bits for read_only_space are always dirty.";"0"
"you are killing me here.";"0"
"ok, gotiti am stupid. i had to run it in the debuggerto fully understand what is going on here.";"0"
"this was also kind of bugging me. so i followed nova's tool/conf as a convension";"0"
"beyond the ex post facto rationalization, kill is used for file all across the code git grep -i ' s kill.*file' wc -l 235";"0"
"do not change ""r->fr_net"" in this hunk, hold_net do not exist anymore. see upstream commit efd7ef1c1929 ""net: kill hold_net release_net"".";"0"
"this is the wrong way around---instead of temporarily releasing the solar mutex you now temporarily redundantly acquire it one more time";"0"
"schizophrenic-nit: i am pretty sure there are two spaces after the period here.";"0"
"should be a boolopt.";"0"
"#ifdef config_cgroup_cpuacct ... #else static inline int <blah> #endif";"0"
"so, the one line part, while kind of ugly, was iirc on purpose. our tooling is pretty stupid and likes to grep ebuilds directly for variables which it then sources. try like 'cros_workon info libchrome' to see what i mean ; .";"1"
"since you are not using dirname use '_' in its place..";"0"
"if these are not true, the first time audio is used, the clock api will bitchabout clk_disable being called when the clock is already disabled.";"0"
"the should be moved into the classand we can get rid of the __init__ all together.";"0"
"can we make this use runallpendingtasksonthreadfortesting and perhaps implement something dumb as a stopgap for the io thread";"0"
"tbta_av *p_data = ...";"0"
"nit: 'deleted binding of the snat...'";"0"
"should you also re-initialize this bool mixer_error_ = false;";"0"
"this teatdown seems useless";"0"
"hmm you are currently in chromite.lib and importing without any extra. are you adding something to the syspath elsewhere maybe should be chromite.shellcontextlib";"0"
"""bgp-speaker-network-list"" unnecessary. should be removed.";"0"
"crapi see now. it is tough jumping between 4 things.";"1"
"ugh, the libosinfo library interface is ugly... :";"1"
"yeah, i noticed ... it is just so darn important that i figured making it explicit would be good";"1"
"missing period at the end of this sentence. also host does not need to be capitalized.";"0"
"if the host_state.max_over_subscription_ratio value >= 1 ,thin_provisioning is true, and use_thin_logic is false. we will enter this branch, then return false and log error:""invalid max_over_subscription_ratio"". this is not we expected. how about change to this: """""""""" elif thin_provisioning and host_state.max_over_subscription_ratio < 1 : """"""""";"0"
"multiple hosts entry will require escape characters in the configuration. is that intended";"0"
"use $ cros-workon_get_build_dir rather than $workdir";"0"
"why are service providers different from the iaasservices imo, they are just another service. however about just treating them just like another other service how about something like this { ""id"": ""....."", ""type"": ""identity-service-provider"", ""name"": ""make some shitup"", ""interface"": ""auth"", ""url"": "" me/protocols/saml2/auth"" }, { ""id"": ""....."", ""type"": ""identity-service-provider"", ""name"": ""make some shitup"", ""interface"": ""service"", ""url"": "" },";"1"
"again, don t put accelerators in letters with descenders.";"0"
"nit: you do not need any of $.get calls here, as there will both of these hashes in any case.";"0"
"nit: these param names are a bit vague. given the usage below, what about: normal_icon_color hover_pressed_icon_color hover_highlight_color pressed_highlight_color";"0"
"chris, i think this key: alue should be string:string because of sorry if i miss something.";"0"
"sobj = self.apic.infranodep.get switch_id";"0"
"i think you got the probe order right create rtc, then register the notifier , butithink you have the remove backwards. you probably want to tear down the notifier first which can fail, and which should be done before you kill the rtc thatitmight notify and then unregister the rtc which can not fail . and because the rtc_device_unregister is devm_* , you can just remove this line.";"0"
"i think it should be a namedtuple and not a class";"0"
"get rid of this docstring.";"0"
"oh, i am sorry, my stupidity in bash and confusing with normal language's return value. return 0 means true here. cool.";"0"
"i strongly suggest you put in the git comment the sha1 of tools/base at the point where you created the jar.";"0"
"i'd probably put the common deps here into a seperate var, than do rdepend=""gdmwimax $common depend=""gwdmwimax $common blah "" butthat is just me being overly analaboutitwhat is there is fine.";"1"
"i meant them to be bullets, but i did not have the bullets : . i'll add the bullets and then it'll make more sense.";"0"
"i would add ""that must be run over devstack";"0"
"it is not! damni'll fix that, thanks kato.";"1"
"would it make things easier to have these point to q->qhead when the pq is empty see include/linux/list.h i am not sure though";"0"
"ended up keeping subrev part of the map. it was not too ugly and was very useful for snow. i killed ""subrev-bits"". it is not that painful to just have a table for anyone that wants subrevs.";"0"
"i explored std::atomic<t>, butitis uglier to initialize and use it is non assignable and initialized to junk .";"1"
"bash is dumb. $ ""ls"" file1 file2 file3 $ myvar= ""ls"" $ echo $myvar ls";"0"
"wtfare you trying to accomplish here";"1"
"single-character variable names are the devil.";"1"
"small nit: you load your args in the opposite order here.";"0"
"/* is_exact */";"0"
"i think rajat was fixing the memory leak in another patch. but yes, devm_kzalloc would work too. the one hitch was with sdio.c -- we have a crazy and probably totally broken forced remove/re-probe in there, so anything we do with devm_* there, we'd have to forcibly undo in the hacky reset case.";"0"
"hmm, crapha. yes.";"1"
"russell, you said it much nicer than me, but i am losing patience for most of this silliness, so it is not surprising. :";"1"
"backend with frontend sounds ugly. please learn how to write proper english and then come back.";"1"
"this seems useless here.";"0"
"should not this be step1 no big deal anyway.";"0"
"i think this is cruft from the first sample makefile ahmad sent me. will change to rm *.o *.a $ progs";"0"
"why create a function instead of just using readlink script_dir=$ readlink -f ""$ dirname $0 """;"0"
"dammit! thanks for keeping me honest :";"1"
"aha, as an poor non-native english speaker, i really should not make comments on spelling :";"0"
"i think, trustcreatefailed and trusteecreatefailed should not be catch here. these are already type of magnumexception.";"0"
"this is the only place we do not use const uint8_t* + size_t.";"0"
"huge nit: want once space after the colon";"0"
"well, if it is awkward to use in practice that is still a bug. if people are used to dealing with 0x87654321 it is a pain in the assif they need to translate that to a negative number. maybe ll so people have the choice and then range check ourselves since right now you can type ""ioctl /dev/whatever crapand it'll do _something_, ignoring the fact that you did not supply a number at all.";"1"
"i'd add ip_address without subnet_id to the list of tests to fail. or is that supposed to work";"0"
"this too should be moved into a src_* func";"0"
"apparently not. i got compile errors by doing that. as far as i understood, wtfhashmap does'nt supportit";"0"
"these args are not needed and should be removed.";"0"
"so that should be outputdevice const* getoutdev const";"0"
"damnthis is wrong, this is the quotas object, not the nova.quotas class";"1"
"maybe i am wrong... since you use '.*' at the head and the tail, it seems to me that ' ' and '$' become redundant.";"0"
"nit: we'd better use int digest_size = vb2_digest_size vb2_hash_sha512 here and the other two lines below as we do in calculatehash.";"0"
"silly me: i thought that ""repo rebase"" was behaving like ""repo sync"" and continued to rebase and just list all errors. butitstops on 1st error. all good now.";"0"
"did you test this usually, command line flags are-written-like-this andnotlikethis.";"0"
"an assignmenttype should never be instantiated so this does not do anything.";"0"
"fixes a warning about an initialized field";"0"
"this and the function above do not belong here, they should be in code-stub-assembler.h. ideally, we do not need them and canuse unsigned directly.";"0"
"this enum looks terribly useless...";"1"
"i see red! eradicate! deredify!";"0"
"i would like to get the 'android-configure.sh make' flow continue to work. is is possible to put this copying and generation step inside of android-configure.sh instead to make it so";"0"
"smells unionesque.";"1"
"i believe you want '-c 0' instead of removing '-c' to properly drop caps";"0"
"excellent - i was torn on whether to ask you to do it like this rather than a dumb string. i am glad you did the extra work to make it easy/self-checking.";"0"
"bool is_main_frame = false;";"0"
"if not self._dbinstance and not self.resource_id";"0"
"lets make this method private ie. _get_trans_wrapped_session_key and move it down with the other private methods";"0"
"useless parantheses.";"0"
"why was this needed is there code setting values using ""bdm.something = whatever"" if so, perhaps fixing it so the writes go into self.values would be the right change. or perhaps this whole classhould be killed off and just use a dict";"0"
"kill it with fire.";"0"
"/* gpu_fence */";"0"
"i am a morondo not mind me.";"0"
"damni fail... copy pasta...... good catch";"1"
"also the fk bm_node_id";"0"
"this is one of those ugly cases where you hold the lock, but are not in runnable state or is the annotation just wrong";"0"
"these aliases can start with camelcase. bgpbinding = portbinding = ml2_models.portbinding ipallocation = models_v2.ipalocation port = models_v2.port";"0"
"execute => executed";"0"
"can these two be on the base classcalling the pure-virtual 3-param foreach";"0"
"because i was being stupid. the code is slightly less stupid, now.";"0"
"this is just ugly. need to look at code, but you'll have to strongly justify why you need to reach directly into the cru from another driver.";"1"
"let us leave this as valueerror";"0"
"are these two white spaces after 'testtools' intentional";"0"
"nit: /* expandable */ false";"0"
"this is polymer 2.0's templating system. unfortunately the syntax does not allow expressions like index + 1 . this is probably one of my single biggest gripes with polymer 2.0. in litelement, i look forward to moving to directly using javascript code for templating lit-html's templating style feels kind of similar to jsx but with strings instead to avoid this sort of thing.";"0"
"it is just those bytes, each value is one column with 8 bits of the result.";"0"
"no, but if you did splititout i'd happily +2 that one, whereas i am too big a coward to +2 the rest of this :- alternatively, you might want to add steps to reproduce to the checkin comment if you have them.";"0"
"this will actively load the registry and register events. i think we should mock the registry up to prevent nasty surprises.";"1"
"ugh these ws issues were hideous. fixed.";"1"
"typo self.delete_gw_port_interanal=> self.delete_gw_port_internal";"0"
"this would be simpler: project_name = osutils.readfile alias_file .strip";"0"
"should be uppercase f. initfacets.";"0"
"useless comment.";"0"
"i see this api is really stupid and uses this, which should be an ident, in order to determine the action. i think we could re-use one of the existing ones like ""enabled"" to avoid further pollution, but either way...";"0"
"i meant fk with on delete cascade.";"0"
"invalid indents. you should put 4 white spaces.";"0"
"this is really braindead. but ok, let us go like that.";"0"
"all these is checks smell like you need a visitor. you'll also handle issub, ismul, etc.";"0"
"max_mbr_size_mb let us keep the units";"0"
"objects.servicelist.get_by_binary calls this and some scheduler host manager stuff calls that but with an elevated context already. and cellstatemanager._update_our_capacity also calls that butthat always passes an admin context, so looks like we are good here.";"0"
"$ local_built_module : $ host_out_executables /fs_config_generate_$ target_device mkdir -p $ dir $ $< -f -o $";"0"
"nit: is this colon recommended also applies to other templates below.";"0"
"this should be put in the plugin's hiera.";"0"
"given the irc discussion, i feel it is ok to leave that fk, since the entries are short-lived.";"0"
"nit: self.assertfalse self.conn_create.called";"0"
"yeah, the audio service can live as long as the browser process, that is how i chose this value, based on browser uptime metrics.";"0"
"why are you deleting this bad rebase";"0"
"so this function will never throw an error that surprises me a bit. just returning false here might result in wrong decisions in client code which sees the status_success you set below.";"0"
"add your sob";"0"
"i was going to clean up appendcluster in the next pass it is got a bunch of asserts that are either ridiculous paranoia or errors that should be handled. anyway, drop these and go back to the asserts";"0"
"i am not convinced this is safe. another bit of code could have reaped this pid in a sigchld handler, in which case this waitpid may hang forever on a recycled pid.";"0"
"/* loader_factory */";"0"
"this might be a stupid question since i am not very familiar with how ipmi interoperates with ceilometer, but is not resource_id supposed to be id of the resource that the sample is ""about"", not the id of the sensor e.g. should not resource_id here be simply node_uuid, just like 'cpu' meter's resource_id is the id of the vm";"0"
"stupid me, my editor shows them the same color and tricks me everytime :p";"0"
"unrelated to this patch, just a general comment. is this used anywhere if this is actually used, it is a bug -- we should switch to using cros-board eclass";"0"
"more idiomatic might be printf 1 > ... die ""config update failed. ret=$ "" butthis is fine too, submitting as is since it is just a cherry-pick after all.";"0"
"canalso remove this, looks like nothing else is using it.";"0"
"this should aready exist in os-win, which means this will not be necessary.";"0"
"please convert these tabs into spaces.";"0"
"damnh h hone";"1"
"yes. i will do it in the patch that refactors statemanager11.cpp where msamplermetadata*s will be put into a shadermap.";"0"
"update_engine is the daemon started at boot, update_engine_client is a tool to communicate with the running daemon. both programs are using d-bus for ipc right now. also note that update_engine is using d-bus now and we are planning to migrate off d-bus. so to avoid dbus.te polluting external/sepolicy i amend the update_engine selinux policy: i suppose we do not need to label update_engine_client as it is only used from a shellor we can label it in the brillo-specific selinux policy in 784730";"0"
"why not mock_object same for another mocks below.";"0"
"should we clean this crapup and just trust the exit syscall not to return i do not understand the motivation for this.";"1"
"gotcha, then i suggest firewalling against !dma or !fuse_bb_phys.";"0"
"kill the comment!";"0"
"why are these globals and not part of struct samsung_asv or some other struct that is returned by exynos5250_asv_*";"0"
"i though you did not want returns spread into the methods body, do you allow me to remove the lv 'exitstatus'";"0"
"not a fan of baking the command line argument in here. would rather change dumpstate.c itself or init.rc.";"0"
"remove redundant parentheses";"0"
"remove the white space from newline.";"0"
"i like getting rid of these";"0"
"yeah, i see thatitis called from elsewhere... i'll nuke it if you want.";"0"
"the old code seems to have a problem, why it mox server.utils.is_moblab. is_moblab was defined in client.common_lib.site_utils";"0"
"this is for a failure case, so you do not need to set these two headers, i think.";"0"
"probably dumb question: maybe you need a space here after ""!important""";"0"
"done. ps2 will nuke up.sh and down.sh.";"0"
"get rid of this newline.";"0"
"per discussion with nikhil. we need to move parent backup loading and validation before loading instance object to allow fast-failing if verified data was corrupted.";"0"
"according to the mocks, when there are no captions we should show a greyed-out cc button we do not currently .";"0"
"no action required talk about a useless test name.";"0"
"we do not have the u of crud here :/";"0"
"because this patch purpose is to retry ssh-connecting to a server with password and get a public key from the server. this problem would be related to public/private keys because of the error message. and i'd like to confirm their keys are valid or invalid as the first step. for it, i need to connect to server without private key. i know this code is not smart and it would not be merged permanently. this code should be just for debugging.";"0"
"i am still going to unsetitif you clean up as you go as this code does , that makes it more robust should someone ever gut the subshelling. it is the same reason we use functions in code which this should be, in hindsight . it is unlikely this will ever bite us in the assbut i'd rather this code be defensive than be stucking debugging it down the line.";"1"
"use self._msg";"0"
"done. we still need to show the window the first time or opengl drivers tend to keep garbage in the default framebuffer.";"0"
"this lock/unlock does not do anything. whatever we are racing with that would have disabled the vop could still execute immediately after we release the lock here.";"0"
"nits, while you fixing other nits, would be nicer if you fix these indentations too.";"0"
"throw new nullpointerexception ""statname == null"" ;";"0"
"the commas at the end of these lines should be removed.";"0"
"that was a stupid mistake. i added test.";"0"
"we killed the db model, but qosrule base versioned object classis there. this section talks about the latter.";"0"
"damnwe should not need this, i'll also take a look.";"1"
"should this be bpf_handle_sockaddr_type_none rather than _fs_";"0"
"seems virtual_size should be nullable:";"0"
"hmm, i did not think we used autocommit... : that sucksnot an issue with this patch, though. something to be addressed at a later time.";"1"
"oops! yeah here zeroing might not be enough, even once i zero the right thing. i'll have to set primary_valid = 0.";"0"
"'auth_plugin' -> ''auth_plugin''";"0"
"*close_flag this should probably be a bool, not an int.";"0"
"the calling code chooses what do do with these. that is what the adb_error public api is for, and what i meant about the long-term fix being to just passa std::string* and lose the global. i might just do that now instead. i canalways come back to this ps if it gets too hairy.";"0"
"can you explain why this was chosen why not a traditional setup using f0 this is quick abi, it does not have to follow native conventions if they are ugly.";"0"
"nit: /* isnodejs */";"0"
"oh my, i am an idiot. please disregard, need coffee :/";"0"
"maybe a dumb question. why put the logs in /opt/stack, if logfile is in $home/";"0"
"die ""hang in romstage_main! n"" would work well here.";"0"
"nothing. copy-pasted garbage from original fimd_wait_for_vblank .";"0"
"so, the underscore forms of the option names are all deprecated. since this is a new option, let us leave out --fixed_ips";"0"
"please remove extra space here";"0"
"omg!!! you need a space before this '*' character to be consistent. tyr, tyr, tyr... why did we ever hire you ;-";"1"
"delete all of this src_unpack and replace with s=${workdir}";"0"
"nit: adapter_type = bdm.get 'disk_bus', vi.ii.adapter_type";"0"
"kill the file.";"0"
"i think this is notification_drivers now";"0"
"nit: move down to drm_auth line. marcheu: do we really want the map_offset ioctl wouldn'titbe better to force user space to always use prime/dma_buf for mapping non-dumb gem buffers - even for a client's own buffers";"0"
"why not place this into exynos_osal_sharedmemory.h and include it instead";"0"
"why the params are not the same with cert_manager.certmanager. if it is not necessary, we can put them into the function or remove them.";"0"
"i think you should avoid registering this object, or remove it from this patch until we use it.";"0"
"yep. stale comment. i've pushed off my re-write. you'll see the simplest refactors starting today. :";"0"
"doh!!! stupid logs... mmm... doonut!";"1"
"use_ssl_hash, public_ssl_hash, service_name, service_type, resource_type, default_value = *args fail if args.length != 5";"0"
"or perhaps: std::string dummy; if error_out == nullptr { error_out = dummy; } cleans up this function but still preserves the semantics.";"0"
"this is a !/bin/sh script, so this code is invalid. it has to read: if ""$1"" = ""${t}"" ; then";"0"
"upstream confusing is that upstream: here is not actual upstream but just used for the initial git import... for appdirs is not under openstack project control i.e. not in big-tent so i wouldn't include packaging for such projects.";"0"
"""greyed out"" is about whatitlooks like, not whatitdoes: ""if you choose nova-network, you will not be able to deploy murano in that environment"".";"0"
"scoped_trace wasstill ugly, added <<";"1"
"please do an explicit ""!= 0"" here. otherwise you'll be in bad shape for non 32-bit bool yes that is not realistic, but i am analthat way .";"1"
"this should be vlan_id = ml2_db.network_segments 0 'segmentation_id'";"0"
"could you please make it a classinstead it is already .cpp, and it is used only in c++ files - why do we need to stick to ugly c interface";"0"
"same reasoning given for gerrithelper.__init__ . when doing default arguments/fallbacks like this, one needs to be *extremely* explicit in the check else you can get bit in the asspretty easily. consider the following prototype: def dosomestuff myargs, cache_override=none : if not cache_override: cache_override = self._internal_cache self._reallydostuff myargs, cache_override it is subtle, butthat block of code will incorrectly fallback to the internal cache if the passed in cache_override is {} which may be entirely intentional- to force a run w/out using internal caches values . if you use the 'is none', check, it handles it correctly. the only assbiter in scenarios like that is when you need to detect if none was explicitly passed in, in which case you use an object singleton to detectit";"1"
"why only 2 tries may it make sense to synchronize _create_or_update_agent";"0"
"deleted data is garbage, but update is a different story. how do you propose to deal with out of date info in df db here";"0"
"i dont think that os_* vars passed as tuple any v not in os.environ for v in environ should be good";"0"
"your brain is deficient, please fix, also done.";"1"
"are you sure you need the ha scheduler mixin";"0"
"yeah, skipping releases is not a thing. if you do it, you are signing up for the pain :";"0"
"you should probably include mm.h instead.";"0"
"why use kwargs here at all this is the final func, so people should not be passing in junk at this point ... sync_instance should be a proper arg";"0"
"ugh. yes. damnit. i did this right before i took off. time to go fix. and double check both deep and non-deep. serves me right trying to get this out in a hurry.";"1"
"you haven't met the prebuilt host gcc with its own broken copy of glibc. you are fuckedwhatever you do.";"1"
"ditto here. this extra logic should have been moved into datastoreversion load_by_uuid. tenant id could have been optional otherwise anything is allowed .";"0"
"never use 'echo -n' in scripts. you canuse 'printf %s ...' instead.";"0"
"there is already dummy.dummy in this file, do not add your";"0"
"if we break that in bionic, we are going to break all the existing callers so you should be safe :-";"0"
"ack. i am not sure: - maybe process reuse should also be forbidden in case of tab discarding - in this case combining the flags might make sense. otoh, this would also work with separate bool+enum. - maybe one alternative would be to put the bool+enum into a shared struct i do not know...";"0"
"this sucksa bit here, but we required the spec to be good enough to document the feature. assuch, i am afraid you need to specify how you configure this feature. i assume you would have some entry points for the different drivers, including the noop driver, and you pick them, and each driver might have its own nova.conf section with extra settings maybe need to list the ones you are implementing here x509/tls one";"1"
"nit: static_cast<uid_t> -1 . and maybe consider doing constexpr uid_t kinvaliduid = static_cast<uid_t> -1 ; since you are also using the -1 constant in several places.";"0"
"scratch that, i was being an idiot.";"0"
"well that is just fsckin moronic";"1"
"just a nit-pick and sorry if anybody thinks these are stupid butithink commit messages are critical for long term code maintainability . you do not need to say ""this commit moves"", but just say ""move the example..."".";"0"
"self.fuel_web is fuelwebclient instance. self.fuel_web.client is nailgunclient instance.";"0"
"""notify"" is a terrible name for a function regarding signal handlers. curse you, go core package authors.";"1"
"the compiler gets confused about base::bindonce storefiles, {{policy_path, policy_blob}} with error message ../../base/bind.h:272:25: note: candidate function template not viable: requires single argument 'closure', but 2 arguments were provided i'd have to use base::bindonce storefiles, std::map<base::filepath, std::string> {{policy_path, policy_blob}} which is kind of ugly.";"1"
"oops, this ifna should not be here, probably due to your rebase.";"1"
"it is a place to put any code that will be executed";"0"
"maybe not, but i like to pedantically check that the program actually reaches the last statement and did not silently die on the first :- ....";"0"
"l142 hurts my brain enough already. i think you should be moving _away_ from that, not towards it!";"0"
"i am going to poke don's shoulder next time i passhim";"0"
"uber nit: a -> the into which -> where just to avoid the hoops. ""this is the sort of nonsense up with which i will not put."" etc.";"0"
"bool sync_evdev_state = false;";"0"
"it seems like all new code below this line should live inside searchboxview. then you can get rid of all of those getters.";"0"
"this is converting between the blink and non-blink variants, so no. blinktransferablemessage is the blink variant and uses wtfstring, while transferablemessage is the non-blink variant, and uses std::string.";"0"
"<literal> ass. , similar line 89 and 93";"0"
"unfortunately a comment after a is not valid shellsyntax, so i have collapsed this onto a single, ugly, long line :";"1"
"this seems odd now, we should just be passing the migration object here.";"0"
"oh, auxdata could really screwthis up. i might need more logic here.";"1"
"i think the caller should handle delete. or have an arg delete_on_fail to control the behavior. i thinking making this classvery dumb to only do one thing per api would make it easier for it to become a generic library.";"0"
"this is horribly inefficientitcopies each parameter twice! also, when inserting many items, it is _much_much_much_ faster to do setrowcount and fill in the rows; one also needs to block signals to make it event faster in the end, if there is so much data that even setrowcount is slow, split the data into batches and insert using incremental setrowcount s now it is ridiculously slow - as qt reallocates and redraws way too often";"1"
"sorry for not being clear... i was only referring to ""grep exe"" part of the command. other stuff seems fine. also you do not need the ""kill.sh"" script, maybe you can just do something like commands bellow. it looks cleaner imo. pid=$ ps -ef grep httpsrv grep -v grep awk '{print $1}' echo ""killing httpsrv ${pid}..."" kill -9 ${pid}";"0"
"that is what i was working on, the other alternative was to add a readtinyfiletostring, which would also suckbecause definitions of ""tiny"" vary. besides, i couldn't find any other callers that read a single int from a file";"1"
"how about: if opts.mtargetapi < 21 opts.mbitcodestorage == bcst_cpp_code opts.memit3264 = false; if opts.memit3264 opts.mbitcodestorage = bcst_java_code;";"0"
"oh... damni checked this, but i guess i missed ldo6. it is not really great that you have to know the right base on your own when calling it. i am starting to think we should really do a real pmic driver instead of hardcoding everything here... maybe we can follow-up with a cleanup patch later.";"1"
"at least i am not a big fan of inline methods. they make debugging and recompilation such a nasty task.";"1"
"dammit, python.";"1"
"you menat read_size";"0"
"you are not dumb, i forgot to fix up this file too. i've also renamed it to clarify whatitdoes better.";"0"
"oh! for some reason i was reading this as a puppet manifest and not a shellscript for nodepool. now embarrassed.";"0"
"should just be -2: . why are you going forward to backward";"0"
"my bad, i am unclear darn french... . so, these methods were removed in between the icehouse tagging and the juno tagging, so *during* the juno timeframe.";"1"
"s/hid/hide/ also, not sure what you mean by hide it - how do you hide it exactly if it is just a dummy network it canalso be created in the service tenant with some constant name and the cloud admin should know if he reads manuals that this network should not be touched. i do not see any special reason why an empty tenant_id should be used.";"0"
"robert, do you or anyone know the reason for these ifndef i am keeping them as is. i do not know if we should remove them or also comment out the new af_mpls and af_packet.";"0"
"see above comment about issues with old version of eos, try something like : instance_type = 'virtual' if vnic_type == portbindings.vnic_baremetal: if not self.cli_commands 'baremetal' : log.warning _lw ""baremetal instances are not supported on this version of eos"" return instance_type = 'baremetal' cmds = 'tenant %s' % tenant_id if self.cli_commands 'baremetal' : cmds.append 'instance id %s hostid %s type %s' % vm_id, host, instance_type else: cmds.append 'vm id %s hostid %s' % vm_id, host cmds.extend 'no port id %s' % port_id, 'exit', 'exit'";"0"
"d_info 'root_gb' = info.get 'root_gb', '0' # 0: use the whole disk as variant +1 for discuss in the meeting.";"0"
"if buf came from user-space it should be tagged with __user.";"0"
"this looks like ugly hack. you should just call self.add_output here";"1"
"stop posting chains. it is corrosive to all involved. iterate on the smallest thing that could possibly move the effort forward in close coordination with at least one reviewer, and merge it. rinse, repeat. this also requires that reviewers be more accepting of changes whose target is expected to evolve quickly, rather than trying to getitperfect the first time. without this kind of iteration, we are doing waterfall and of course it sucks";"1"
"astr = astr.replaceall. strictly speaking it should be replaceat, butthat does not matter here, right";"0"
"you want os.kill not os.killpg";"0"
"i guess all of this and maybe more is unused code and should be removed.";"0"
"i just considered decorators sexier but you are rightitactually will not buy us anything and will make code harder to follow.";"1"
"it should die in vain: we do not support rule resource for rpc providers.";"0"
"why did this go from a handy konstant to hard coded";"0"
"ergh, bad rebase";"1"
"yes... i feel very dumb now.";"0"
"call venc_if_release if ctx->h_enc != null. remove mtk_state_create completely. if ctx->h_enc { ret = venc_if_release ctx->h_enc ; ctx->h_enc = 0; if ret { ... } }";"0"
"not a deal breaker, but if you happen to upload another patchset please kill this trailing space.";"0"
"there is a bios_cntl #define. we probably should add #defines for the bits as well. it is silly to open code all of these constants.";"1"
"yep, stupid copy + paste error on my part.";"0"
"nit: here and elsewhere i think usually we just write 'string' rather than 'wtfstring' wtfstring.h has a using declaration to pull it into the global namespace...";"0"
"tenant_id is a kwarg, lets use debtcollector.removals.removed_kwarg here or oslo_log.versionutils.report_deprecated_feature.";"0"
"i think rebooting should do it. even then, it is hard to know if stateful has been contaminated by a confused cryptohomed.";"0"
"huge nit: you do not need a colon after ""on""";"0"
"this also ties in closely to a oslo.messaging messageserver or whatever the classname is : and it is endpoints so it may not be complete crazy to make this explicit, and talk about coupling with oslo.messaging for that matter.";"0"
"done. soz for this stupid mistake.";"0"
"you need a teardown to delete the temporary directory you are creating in your git_repo class";"0"
"put this between host9 and host12";"0"
"it is a useless histogram. i suggest to mark it as obsolete in histograms.xml and drop here.";"0"
"yuckit took me a second to see the use of response.";"1"
"you already have this hardcoded in the top, just do list client_modules_by_service_name.keys ugh, i hate py3 or something";"1"
"mongodb_dbpath = conf.mongodb.mount_point";"0"
"imo we do not need this function, we can set self.execute_client in subclass_init__, like this: self.execute_client = novaclient.client.client **self.creds";"0"
"*c*eilometer";"0"
"another newline.";"0"
"hmm, you are right. these should not be included by cq until they are submitted. note that the cls will not show up as chumps because they are submitted by chrome-bot.";"1"
"this should probably be: key1 = value1 key2 = value2";"0"
"backslashes should only be used as a last resort";"0"
"i must admit. i still find the std::move and std::unique_ptr stuff very un-intuitive. even after reading the official documentation for them. for some reason i thought that i needed a unique_ptr to use std::move. i am very happy to remove all these unique_ptrs!";"0"
"i could find sqlalchemy.orm.exc.httpnotfound.";"0"
"damnthis is no longer used, i'll remove that.";"1"
"ah, silly cut and paste inheritance here. i guess i must be blind to it :s";"0"
"same thing with fk contstraint.";"0"
"maybe not so much with 'bullshitting' in the spec. i know of some members of our community who would be rather offended";"1"
"i think you are right to include this, but... yuck";"1"
"ill caveat this with i am a c++ idiot, but why are we not using static_cast here";"0"
"are these thunks still needed after this cl, or could they be removed";"0"
"__system_property_set cannot be called directly from any process other than pid 1. it assumes a single writer, and writing to the property store from the ueventd process may corrupt all properties. the property store should be read only, so if it succeeds that is a bug. even if you were to use the libcutils implementation it would still deadlock with init waiting on the property socket.";"0"
"autospec=false is redundant.";"0"
"should you grep the codebase for this you had this issue in other files before...";"0"
"b105, b106, b107, b404, b606, b607";"0"
"constexpr size_t kalignment";"0"
"why are you caching the ps output and not the pid if i were writing this, i'd probably factor out two inner methods here, _get_pid_of_cached and _get_pid_of. _get_pid_of would do the work to actually find the pid, and _get_pid_of_cached would just handle the caching logic.";"0"
"the runtime configuration by calling ''cros.factory.utils.config_utils.saveruntimeconfig 'light_sensor_calibration', new_config ''";"0"
"yes damnit...";"1"
"do not hardcode /mnt/host/source yourself. use $gclient_root from common.sh.";"0"
"i know it seems silly, but i'd pull this out into a separate warning to make it clear that you are making two points here. or you could keep them in one box if you bullet them or something, whatever you think would be best.";"1"
"oh, crapsorry, and i forgot the most important thing of course: these changed again, i got dexter to change them. they are not where they originally were, unfortunately, butthey are at least not on the pmic. they should now be at brd_id0 = cmpclk, brd_id1 = utxd3 and brd_id2 = daisync. those are the pins dexter told me, but i haven't found a fully updated schematic with them yet. please double-check with the odm that these changes really made it into the build.";"1"
"i am sorry if this is a stupid question. the project structure dialog already has the capability to add a module dependency to build.gradle, butthis seems to be written from scratch can we share the code for editing gradle files";"0"
"the globaleditdata is owned by the theeditdll, which is a rtl::static<> that only goes away when the editengine dll goes down. and yeah, something like that should not have a vclptr anyway. but for now i just want to get rid of the non-null vclptrs<> on deinitvcl so that no new ones get introduced by asserting on that should it ever happen . the change for now just pushes the problem from vcl back to editengine, where it can be solved properly later. tl;dr: if editengine does foolish stuff like keeping non-null vclptr<> in statics, it should also have to deal with the ugliness that comes with that or clean up its mess .";"0"
"remove mox.";"0"
"as all the ': ' are being removed, i would rather check a real mac address than a dummy value in this case";"0"
"you still need 'die' here. eapi=4 helps with portage builtins like 'emake' and 'doxx', but not arbitrary commands like './foo'.";"0"
"i hate classnames like this. something less verby like codeoutput would have been nicer. feel free to ignore my object modeling curmudgeonliness if you must though.";"1"
"god catch, this was a rebase error from my side. thanx, will upload another patchset.";"0"
"useless string";"0"
"this marker seems useless. to know the strategy rather thanuse the following code into syntheticclassmanager globalfeaturemarker globalfeaturemarker = session.getmarker globalfeaturemarker.class assert globalfeaturemarker != null; switchenumoptstrategy optstrategy = globalfeaturemarker.getswitchenumoptimizationstrategy ; you can directly use the property switchenumoptstrategy optstrategy = threadconfig.get options.optimized_enum_switch ;";"0"
"ahh, okay. that is where i was being stupid.";"0"
"no worries! the part of the code is pretty ugly and it is soo hacky! :-";"1"
"nit: nullptr /* abortsignal */";"0"
"ha, well i've only screwedthis up already like 3 times today. pushing another change.";"1"
"ditto re naked pointers.";"0"
"if you allow using nullptr for decodevariant, then you wouldn't need to deal with these dummy variables.";"0"
"you already got 'environment' - 'args 0 ' looks useless here";"0"
"'.gyp' files made by silly writers e.g.";"0"
"if there was a problem deploying, should self.destroy be called";"0"
"uid /pid where uid or pid can be replaced with ! to indicate 'worst'. means to blacklist, w/o means whitelist. i will share the whitelist / blacklist document with you. not sure i want to beef this up too much, will consider making the readme a little bit more verbose.";"0"
"networkid should be network_id";"0"
"i am thinking container_project_admin, container_project_admin should be the only ones to delete.";"0"
"you canuse wait: true istead such hacks";"0"
"bad param....should be conn_info";"0"
"i think you should check you did eliminate the instructions you think should be eliminated.";"0"
"the temporary assignment of d is pointless: self.assertequals none, b._allocate_nbd";"0"
"useless empty line.";"0"
"nit: 'const scriptelementbase*'";"0"
"on a windows machine the above would stick a backwards slash ' ' in the middle. if all you are trying to do is return 'secret_ref/payload' to be used in a url, could you just do '/'.join secret_ref, 'payload' or something similar";"0"
"if devstack_gate_virt_driver=openvz";"0"
"buildid = null; codebase = null;";"0"
"this shitis so picky :";"1"
"change ""administrator"" to ""domain administrator""";"0"
"i suppose. i guess i was thinking it is a matter of expected vs. unexpected failure. how would you feel about something along the lines of failure = true try: ... failure = false except <expected>: ... finally: if failure: cleanup";"0"
"please use ironic client instead of execute cmd remotely";"0"
"please remove the self._generate_random_name argumentitseems to be useless here";"0"
"done. filed:";"0"
"crap#willfix";"1"
"these should be run-time configurable, perhaps put in a table";"0"
"just --ipv6 and default to true i am pretty sure that define_bool ipv6, ... should already give --noipv6, and --nono_ipv6 is pretty disgusting.";"1"
"silly nit, take with a grain of salt. perhaps s/throw up/raise/ 'throw up' brings other things to mind. :";"0"
"darn. i can not find a yapf argument for formatting comments.";"1"
"paranthesis are not necessary.";"0"
"how the helldid that get in there";"1"
"there is no point in this as it will blow up on the db sync command. by catching the exception it is going to have an unhelpful traceback.";"0"
"you cannot reuse an existing implementation iptables one btw, cls is useless";"0"
"if there is no keyboard, remove all kb_in* and kb_out* gpios.";"0"
"where is your period gawd!!!";"1"
"we should have same fk names for all backends.";"0"
"that will look ugly, because ...ordie is strange: in case you are not create_if_absentitwill not actually abort on a missing directory. i felt the callers need to be inspected, and then there can be a big cleanup. i'll try my best...";"0"
"done who needs trybots when you are the eagle-eyed reviewer";"0"
"nit useless blank";"0"
"as long as you are here, can you nuke this extra space";"1"
"do not you hate those jerks who -1 review on whitespace!";"1"
"we have to force the cpu voltage to be 1.0 volt during svs initialization. currently we relies on cpufreq driver doing this, by changing opp voltage and limit opp during svs init. the reason for late_init is to make sure cpufreq driver is working when doing svs init. this might be a dirty hack butthere is no clean way to handle the dependency issue in mainline kernel as i know.";"0"
"i know, nit, but you are missing a period here.";"0"
"this should work since ping does not spawn subprocesses , but be aware: process.kill will kill the shellprocess, butthe cmd could still be running in the case where the command spawned additional processes within the shell a nice stackoverflow discussion for reference:";"0"
"so infolog violates our style guide in thatitis a non-const reference, butitis handled that way *everywhere*, so... do not do anything aboutitjust now, but we should probably figure something out.";"0"
"i saw this format many time. in the openstack git message commit wiki 0 , 'closes-bug: #1546804' is recommended. so we use the both this two format or the only the recommended one 0";"0"
"""once the amphora hassuccessfully started its api it should start sending heartbeats to the controller.""";"0"
"can you copy the original commit message from the first gerrit in as the commit message here when we submit this only this message will go into the git repository so should be self contained";"0"
"you are right. this needs to be removed.";"0"
"i do not think that is what you want. probably something like the following instead: grep -v -f $symbol_excludes $1 grep -f $symbol_includes sort -u";"0"
"it still bugs the shitout of me that https and tcp are *exactly the same* :p";"1"
"i realize now that this one is silly -- so please diregard";"1"
"actually i think this has to be project_domain_name project_domain_id user_domain_name user_domain_id";"0"
"s/ destoryed/ destroyed";"0"
"push this entire method into wifinotificationhelper as createnotificationbadgebitmap";"0"
"what is this loop for in case the handler sets another alert pending is there a better way to track/check this";"0"
"extra stupid-people safe: do we want 'pwd -p' here, in case someone runs this in a symlinked directory :";"1"
"crap- good catch, will update";"1"
"* **bug #:**'lp1477903'_ **description:** if you create a custom repository called ''rabbitmq'', it will not appear on the openstack or fuel slave nodes after you deploy the environment. **workaround:** do not use the ''rabbitmq'' name for new repositories in fuel ui. is notittrue for all reserved names can we get a list of reserved names that cannot be used for the names of repositories";"0"
"so the comment here is to avoid kerning between 'p' and 'a'. the ref does this between all characters. perhaps do the same here, instead of assuming that painting 'a', 's', 's' separately will always be the same as painting ""assin one go.";"1"
"why is not this a broadcast receiver like gattclient";"0"
"how about final string spn = iccutils.adnstringfieldtostring ... ; if spn == null spn.length == 0 { mspnstate = read_spn_cphs; } else { setserviceprovidername spn ; ... } it seems silly to evaluate the string one, call the setter and then call a getter to fetch something we already had in scope.. also do not need to call the setter if we know it is empty.";"0"
"just noting that we explicitly ignore h above because some of the h rules are silly, butthis change only enables the check to catch this particular error which is fine by me.";"0"
"i think we can get rid of this ""normal_behavior_value_id"" as it is not used now that the runtime flag is gone.";"0"
"i think this belongs to another phase. ssa building should not care about optimizations.";"0"
"vpx_dsp/ should be enough, then you'd move this after vpx_integer.h for the sort order";"0"
"sdkconstants.tag_resources";"0"
"copy start.sh check.sh /, just to be consistent with rest dockerfiles";"0"
"you do not need to clobber error returned by kstrto* , so just do: ret = kstrtou16 ... ; if ret return ret;";"0"
"should we push the temp_failure_retry into adb_read";"0"
"if self._heartbeat_thread: self._heartbeat_thread.kill";"0"
"nit: i would kill that space after the comma and just make it ','.join tags";"0"
"add an assertrequests here";"0"
"you can kill these dummy passtatements once you have a docstring";"1"
"dict should be provided as a second argument, ** should be removed";"0"
"i will split this change in two: one will leave lazy init and introduce new engine facade and the second to get rid of lazy init safely.";"0"
"/proc/ + pid + /status is very short and inline is fine to me.";"0"
"yes, i will not deny. mocks are a mixed blessing. i prefer to be consistent with the rest of the codebase.";"0"
"fat fingers";"0"
"full vip_info should be passed here";"0"
"this was dumb, unless i put an error message in for the assert. next patch.";"0"
"more in general, do not use inet_pton and inet_ntop. use getnameinfo and getaddrinfo instead.";"0"
"i'd prefer: if sub_name: pid_file = ""%s-%s.pid"" % self.uuid, sub_name else: pid_file = ""%s.pid"" % self.uuid";"0"
"i think it should be $op_rc -ne 124 -o $op_rc -ne 137 and condition will make dead code here.";"0"
"tailing ',' should be removed.";"0"
"nit: curlmsg* curl_msg = curl_multi_info_read curl_multi_handle_, msgs_in_queue ;";"0"
"this patch is intended to actually be upstream-able was thinking about kicking that off just this past weekend, actually, but ended up too busy , so this comment is not appropriate. maybe ""called from common-main.c"" but i do not even think that is necessary; i'd just kill this comment.";"0"
"should be 'gerrit-gertty.yaml'";"0"
"michael, only one. it is so hard to fit event wrapper in two lines and it becames ugly";"1"
"maybe initialize this member to a dummy value";"0"
"oh. that wasstupid. i should do less multitasking.";"0"
"i have this in my .vimrc to be able to do it with ctrl-k: noremap <c-k> :pyf $home/local/bin/clang-format.py<cr> inoremap <c-k> <c-o>:pyf $home/local/bin/clang-format.py<cr> i copied clang-format.py from... i forget.";"0"
"i notice at least with recent changes in horizon that this only works on 'grey' rows...the white ones do not get shading. the following seems to work, if clunky: table.table-rsp.table-detail.table-striped.table-searchlight-search-results tbody tr.warning { background-color: $brand-warning; td { background-color: $brand-warning; } }";"0"
"really that seems retarded. can not you fix that the uapi mips stat.h has ""unsigned long st_mtime"". are you sure the real problem here is not that bionic's stat.h has the wrong definition for mips64's struct stat";"1"
"does this have any unintended side-effects can anyone observe that we've fuckedwith the flags in any way";"1"
"do you really want cryptohome to _die_ if this fails maybe a if ... { dcheck ... ; mounts_.erase username ; } else { log error << ""failed mount was not in the map. wtf; }";"0"
"please abort if errno != enoattr. also, please use nullptr instead of null.";"0"
"all_chaps_with_underscores is ugly :";"1"
"admin classwill probably be static/singleton anyway. no need to have static members. let us minimize those statics where possible please.";"0"
"commit message is not a chat. this sentense should be removed.";"0"
"i am a suckerfor early returns instead of adding an indentation to the whole function body. :";"1"
"how are you initializing an activitylog w/ 2 params";"0"
"just copied it - my checkpatch actually picked this up. i will change it now.";"0"
"no_edid is an edid object.";"0"
"you can remove these now that you are initializing to 0.";"0"
"destroy arcore_session_ and arcore_config.";"0"
"what happens if the caller passes ludicrous buffer_size values does the code try to allocate that much space";"0"
"maybe a stupid question, but why does not this need to be qualified with ""identity::""";"0"
"err. stupid me. it used to be here, butthen i moved it in the next cl in the nebraska classand undid the call to nebraskaserver. revertitback. done!";"0"
"these dummy values are getting pretty colourful. ;";"0"
"request_host_routes = attr.is_attr_set s.get 'host_routes' and s 'host_routes'";"0"
"your call. this is setting the low value in the register, butthe whole low/high will still be in stack. do you prefer having garbage in the register";"0"
"vipin that would exceed the 80 character limit and be a pep8 violation";"0"
"this needs a docimpact tag please. thanks.";"0"
"i think the logic here needs to be: all_the_same = true for ... if not match_found: all_the_same = false ... test_result 'pass = not all_the_same";"0"
"this should not work, it should be ap_spec.mode_n which you need to import. all of the self. stuff should removed.";"0"
"would you please reorder the configs to swift_endpoint_url swift_api_version swift_account swift_container";"0"
"this dumps an ugly sysfs path so i'll try and find something else to use.";"1"
"another maybe dumb question: are not ports configurable, like for hadoop 1 put another way: why did you hardcoded constants there";"0"
"we need this for the case when --log-net-log is not specified. in that case webrunnernetlog will act as a dummy netlog.";"0"
"oops, that is a stupid mistake i made. it should be following in l508: fip 'host' = host thanks for your review :";"0"
"i think this is a great opportunity to port this to signal.sigterm and os.kill.";"0"
"well, it is just one rpc. we update the hosts in a group. so, i am not too concerned about the size of the set. now that you mention it, though, i think that this results in us locking hosts every 10s no matter what, which is stupid. we really only want to do the locking at all if there are new hosts that we've discovered.";"1"
"remove excess white space";"0"
"done. again, just let me know if you'd like to decompose the stuff even further.";"0"
"this name is terribly bad for other people to understand the logcat. maybe fourgoundserviceobs";"0"
"i got confirmation from bootrom team that pllp is configured by hw to 408mhz. br does not touch pllp setting except enables it. that is why bit 28 in base register is still zero when entering function clock_init . trm needs to be updated. the m/n/p/cpcon values are copied from kernel code. also that matches what has been used in u-boot.";"0"
"darn, it is fast in crashpad, butitis very small. a --get-value=target_os that returns it unquoted would be nice, but nevermind then. :";"1"
"this is existing code -- postasynccallbackforuser -- i can actually use that as the holder for now. then we can kill it all after. i agree - this is messy/ugly.";"1"
"i'd rather use * instead of #. here to make it look as a bullet list";"0"
"i'll update this and submit a new patch. i'll convert the other dumb member test to match while i am in there.";"0"
"that is an insane amount of instructions.... i guess the argument is that bitcount is so little used that taking the bloat for the small number of invocations is ok";"1"
"yes, addr_create_input.chipfamily = family_cz;";"0"
"/*delete_children*/";"0"
"you canuse cluster_id = self.fuel_web.get_last_created_cluster for this case";"0"
"lets do the minijail initialization in main, after declaring this daemon. you can passthe tpmhandle instance to trunksdaemon";"0"
"the call to madvise will already have corrupted errno. see posix_fallocate.cpp for how to do this.";"0"
"the line break should be here, and line 20 should be removed.";"0"
"consider using mock.patch.object rather than just overriding values at test time with new mocks.";"0"
"indentation is off. you prob want to wrap all the args. useroptions = nassh.commandinstance.tokenizeoptions params.nasshuseroptions, params.hostname ;";"0"
"why run_tests.sh should invoke it at all i think it is a test's responsibility.";"0"
"''abc_touchscreen.py''.";"0"
"holy shitwhat is it why we need it dcostring, pleaase.";"1"
"vendor_name should be huawei";"0"
"you do not wanna 405 here; let options and any other weirdos get through.";"1"
"for future note, this should probably be: workitem< > item = myworkqueue.take ; if mycancelallflag { myworkqueue.clear ; mycancelqueue.clear ; myidgenerator = 0; mycancelallflag = false; } else if mycancelqueue.size > 0 { for handle handle : mycancelqueue { //noinspection suspiciousmethodcalls myworkqueue.remove handle ; mycancelqueue.remove handle ; if handle.id == item.myhandle.id { item = null } } } if item != null { callbackhelper item ; } but i am removing this functionality for now.";"0"
"delete these two empty vars";"0"
"good one -- this is open source so i should nuke the comment and link completely.";"0"
"/*start_time*/";"0"
"that is handled by strtok which removes all the delimiters.";"0"
"or just remove this stupid comment.";"1"
"i was just going to throw the suckerin my snippets.... will bug summit to make sure he's tracking commit level per iteration.";"1"
"we do not need generic_write, so kill this";"0"
"it is a write lock, not a read lock. if you read user.eclassline by line i know it sucksbut every line in there was fought over and blood spilled , the logic is: * check if the acct exists; if so, quickly return * if the acct does not exist, grab the lock * with the lock held, see if the acct still does not exist * add the account *atomically* so that other code exiting 1 above works";"1"
"if there is trash data in the unused bits, can we and with the appropriate mask to clear it";"0"
"should be acedgevpnassociation";"0"
"i think it should be fake.image_id now.";"0"
"you think that is best i do not really want to clutter the code here because of bogus apks...";"0"
"or you canuse the approach: def devicenodestring node_id, node_description, tag_list, split_multiline=false : ... for tag_name, tag_text in tag_list: xml_escape_tag = saxutils.escape tag_name if split_multiline: xml_escape_text = splitmultilinetonodes tag_text, tag_name else: xml_escape_text = saxutils.escape tag_text result.append '<%s>%s</%s>' % ... also, with this approach, splitmultilinetonodes should be just an inner function or private as no one needs to use it directly and can accept xml_escape_tag.";"0"
"why you are wrapping dict agan in dict";"0"
"''admin_token'', also below";"0"
"i tried to make shellfalse. butitcomplained bad configuration option about '-o ""stricthostkeychecking no""'.";"0"
"cool - i like the autogenerated uuid. :";"0"
"i think the latest trend is just to put garbage here...";"0"
"can you get rid of the white spaces";"0"
"something is going wrong with the indentation here - or perhaps before, make sure it is 4 spaces and configure your editor to ensure that, if it is too dumb to do it out of the box";"1"
"should be cleared that the native abi remains unchanged and the change is for internal abi.";"0"
"done. it was actually an annoying behavior of the template system returning some invalid value when looking up undefined global variables, which is never helpful. the behavior is now the same when testing for existence, {{if global ""foo""}} returns false if undefined butitdoes not require the extra test as in {{if $foo := global ""foo""}}{{$foo}}{{else}}{{end}} anymore, just {{global ""foo""}}.";"0"
"we support migrating from older profiles for at least 2 years, so this metric is definitely not getting removed soon. i think that the right thing to do is to remove it when we deprecate the v9 schema and remove the migration code for it.";"0"
"should we use a constant here instead of a naked 2";"0"
"nit: f = 0";"0"
"these clk_prepare_enable s are actually useless on both 5420 and 5422 - the prepare/enable counts get propagated when we reparent";"0"
"am i missing something why is not this more like if $# -eq 3 ; then exe=""$1"" port=""$2"" pid=""$3"" elif $# -eq 2 ; then port=""$1"" pid=""$2"" fi if -z ""$exe"" ; then exe='adb shellreadlink /proc/$pid/exe' fi if -z ""$port"" ; then port="":5039"" fi if ! ""$pid"" = 0-9 +$ ; then ... fi there is too much nesting here for any human to understand, i think. it is unfortunate that this function allowed so many different uses, but we are largely stuck with that.";"0"
"i guess if disk_bus was none we'd get here and eventually that returns none and we get the different unhelpful error.";"0"
"there is no need for a mutex. any function you call after opening the hw module will be executed after the initializers are finished. i've double checked this.";"0"
"public_endpoint, admin_endpoint";"0"
"nit: this needs 2 spaces before ""obsolete"" like registering_to_devtools.";"0"
"you only need the source_modules entry below.";"0"
"should this be destroyed somewhere";"0"
"this is a useless comment - remove";"0"
"if we do, should we just get rid of the hboundtype";"0"
"what about $ocf_reskey_crm_meta_timeout/1000 < 20";"0"
"s/fdt/blob/ i think since u-boot seems to use that more commonly.";"0"
"no, i think this is preferable to have an informational output cause a failure.";"0"
"one man's ugliness is another man's beautiful garbage! i liked the line efficiency of it :";"1"
"it feels a bit weird to refer to attributes in a property. is it relevant here";"1"
"i tend to consider it a problem in tests. i am not sure what is the expected consequence of these dup2 calls in case sys.std* is mocked out.";"0"
"ugh.. this all is ugly, but specifically the define that is longer than the word ksame is.. i'd prefer static const languagetype k0 0 instead, so any other value visually sticks out immediately.";"1"
"delete testrunner.oninspect;";"0"
"sorry, i am an idiot...somehow, i was thinking you meant the ""launch_api_service"" line....i now realize it is the ""wait"" line....sorry...... done.";"0"
"rmove your id, as it will be owner.";"0"
"why are we saying chef ""roles"" is enough to drive salt, puppet, or chef.";"0"
"perhaps we can simplify the logic a bit.. how about the following no nested conditionals, breaks, or redundant log messages. while rc timeout <= kmaxsleep { // sleep, then increase timeout. ... // check if server is responding. log info << ""running wget to start""; rc = system ... ; log info << ""done running wget, rc="" << rc; } if rc { log error << ""unable to start devserver""; started_ = false; }";"0"
"should htryboundary be a subclassof hgoto";"0"
"i find at rather ugly. just make this a range-based loop: for const managerregister reg : callee_save_regs { ... }";"1"
"in here, you should instead fetch the device and check for wpspbcsupported, wpskeypadsupported etc.,";"0"
"when we get rid of the *_compat stuff then we passin ms i to te_prep_mem_buffer which i think will make this cleaner.";"0"
"i still think -i change is not relevant here and should be removed.";"0"
"true /* pause_when_not_identical */";"0"
"on the _last_ passdo we want to consider deleting reporting the rw_entries that remain in ""rw"" mode, and let fsck progress on the remainder";"0"
"oops, this ifna should not be here, probably due to your rebase.";"0"
"i suspect ""negligible"" would be more accurate than ""no"" since there are extra if checks being executed, butthat is kind of splitting hairs.";"0"
"i am a coward and i do not want to enable it by default for icehouse. i am confident the feature is well designed and implemented even better, but, asstated earlier, i am a coward, and i would vote for enabling notifications by default assoon as juno gates open.";"0"
"= { sdkrootdirectory, ""platform-tools"", ""adb"" }; or, even better, pathutils::join a, ""b"", ""c"" ;";"0"
"i'd be curious if there is a particular reason for this little dance it seems like the nested stack would be in the init_complete state anyway, so nothing especially bad ought to happen if it were to be still accessible.";"0"
"f* # i hate mornings.";"1"
"that became ugly. please use separate object like user for managing accounts.";"1"
"just to confirm. asynchronous destroy is ok in vd";"0"
"normally this value is different for different sku cpu. for the high performance chip, it has higher regultor-ma, although they all are t132. so i thoughtitis board-specific.";"0"
"these seem like bullshitto me. we should fix clang and/or disable this warning.";"1"
"yo, classnames should be camel cased";"0"
"done. it is not critical as we always fork before calling perf_event_open.";"0"
"rightitried by passing in processmemory here instead since that has a base/derived structure, thinking that on mac, linux/android, and fuchsia we only used process_reader_->memory below and that that could be treated as a base ""processmemory"". but: 1 memory is a taskmemory on mac, and; 2 i did not look at the body of mergewithothersnapshotimpl which is a friend and it uses process_reader_, and needs the real type, and; 3 fuchsia did not actually have a memory method anyway though that one is addable . i could probably share fuchsia's with linux's, butitd still need to be a template then to handle processreader, so it seemed less worthwhile since shoving it all in the header sort of sucks i also couldn't think of a name for the template... memorysnapshotlinuxandroidfuchsia is not exactly pretty. the rename of processreader -> processreaderwhatever was mostly because i it does not work as well for grep/tags though. : we'd still have process_reader_ members though, so there'd still be some of that problem.";"1"
"this ain't a pwm ; but i can guess where you stole this from.";"0"
"could we comment this assilently kill and destroy all untracked files and directories""";"0"
"hmm, i mean if namespace is not supported, then command ""ip netns exec qrouter-xxx"" can not work.";"0"
"get rid of this delete here.";"0"
"should this be test_launch_stack_with_environment";"0"
"yuckok, so this is why we've caught exception in the past internally for ibm-db-sa, the exception you get in the db2 case is ibm_db_dbi.warning: which just extends the base exception type, none of the sqlalchemy types, which sucksand i should open an issue against ibm-db-sa for this. so i'd prefer that we: 1. just remove the try/except for out of tree changes or 2. use exception for all backends even though catching exception sucksor 3. check if the index exists before trying to create it as johannes suggested.";"1"
"i broke it. the dump button's id is also 'dump' before, so $ 'dump' grabs the button element, and .showmodal just completely fails :d";"0"
"yeah i covered the mako gpu thing. however, right now /dev/graphics/fb<num> is a graphics_device. i am more concerned that the raw file object is passed back via these two permissions: android.permission.read_frame_buffer android.permission.access_surface_flinger now these perms are for internal apps, so i am ok with killing them for untrusted_app domain.";"0"
"use cros_build_lib.getsysroot";"0"
"it is copy pasted from drm_gem_mmap with one minor modification that i will note in gerrit. the reason i copied it is because at this point in time, drm offered no api for retrieving gem objects by their dumb offsets. in my upstream branch, this function just uses drm_vma_offset_exact_lookup to retrieve the gem object from dumb offset.";"0"
"all of the callers of this function have a std::unique_ptr<entrydefinitionlist>.";"0"
"the mips gdbserver still builds, and i couldn't work out from the git history where this came from and why. and it is not in bionic, obviously, since this patch is the result of copying this two files from tot bionic.";"0"
"must have done something silly after make check and testing and before submitting to gerrit. fixed typo.";"0"
"i see. that restriction suckslet us keep it the way you have it, otherwise we'll have to have this super uber moduleadapter, which suckstoo.";"1"
"couldn't we just dump it as yaml instead with open '/etc/os-net-config/mapping.yaml', 'w' as f: yaml.safe_dump {'interface_mapping': data node }, f, default_flow_style=false";"0"
"silly me!, ordering is not important here since we are in a firewall.defer_apply block, where the filter_defer_apply_off will call in iptables_firewall ... _setup_chains_apply, _setup_chain... etc doing _update_ipset_members, and _generate_ipset_rule_args later on...";"0"
"chown chronos $swap_field_trial_forced $swap_enable_file";"0"
"quote the $d and drop the "" die""";"0"
"another stupid compiler question is this always in ssa form if vreg can have different value from different incoming edges, is this always set to phi instruction";"0"
"yeah, the bp is aiming to fix the badly expressed user request. while we fix the backwards compatibility problem, it is also rather due to the fact that we know that having dicts for defining anuser api just sucks- pointing bp request-spec-object is worth it, no";"1"
"you are totally right - the dumb guy who did that was me! i am repenting here already:";"0"
"*dickinson";"1"
"kill this blank line";"0"
"i think you need to passin formatting using a variable to make the translation tools to work. more like:- msg = _ ""image % image_id could not be found after upload. the image may ..."" % {'image_id': image.image_id}";"0"
"volumes_page = self.volumes_page";"0"
"oh, interesting! agreed. ""//lint stfu"" is also uglier, if it were possible.";"1"
"just delete this die";"0"
"this was a straight copy paste from laziness. done.";"0"
"substr should be splice";"0"
"most modern tests in sw land use promise_testitis safer for a few reasons: - no need for ""unreached_rejection"" at the end, which tends to give less informative output when the test fails - if additional test cases are added to this file, they will run in sequence with promise_test. async_tests tend to stamp on each other if not coded carefully.";"0"
"we want to remove existing enabler first and then create a new one.";"0"
"for destroy, we probably should remove this observer right should we have have this call cleanupwebcontents there too";"0"
"if this is not actually going to get used, i'd prefer using mock.sentinel.dummy as a dummy value. terminology nit: dummy is something that is used to fill in a value that does not get used, fake is a simple but correct implementation e.g., in-memory database . the terminology is not important, butthe role of the fixture should be clear.";"0"
"damni did the other way around. /me facepalm";"1"
"db2-express maybe what if tomorrow you have another db2";"0"
"i could leave this test in general and just abort on unexpected != libart...";"0"
"please factor into a separate method/file. this file is too damnlong.";"1"
"yes it is completely useless. the patch i am reverting here is completely missguided and is clear that was done out of lack of understanding about what information we are trying to keep in the topology of each cell this is also clear from the wording of the original bug report . it is just cruft so i am removing it.";"0"
"maybe remove, as 'printer' dies at the end of the block";"0"
"it would be a bit better if you used 'default_api_version' here";"0"
"tabbing is a tinch off";"0"
"k < name_len k < part_name_len could be k < min name_len, part_name_len";"0"
"done silly me...";"0"
"nit: imho a oneliner will be easier to read here size = min self.chunk_size, self.partial_length if self.partial else self.chunk_size";"0"
"on second thought, adding a factory for a single function seems a bit messy. i am merging this back to startup_utils.sh.";"1"
"needs to be a nul terminated string";"0"
"cppu, cppuhelper and salhelper are part of the ure stable abi so we can not just remove them because c++ extensions require them to exist.";"0"
"crapdone.";"1"
"please use utils.execute wherever you run os command.";"0"
"is this cmdq_max_task_in_thread * cmdq_max_thread_count";"0"
"intellij npe warning";"0"
"oops, sorry - i'll kill that.";"0"
"vmarko: i asked him the same and still believe his answer is bogus.";"0"
"your cloud on a continuous scale seems like bullshit";"1"
"ok for now, but, in the future, we are going to look for the device on a specific port instead. and vid/pid would need to be configurable anyway .";"0"
"so you assume you'll never run an asan build under valgrind which memory tools sanitizes the memory tool ! ! ;- yes, please move to constexpr.";"0"
"good question, that was a real head-scratcher for me. it looks *very* specific, so i did not want to change it even though i agree, we should probably clean up on any exception. sounds like both of you would be in favor of that change, and me would make three, so i'll fix that up.";"0"
"might as well kill this one";"0"
"style nit: kill the unnecessary parens";"0"
"ah yes commit f1443858d94d042a6f71853a87aa8ae88a92259f.";"0"
"currently only wayland clients can put a window into the pip window state - there is no public api like maximize , which leads to this ugly hack. wrt tabletmodewindowmanager - i believe so. i do not think there is any specific logic to make it not managed by it. the bounds themselves are managed by the client, however.";"0"
"i do not thinks this is going to scale and looks odd, should we change it so textitemcolorblack starts at 1 we should be able to check if a color has been set or not, any other ideas just as an fyi. if the if/else condition body has only one line you can skip the {} though i do not mind re-adding them.";"0"
"oh, and here please use sal_warn, osl_trace is obsolete and this message should be a warning.";"0"
"herr apple says they are required: in practice i do not know. stuff builds and tests passwithout them, but for all i know doing that is subtlely breaking shitin xctestcase land. leaving them.";"1"
"i2c20 = i2c_tunnel;";"0"
"maybe a dumb question, but will there ever be an extension in a connection url path that is, do we need this part or could we simply path = '_'.join path, 'cell0'";"0"
"marginally more efficient to re-slice back down to 0-length. t.pendingqueries = t.pendingqueries :0";"0"
"the pep8 logs in the gate suckthis is the error. missing 'm' in 'import'.";"1"
"put that on nodeprofile as a classmethod";"0"
"ideally, it should be _le ""agent cache inconsistency - port id "" ""is not stored for %s"" % port_mac";"0"
"hopefully no one will be stupid enouf to add spaces in file names, but yeah. done";"1"
"why are you passing this in sequester your code here in list_all_suites. get back a list of control_data objects and do your transformation here.";"0"
"maybe can we go for non-admin examples or is that silly";"0"
"the final message will be processed, butthis peace will not. please remember that translation utils are quite stupid and cannot guess your intentions. for this peace to be translated, it should also be covered by _";"1"
"todo: throw a subclassof certificateexception which indicates a pinning failure.";"0"
"is there anything we can test in common_js_unittest";"0"
"oh i see, derp, running pep8 tells us if we've added some crapthat is too complex once we set a limit. if someone needs to bump this to make their change passit is a red flag for review. that is neat-o! at one point you had paste with a list of the most complex methods in tree, is that easy to run maybe we could document how to do that in the tox.ini if one line or in the devref would be good for low-hanging-fruit cleanup type bugs for new contributors.";"1"
"issue with a pid file is that i am getting rid of the jabra-vold.conf hence there is no rule pre-shutdown to clean up the pid file. in the next boot we may encounter a stale pid file and thus kill the wrong process.";"0"
"ah, you had mentioned that sha1 in the line above anyway; stupid me";"0"
"this and the docstring above it are garbage";"0"
"can we have unit tests equivalent to * unifiedmessagecenterviewtest.stackingcounterlayout * unifiedmessagecenterviewtest.stackingcounternotaffectingmessageviewbounds * unifiedmessagecenterviewtest.stackingcounterremovedwithnotifications";"0"
"it is a bit clumsy repeating the tests from l357 on l367. i refactored this block: if 'tenant_id' in search_opts: search_opts 'project_id' = search_opts 'tenant_id' else: if 'all_tenants' in search_opts: action = ""detail"" if is_detail else ""index"" authorize context, action=""%s:get_all_tenants"" % action else: if context.project_id: search_opts 'project_id' = context.project_id if 'user_id' not in search_opts: search_opts 'user_id' = context.user_id if 'all_tenants' in search_opts: del search_opts 'all_tenants' however you still need 'all_users'. currently there is no way to query for all users in your context tenant without passing your tenant_id explicitly.";"0"
"please put this between host7 and host11";"0"
"probably a dumb question but what is server-ip-address dhcp server or..";"0"
"just sanity checking - what would happen here if we did: mygpusampler.setclient client ; if client != null { int newapilevel = mygpusampler.getapilevel ; if newapilevel != myapilevel { myapilevel = newapilevel; configuretimelinecomponent mygpusampler.gettimelinedata ; } }";"0"
"remove this useless point";"0"
"i am glad to hear that this will be killed off soon because i am sorry that i suggested this change because it is so gross and it does not handle the case of some other test file calling sysdeps code. my bad.";"0"
"omg butthose guys are such *jerks*! :p";"1"
"done and remove all other unnecessary no_delete.";"0"
"i mean: $ find -iname '*brillo_emu*' wc -l 0 $ git grep -i 'brillo_emu' wc -l 0 i am not strongly against this, just noting an inconsistency";"0"
"should we kill this point too";"0"
"it should be execution of 'wf1' and 'wf2' from wb1";"0"
"when we bump the min version of olso.vmware > 1.3.1 i guess";"0"
"would appreciate this to be prefix with backup_swift. darn backup_compression for breaking that.";"1"
"failed_download_id_ = failed_download_id;";"0"
"i think you should rebase this on top of so we can get rid of this tenant crap";"1"
"damnthat is where i first had it. yep, i agree, i'll move it back1";"1"
"this is silly, you are asserting that the mock is raising the exception that you told it to raise from the side_effect. i think you just want: mock_rbd.rollback_to_snap.assert_called_once_with libvirt_utils.resize_snapshot_name seems like you should also be asserting that we still call remove_snap in here even though rollback_to_snap raised the error.";"1"
"i notice that these *_length functions do not pay attention to overflow either, and the *_to_utf8 functions do not take a destination length, only a source length. i really wish we could move people off string8 and all the other crapin libutils .";"1"
"damni am really sorry, worst typo ever. at least strict_cast saves the day. :";"1"
"heh, no you are right, this is ugly. should not need saying :";"0"
"todo: refactor this ugly hack somehow.";"1"
"i astyled the whole damnthing!";"1"
"these three should go under: update_parser_common, along with the ones from update_parser_network";"0"
"drop this whole src_install section - this is an ugly hack we've been using internally to install the i-g-t tests, as the i-g-t makefiles do not have an install target for them. we are currently working with the i-g-t maintainer to get this fixed properly.";"0"
"whitespace";"0"
"you want ""$*"" here, or maybe just ""$1""";"0"
"should not this be a rand_name instead of a uuid";"0"
"per josh commnet, can you please add a comment that this should be killed once netvirt + vpnservice supportit";"0"
"is there any need for setting the return_value of the mocks above i do not see any assertions below that 'fake-device' or 'fake-video-spec' are being passed to any functions, so i do not believe a return_value is needed on either mock...";"0"
"let us use ""implements"" for tracking purposes in launchpad; we may create another bp for the other phases if needed";"0"
"self, remote_device, devserver_bin, static_dir=none, **kwargs";"0"
"these new mocks seem to be overly broad. my understanding of this is that any object using time.time, not just the monasca_common.kafka.producer will be effected by this mock. is that your understanding if it is then this may work in the current case but seems dangerous for future development. i'd prefer to mock asspecifically as possible to avoid unintentionally disabling functionality in objects.";"0"
"looks like this may not be the right driver to use as a dummy driver for driver loading tests used for security groups . is there a better one to use, or should a dummy classbe created here";"0"
"i would still call this something like oncompleted or ontransfercompleted .";"0"
"require_usable_hosts instead of check_hosts and require_usable";"0"
"ugh damnit, the second should be fp_offset. fixing, thanks.";"1"
"let me be clearer: 1/ the legacy behaviour, i.e. the one that the android libc.so always exposed through its publicly visible atexit is broken: i.e. the corresponding handlers are never called when a library is unloaded. this may result in resource leaks, but at least no crash. this may result in a crash when the application exits but _many_ never call exit and are simply automatically killed by the system . 2/ there *is* existing native code here that is probably buggy but just happens to work due to 1/. and some of this code is never going to be recompiled if it were, it would be against a newer ndk, and the new code wouldn't have this problem . 3/ your patch changes the system's behaviour for this legacy code. the end result is not predictable and may results in crashes. we do not want to this chance. in other words, the risks/benefit ratio for this patch is just too damnhigh.";"1"
"should this be $ovs_mgr";"0"
"we still need this crapfor parsing the action, butitis now in a new hook module";"1"
"this is rudiment. will be removed.";"0"
"done. this getprofileidfromtoastid is removed. use decodetemplateid directly instead.";"0"
"return a frozenset of dep's.";"0"
"do not we need to run a different command if that haproxy is alreday running, e.g. some kill - 'cat pid'";"0"
"how about: execute = utils.execute";"0"
"this looks kind of ugly... why not a again ""///<"" or b move it above the line as ""/** ... */""";"1"
"what an ugly constructor :-";"1"
"i assume this exception is not used anymore, so we should kill it.";"0"
"i'd clean up the string a bit for use as a slug: remote_os = remote_os.replace "" "", ""_"" .upper";"0"
"as long as we export adb_dirname, i think that is actually a pro --- makes it easier to not fuckup this kind of thing for windows in future.";"1"
"i personally do not like sourcing .sh files, can you actually execute setup_java.sh on its own";"0"
"vip_management_cidr_netmask and vip_public_cidr_netmask are useless in this task management and ex network roles are deprecated";"0"
"your missing the neutron and nova_formats here";"0"
"there is a dumb calibration routine in magneticfieldmeasurementtestactivity, would it be prudent to refactor it out, so it canalso be put at the beginning of this test, as a way to guarantee that the magnetometer is calibrated before the test starts assuming that the operator did not follow any particular order while running ctsverifer tests";"0"
"i am fine with removing that. revocations do refresh the cache of the revocation_list. done in the next patchset.";"0"
"you handle a bad merge conflict, this line should not exist.";"0"
"when i originally did these i wasspecific to not put session building here. whilstitis people have no incentive to actually upgrade their code and use session properly. i am fine with it going into the cli.py but are we sure we want to do it here rather than a big fat ""passa session"" deprecation warning";"0"
"wat is the point of #if 0, it means you produce dead code if the code is dead it should be removed";"0"
"do you know why the ciaddr check is included seems like yiaddr being invalid ought to be sufficient to dump the offer/ack without needing to consult ciaddr .";"0"
"consolidate to one line allow netd self:netlink_tcpdiag_socket { create_socket_perms nlmsg_read nlmsg_write };";"0"
"the new is here, but i can not see delete anywhere. anyway - instead of fixing this you could try adding addstatuslistener "".uno:metricunit"" ; to the controller. that way you should get the sid_attr_metric updates into statechanged too, and then kill metriclistener.";"0"
"should be using std::unique_ptr<flag> and let the destructor automatically destroy all these..";"0"
"should this be myzipoutputstream.write bytes , or does super end up calling write int for each byte or something";"0"
"quantum subnet-create ext_net x.x.x.x/xx --disable-dhcp --allocation-pool start=x.x.x.x,end=x.x.x.x the allocation pool is important as otherwise it assumes it owns the entire damnthing.";"1"
"yeah this one is a bit weird. i believe it is possible to remove it by using the inputmethodkeyboardcontroller interface instead. i can give it a try.";"1"
"man is this ugly.... will be happy to get rid of legacy dict down the road.";"1"
"this seems redumnant tm . i do not believe that you need to set culsters.manager = mock.mock because you want to set clusters.manager.delete.";"0"
"you are not exiting, so it is not fatal. log_error log_warn";"0"
"hang on... is not is_sensitive just !to_logcat let us get rid of is_sensitive and just rename to_logcat to something like is_allowed_in_logcat";"0"
"why on earth are you logging an exception ! what is expected to raise an assertion error";"0"
"you probably need unchecked cast because the map may already be dead at this point.";"0"
"silly nit: there needs to be a blank line here";"0"
"oops, this is old. it showed up in my diff with upstream libselinux. feel free to ignore";"0"
"this is the pep violation, add a newline above here.";"0"
"i would suggest: ""attaching volume to iso instance results in failure like this ... """;"0"
"shootitfailed 16 times in a row. let us revert this:";"0"
"oslo-incubator is dead, we should not put anything in openstack/common anymore. why do you need this at all the file is in oslo.i18n... if this is needed, let us place it elsewhere.";"0"
"we should have something like this for ""adb root""/""adb unroot"". the same race exists there. is not there a ""do not close this socket"" flag should we be setting that instead";"0"
"this is a little ugly, butthis is what we will use to do consistency checks on the parameter pack with std::enable_if etc.";"0"
"thanks. hey let us update the param then. maybe: param {!object string} that says it must be either a non-null object or a string.";"0"
"you are filtering by two fields that are not making a primary key, so beside noresultfound, .one can throw multipleresultfound potentially. can you explain how edge_id, pool_vseid is unique and if it is, then why not add it as a constrain to the model definition and migration";"0"
"self.assertraises runtimeerror, self.batch_ip_cmd.execute";"0"
"ditto, version needs to be bumped";"0"
"done. really, nothing special. gotta name it something. it is a stupid term that i came up for a thing that i had to do :";"0"
"please replace these dashes with a colon.";"0"
"nit: 'app_list::' and ' overrides' here and below is not required. i would prefer to keep overridden start,stop in one place.";"0"
"bool /* notify_a11y */";"0"
"can the mocks use 'autospec=true' if possible";"0"
"nit: align the bullet contentitmakes it easier to read. * bullet line 1 bullet line 2 * next bullet next bullet line 2";"0"
"the dummy flush should only be executed on the a15. erratum_a15_798181 == true if the current cpu is an affected a15 . has_erratum_a15_798181 == true if *any* cpu is affected.";"0"
"parenthese are unnecessary.";"0"
"/me feels stupid! the audio element needs to be added to the dom so that mutation observer callbacks are called. you are right about the dcheck. i'll fix it! thanks for the drive-by review!";"0"
"this is garbage code left from rebase update.";"0"
"-1: better move these mocks to '_test_copy_image_to_volume_stream_optimized'";"0"
"my understanding is that you disable inline here. definitions have to be inline in headers otherwise you cause an odr violation.";"0"
"self.execute = _execute or linux_utils.execute";"0"
"yeah, i think we can and should use these stl aids. deymo, do you have an objection";"0"
"dammit! thanks again :/.";"1"
"i am slow ... what is the point of this dummy wrapper";"0"
"i think the race is here, daemons.stop gets called right after finalizerwatchdogdaemon.wakeup . we finalize the object, but leave needtowork as true when we exit the running loop. watchdog daemon begins sleeping, then also gets interrupted by daemons.stop . however, needtowork is still true which causes a false positive timeout. maybe we should set needtowork to false before finalizerdaemon.run exits";"0"
"if the child exited, will not this throw esrch we should swallow that as it is wai.";"0"
"now this is the ""made up"" delay. ...it is much smaller, i do not think it needs to be very much.";"0"
"good point--yuck i am guessing most decent implementations would have a fairly efficient implementation for initializing simple types to 0, butthat still wouldn't make it a good choice here since it will be resized frequently.";"1"
"fk should be clusters.id";"0"
"no it is notitis a filthy liar.";"1"
"nonsense false positive, see crbug.com/924326, sorry about the noise!";"0"
"if $max_temp -lt $k ; then max_temp=$k fi";"0"
"i hadn't, butitturns out gcc hates that too: bionic/libc/bionic/pthread_exit.cpp:85:16: error: missing initializer for member 'sigaltstack::ss_sp' -werror=missing-field-initializers stack_t ss{}; bionic/libc/bionic/pthread_exit.cpp:85:16: error: missing initializer for member 'sigaltstack::ss_flags' -werror=missing-field-initializers bionic/libc/bionic/pthread_exit.cpp:85:16: error: missing initializer for member 'sigaltstack::ss_size' -werror=missing-field-initializers hopefully not too long until we can build libc with clang for mips too and this canall be forgotten...";"0"
"since check_ports_exist_on_l3agent has been mocked to return a certain value, just mock.mock is enough to get_subnet_ids_on_router. the same to l619-620, l634-635, l650-651, l667-668.";"0"
"should be vif_model = image_properties.get ""hw_vif_model"", network_model.vif_model_e1000";"0"
"netaddr.eui will handle validation for us. i will add some negative tests.";"0"
"tricky is as tricky does : i think at some point i'll write a unittest for this sucker";"1"
"what if. you had a loadimagesyncronous method, that returns a string. and your loadimage method's body looked like { std::move callback .run loadimagesyncronous key ; } that way you wouldn't have all these ugly empty return;s everywhere.";"0"
"if the crash happens within the reload call, maybe we should run this within the reload method since it is the one that needs to be ""dumb aware"". also it will allow us to do something like displaying a loading spinner if we want to while the indexing completes.";"0"
"you probably want to return a different exit code if the daemon fails to run";"0"
"/* component_id */";"0"
"what is this and why here are such inintuiteve namings";"0"
"damm, oops.";"1"
"show vid pid together.";"0"
"yeah reading the doc, getcanonincalpath will return a unique file per file not per path . however i do not want to use canonicalpath. java7 has a new classto handle this crap..";"1"
"ugh, damnautoserv, bringing it back.";"1"
"this comment seems useless now, since it just repeats the code.";"0"
"no, i am just stupid. runcon was done ages ago. this is the last selinux command to switch.";"0"
"yeah, this was a dumb way to write this. i should have gone to bed a ps sooner than i did :";"0"
"that is just silly. if we really worried about that, we would also include the date and the log tag and the fact that this is of classerror!";"1"
"why do you need kill that is pretty weird is notit";"0"
"optional nit: would be perhaps less error-prone to do this as: secureblob key string 32, 'a' .c_str , 32 ; ugly, but at least you do not have to type in 32 exact a's or string tmp 32, 'a' ; secureblob key tmp.data , tmp.length ;";"1"
"this is ugly. do env vars, default=none rather :";"1"
"self.cache = memcache.client ...";"0"
"you would need a new urlloaderfactory implementation. i am not sure if this is being used to serve frames or subresources, that determines where it would be hooked up";"0"
"line too long. the check is also not really necessary, considering you are inside image_space != nullptr.";"0"
"it already covered by test: test_task_based_deployment.py:607";"0"
"slaps wrist bad cut and paste boy";"1"
"this block needs to be wrapped in ""if debugblur "".";"0"
"commented code should be removed";"0"
"damngood catch, i added that if without thinking and my test just coincidentally happened to work. fixed and added another test to cover that case.";"1"
"we can not do thatitsuckslet us do something better. we can change the current batch format that i proposed maybe to have something better mixing formats in the same endpoint sucks";"1"
"copying this all over the place does sound a waste. wouldn'titbe better to move it to neutron.conf";"0"
"oops, mistake, only swift:blah is correct, as on l389 path is used, in case of swift:blah path is blah, in case of swift://blah it is empty string.";"0"
"damnjust read the whole msg. i meant to say ""when --source-volid is not passed""";"1"
"i think this is the last residual git branch confusion change... knock on wood.";"0"
"so this is a dumb question. is the value of 'size' in root_device_hints an integer or a string dev.size is an integer.";"0"
"extra_config=extra_config";"0"
"please use here self.resource_def";"0"
"this code is slated for deletion see the todo, above . if it is all the same to you, i'd rather not polish this turdany further.";"1"
"same here, useless error in a console log.";"0"
"you do not have to change this, but i find ""stdouts_iter"" to be better name. at least, 'stdout_iiter' first suggests me ititerates over huge stdout in small chunks";"0"
"pft. that is what cq is for, silly. the issue wasspotted on vm1-m2, which now generates include depth>1; fix was live there, working; additionally kicked off x86-generic-paladin and mario-paladin w/ buildbot; both made it passed the critical sections so yep.";"0"
"changed to: dummy, containers = self._manager .get_account full_listing=true";"0"
"else obligatory ""wtf...warn_on_once ""link speed unknown"" maybe in other words, we should never see speed==0 initialized state";"0"
"i really hate rebase.";"1"
"i am not sure how useful this test really is... i mean, the call could return 200 ok, with a body of {""this"": ""is all junk""} and it would passthis test...";"0"
"this is an osc convention. to have a --long.";"0"
"by convention ossns have always used a space here. now that is possibly a stupid convention and almost certainly my fault butitis still the current convention.";"0"
"that wasstupid, fixed.";"0"
"nit i would remove the local variables and modify l83 like this: openstack = l.ct l.cg timestamp, ""timestamp"" * sp * l.cg pid, ""pid"" * ...";"0"
"you are not appending any new datasets in this classis this a wip";"0"
"yuck any program executed by any kernel thread, including usermodehelper, from rootfs will switch to init";"1"
"either constiterator findintervalstart uint32_t from or std::pair<bool, int32_t> find uint32_t from the ""from"" and ""to"" are also bad names but let us not change them in this cl.";"0"
"no jsdoc here or anywhere.";"0"
"why do not you die right away why keep writing";"0"
"add _vpd_links which enumerates *_link varables in dump_vpd_log. also, check if they are symlinks.";"0"
"add ' die'";"0"
"longer term it'd be nice to either have 1 abi or a arm_soft and arm_hard abi. ifdefs lead to bit rot.";"0"
"it is more idiomatic to use the as<t> t** method for querying off an existing comptr<t>. e.g. hr = wmi_refresher_.as wmi_refresher_config ;";"0"
"you need at least two buckets in a metric. the second can be a dummy value.";"0"
"this is how we've dealt with this problem in the past, keeping the macro nonsense in ndk_cruft.cpp rather than in header files that get included everywhere.";"0"
"remove operator :, useless here.";"0"
"when dump is restored, the migrations must be applied. do not miss this step, since otherwise we will use database schema of previous release.";"0"
"ugly, butits essentially an unrolled loop...";"1"
"lol, why oh why does the ec2 api have to be so retarded : should not this return a 404 and not a 400";"0"
"here's an example change that was committed by gerrititself, and that has invalid change-ids in the commit message:";"0"
"1. python3 does not have the get_hex method on uuid objects. 2. why are you using str why use string concatenation in most places, we are using formatting, e.g. '""%s-%s"" % prefix, ' whatever ' ' ends up becoming";"0"
"bummer, i screwedup, i meant to passin false.";"1"
"oh crapi did not know that was a thing. done!";"1"
"oops, missed a ., those pesky mocks will passanything. ;";"0"
"here dev_err_ratelimited might be useful as i'd still like to know when ec goes bonkers and generates garbage.";"0"
"this url is dead :";"0"
"because i am stupid";"0"
"this is an ugly way to do this... please try to use unions instead, like drivers/serial/tegra.c . while i am looking at this, is there *any* difference between your driver and tegra maybe it would make sense to just generalize the tegra driver to support both cases instead...";"1"
"ugly but gets the job done :";"1"
"use named string interpolation instead of positional.";"0"
"''cinder.volume.drivers.pure.pureiscsidriver''";"0"
"done. curses! you foiled my plan to insidiously rename html to goat text markup language!";"1"
"'pool {pid} is in use by flavor {fid}'";"0"
"turns out this leads to an annoying const_cast, but done. ptal.";"0"
"good catch. it should be verify_error_no_classand throw at location of invoke. done.";"0"
"nice paraphrase very useless review, thanks harry.";"0"
"stack.sh is run under a mere user, so i think yes,";"0"
"- elif - nit: consider using end_message_not_printed instead saves the negation . - nit: consider flipping the order of the conjuncts boolean is cheaper .";"0"
"remove crap";"1"
"fixed. adding call that will write compute instance id into base model, poller with ask for it when it'll be executed.";"0"
"yes, we need exactly 9 slaves";"0"
"yup, if you move it here before the review it looks crapagainst master - we can clean it up assoon as this is reviewed and merged.";"1"
"seems like this would be better: if i != log_id_main i != log_id_system i != log_id_crash continue;";"0"
"argh! why do people do this nonsense in configure";"1"
"oops, muscle memory must of kicked in here. fixed.";"0"
"if you are trying to minimize wasted work, why waste time on basename/getprogname";"0"
"change ""testes"" to ""tests"". gross.";"0"
"no. otherwise the compiler will abort every time you hit one. which is pretty much guaranteed.";"0"
"in each case we can choose an appropriate preposition: in, on or with. i mean ""devstack in dummy"" or ""multihost in dummy"" are stupid.";"0"
"this symlink can die now since portage overlay is gone";"0"
"use base::base64encode/base64decode from <base/base64.h>. glib is evil and now privetd is tainted... :";"0"
"struct mtk_smi_common *smi";"0"
"are you sure you want to remove these ifdef. i am not sure which device is genlock or not.";"0"
"remove aggregatehost";"0"
"nit: keep these alphabetized";"0"
"should the ""task"" keyword be here as it is in the ""login.conf"". reading the init 5 man page implies to me thatitshould.";"0"
"sorry i am so bad at eliminating these whitespaces and long lines. i am all the time loosing this fight. i'll go kill this particular one.";"0"
"++reg yes, i do it all time too. old habits die hard_";"0"
"you are completely right, i will remove them from formatcompleted signal.";"0"
"if we always widen to int64_tithink we can avoid this traits ugliness. see comment in leb128.h.";"0"
"i would rename _call_on_drivers to _call_drivers or _call_on_all_drivers or _call_method_on_drivers.";"0"
"when you are doing something unidiomatic like not using a vector, it is worth adding a comment explaining ""this code is used in the windows sdk where the stl is not available."" so the next person to see this code does not think ""that is stupid; let me fix that""...";"1"
"actually, i am just going to kill it.";"0"
"no, please... all i am trying to do here is preserve the current semantics, and make it as explicit and ugly as possible. i am hoping for this to all go away very soon.";"0"
"assume i do: neutron create-net foo neutron create-port foo # get hold of port id neutron trunk-create --parent port-id nova boot --nic port-id=port-id the question to answer is this: would a trunk without subports function correctly i would think so. as a guest i should be able to have my interface connection on my foo network just like any other regular port. is it useful probably not, as you'd expect the the user to go and add subports later on. so the other question is: do we want to allow for a successful boot off a trunk with at least one subport if so, then we should probably fail the binding process rather than hitting the agent.";"0"
"why not embed $ dbus_header_dir and $ dbus_header_dependencies in lieu of $ 1 and $ 3 in dbus_adaptor_build_template";"0"
"you can complete these shelving tasks:";"0"
"actually, this seems to be the problem as using the > triggers a refresh of apache, which puppet tries to do via systemd";"0"
"hang on, all new apisshould be async";"0"
"how about making this part killing the child process and collecting logs internal to the iw runner you could return a iweventlogger or some such object at the ""start_iw_event"" or better yet create a context for it . then you could get the event entries from this object. it would look something like: with self.iw_runner.event_logger as event_logger: time.sleep timeout_seconds event_logger.stop reassociate_time = event_logger.get_reassociate_time ...";"0"
"i am not sure if this 'elif' is correctly placed. it seems you want to raise the error below is net_type is not vlan butitis aligned with if attributes.is_attr_set net_type so i guess you will hititif net_type is not set... not sure that this is what you want";"0"
"depends on the gc, but for us nothing. put a dcheck here that resolved == null.";"0"
"okay, i'll nuke the fixme then.";"0"
"this fails - probably should be 'ceph-radosgw $ hostname or something along that line.";"0"
"this seems incongruous. we should call them self._nb_ovn, self._sb_ovn.";"0"
"i do not actually think that makes sense. if we do not time the creation of the routers and plumbing them to the subnets, what use would the benchmark be if we wrap the router creation and plumbing in a single timer, then the benchmark can not tell you which of those actions is more time consuming; and if we wrap the entire router creation/plumbing loop in an atomic action then that timer is just plain useless. if the results are too ugly, then set subnets_per_network to 1 and they get a lot less ugly. aside from doing that, there are really no sets of actions in this scenario that can be meaningfully combined into a single timer.";"0"
"could this just be 'if !input_events->input_events ->credit_card_field_edited ' here and below";"0"
"it must be removed! cause it is shit";"1"
"afaiu, this should be removed as well here and in l91: settings:additional_components.mongo.value == false";"0"
"should this be crasstream_input instead of crasstream_output";"0"
"i would kill it while we are atit.";"0"
"unneeded cast should never need to cast to void*/const void* .";"0"
"ugly! we should really have a readonlyidentity driver instead of these. and why do we need three do we even have a use case where we only allow to create but not update or delete i haven't seen one.";"1"
"what i referred in the earlier comments was the second parameter here : object. since you are subclassing from vpc.vpccontroller, i dont see a reason to passobject anymore.";"0"
"add platform/wtftext/textencoding.h";"0"
"date_opt no longer exists, and you can drop the die";"0"
"this is a nice little use the data as is for formating hack.";"0"
"tasks_graph=tasks_graph";"0"
"i think that an enum will be perhaps better than a string";"0"
"when vkcreatefoo ..., foo fails, the spec requires that vkcreatefoo not modify foo. as a consequence, when vkcreateimageview fails here, vk_image_view remains unitialized memory, and scopedvkimageview below gets initialized with garbage bits. solution: check the vkcreateimageview result before creating the scopedvkimageview.";"0"
"access_mode should be removed as it is set in the manager.";"0"
"damnit. dead debug code i did not quite sweep up.";"1"
"should we still fail here what if we happen to have some weird file with wrong permissions here that would kill the whole system. should we just skip over it and continue";"1"
"please throw a nullpointerexception.";"0"
"disregard, i see your comment to daryl about why this can not just be a dump of the object's dictionary. i would probably still like to see something a bit more elegant here maybe a list of values for the request_kwargs that is iterated to build the dictionary butthat is totally personal preference.";"0"
"throw invalidinput exception here not properly here.";"0"
"cool. if it will be really necessary i will implement storing engine_id in stack object.";"0"
"ack. and today's sub-team meeting, we agree on: both enable xbzrle and set xbzrle-cache size in nova.conf. as paulmurray suggested, we could start stupid and then improve. daniel, do you agree";"0"
"damnmissed a ws.";"1"
"passive voice must die. 'install the heat cloudfoundry ""cfn"" tools. with these installed, heat will take control of the machine during first boot.'";"0"
"hmm, if deprecated_name, deprecated_group and deprecated_opts are all none, then i'd expect deprecated_opts to be empty";"0"
":raises: exception.httperror if shithits the fan";"1"
"as you are dcheck-ing upon construction, is it necessary to do it here and below too";"0"
"this line is a duplicate and should be removed.";"0"
"html_last_updated_fmt = subprocess.popen git_cmd, stdout=subprocess.pipe .communicate 0";"0"
"you may want to insert a cell that says something like ""this sheet is autogenerated from autotest/client/site_tests/firmware_touchmtb/spreadsheet.py""";"0"
"are these weakptrs necessary if the auditproofqueryimpl must not outlive the logdnsclient";"0"
"the name is kind of silly, it should just be __smd_alloc_channel, and there is no need for it to be inline.";"1"
"it'd totally be cached by id in sqlalchemy though, if only we could convince people to just do a get instead of a freaking sql query every time.";"0"
"ya, swift is goofy...";"0"
"this is not correct. you should return true/false if the function worked and set a the a ""bool *is_mtd"" argument with the result. this hides errors.";"0"
"we do not even go through the verifier if this flag is not set; do we really want to be this pedantic";"0"
"pardon, by ""in parallel"" i meant ""should be covering both tty and unknown from within _runsudonoop"", which is not the case now. basically, _runsudonoopissupposed to make this issue go away, in entirety- putting it fully there is the thought. in the interim, there *is* a bug here that this is fixing; further sudo enhancements are needed, but i'd like to get this particular one in now since it bites me in the asssemi-frequently. issues";"1"
"--ignore-trailing-garbage only works for pbzip2, butthe findcompressor helper might return 'bzip2' ......";"0"
"dammit, clearly i need more sleep. fixed now.";"1"
"use json.dump, json.load instead of doing your own string parsing. you can json.dump to sys.stdout, do not use json.dumps.";"0"
"not enough. from the point of c++, ngcaretposition is struct and never be null. please have wtfoptional<ngcaretposition> or definine ngcaretposition.isnull .";"0"
"this is ugly but simple. implementing setup_got_nosave for got_reg = ecx is a feasible alternative but not required for this cl.";"0"
"ahh well i'll see your target_simulator and raise you a board_uses_generic_audio : which does nothing as where it was used is commented outitseems. seeing as random makefile cleanup seems to be my current calling i shall no doubt take a look. we are also only a couple of commits away from killing libunz too.";"0"
"ssh_execute looks like useless. can we remove it";"0"
"i completely agree that mocks are very useful, butthey should be used with care. if we mock each call that method does and then check that mocks were called - such tests are useless imo. please see tests that were removed in this patch - i was trying to update them to actually catch the bug till i understood that they do not bring any value, are hard to understand and maintain. there was a unit test for this exact case: test_dvr_deletens_if_no_ports_delete_admin_routers which wassupposed to catch the regression butitdid not - that is why i call it evil.";"1"
"this is just silly, we have urlencode for this";"1"
"we need a 64bit nonce so that you are guaranteed to have a 2 64 large integer here, you do not want implementations to not care what they put in here and end up with ridiculously small values. this is a security api and need to clearly define what is needed.";"0"
"i am assuming you want ""$ element_name to appear in the help text, so $ here so bash does not try to evaluate it.";"0"
"just to set level to warning for requests lib. it prints garbage withoutit";"0"
"ck";"1"
"oh damni did not realize we made this same mistake in icehouse. i do not think we should bother introducing new apis for something that is already been released though. there is not enough benefit. undo this block of changes";"1"
"what the heck, lol.";"1"
"useless, please remove.";"0"
"is this intentionally after line 108 i would have expected that we'd unfreeze to allow regular termination. or is there a good reason to immediately force-kill renderers after thawing them";"0"
"sigh... i clearly suckat this. you are right. i like your version way better.";"1"
"let us use disable_hw_decode_acceleration_browser_args or disable_accelerated_video_decode_browser_args.";"0"
"deploy=test_importer";"0"
"that is memset, memcpy is creatememcpy value *dst, value *src, value *size, unsigned align, bool isvolatile=false, mdnode *tbaatag=nullptr, mdnode *tbaastructtag=nullptr, mdnode *scopetag=nullptr, mdnode *noaliastag=nullptr";"0"
"drive by: this should be an std::unique_ptr. it is being leaked currently.";"0"
"only one or the other can be executed. ne and eq can not both be true.";"0"
"consts.network_notation.ip_ranges";"0"
"on 2008/12/05 02:42:41, jaikumar ganesh wrote: > dbg should be false to avoid log spew done.";"0"
"nonsensical initial .*: these regexp are not anchored by egrep or else the final $ would have been nonsensical .";"0"
"maybe make all the keys lowercased";"0"
"do not we still want a todo this is still pretty gross, with a non-const std::string.";"0"
"this is useless now. i posted a patch to remove it. given that patches are not actually in mainline, it is possible heiko will merge my patch into his. it also sounds like this patch is not currently urgent given the comment in the other patch that you think edp already has the right default...";"0"
"ok, i'll do something ugly to let this passthen de-ugly on the next patch.";"0"
"i wouldn't put that comment there... you'll just curse yourself and it will most certainly happen assoon as you documentitlike that :";"0"
"never use complex types / instance as a default values. because some day you can shitbricks during debug. e.g. def test lst= : lst.append 1 print lst try to call it couple of times";"1"
"you should be bold and kill the other barbaric occurrences of 'zip' in all caps, like the one on this line.";"0"
"can you chk if we have any negative tests with ttl = 0 iirc we dont have any, but in case we do, can you remove them";"0"
"done. same thing, the whole function is useless now.";"0"
"oops, info wtfthis is not java.";"1"
"ahh, darn, this is not the same as the regular saml one, it has an extra parameter for sp endpoint.";"1"
"something like ""hmac_init"" should probably be less likely to disappear in the future.";"0"
"do not break my cls which have been sitting unreviewed because somebody has been slacking *hint*. const bt_bdaddr_t please.";"0"
"> you are following existing style, but existing style sucks i agree with you on both counts, but at the same time, that is not a battle i'd like to fight with upstream as part of *this* commit. a masscleanup of the error handling to use err or similar would be nice, but not in this commit. as for the uniqueness of the error message, between the error message and the filename, the message should be identifiable, and in any case the error will be identifiable. in addition, an error other than enoent here seems highly unlikely. would you consider accepting this patch as-is, please";"1"
"this is silly. you are making two separate tables for exynos5 and exynos5420 butthen always using them both at the same time.";"0"
"what you really do is abort sys.exit . you may change this to: failed to resize stateful partition because new size %dm is out of range %dm %dm . abort.";"0"
"remove the to_visit = above, and just set with list here.";"0"
"missing braces also, you'll be pringing the same dump twice.";"0"
"perhaps we should restorecon ""/dev/__kmsg__"" ; in init. we also have similar issues with /dev/__null__ created by init and inherited by fsck, toolbox mkswap , healthd, ueventd. that would require both a file_contexts entry and a restorecon call after policy load.";"0"
"ugly. would it be thread safe or maybe we do not care about threading";"1"
"remove the else if not path: path = find_library 'ramcloud'";"0"
"this change looks scary but all i did was indent. i do not know why git is dumb.";"1"
"no it will *not* be launched in the context of stack.sh. before calling this script . ./devstack/openrc admin admin will be called. please have look";"0"
"hmm. would it be more clear if we renamed these decorators async_passthru and sync_passthru";"0"
"nope, just me stupid.";"0"
"this will never fire because then we'd timeout above. register an onscroll handler that rejects this promise instead.";"0"
"honestly, i am happy to remove is_parent. i do not care much. the only value it provides is an earlier failure to an end user. withoutitcreating the subport later would just fail instead. i'll drop it from the spec and see who gets upset. :-";"0"
"dose you need to add .strip ' n'";"0"
"nit: you should either group these or there should be an extra blank line here.";"0"
"arse good job one of us can read...";"1"
"whats the need to remove these directly. we are already removing the row containing it below, $doc.remove , which would automatically remove all its child.";"0"
"hah. yeah, i asked because i knew from previous disappointing experiences that libc's time-related functions are garbage. :-p";"1"
"replace this with clean up prop_reg_, and kill ""setpropprovider "", too";"0"
"we should be using our official git mirror, git.openstgack.org.";"0"
"i'll kill this ternary operator and do this correctly with an if.";"0"
"i think these below two methods should be some utils calls not the baseclassfor datasourcedrivers";"0"
"you should never set invalid capture format in the first place.";"0"
"the loop was this ugly already before, so not your fault, but while we are rewriting this piece of code, can we please make it less k r c-style and more c++-11 it is 2016 after all, not 1995";"0"
"you should backport 1 separately.";"0"
"do not you get the same problem with potential ""refs/branch-heads/foo/bar"" where ""bar"" may or may not be part of ref";"0"
"due to we did not validate with keystone and we haven't user_name in target, os-username is useless.";"0"
"move browser_view into this block or inline getbrowserviewforbrowser ... call";"0"
"not defined, should be pick $::fuel_settings 'ldap' 'ca_chain' , false";"0"
"can we get rid of this ugly files/ convention too while we are here we've fixed it in most other places too.";"0"
"the _verify_query_segregation 's job done by calling _validate_query -> _verify_query_segregation is either useless or duplicated here, with the jobs done by _sanitize_query here. how about unify _verify_query_segregation and _sanitize_query into one single function";"0"
"sorry that wasstupid :/";"0"
"useless now. is 'instance' always here";"0"
"you do not want to close sock ; close sock6 ; to avoid leaking on the error paths not obvious to me what checking the close result helps with, either.";"0"
"would it how about inlining we'd need to run dead/redundant phi elimination after inlining on the whole graph, which we do not do.";"0"
"git keeps track of it :- i agree with david; remove unused code instead of commenting it out. i've spent too much time staring at commented-out code wondering why it was commented out and wondering if it should not be.";"0"
"kill this";"0"
"da f*** is this ! !";"1"
"why do we still support apply - maybe talk to meade about pulling this code outitis not specced";"0"
"nice to output both a.ppid and b.pid.";"0"
"make sense. policy on subattributes are evil and should be removed... well actually subattributes are not great either ;";"1"
"no, eventdispatcherfortest instantiates a messageloop. i can pull the eventdispatcher shenanigans out of the uprev cl and stick them in here as well.";"0"
"nonnul create a dummy runnablehook";"0"
"if you are just going to do .* there, use the d command instead sed -i -e '/ usepam /d' ""${d}""/etc/ssh/sshd_config die";"0"
"this init needs to be removed.";"0"
"i feel like it'd be better to just remove these two lines and do what i suggest below.";"0"
"node_uid should be nullable, because null is virtual sync node id.";"0"
"aha, stupid me : ! updated the patch to use the structure directly. thanks";"0"
"why changing the boolean condition here is self._protocol != 'fc' valid";"0"
"stupid question.. dm-dnsmasq is not a thing right, you meant bm-dnsmasq...";"0"
"l169-l178 are actually 'expected_params = dict params ',";"0"
"it is better to add a message here, such asself.assertfalse hit_limit, ""failed: hit quota limit !""";"0"
"damn.i've made that mistake before...";"1"
"could you remove this comment while you are here it is nonsense given line 1115, and only makes code harder to understand.";"0"
"i think this line should be removed";"0"
"onassetsloadedcallback is a oncecallback. it gets consumed by the function like an std::unique_ptr. so, it needs to be mutable.";"0"
"this is not testing anything -- a mocked object mock_client_init can be called in arbitrary ways and will passit is not actually running the object's code. what you want to do is: params = { # param list here } with mock.patch.object client.client, ""__init__"" as mock_client_init: mock_client_init.return_value = none neutron.neutronapi .get_client my_context mock_client_init.assertcalledoncewith params";"0"
"darn it";"1"
"abort after exec, si older jack script with server mode to false";"0"
"v is not suitable as we need lists of values. arraylist<v> can not be created in java and findbugs tells me than in arraylist<v> values = arraylist<v> new object size the cast is incorrect. in general java's generics are crapthey are just a compilation time check and arrays support is broken because of inheritance of types.";"1"
"ugh, and again, gerrit screwsup. this comment is about the line below dir_pfx .";"1"
"again, pull tmp out of this scope and you do not need the strdup i think";"0"
"that is _still_ an accident waiting to happen. and really ugly verbose code. this kind of thing is what asprintf or, since this is actually c++ and you need to string a bunch of these together anyway, android::base::stringprintf and std::string operator+= is for. just say no to fixed-length buffers...";"0"
"if ap.get_configuration_success != chaos_constants.config_success:";"0"
"extra "";"" at end which our checkers do not like.";"0"
"you are not indenting the => ! this is terrible !";"1"
"nonnull*3";"0"
"should probably put ' die' after these";"0"
".fb_fillrect = drm_fb_helper_cfb_fillrect, .fb_copyarea = drm_fb_helper_cfb_copyarea, .fb_imageblit = drm_fb_helper_cfb_imageblit,";"0"
"if it is actually useless, it is fine by me.";"0"
"pr_err should _not_ have kern_err in the string, superfluous!";"0"
"if you use callbacks as the is_running_ i am fine with thatitmight be cleaner to add here: dcheck callback << ""null callback specified"";";"0"
"please, use for retries.";"0"
"move this to the die rather thanalso calling eerror die ""more than one instance of lcov-html"" ""found! the instances are: ${lcov_dir}"" "".......""";"0"
"yeah, if you move pid_ = pid; to this line and use pid instead of pid_ in your ptrace call above, you can get rid of attached_ entirely.";"0"
"tao, clone_replica should be deleted, a left over from the previous implementation - it was replaced by create_replica_test_volume";"0"
"if you are adding an addcleanup to handle the unrescue then you should remove this block.";"0"
"according to our latest meeting, which we did not decide on any specific approach, we talked about having something like ""huawei_qos=true, huawei_min_iops=10000, netapp_qos=false"" etc. what you are proposing in this spec is the standard extra specs that would be the same for all vendors, i am not sure if i agree on this approach yet.";"0"
"please remove tengs and tbarzic while you are in here.";"0"
"oops, now you just need to use your mockcpuinforeader here too.";"0"
"edit: okay, ignore that comment, i am an idiot. ; i somehow thought this was a file name. guess you'll need some platform-specific translation logic then since board_id_support means you have to define a board_id function which must return an integer , so i guess that answers my question about generalizing that function as well.";"0"
"what about loop devices, removable devices such as cdroms they will also be in a list, but do we really want them for installing os i'd rather prefer to use the same mechanism as it is in ohai. ohai parses /sys/block directory, and we can get there a plenty of useful parameters. i want to see if block device is removable or not, if device wr or ro, model name, wwn, id_path, id_bus. all those parameters are needed for advanced deployment. for example, i want root fs to be located on a slow shitdisk, but i want swap or database partitions to be located on ssd. maybe we do not need to do this in this particular commit, but we certainly need to have this in our plans.";"1"
"well, if someone is commenting out a probe, they could also comment out the common data element... but, as i was implying in the above comment, this was just a dirty hack. my aim was to try to make dependencies explicit as opposed to the hidden dependency chain cause by the memorize calls . will see what i can do. btw -- is it safe to load ec and main fw in parallel how about both in parallel with touchpad";"0"
"i can imagine the case when user uses re-provision of the node -> start deploy -> stop deploy. after this sequence of actions, current state will be messed to a degree when it is easier to destroy your cluster rather than try to deploy it.";"0"
"can not we just: expandedforeachtype = llvm::functiontype::get voidty, { rsexpandkerneldriverinfopfxptrty, int32ty, int32ty, int32ty }, false ; similarly for expandedreducetype below.";"0"
"please remove white spaces.";"0"
"while using paper-toast significantly simplifies this, i am currently failing to right adjust the undo button properly as mandated by the md spec: details: my css fu is failing me here, so any help is appreciated :";"0"
"ack. why the heck is not this enforced by git cl format/a linter !";"1"
"they are now the same and i've changed the name to reflect that.";"0"
"the entire new code needs only to be executed in the if brecord condition.";"0"
"i suppose we should not even build bubble_sync_promo_view_util.h and bubble_sync_promo_view_util.cc on chromeos.";"0"
"should be storerefindexed if you have a ref.";"0"
"rcomp_targets = strenghtenedrcomptarget;";"0"
"this is still lvm_iscsi, also below. please change.";"0"
"i was trying to match the shells behavior, but if you think that this stuff should be fatal which makes sense i can have it abort.";"0"
"you can just break if windows i ->dirty, no need to go to the end of the list.";"0"
"i missed this one: you also add the flag to $ target_2nd_arch_var_prefix target_global_ldflags for multilib build. on the other hand you can add the flag separately to target_global_ldflags in all the build/core/combon/target_linux-*.mk.";"0"
"similar to create_recordset, could you do a ""recordset = self._get_priority recordset "" here instead of calling self.get_recordset";"0"
"i read the comment as ""o fucknot again"" :-p";"1"
"for z_size_t you should need only zconf.h.";"0"
"this comment needs to be removed.";"0"
"remove. ""let the shellscript and mimo updater check the pid.""";"0"
"hack hack hack! you should add a dcheck that the third one is not identical, because sooner or later somebody will turn triples into a marker too.";"0"
"tolowercase locale.us to avoid the turkish i problem";"0"
"urk. wow. this is terrible. you unearthed quite a wart here -";"1"
"this really feels like it should be folded into check_flags_only* instead.";"0"
"damnenglish! :";"1"
"this is monochrome_public_common_apk_or_module_tmpl.";"0"
"yes, i make a such stupid mistake. thanks.";"0"
"no, it seems to just complete without doing anything. once again, i am not sure if it should really be this tool's job to check for validity. i'd see it as a very dumb, low-level mmc command generator. callers can run blockprotect read themselves if they want to figure out whether the action they are taking makes sense.";"0"
"need to quantify excessive. perhaps >42 metric shite tons";"1"
"/* top_level_url */";"0"
"ok, if this is just for shill client side , then you need to use only dbusdaemon, and not dbusservicedaemon";"0"
"delete states_ i .fingers; also, it is okay to delete null, so you can remove the 'if' one line above";"0"
"perhaps add a dummy method for _assigned_alarms in this classand optionally use abc to explicit what must be implemented to make a new kind of alarmservice.";"0"
"you are leaking memory - please use a std::unique_ptr.";"0"
"adb and fastboot both have this logic in their android.mk files";"0"
"i agree using regexes is ugly butthis is how the response verification works. i will extract them as variables.";"1"
"i am assuming these are all dummy placeholders for now. file bug s and leave todos to flesh them all out properly.";"0"
"nit: end with a colon :";"0"
"how about a check in the ctor instead having wifi::start fail silently would suck";"1"
"subnet = subnet or self.subnet";"0"
"this is most likely a crappygenerator, as well. can we just use distribution getrandomnumber below";"1"
"good point, so shamed for this stupid error. i remember i have changed to os_compute_api, not sure why it still here. for i rebase the patch to the master. the git tells me the conflict, some former commit has removed v3, which means i should not also v3.";"0"
"> our utils.execute totally ignores run_as_root kwarg i guess the correct solution is to fix utils.execute rather than to cripple its callers.";"0"
"prefer using kmaxvalue = store_closed as the last value, and use the 2 argument uma_histogram_enumeration go/histograms-howto#enum-histograms";"0"
"can we leave the check, just weaken it quick_code != nullptr hasvmap it is not totally gratuitous, as the jni compiler does not push a vmap...";"0"
"sigh. i find it funny that gerrit is too lazy to do this, and yet is non-lazy enough that the ""change merged"" post still gets put on all bugs when written like this.";"0"
"you can just use std::numeric_limits<t>::min and max instead of getintlimit, they are constexpr in c++11";"0"
"it is 0x8000 * 0x8000, so this is special-casing short_min*short_min. the multiply function in basic_op.h does it that way too.";"0"
"they should be equivalent in this case. butthe styleguide says to prefer our wtfversions.";"0"
"that is because pipelinemanager used to get a publisher_manager as arg, and created transformermanager itself. now both have to be created before and passed as arg. : i've reorganized this code a bit, and remove the useless ext_name arg.";"0"
"getarea is just w*h not w*h*kbytesperpixel. i would suggest using resource::maybesizeinbytes with a uint64_t size_in_bytes to get the size in bytes and check for overflow at the same time.";"0"
"done. unfortunately a runloop does not allow multiple run calls, which is why having a naked runloop member does not really work here. i would like to be able to call waitforresult multiple times on the same testcallback instance. this requires wrapping the runloop in either a std::unique_ptr or base::optional to be able to replace it with a new instance.";"0"
"use adata.ncount instead.";"0"
"you should probably either handle view == null or add a dcheck";"0"
"convert all subprocess to cros_build_lib.runcommand";"0"
"why are you preserving the noop jobs here they should be removed.";"0"
"the presubmit failed here due to type mismathc, you probably want std::min<uint64_t> max_space_size, 64";"0"
"done - changed to expect list and look for this error exactly before killing.";"0"
"should justcheck self._modprobed is false, or raise otherwise.";"0"
"another white-space only line two more below .";"0"
"this is not ideal butithink a good tradeoff. it allows us to keep the current semantics of haspendingactivity . in order to get rid of this trait we would need to model executioncontext to have a regular reference to asw and then explicitly remove that reference once haspendingactivity would go to false. that is maybe doable but should be done separately.";"0"
"this is annoying. how about just locking the cha lock eagerly and collecting the dead pointers when iterating over th emethod_code_map_";"0"
"another potential bug. nonsense never match";"0"
"i think you have several failure cases that are not covered: * bad url * failure to decode * other";"0"
"if use spec_set=image_cache.imagecache, then it does not know about the master_dir attribute. and the test fails.";"0"
"they are stupid now, butthey are valuable when someone else or me later changes code. for example, someone might want to ""optimize"" resolveversion rpc by removing instance presence check in case the version is given as hex digest already assuming this check will be done in getinstanceurl anyway . this will introduce a security bug in /client which these stupid tests would catch. except i forgot to add this particular test here >_< i've added it to cl 1105622 that implements legacy variant of this check . added it now.";"1"
"it is better to call cls.isolated_creds.get_alt_creds to keep consistency with cls.isolated_creds.is_multitenant .";"0"
"this call looks like useless. emm....i think instance already to be nova object. and there is same convert in the get_image_from_system_metadata.";"0"
"why couldn't your abort address be 1 for an ldrb, say.";"0"
"recordparsedarg # imo also, see my comments in cbuildbot; this does not belong here the only user of it is cbuildbot's custom derivatives after all; thus it should be layered there, or move all of the api crapdown into here .";"1"
"why can not you include linux/binder.h instead of duplicating it";"0"
"gtest should go below base.";"0"
"by ""directly use"" i mean that the modules which used quantum.agent.dhcp_agent.dhcppluginapi can now use quantum.api.rpc.pluginnotifiers.plugin_rpc_api.dhcppluginapi.";"0"
"you should do this atomically saving a backup of existing astute.yaml: 1. dump new yaml to self.path + "".new"" , remove it on error 2. copy self.path, self.path + "".old"" 3. move self.path + "".new"", self.path";"0"
"nit: nuke the white space";"1"
"what a terrible but accurate thought. i suppose we should collect the callbacks and run them all afterward.";"1"
"if you are doing comparisons that are not == or !=, you are insane anyway :-";"1"
"i am only stupid half the time :p";"0"
"minor nit, fix the useless param name while you are in this chunk of code. ""run"", ""canrun"", etc. ""b"" is like having a road sign in front of a dangerous curve that says ""this is a road sign"".";"0"
"yes, i would be nice to get rid of the setstateunsafe pattern. the issue is that if you have suspendall in a suspended thread state and use a scopedobjectaccess, it will deadlock. the setstateunsafe to runnable is a hack to get around this.";"0"
"again, a little bit of prose in the commit description would be nice. generally anything other than super trivial changes e.g. the one where you removed the useless variable should have some description in the commit message.";"0"
"nit: do not need braces if the body and the for state itself are both one liners";"0"
"annotate with notnull.";"0"
"what a terrible failure...";"0"
"no, unions do not automatically keep track of which member is in use and needs to be destroyed.";"0"
"these all sound like they should be configurable/set in wf_config.py";"0"
"yes, you are right. damn";"1"
"remove all of this audio init, down to end of function.";"0"
"sorry, that was just a smart asscomment.";"1"
"as we discussed offline, you are working at a runtime system, you should be prepared to get your hands dirty : - streams do not support exclusive locking - streams can not be constructed from fds with standard libraries . - your ""newline"" interpretation is wrong. ""newline"" is merely a separator. you'll need to code similar stuff over streams as well.";"0"
"this part of code is then useless.";"0"
"what is this for why do you need to touch selinuxneverallowtestgen.py";"0"
"that is yucky. mind adding a dcheck for the name, maybe";"1"
"i forgot to delete it. yes. i admititi am dumb.";"0"
"woops, silly me -- there are *four* fields. i forgot to list ""instance_info""!";"0"
"pedantic nititis stupid, but we try to be consistent today about using ""infobar"" instead of ""infobar"" in camel-case contexts. i would happily review a change that fixed this everywhere, but i kinda do not want to introduce piecemeal inconsistency.";"0"
"remove the old, dead code.";"0"
"implement this as an 'equal' method of inductioninfo";"0"
"you are missing a current_id = id;";"0"
"oops, my silly git management with several clones of this meant that i completely overwrote the changes i made thanks to xiaoqian. it should be all good again now.";"0"
"this is dumb. just have two possible new names and switch to another one if it is already set to the default one.";"1"
"yea, i'll shoot for l1.";"0"
"killing the dbus ones seems to work on brillo at least . i can confirm experimentally that libutils is needed though.";"0"
"rv is unassigned.";"0"
"to use process.stdout and stderr you have to specify stdout=self.dut.pipe, stderr=self.dut.pipe";"0"
"in my codebase atomic-inline.h does nothing than including atomic.h. should we just include atomic.h instead and even remove atomic-inline.h";"0"
"flash_ec, die";"0"
"why is ig_filter = none in l485 but ""none"" string below in l487 is ig.get 'initiatorgroup' a string";"0"
"damnyes i forgot that i am no longer serializing the original androidproject and the reproxied version will always incorrectly succeed in deserialize. i've added the version check not exactly sure i am checking the right thing tho";"1"
"this matches the ui mocks.";"0"
"please discuss this through with maria. i suspect you'd like to propagate even empty sections to upper layers and let the server decide.";"0"
"ah, this is why your hack only runs for usid = 0";"0"
"/data/anr should not be writable to the shelluser. known security hole.";"0"
"these eqlx_* are vendor specific. promoting this to the base does not look good. is there another way";"0"
"heck yeah. : i could also call this attribute ""dry_run"", instead. i only did not because it is explicitly replacing archvingstage.debug, which was called, obviously, ""debug"".";"0"
"i think ubsan works for static executables, but we do not support ubsan in sanitize_target. sgtm";"0"
"these divs are unnecessary since li's are block-level elements. bump the classattributes onto the li's and delete the divs.";"0"
"""sending sigterm to service '%s' pid %d ..."" to match other logging. having both the name and the pid is helpful when trying to work out what happened after the fact.";"0"
"yucki know it is not your code originally, but could we go with a simple for int ... loop";"1"
"nuage_vif_id = port_mapping.get 'nuage_vif_id', none";"0"
"is notitsimpler to use self.vpnservice with do_delete=false and catch webob.exc.httpclienterror";"0"
"kirill, you are wrong, this command kills only parent process, instead of killing all processes, like pkill does.";"0"
"if expiration_secs == 0, this will fail. do not you mean hasattr";"0"
"do not we want to remove this, if we are going to disable gen2 also, i think either make this a dt quirk flag, or we kill gen2 entirely upstream.";"0"
"damni thought i removed those references. good catch to change the name of the file.";"1"
"okay, sgtm then. it sounds like the fact that gcms::listaccount triggers a re-fetch is useless then because if we know the cached state is stale, a refresh should already have been triggered";"0"
"this is pretty ugly. maybe we could instead identify slcg clocks by a name prefix instead e.g. all slcg clocks are named ""slcg_*"".";"1"
"why remove the notrace not sure if you've ever looked at how the output looks withoutitit is horribly confusing and hides the actual error message above a screen full of crap";"1"
"maybe a dumb question and i am totally missing something here, is not this code just testing the test code/fake driver from up above in this file couldn't these unit test just assert that the proxy was called with the right params and return value and thats it ie validating behavior of the driver code and not test code";"0"
"i hate the new gerrit";"1"
"you should probably catch these as they just get wrapped in the wrapper method execute_rpc with a clierror that collects the exception message ... though i do not feel strongly about this butitseems like you should either not catch any exceptions and raise exceptions instead of -1 or catch them all and translate them into -1's";"0"
"with mocks you would have to add these return values which is what the fakes are doing..";"0"
"holy crapyes, must've been a typo when changing to runcommand. thx";"1"
"this is lame copy-pasta. left a comment, butitis not for this cl.";"1"
"thanks, actually i should remove them because locked is not returned through api";"0"
"i do not think it is any clearer to draw the line that the two have to be coupled - although they are in this storage policy. coverage + eventlet sucks the only way i've found to know if a line is covered or not is to stick a nameerror in there and see if a test will hititthose lines are definitely covered.";"1"
"destroy chroot environment. implies killing of all processes which are running inside this chroot, unmounting of all necessary mountpoints and then finally, removing the chroot directory.";"0"
"{!androidappsinfo}";"0"
"nitpick: i guess this should be errnovalue instead of errdivisionbyzero. maybe something to follow-up on master.";"0"
"i do not want to mention gc in here.. this api should not be here anyway, if you are using it and you are an idiot you deserve to be burnt.";"1"
"for commands, you'll want to put them in sections like: ''' $ make '''";"0"
"buggerneed admin creds to validate a trust";"1"
"i am a suckerfor consistency. i'll remove it.";"1"
"this, or: printstream fos = new printstream new fileoutputstream result ; fileinputstream fis = new fileinputstream flagsfile ; fos.print ""-basedirectory "" + basedirectory.getabsolutepath + "" "" new bytestreamsuckerfis, fos, /* tobeclose = */ false .suck; fos.print options ; fos.close ;";"0"
"looks like we have this already, in libpayload's strings.h. do not ask me why it is called strings, though. also, it seems to be a shittyimplementation for something that should probably just use __builtin_ffs , butthat should be fixed there and not here.";"1"
"rst improvements on #3... 3. run the tests using:: ./run_tests.sh -n test_sql_upgrade .. warning:: your database will be wiped.";"0"
"this should not be a h233 error, python will throw its own error for this. there is no need for us to handle this case in hacking";"0"
"please move the quotes to the configfile, so that is as valid as possible. this way only the litteral values need to be replaced. which is cleaner :";"0"
"i refactored the crapout of this file as i was going. butthere might be a few more drops of re-use i can squeeze out.";"1"
"why do not you use utils.add_boolean_argument";"0"
"hm, darn. well, let us leave it like this for now; it might be possible to somehow improve this later.";"1"
"doh, i am dumb. : done.";"0"
"rename to just ""dump"" there is no recording going on.";"0"
"you should include this: stop on stopping system-services";"0"
"useless untested perf nit opinion basically - we could actually do if if 'nova_object.name' in db_obj since it is a string which might be slightly better than doing full json loads twice";"0"
"yes, i found outithappens, and it sucksthe templates need to change to allow project-level files that do not change when adding modules. gradle.properties and local.properties are the use case.";"1"
"nope, see the comment we have to force callers to use crossthreadbind with crossthreadclosure.";"0"
"use the typedef you created in the .h mockentryiter";"0"
"#include <stdbool.h> bool*";"0"
"oh, yes, adding the include fixed it. guess i was getting it confused with a linker error. thanks!";"0"
"egor, i think the registry container is not on master node. it is on each minion/slave node.";"0"
"sgtm. since this is tunable internally, consider exposing it as a parameter in the control file with a reasonable constant as the default .";"0"
"this matches all the other init* methods in this class";"0"
"it looks like 'git clone' just recursively hardlinks everything under .git/objects/";"0"
"""--force"" makes sense in a command like cros_mark_asstable -p foo/bar commit --force but does not make much sense if you say cros_mark_asstable --all commit --force this becomes evident by the fact that your boolean in the lib is ""allow_blacklisted"" and not ""force"". i'd prefer to not permit the option ""--all"" and ""--force"" in the same command as that is something you certainly do not want. you should always specify -p if you use ""--force""";"0"
"drop the die ... eapi=4 does not need it w/emake";"0"
"o_o dafuq";"1"
"int index_1 = vector1 <= 0 vector1 == 0 1 : 0 : 2;";"0"
"damnwill get rid of this.";"1"
"ah-ha, now i understand. i suckat rst... apparently.";"1"
"i guess ,that next_version=none also not suitable here";"0"
"suggestion: give an example of what a typical aaptoptions block would be. i'd say some pseudo decorated-bnf in the javadoc: aaptoptions { nocompress ""str1"" , ""strn"" * # optional ignoreassets ""regexp"" # optional }";"0"
"this line is useless even after we change 'credential' to 'params' because the super call above has done this.";"0"
"ugh, damnit. this is awful, i need to do another, this was a result of an automerge.";"1"
"maybe tell pylint to shut up";"1"
"we run yaml.dump probed_results twice. consider saving it to probed_results_yaml.";"0"
"ldflags should always be before the objects and libs. you should also add cflags while you are here. $ cc $ cflags $ ldflags -o $ $ obj-cm $ libs";"0"
"i do not know - this looks a bit repetitive and ugly tbh. can not we do this with a dict or something";"1"
"i'd suggest we call this self.module_registry";"0"
"because i am dumb =/. will do.";"0"
"yes, i do not need a fk to any other tables.";"0"
"this is gross, is not there a thread safe way to do this like setting a static boolean guarded by a lock and waiting on the gate while it is false in the worker thread .";"0"
"this can be inferred on the fly by comparing previous_interpolation_quality_ with interpolation_quality/context.imageinterpolationquality , but maybe it is clearer this way.";"0"
"nit: for the h->dead case, errno == etimedout probably not that critical since the h->dead case is when the device is being kicked anyway.";"0"
"why use this will not the socket be closed by the garbage collector and closed assoon as it goes out of scope";"0"
"build.* slaves should not be needed for new installs.";"0"
"like this: the diff is hilighted in red/green so not preserved in the paste . the diffing library we use sucks";"1"
"this pattern appears common enough thatitshould have a helper function";"0"
"_make_engine can go away now";"0"
"can you kill the leading spaces here";"0"
"this now throws npe on null, not iae";"0"
"nit: the previous formatting for these responses seems more readable.";"0"
"is it possible to have races when this runs on a thread different from the thread where other methods run";"0"
"sorry if i am not being clear. i am suggesting that you change activatetabat to take enough context so that tabstripmodel can entirely control calling to the latency-recorder. what is the user_gesture argument should become an enum: tabstripmodel::activatetabsource { kmouse, ktouch, kotherusergesture, knongesture, }; tabstripmodel::activatetabsource source = kotherusergesture; if event.type == ui::et_mouse_pressed source = kmouse; ... model_->activatetabat model_index, source ; if you do this, then i do not think you need to expose the latency recorder at all.";"0"
"the neutron server is monkey-patched for all the modules.";"0"
"use canuse die here... this should never happen and indicates a bug.";"0"
"the --product option does not seem to be used by this script. probably a left-over of experimentation";"0"
"i'd call this addreference to stay in the same heap nomenclature space.";"0"
"please change this to f383bd2973c58c5272504603e4f9dddd55c5bb68 ... gerrit change ids are useless in git log messages.";"0"
"agreed. i think that the algorithm should be: 1. record metadata dirty state before doing anything 2. remove the key from instance.metadata 3. if metadata was not dirty before, it should not be dirty after this, since the changes have been synced. if it was, then it was not because of this and it should remain dirty. thoughts";"0"
"ternaries are code of the devil, haven't you heard";"1"
"do you need it given setenabled false below or maybe you do not need setenabled";"0"
"are these ""emtpy"" spaces part of the patch or part of the original source";"0"
"uncuddle these dicts too";"0"
"why not just 'bash -i -c ""$*""' also, no {} for $ .";"0"
"ah, that makes sense. headless not having a delegate kill my proposal...";"0"
"we have more ugly hacks in editing/commands/... t_t";"1"
"more u-boot crap";"1"
"here the initial newline should also be dropped in addition to the ###.";"0"
"useless.";"1"
"again droping the ignorecase property";"0"
"no longer a draft, methings.";"0"
"your host has not enough memory.";"0"
"may have been aborted";"0"
"cros_build_lib.die 'unknown value for ""cache_crx"" %s for %s', cache_crx, ids";"0"
"hmm, that seems nasty, but i guess we can not avoid that : maybe just make this script copy them into a location your script can pick up";"1"
"recipe tests to me are mostly garbage noisy garbage! and i only add them to make the presubmit shut up. so i do not really have any reason to keep any of this code around. prasad, if you can submit this code without this test, feel free to delete it. otherwise we can circle back and cut tests and redundant recipe code in a follow-up cl.";"1"
"i always hate it when the kernel breaks the user abi, is this intentional / safe";"0"
"right. if you always confirm that queues are unstuck on channel 6 and always send your csa from channel 11, does that not do what you want imagine: def _connect_to_ap self, channel : self._router_conf.channel = channel self.context.configure self._router_conf assoc_params = xmlrpc_datatypes.associationparameters assoc_params.ssid = self.context.router.get_ssid assoc_params.autoconnect = false self.context.client.shill.configure_wifi_service assoc_params self.context.assert_connect_wifi assoc_params";"0"
"it never could be an empty string, but nevertheless this was crappy";"1"
"what about endianness here it looks like all other methods explicitly extract individual bytes from a value";"0"
"perhaps migratable_credit_cards_ should be a std::set";"0"
"these various ideas all seem to have a built in race condition; i am not sure which idea is least likely to cause a problem. for example, if a query for cpu on one of the created servers is done before and after the upgrade, odds are that before the upgrade there will be no results because the pollster has not run. however, that is not _guaranteed_. similarly, if a query is done for 'instance' it is unlikely, but not impossible, that some data after the upgrade will come from notifications and some from polling. therefore i need the answer to two questions: * how can i form a query that says ""only give me polling data for meter x"" * how can i form a query that says ""only give me results after the upgrade"" is there metadata that will allow filters on that for the sake on concision and quick resolution pretend a that i am an idiot b the query docs suck";"1"
"this syntax does not work with python 2.6 see commit 9f8955d270";"0"
"deduplicate writer.enqueue by writing network.result regardless of whether it is the winner or loser.";"0"
"no action required code like this makes lisp's brackets look inviting. one would hope that dicts-as-objects are going to die in a fire someday soon, yes";"0"
"there is not big difference in code for on/off, and we have already these tests in test_manager:";"0"
"stats_ != nullptr";"0"
"heh. stupid split header files; we should all switch to java so the implementation is right there. :-p but, yeah. i felt like i need to define ""recently"" here. i thought about just passing in the delay, butitd be weird to do that when the method already has access to the members and can decide for itself. i've shortened it now.";"1"
"also kglobalvaluenumbering and kgvndeadcodeelimination.";"0"
"complain very loudly if this happens. this file is machine generated and lives on a read-only partition, so if it is malformed then something terrible has happened.";"0"
"this was crappyautomatic rename, i changed it back";"1"
"your call, but since this is not shared code, i'd probably nuke this and just use std::string everywhere.";"1"
"it seems a bit silly to go from a stringpiece to a std::string to a webstring to a wtfstring. can we skip some of those conversions i think you should just be able to create a wtfstring directly passing in data+size from the string piece...";"1"
"please remove all of the ==true and ==false expressions. this can just be if emn != null emn.decode wbxml {...";"0"
"there will be a local dirty bit flagged for the active program. did you try calling resume explicitly instead";"0"
"do not do this here. we should initialize the vibrator from the constructor of the vibrator service instead. add a vibratorinit method to do that and call it from the vibratorservice constructor.";"0"
"reseting the send_pipe_handle_ does not trigger the onclose event, or cause the invocation of onreadable . reseting the socket pointer causes a close event per documentation of tcp_socket.mojom: ""consumer can close the socket by destroying the interface pointer.""";"0"
"can we also dump the state for the process if it is marked as running in we had status attestationd == 'running', butthe process was actually in the zombie state. similarly, if you check status cryptohomed there, while cryptohome was crash-looping you will see started, but next time you check, you get a new pid, as it is constantly respawned.";"0"
"should this also be an fk";"0"
"this should probbly be removed from here and use the rootwrapers since you are using this as root.";"0"
"!jdks.isempty";"0"
"# hack around decorators being applied before function is bound to class label_decorator = functools.partial add_label_detector, _label_functions, _detectable_labels";"0"
"probably worth noting that this is copied out of reimager and that we should kill both once the todo bug is addressed.";"0"
"a nasty ""red"" trailing space here...";"1"
"dedent this block to put outit";"0"
"damnthis conflicts with my change in progress :-";"1"
"unfortunately, no. prior to 1.7 django uses django.utils.datastructures.sorteddict for self.base_fields and self.fields.";"0"
"elliott: do you remember why we need to wait for threads to stop here daemons.stop already waits until all daemons are stopped by calling thread.join on all of them.";"0"
"i'll check this situation: looks like validation of this test was not executed before. with this patch it is executed and fails";"0"
"please initialize in the ctor. also, again, is_sync_feature_enabled";"0"
"exec clang++ "" $ """;"0"
"optionally could do image_metadata 'is_public' = image_metadata 'visiblity' == 'public'";"0"
"this merge conflict output needs to be removed.";"0"
"s/little endian/little-endian";"0"
"might as well just declare it as an int, then and in any case, this still allows for seemingly-silly values like 2**31. is the value further sanity-checked inside 'decodecbor'";"0"
"you might want to use unicode exc in case lazy translation is not being used.";"0"
"fake_nic_data = mock_get_nic_data_by_name.return_value";"0"
"i think you should probably explicitly say secondaryactions instead of secondaries.";"0"
"i am sorry, but can we not put logic into control files they should be assimple and stupid as possible.";"1"
"you should also run kernelcrashserver autotest";"0"
"this sucksi modified the file using the gerrit inline editor. not sure why the inline editor removes the last newline at the eof.";"1"
"this is a duplicate of an entry below. one of them should be removed.";"0"
"why the oustring oustring here * ousting* is a oustring already";"0"
"why do you convert dummy data to model/collection here should not we compare with 'clean' dummy json here";"0"
"should this be a webcontentsobserver the webcontents could die between calling getwebapplicationinfo and ondidgetwebapplicationinfo.";"0"
"nice did not know about that. i hate the <code> thing. javadoc should be a wiki-like syntax, not simplified html.";"0"
"please add an assert mlauncher != null at the top of this method";"0"
"seems that u can not use _delete_router to delete the router created by admin_clientitwill complain it does not find the router. that is why i use delete_router instead of the self._delete_router. thanks";"0"
"nit: name this testconfigurationwithnodimensions or just testwithconfiguration";"0"
"why on earth does a classcalled ""client logger"" have anything to do with packaging stuff and installing stuff on a device friggin' autotest...";"1"
"what are you executing off of rootfs via the shellcommandline if your userdebug/eng builds, just use su. shellexec su should cuase you to be in su domain which can do *almost* anything.";"0"
"fix this docstring";"0"
"it is super-ugly to mess with a 'booting' state in a function that sets the baudrate. also with the later clear_bit you overwrite the the value set during initialization/shutdown, which might not be intended and clearly is not easy to follow. i think it is preferable to make sure the flag is set when the function is called.";"1"
"fortesting should be camel case if anything for consistency with above.";"0"
"do not modify, but could be : try { new bytestreamsuckeris, os, true .suck; } finally { is.close ; // is != null or check before }";"1"
"!== null or !!rootdir";"0"
"hmm... this causes the ps_rdy to be sent as a sink. should it be in pd_state_src_swap_standby";"0"
"i still think your refactoring of the code should include splitting out that ugly ensure_pids_dir= argument from getter into a separate method.";"1"
"should this come first i worry about debugging failures caused by those nullptrs lurking if you call clock_gettime or gettimeofday before this.";"0"
"this is a good point. for some reason i was assuming thread pool would be global butthat does not seem correct. right now there is two thread pools per device which does not make sense. stupid question - whats the advantage of using newsinglethreadexecutor as opposed to just creating a thread for each request, since as you point out we already have logic in place to restrict to one active fetch at a time what do you think of trying to create a static/shared thread pool overkill";"0"
"should be keystone_user_role ""${neutron_config 'keystone' 'admin_user' } ${neutron_config 'keystone' 'admin_tenant' }"" -> exec 'get_service_tenant_id'";"0"
"yes, since it is browsing our overlord http index page. our index page always have the <html> tag. if it is a https server, urlopen will not fail, it'll just return garbage.";"0"
"i really think that destroying the interface should not depend on pid being found. what if interface was created but pid file was not written in that case it will hang there not cleaned up, will notit i know that is not your code, so you can ignore the comment.";"0"
"nit: initialize here, i.e., bool regular_read_on_ = false; also modify bool initialization_successful_ = false;";"0"
"wtfwe create one thing and we then have to go and individually delete what ever mistral decided to make does not seem very restful to me.";"1"
"with respect to moving the macro's into there, i could go either way. lets split them back out. with respect to devpts, and datafile, done.";"0"
"please kill the whitespace";"0"
"docstr is useless entirely redundant with function name";"0"
"because args is a tuple.";"0"
"man. the other two were dumb, butthis is actually insane.";"1"
"bad sym l247,248, 257";"0"
"your git client is mis-configured. normally, git will not reset the author without an explicit argument to do so. it will reset the committer but not the author which is appropriate.";"0"
"oh right, dammit.";"1"
"just to clarify - in the future gradlebuildfile may start calling parsers on other psi elements as well";"0"
"-z ${...} die ... also, add this to the func while you are here: $# -eq 0 die ""${funcname}: takes no arguments""";"0"
"allocating a new calendar object every time seems wasteful.";"0"
"should remove the with_debuggerand with_profiler here as well.";"0"
"again, bad rebase";"0"
"using data 0 was my first idea, but we'd either need to drop const from the parameter list and dirty the interface as elliott commented , or use a const_cast<>, which is pretty ugly. besides, we probably should not be making raw changes to a std::string in the first place. a std::vector<char> could have worked better here or wrapping the strdup with std::unique_ptr, but hopefully we'll get rid of this copying once and for all with";"0"
"is this really __iomem or is is just sram see:";"0"
"this file is hard to kill! :";"0"
"yucki dread to think how many people are using this.";"1"
"obj-$ config_compat_ion += compat_ion.o or get rid of config_compat_ion, and use ifdef config_compat around this line or get rid of compat_ion.c completely, and put a single #ifdef config_compat around compat_ion_ioctl inside ion.c";"0"
"you meant data_sectors *= data_block_size >> sector_shift;";"0"
"you could require that a ptl ack something before it votes on their repo. i think it is overkill though. i'd just remove this line, i think. let natural community / social pressures handle this. if someone is posting crappyresults, there will be enough backlash to get something to change, i suspect.";"1"
"i am not sure i understand this comment. i do not see this being done, so why do you say we have to also, why not just move that into build_toolchain.sh";"0"
"this seems like dirty hack. extensions shall be deterministic.";"0"
"nit: we use post increment everywhere else in this repo. plane++";"0"
"done mixins are awful";"1"
"this overwrites test_content_types.assertvaliderrorresponse and is redundant with expected_status=400 below which uses assertresponsestatus anyway . i believe this whole def can/should be removed.";"0"
"i noticed this is a really useful goto : i'll kill this when i clean this all up. not bothering to re-upload right now, as it is wip.";"0"
"do not build that library for your headless build. it is a x11 library!";"0"
"we had long lines for names before, and personally i dislike split string literals, especially when there are no spaces. i'll see what does not look horrible.";"1"
"i find this comment a bit confusing. the proxy does not own the delegate -- in factitis usually the delegate that ends up owning the proxy. if you change it to a const reference, then all interface methods will need to be const.";"0"
"i do not getitdoes not the tuple being built here end up the same as the one in neutron_lib why not just use the one from neutron_lib this looks pretty ugly. wouldn't you get the same thing from: router_interface_owners = lib_constants.router_interface_owners router_interface_owners_snat = lib_constants.router_interfaces_owners_snat";"1"
"damnyou and your relevant nits.";"1"
"let us set them to null, like you did above.";"0"
"this paren is redundant.";"0"
"you should close the inputjacklibrary first. you should still close the vfs after, in case the instantiation of the lib failed.";"0"
"yeah, it sucksa bit.";"1"
"not opposed, butthe syntax of this is kinda brutal. makes me wonder if the fraction of a second savings are really worth it, given the scripts usually run for minutes +. also, could this be made global and reused for the same thing below";"0"
"this will throw a indexerror i think len cmdline >= 2 and ... how the helldoes the above _is_sysmon not throw indexerror can you fix that too i haven't looked at this in a while butitseems like sheer dumb luck sysmon was not crashing previously.";"1"
"is the comment wrong or the search opt admin_status_up != admin_state_up.";"0"
"initialize to nullptr disallow_copy_and_assign";"0"
"ceph osd unset noout";"0"
"pidtid pidtid = std::make_pair pid, tid ;";"0"
"cleanuptabnodes triggers garbage collection and expects that the caller not only passes in deleted_node_ids , but also that the caller will actually honor the decided garbage collection i.e. send tombstones . this is not possible for some calling sites, in particular the scenario being fixed here during restore , at least in the current implementation. in future patches, i'd split and rename these functions to something like: - cleanupsession --> freeunmappedtabs , which does no sync gc. - garbagecollectfreelocaltabnodes std::set<int>* deleted_node_ids , which will trigger gc of sync entities and generate on the calling site tombstones.";"0"
"done, and fixed all nasty white space issues";"1"
"oh, annoying old gerrit version. the newer one would linkify tat guy to this change: 1 . * 1";"0"
"yeah, wtf.";"1"
"''devtest_overcloud.sh''";"0"
"dumb question: how did you test this in particular, how do you reach this line the draft page feature wassuppose to be a performance optimzation from a long time ago, but last i checked it was broken so i turned it off.";"0"
"brian , you are right, let me remove the get_metric_names and get_metrics method.";"0"
"i do not think it makes any sense to divide elfutils up like this. it does not help anyone. only perf and ltrace use elfutils, and they need most of the libraries. we are actually fuckingthis up anyway because libebl tries to dlopen libebl_$ arch , and we are not building those libraries yet. we get away with it because the caller is useless on the target anyway and picks up the os' libraries on the host! but we should fix that, at which point this probably will not build with clang.";"1"
"gerrit did not catch the git mv...so annoying..";"1"
"this is kind of smelly. what if callback is never called for whatever reason, we'll leak the object. anyway, this is not a question for you, butthis code is terrible...";"1"
"why not just use a real remotedeviceloader that way you do not need to do all this mocking.";"0"
"argh, should be *getaddrinfo_error. yikes! c/c++ type coercion... time for -wall -wextra -pendantic...";"0"
"haha, luckily akihiro's comment has rendered this method useless";"0"
"what lutz said - the first issue data structure of wrong type could happen due to an admin messing around with their low-level preg / pol files, or perhaps due to backwards-incompatible change to a policy schema do not do this . the seccond issue malformed json strings will happen all the time when admins forget a curly brace. i do not think it is necessary to tell the admin both at once: ""somehow, you corrupted your .pol file and also you forgot a curly brace .""";"0"
"yes, i hate this bit. docs url would be much nicer imho, but not in this cl";"0"
"technically speaking dvr works fine without l2pop, even though it sucksanyhow, this condition has become a bit unreadable.";"1"
"minor nit: end all these comment sentences with periods.";"0"
"assuming ""eth0"" and ""rtl8168g-1.fw"" is not robust. we should search for the device by vid/pid";"0"
"we wanna kill it here too";"0"
"this is the only outstanding issue with this cl. this hack is for demonstration only: it accesses some private variables could be made public , and does not work for retrystage and repeatstage they do not inherit from builderstage. retrystage.getstagenames / repeatstage.getstagenames is a dirty hack imho i propose letting this cl in with simply a todo here to also handle the case when an exception escapes a stage. i'll work on that and test that separately. sg";"0"
"should this kill the renderer process for sending a badmessage";"0"
"movz out, in_hi, in_lo movn out, in_lo, in_lo";"0"
"tosca.policies.tacker.monitoring.failure.terminate";"0"
"these mocks look to me the unsafe ones.";"0"
"it would be nice to avoid these temporary allocations. if you passed the struct page_info into alloc_largest_available, you could do something fancier here, like put the first ones on the stack and then kmalloc if more are necessary, butthat would get pretty ugly. or you could kmalloc them in blocks.";"0"
"we execute only provisioning here. kvm will be started by next step.";"0"
"but user non-daemon threads are presumably dead. system daemon threads should have been interrupted, and should no longer be in this state. so this addresses the user daemon thread case";"0"
"try_boundary = nullptr;";"1"
"nit: you are initialising this as an empty tuple not a list as the comment suggests the type should be.";"0"
"for posterity, we have now";"0"
"edit : i must have gotten my difs mixed up, i did not see that this was in fact a new line, so yeah in that case my comment above is wrong and steve's suggestion was valid. so i will +1 instead";"0"
"all noqasshould be removed.";"0"
"the 'else' branch here is usually where we execute native plexxi actions, i.e. actions that are implemented in the plexxi libraries. butthe way the rest of the driver is written, that is hard to do right. they import 10 different classes affinitygroup, job, physicalport, plexxiswitch , each of which has actions that could be executed. so the 'else' branch here is not going to work. i'd probably get the bug fixed first and then think about whether it is worth exposing all the native plexxi actions. so you could get away without the 'else' branch here and leave a todo saying something like what i explained above.";"0"
"try/except valueerror llvm_force_head_revision may be set to some crapespecially since it was previously set to yes in at least one place.";"1"
"uuidutils provides a util to do exactly this --> uuidutils.is_uuid_like item";"0"
"stupid question.... why the ""jv"" prefix";"0"
"stephen: do we need anallow rule here for execution of /system/bin/run-as runas_exec";"0"
"it seems dumb that we even have a cli for a thing that the nova api does not support, we should probably have a separate patch to deprecate or just remove that cli since it is busted.";"0"
"we do not need a binary blob. if the egl loader or any other piece of code needs a binary blob, we'll create a version-3 api function.";"0"
"bool g_crostini_ui_allowed_for_testing = false;";"0"
"let us remove these, as they make no sense here";"0"
"... be a subclass..";"0"
"stupid question: does addentry+delentry avoidance buy us less race conditions to minimize rdebug crashes or it is a performance optimization";"0"
"unsigned long freq; int level; freq = simple_strtoul buf, null, 10 ; if !freq return -einval; level = kbase_platform_dvfs_get_level freq ; if level == -1 /* yuckkbase_platform_dvfs_get_level should return -enoent, not -1. */ return -enoent; kbase_platform_dvfs_set_level kbdev, level ;";"0"
"the deeply nested 'with' crapi'll do something about shortly....";"1"
"this seems pretty silly. just error out if there is no pdata.";"0"
"ok, so i'll remove the delete_volume and delete_snapshot parts.";"0"
"do we still plan to experiment with this let us drop dead experiments.";"0"
"unless gerrit's lying, you left a double space here.";"0"
"i ran this on passion and sholes user builds, and sh keeps appearing for sholes...";"0"
"better yet, could we get rid of this awful interface i suppose that will require fixing up the various crappywifi drivers...";"1"
"why is this fake uid still needed";"1"
"use plog instead of parsing errno yourself";"0"
"suggest to remove the loop, just assign motion_sensors 0 .addr and motion_sensors 1 .addr individually.";"0"
"based on the comment, why this property named touchinprogress just want to be clear because your next comment refers to ""interaction""";"0"
">a stupid decorator i like such notes. btw, this decorator is located at l63 of this module, so you can change it a bit:";"0"
"parameterized all raw types.";"0"
"basically as part of the integration tests framework, we want to be able to spawn neutron agents/services and kill them at will, along with any number of config files we want.";"0"
"consider parameterizing these tests as they all seem to be duplicated for white and black param would be white, black also the comments seem like they belong above the test_f instead of inside the test body";"0"
"these are the same as the code below, after the else block. are these redundant";"0"
"ya, my proposed error message sucksfeel free to improve it.";"1"
"wrong! should've just looked into connection.start which is starting a daemon with while true loop and mocks";"0"
"i do not see any use of this var. just getitkilled.";"0"
"this sucksbut all new tests should use mock not mox.";"1"
"maybe we should return an object here, e.g. virtualdisk";"0"
"optional: this comment is obvious given the wild card. i would nuke it, but i leave the decision to you.";"0"
"this stupid reviewer error leaving the scrollock test mode on when committing was fixed with commit d38459355e3e845ad8db3c515536267923afe3ec";"1"
"both lines are useless here.";"0"
"i am confused that you list a bunch of histograms that should be created automatically using the suffix list below. why do not you just list the base classfor those what are you trying to do here";"0"
"you should be using objects.snapshot.get_by_id instead of db.snapshot_get.";"0"
"nit: how about an early return here if mtabmodelselect == null incognitoselected == mtabmodelselector.isincognitoselected to avoid indenting.";"0"
"put here atomic_action=false";"0"
"extra indentation should be removed here";"0"
"stupid dos format. has now been removed";"1"
"you might want to add ""extends userdataholderbase"" here and then you can get rid of your dummy getuserdata and putuserdata methods below";"0"
"sqltoken testcase should remain.";"0"
"this is silly. just do: ${target} != ""x86_64"" program_prefix=""${target}-""";"0"
"not int sock = opensocket... if sock < 0 ...";"0"
"btw, one nasty android build system gotcha is that all your locals in your makefiles end up in the same namespace. best practice is to prefix everything with your library name to avoid collisions with strangers you do not even know exist. so libchrome_commoncppextension et cetera. yeah, it is stupid, and, yeah, the new build system will not have this problem, and, yeah, you usually get away with it, butitis *really* hard to debug when it bites you...";"1"
"nit: move to private since we do not want external code to call this.";"0"
"why do we need this r0 and r1 seems to be a garbage...";"0"
"oops. this must have been a bad merge conflict resolution.";"0"
"lets move this new code up above dump, with the other new code. i like dump being at the bottom.";"0"
"christian is using a typewriter ;";"0"
"should not you set ramdisk_element=dracut-ramdisk here if you wantitto test the puppet jobs";"0"
"this.maincomponentcontainer = maincomponentcontainer";"0"
"nit: needs to be removed.";"0"
"tmp == nullptr";"0"
"do you need the temp values can you just use the passed variables directly";"0"
"quote all the variables/paths add ' die' to the end of this";"0"
"in a program using chromeos::daemon, where i think i first log within my oninit method, i wasseeing: - assert base::commandline::initializedforcurrentprocess does not abort - assert base::commandline::forcurrentprocess ->argv .size does not abort - dereferencing base::commandline::forcurrentprocess ->argv 0 segfaults argh, figured it outithought that daemon inits commandline, butitdoes not. i probably need to init chromeos::flaghelper for that. dumb singletons. i still have no idea why initializedforcurrentprocess was returning true, though. that is scary.";"0"
"use this: input_mt_report_pointer_emulation input, true ; and kill ""single_touch_id"".";"0"
"probably not. i spent like a half an hour trying to get those generics to work but java generics are an awful hack. if you look into arraylist implementation you will see that they use object data to store elements as well. this is related to the fact that you can not do new v size in java when v is a template parameter.";"0"
"because i cargo-culted it from system/update_engine/android.mk ;- i'll nuke ititbuilds without warnings/errors fine withoutit";"0"
"this is ugly. either include graph_visualizer.h here or move the classdeclaration to this file.";"1"
"hmm whitespace looks dumb there. perhaps just drop the trailing comma i wrote that, thanks for linting.";"1"
"i know i should have brought up this earlier, but i wonder if we would benefit from moving these into its own section. we could do it in a clean-up patch, but because it is a time-sensitive issue we'd need to getitin before havana releases , i wonder if it is worth doing it in another patchset in this review";"0"
"all those variables have horrible names. it'd be nice to switch to more meaningful ones.";"0"
"you can t use this variable without including crashpad_dependencies.gypi.";"0"
"made this a move now, as key_value_pairs will be destroyed at the end of this function.";"0"
"nit: better not to shorten, so pid, ppid";"0"
"i am intending to remove the android_device that i created previously: line 1692: android_device = device_create android_classnull, mkdev 0, 0 , null, ""android0"" ;";"0"
"hilarious! adding a test with a fixed time input actually caught a fairly stupid bug in the implementation that i wouldn't have caught otherwise... ;-";"1"
"the lifetime of the expectations is equal to that of the mocks, so they do not go away with the scope. but, in fact, there is no need for the scoping, removed.";"0"
"just want to point out there is a separate mock object for mocking open:";"0"
"this means that only once in the lifetime of the renderer process this code will be executed.";"0"
"can we call this current_executor since we already have self.executor and self._executor";"0"
"useless if statement here. is_fp_promoted is guaranteed to be true in the else clause.";"0"
"this might be a stupid suggestion since i do not understand the context, but why not read the first two bytes of the vga option rom and check if they are 0x55 and 0xaa if they do not match you have no vga rom, otherwise you do. that would be pretty robust, and not at all chrome os specific.";"0"
"and what was the decision around the try/catch-all done in a clinit i know -1 sucksbutthat is probably the less error-prone..";"1"
"i think the rockchip_configure_pd_cnt should put in probe .";"0"
"you do not need this flag if you have a launchpad bug..";"0"
"must execute get_python_exec_prefix";"0"
"utter rebase fail =";"0"
"uniqueptrs are automatically nulled. however, it just occurred to me that if a kdf instance were reused, and init'ed again, the salt_ would contain the previous value. i'll revert that bit.";"0"
"it is generic purposal, not just for this issue. the abort will be called if fw sends core_reset_ntf to dh.";"0"
"done. i will include your suggestion in the next patchset.";"0"
"these should be run through i18n.";"0"
"these ident vars need to be declared local";"0"
"oops. i had cleaned this all up but i guess i screwedup a rebase.";"1"
"dont you need a trailing colon here";"0"
"possibly, maybe something more optimized could be done ; i did just create the above example in like an hour, ha. might be useful to see or look at whats done in: that could have some insight into how to make a good scheduled feature that does not suckso much...";"1"
"indentation in this block seems to have been done with spaces instead tabs";"0"
"put self, project_id, **kw : to get the key-value body";"0"
"i think you could also do it inline: callback.call keyguardmanager != null keyguardmanager.isdevicesecure : false";"0"
"indentation is off here and in the body below by two spaces";"0"
"const as const can.. this should be const svxboxitem*";"0"
"again, we are looking for high level not super specific. i think keep the apache package check and junk the rest.";"0"
"git blame = nkinder.";"0"
"there are some places with exc.notfound and another ones with abort. why do not use an abort 404 here";"0"
"pedantic: consider the following: port_fips = floating_ips.get port.id, for fip in port_ips: ....";"0"
"i feel stupid, but i do not see why there needs to be the ""+1"", when the counter being zero already prevents autofilling.";"0"
"i am a bit concerned about the implementation here. if you say that the same tag can be associated to multiple resources, and that the same resource is associated to multiple tags, this is not the right way to model this logically, otherwise you'll end up having lots of duplicated and a non-normalized schema. say for instance that i want to tag my networks with 'golden'. i'd need to have lots of entries like so: 1, golden, 'my golden tag', network, net_1 2, golden, 'my golden tag', network, net_2 3, golden, 'my golden tag', network, net_3 4, golden, 'my golden tag', network, net_4 this is a waste from a number of perspectives: from storage, lookup and cascading effects. instead you should have, a tag table tag, description, where tag is key and a mapping table tag_id, resource_type, resource_id this still sucksthough, because now you cannot enforce the foreign key constraint on resource id; i.e. if a resource gets deleted now you gotta enforce the delete on cascade via programming logic, which is yucky. ultimately we'd need to have a mapping table for resource. i know, it is more work, butthat gives you the most leverage of the dbms capabilies";"1"
"initialize 'run_with_initial_worklist_root_' in the constructor's initialization list instead with: run_with_initial_worklist_root_ worklist_root != nullptr";"0"
"remove std::move";"0"
"killed the change with headshot.";"0"
"will do, though the instructions are quite ugly and would make alex cry. we need to convert the process to involve an init script.";"0"
"oops, good spot! stupid dyslexia.";"1"
"nit: please, use uuidutils from oslo.utils.uuidutils";"0"
"do not do this. just return ! lhs == rhs";"0"
"end member vars with _";"0"
"it did not work because it manipulated a wrong linktarget object. the way to get the linktarget from a library is $ call gb_library_get_linktargetname,library . butitis cleaner this way...";"0"
"this should be moved into repositoryexternal.mk and gb_library_use_externals should be used here";"0"
"all defaults belong above. this call should be a dumb call.";"1"
"sal_bool is a rather nasty type ok, we have to use it for uno interfaces - best use plain bool if you can.";"0"
"i thought we were aiming for one sentence in the new ones we should lose vague craplike ""such as abstractions for"" too. how about something like: ""extensible securityprovider infrastructure for certificates, signatures, and public and private keys."" maybe with more links.";"1"
"this will violate those dchecks that the array is non-empty";"0"
"yes, done! and could get rid of both ktestgaiaid and kgmailgainid.";"0"
"the old cells model allowed db nulls for the columns. i am wondering if the migration will catch this and puke here.";"1"
": stupid copy and past error. sorry. fixed now.";"0"
"surely, in this dtor, the only thing we should be doing is asserting that m_bdisposed is true all the other logic belongs in dispose . note that if you do this, you might need to make m_bdisposed a std::atomic<bool>";"0"
"why adding _delete_** methods in this classit is called *swiftupload* class";"0"
"right now we only test the defensive check here. if pluginvm is allowed to run, the test crashes. i think we should add a second test already that uses a mock d-bus interface for startpluginvmdispatcher and tests that we get a run false even when the policy is set and startpluginvmdispatcher does not return an error.";"0"
"how about get rid of the arg i.e. view_structure_.emplace_back ;";"0"
"please kill the extra space at the end of this line";"0"
"this overwrites the above local_shared_libraries := libstlport";"0"
"blank line must precede bullet list.";"0"
"nah, if you set the data pointer in the constructor and still expect the vector to do anything useful, good luck. i do not see the point in adding run time tests for such idiocy :";"1"
"ah, the 32 bit stuffagain. yeah, no problems from there.";"0"
"distros i hate to be that guy, butthink of the children.";"1"
"this is retarded ...";"1"
"is this necessary doing arithmetic with booleans is kind of ugly. seems like using an #else clause would be sufficient.";"0"
"i was not even sure why i include /obj obj/puffin : !! done! apparently i am a lousy makefile writer :p";"0"
"oh, crapsorry, yes, it does. despite the escape, i still parsed it as '0'. i am brain dead today.";"1"
"> done oh darn, i forgot a ""not"" in my comment... delayed tasks are *not* delivered, which is same as quitsafely";"1"
"this is done because of a bad rebase...";"0"
"then remove the #ifndef config_task_profiling in task_set_event, this complicated junk is useless";"1"
"""abort received"".equals e1.getmessage to avoid problems if there is no message in the exception.";"0"
"token_cache._get_cache_key returns a tuple, not the key. this should be hashed_short_string_key, context_ = token_cache._get_cache_key short_string";"0"
"should this be a put are you guaranteed that noone else has a ref on the handle i guess if they did then they'd have a ref on the client too maybe put a bug_on here, or in destroy if ->ref->cnt is != 0";"0"
"i've pulled traversal into ngpaintfragmenttraversal";"0"
"again a case where =0 hassome special undocumented meaning. also ::sal_int32 is unnecessary, use sal_int32 directly.";"0"
"i would like to add two more tests: * test_get_multi_by_name * test_get_zero_by_name";"0"
"good point! ; i am wondering if it is maybe time to just change clock_get_osc_bits to alias 38.4 and 48 to 19.2 and 12, since it seems that in every single place that we use them we need to account for that stupid predivider again...";"1"
"my bad. i just wrote this in thin air and sentitto you. should've been: test_env = test_environment.cellularpseudommtestenvironment pseudomm_args= {'family': 'cdma'}, , use_backchannel=false, shutdown_other_devices=false";"0"
"self.__get_password will fail here and below as __get_password is a private function of the parent classxtremiovolumedriver";"0"
"you are short circuiting the whole func. would it be better to have to sep funcs it would make unittesting easier ...";"0"
"this is useless. j will always be smaller than m_recordsinorder.size . moreover, if it could be larger, then the following line could create a reference to null, which is undefined behavior.";"0"
"expected_attrs is useless here, i think";"0"
"honestly, since this takes a separate --var flag anyway, i'd bundle it into cmdsetdep since they are semantically very similar. a ridiculous bonus would be for this to work: vars = { 'foo_revision': 'asdf' } deps = { ""foo"": "" + var 'foo_revision' } $ gclient setdep -r foo qwer <updates the value of foo_revision> that would be truly magical. that can come later, if at all.";"0"
"ok, this was c/c from the transformationstep remove. maybe we should clean them up.";"0"
"we also need to check that the source_origin is not being spoofed, and kill the renderer if it is see";"0"
"all the missing_arg_message here is absolutely redundant. you should at least print ""%s is missing in env and arguments"" % some_arg. default_from_global do not need others tell him what should be printed if the argument sucks the default_from_global and nested default_from_global are another problem. because default_from_global return 1 and what will happen default_from_global getits return value from default_from_global it is excepted a method return value so what will happen if that f return 1 to default_from_global l61 in real environment, and default_from_global would be problem in l62. so i think you know default_from_global and default_from_global issues...";"1"
"sockfd is a sock_seqpacket socket, so readfully would be incorrect. replaced this with recv ..., msg_trunc to be more explicit.";"0"
"here add: uniform->dirty = false; you can not clear all dirty bit in uniformarray since you only update the compute uniform constant. see my another comment in programd3d.cpp";"1"
"what are libcutils, libutils, and libc++ doing in this list any app using the platform version of those libraries needs be punished. in any case, libc++.so will not be there before l.";"0"
"while paranoid, i'd subshellthis assignment and the following where sandbox must be disabled. protects against anyone being stupid and sticking a return into the block...";"1"
"can you move these to drm_drv.c, since you put the function prototype in drm_drv.h then this whole file can die.";"0"
"was expecting to also see a removal of bt_bluedroid";"0"
"this is a perfectly valid util. apparently, it is simply not undo-friendly...";"0"
"updatedistribution should not be necessary here anymore.";"0"
"ah, right. i feel like i suckat shellscripting now.";"1"
"i wrote a test on host, use posix_madvise posix_madv_dontneed can still access the memory, use madvise madv_dontneed will make process aborted with next access.";"0"
"so this is a dumb question. i am not sure who/what calls spawn , butitis not this driver. and this is in nova. should we be raising ironic exceptions here, or converting them to nova exceptions";"0"
"i am wondering if it is not an iterator here and below.";"0"
"these are the errs that deserve retry.";"0"
"this is a bit confusing in terms of ownership. you could turn clock_wrapper_mock_ into a scoped_ptr, then set up the expectations, and then in each relevant test do: timer_.clock_wrapper_.reset clock_wrapper_mock_.release ;";"0"
"i know it is not your code, but looking at the code, we should maybe just ask for a register. silly to optimize for the null.foo case.";"1"
"this is the existing sigquit dump thing, which dumps the existing gc performance data.";"0"
"contextlib should be moved up as it is std lib.";"0"
"sorry, i just noticed this is marking the slot *un*bootable. i withdraw my comment. zeuthen's comment sustains ;-";"0"
"ah, crap one sec...";"1"
"should this be first_arg_reg * sizeof uint32_t since vregs are 4 bytes each";"0"
"you can delete this main logic as the wrapper.py handles it for you";"0"
"i am not sure if threadableloaderclient is a reasonable replacement of associatedresourcefetcher. yhirano : do you have any insight";"0"
"is it necessary to kill chapsd since you are not logged in, the only token should be /tmp/chaps -- could you just unload /tmp/chaps or, analternative to pkill that seems cleaner is to ask init to restartite.g. 'initctl restart chapsd'.";"0"
"another rebase issue the following line should be removed, i think.";"0"
"ah, right. for some stupid reason, i did not think i2c_dev->irq was valid until after devm_request_irq . nevermind then.";"1"
"eliminate backslash.";"0"
"tegra_grhost_aperture = tegra_fb2_start = mem_start;";"0"
"not directly related to the patch at hand, but, out of curiosity, should the start/end notifications be wrapped in a try/finally so we always emit a corresponding end notification";"0"
"this value is incorrect. this should be the total fs space - free_blocks. you are not including the blocks used for inodes, bitmaps, the superblock and all that crapthat comes with the fs. on a fs with all files smaller than 60 bytes, this value will be 0, and that is not what we want. the bug description has the right definition.";"1"
"you could write this: local d if ! d=$ diff ""${working_dir}""/properties.{orig,new} ; then die ""..."" fi";"0"
"could we make this conditional dalvikvm uses libbacktrace, but adding llvm as a dependency for dalvikm sucks";"1"
"typo. identif*i*er";"0"
"couldn't you can simplify all of this to: bool call_service_manager_started_callback = !service_manager_context_;";"0"
"ah. silly copy/paste error. fix coming.";"1"
"argh, i really suckat sorting! :";"1"
"but we are always going to ensureraredata on the next line if we hit these branches";"0"
"damnthis should be typeerror now";"1"
"/* libqmidev_qmidev_h */";"0"
"should this die if args are passed i imagine people running 'sanity_test.py --help'.";"0"
"hi pavan, platform_data for wl127x-rfkill driver needs to have type wl127x_rfkill_platform_data. nick";"0"
"""them"" should be removed.";"0"
"you are missing the double quotes around $out. try this: if out=$ mosys -l ec info 2> /dev/null ; then echo ""$out"" > /tmp/ec.out; fi ; cat /tmp/ec.out";"0"
"damnwas going with puppet convention instead of our convention. 'yes' but i'll need to update the hostname, dns, etc... will update this and do all that shortly.";"1"
"really but... it is totally constant... : stupid compiler. okay. your way then.";"1"
"with the removal of disconnect , is there tpm context handle leakage";"0"
"well, databuffer started as a dumb pod-like classi do not see why we can not delegate this to its destructor now...";"1"
"i am not a big fan of useless defines but other people are";"0"
"rather than mess with take_action itself, how about adding a showone.make_columns method that does the pattern below and returns the zip results. so the below would become: return self.make_columns image._info that could also just go into utils.";"0"
"this is kinds of ugly any good idea";"1"
"kill 2";"0"
"can we explain why we adding the preload controller as a policydecider before other tab helpers";"0"
"nit: remove this is_win block and expand the one above to cover this action";"0"
"if you hoist getselection into a var, these assert statements get a bit easier to read.";"0"
"""partitiontable"" is already defined in generic_common, so you can actually say: to run this pytest with default arguments, add this in test list:: { ""pytest_name"": ""partition_table"" } this is also predefined in ''generic_common.test_list.json'' as ''partitiontable''. if you can not expand stateful partition for some reason, override the argument by: { ""inherit"": ""partitiontable"", ""args"": { ""expand_stateful"": false } }";"0"
"if you wanted to die, you could just remove the ttyless_sudo logic altogether, and it'll die below at the 'tty_tickets must be disabled' line, if the user is on a machine with a broken sudo that does not support ttyless sudo tickets. that is actually quite a reasonable suggestion. note that cros_sdk does not use the sudo keepalive daemon anymore, so none of this discussion actually impacts cros_sdk.";"0"
"after a while i have understand what you whant to do.";"0"
"there should be an invalidhttpresponseheader added to exceptions.";"0"
"use vp9_nuq_doff quant_profiles coef_bands";"0"
"keeping consistent with the existing admin endpoints.";"0"
"is not system_api's dbus/service_constants.h violating this, then";"0"
"on python 3, if ctx.request_id is a str, request_id.startswith b'req-' fails with a typeerror. $ python3 >>> 'req-xxx'.startswith b'req-' ... typeerror: startswith first arg must be str or a tuple of str, not bytes you can try by modifying generate_request_id of oslo_context/context.py of .tox/py34/ virtual environment to return a string.";"0"
"i am afraid i do not know. firstithoughtitis something that you added in one of your previous cls. looks thatitis been here for a while and not used. smells like rotten code to me.";"0"
"arsei 'fixed' the wrong one.";"0"
"yarr, brain fart.";"1"
"i think it is safe to kill this right now. this was francois's defense against pid reuse, which we've headed off by now directly using a process handle here.";"0"
"gsutil_bin, boto_file=none, acl=none, dry_run=false. also, docstring for parameters.";"0"
"1. will love to have you on-board.";"0"
"const std::string to avoid anuseless copy";"0"
"please get rid of the tab.";"0"
"findservicebyname findservicebypid findservicebykeychord foreachservice foreachserviceinclass foreachservicewithflags";"0"
"eh, i muffed this. this should be db_node.destroy.called";"0"
"it is kind of, they always prefer to passkwargs directly instead of manipulating the arguments - they want the clients to be as dumb as possible.";"1"
"i have to count, here. this was just a brainless ""oh, it mentions alignment, then remember that setup_got lowers the stack by 4b"" thing.";"1"
"i hate this, but not going to block on it :";"1"
"oh fu**";"1"
"eliminate backslash re:hacking guidelines.";"0"
"imo: $ dirname 'readlink -e $0' is more robust.";"0"
"wait no getrandom bastards";"1"
"''role = admin'' and ''domain_id = admin_domain_id'' replace /";"0"
"django 1.7 is not a supported environment of icehouse release. i wonder why it needs to be backported.";"0"
"this accessor should still be a const layoutsize since it can never be null.";"0"
"this will not cover the wifsignaled case. i think you can trigger those with a command like this: kill -""sig"" $$";"0"
"edp_debugfs_dir points at garbage now.";"0"
"you should initialize these booleans to a default value.";"0"
"are there no other google products that ever implemented xmpp seems silly to reinvent the wheel here. you are not even making sure that the relevant tokens are in the right order or anything.";"0"
"put ' die' at the end of this";"0"
"kill this empty line, i think";"0"
"nit: put a space after the colon, perhaps";"0"
"similar dumb question as above, 'flow1' is not actually a valid flow classifier, is it what exactly is being tested if this works with an invalid value being passed for the flow classifier";"0"
"the next cl needed by moves the #ifdef above this function. this cl just nuked nr_syscalls from all ""my"" code but leftitfor the config_ftrace_syscalls wrapper garbage.";"0"
"i think introducing solarmutexreleaser::clear makes the code less readable and maintainable, not more. for a ""guard"" object like areleaser it is important to easily determine the range of code it guards, and the easiest way to do that is with a block: reference<datatransfer::xtransferable> xdataobj; { solarmutexreleaser areleaser; xdataobj = xclipboard->getcontents ; } and especially so for solarmutexreleaser, where each use of it is a gross hack. it is actually a good thing to have these hacks stand out like ugly warts in the code.";"0"
"i think handler_kind is a list, so probably handler_kind 0 would work";"0"
": silly me!";"0"
"silly nit: there needs to be a blank line here";"1"
"yeah. what kind of douchecopyrights a single #include line :- if i think we are likely to have to add stuff at some pointithink the copyright header makes sense. but if it is really just a synonym for another header file, that is silly. this case is borderline, but what convinced me here was that we did not have an include guard, so it was a bad attempt at being a ""real"" header.";"1"
"let me try this one last time. 1 our tempest client compute/json/services_client.py, on line 55 is self.put 'os-services/disable', post_body "". note: this is os-services/disable, this is not disable-log-reason 2 at nova-api side os-services/disable maps to openstack/compute/services.py#l38 ""disable"": self._disable, note: this will call self._disable, this will not call self._disable_log_reason 3 self._disable will call self._enable_disable with 'disabled_reason': none so the value of body 'disabled_reason' is completely ignored and never returned. this is because our tempest client calls ""os-services/disable"". if it had called ""os-services/disable-log-reason"" you would be right. now, try this curl -g -i -x put -h ""user-agent: python-novaclient"" -h ""content-type: application/json"" -h ""accept: application/json"" -h ""x-auth-token: xx"" -d '{""binary"": ""nova-compute"", ""host"": ""node-4"", ""disabled_reason"": ""foobar""}' notice we call os-services/disable. and look at what is returned by this curl command.";"0"
"this seems like an unrelated change. why was it necessary did you audit all callers imo. this change makes it easier to screwsomething up.";"1"
"since any app can connect to this, we cannot trust any of the contents. the pid from so_peercred should be used here.";"0"
"shflags is for chumps! ; i'll covertitover";"1"
"done in another cl which re enable opcodestests as runtimeregressiontests.";"0"
"why assoc is the parameter and not just pool_id";"0"
"it is not necessary to mock a value like this. what is wrong with this self._driver._hostname = 'some-ip'";"0"
"not important... but you left a coma here";"0"
"hmmm...seemingly obsoleted by f01e1af445fac107e91d62a2d59dd535f633810b";"0"
"needs an dragonegg bug intead of bip";"0"
"config_fixture does not exist in havana. you need to do the following: conf.ldap.url = ""fake://memory"" conf.ldap.chase_referrals = false";"0"
"yes, afaic it should be put here.";"0"
"you are setting self.src_elem unconditionally on line 41, so this assignment is not needed.";"0"
"in that case, i suggest actually adding it as a param. callers can simply specify a dummy value themselves if they do not care aboutit";"0"
"why need this lib client'll log";"0"
"and btw noone noticed the typo at line 419. you are terrible at pedantry.";"1"
"whatsa hardwark";"0"
"better use kill -s 0 2>/dev/null";"0"
"this would be much easier to review if you leftitbelow the testpersrc mutator";"0"
"i am aware it is used in clean, butthat is my pointitis useless. to put a different way, how is this any diff from writing: fat_cat_eats = cows clean: rm -rf $ fat_cat_eats you'd still delete the variable because it is pointless.";"0"
"need at least dumb tests for other methods as well.";"0"
"yes, i just suckin english.";"1"
"this comment is very silly. consider revising or removing it.";"1"
"can we get an echo here so users can know why things are so darn slow :";"1"
"bad uc_name. at this momentitshould be uniq_address_x_deleted";"0"
"identify the app's pid from the gdbserver output, and then in another window:";"0"
"ditto, .uno:freezepanesfirstcolumn and .uno:freezepanesfirstrow";"0"
"this should be part of is_create group below.";"0"
"nit: ditto std::array<glcolor> texturedata = {glcolor::green, glcolor::green}";"0"
"are you sure that you need 9 slaves";"0"
"remove the wildcards when possible.";"0"
"use obj.kill instead. if we run child process with elevated privileges, this call will raise permissionerror or oserror with errno=1 .";"0"
"dammit. hehe.";"1"
"debug code kill it";"0"
"keystoneclient needs to expose something like append_auth_arguments parser so this crapdoes not have to be distributed via copypasta";"1"
"i'll take a stab at making cache_info support the decorator as described.";"0"
"can you put a note that this is a hack to get around a bug in old layoutlib code i would actually rather avoid these hacks, but if our users have old versions of layoutlib that we cant upgrade, then i guess we have to";"0"
"this is checking cur != null butthere is free cur in the loop, does this work as expected should it be checking next instead";"0"
"you do not need a trailing n on cprints, only on cprintf";"0"
"float scaled_time_float = ....; base::checkdnumeric<int> checked_scaled_time = scaled_time_float;";"0"
"this test case is for tenant user. so the project_id should be set instead of none at least. i'd recommend to set dummy values for both user_id and project_id using tests/unit/fake_constants.py";"0"
"nit: the other drn_enum_name have one-line of white-space above.";"0"
"my fault, but please remove the semi-colon while you are atit";"0"
"can you please make use of mock instead of mox.";"0"
"i think this regexp will also match all the strings the next one can possibly match, making the latter useless.";"0"
"maybe in another cl, i am also tempted of just deleting the if and putting a dcheck.";"0"
"please remove these whitespaces.";"0"
"i think it would be better to remove the numbering and use more descriptive names. it is unclear what these aggregates are when they are being used in the testes below.";"0"
"nit: consider logging a message here too to make it easier to distinguish between usbip hanging vs. the udev event not showing up, e.g. testing.contextlog ctx, ""waiting for udev event""";"0"
"ok. i'll remove a few of them in a next patchset";"0"
"it would be great if we can have an explanatory comment here such as ""this assumption comes from an assumption that when we return false the next call will be called with the same record_size "".";"0"
"perhaps static_assert std::is_trivial<t>::value, ""t must be a trivial type"" ; to make it clear people should not be doing this with something like a std::string";"0"
"how about '... does not match expected state '% state s'. updating recorded state to '% actual s'. or something like that.";"0"
"fack => fake";"0"
"please leave a line's worth of space here.";"0"
"this one may be set before we push a deoptimizationcontextrecord in the deoptimization_return_value_stack. i think we should only have the deoptimizationcontextrecord stack.";"0"
"this is a sfxvoiditem ... yes it is. idly wondering what fun consequences that has considering that sfxvoiditem is typically used to implement the sfxitemstate::disabled... ... ah that is a sfxvoiditem with whichid hard-coded to 0 in sfxitemset::disableitem ... interesting";"0"
"use mock instead of pymox.";"0"
"this is a wtfvector, so wtfsize_t";"0"
"this is a little silly. why not just 'if code == 409:'";"1"
"well, the first thing that comes to mind is to make use of the 'body' argument to self.assert_called see novaclient/tests/unit/fakes.py . that may not work, however, so another possibility is to go directly into the callstack, like assert_called does, and suckin the json payload and verify that the correct thing is in the correct place. to be clear, my statement is a statement of preference rather than a statement of, ""you must do this"" particularly now that i've looked into how you would actually accomplish such a test :";"1"
"parseractions.multikeyvalueaction";"0"
"fancy pants yes, butits not offensive or dirty.";"0"
"die mixin, die";"0"
"should you dcheck that eax == eax and edx == edx";"0"
"add platform/wtftext/atomicstring.h";"0"
"ect will be baked into previewsstate";"0"
"no need to sh - just execute them and set them as +x .";"0"
"is not this going to die when keyparam == null you explicitly allow null keyparams on line 1088";"0"
"the indentation here is dodgy it may be worthwhile adding a comment that this is only applicable to ipv4. can you please add ina test for ipv6 showing thatitworks when there are zeros";"0"
"if tenant_id and c_conf.cisco_n1k.restrict_network_profiles: ...";"0"
"that is wacko, but ok with me.";"1"
"it should be a white space after colon.";"0"
"should be in backticks ''user_id''";"0"
"ridiculous nit: to avoid the funny looking clang-formatting, consider: auto request_as_vector = u2f_parsing_utils::materialize request ; expect_call *this, devicetransactptr request_as_vector, ::testing::_ same in the other expect_call with materialize.";"1"
"nit: s/ironic/ironic per openstack guidelines here and below";"0"
"right. i guess it could be possible to destroy the videoframecompositor, destroying videoframesubmitter before this posttask finishes. if i move the dcheck in, would that be ok my lack of c++ knowledge";"0"
"darn. i am getting display corruption and some other issues in crouton in vt3, and the result is that stuff i am editing sometimes gets broken. it is a very bizarre problem, hard to repeat, but definitely there. ah, well, i'll try again. boy this is getting so annoying i may just go get a mac air.";"1"
"this should be initialized in constructor's initializer list.";"0"
"how about final string spn = iccutils.adnstringfieldtostring ... ; if spn == null spn.length == 0 { mspnstate = read_spn_cphs; } else { setserviceprovidername spn ; ... } it seems silly to evaluate the string one, call the setter and then call a getter to fetch something we already had in scope.. also do not need to call the setter if we know it is empty.";"1"
"crypto seems a 3rd party lib. should go above oslo.config";"0"
"nit: 'icu_locale' to be consistent with icu_simplate_date_format";"0"
"why would this exist ... if garbage is going to get returned an exception should be thrown by the callee.";"0"
"string should be wrapped in _ for translation";"0"
"i think it'd be better to make this an arg to the function";"0"
"nevermind. i see they are still needed of course for both ipam backends. my mistake. i will restore them.";"0"
"this is incorrect - auditallow does not allow anything. it only enables auditing of allowed permissions. you need both! so sediff is correct; you are deleting rules...";"0"
"mysqldump -u -p ---all-databases gzip - > filename.gz by gzipping it while we are dumping we lower the requirement for the space required on the server side. our 35gig db compresses down to about 900 megs right now.";"0"
"mmc.h should go after dw_mmc.h.";"0"
"stupid q: where does this value come from";"0"
"and to check that an unknownhostexception _does_ get thrown, if i understand correctly :";"0"
"remove these unused space chars in red, thanks.";"0"
"this is a very strange ordering of tags, but agree thatitmatches upstream. specifically: * weird that you have a sob + other tags. upstream does not usually do that. * weird that your sob is first but you are not the author.";"0"
"this sounds kind of confusing because it makes it sound like this sends data to adbd, but you really mean that the same transport code is in both adb and adbd. my opinion is to kill 'adb/adbd' from the comment.";"0"
"this is a not what you test below, b not what is implemented. you implement and test non-empty+non-one means fake java";"0"
"this div should be a child of #appearancesettingsprimary";"0"
"yeah, this would introduce a bug. the only caller is __vfprintf.";"0"
"please add ' die' in the end of the line";"0"
"lsusb is not built any more. should i add lsusb.c back into the makefile and restore libusbhost, or should i git rm lsusb.c";"0"
"i like die.";"0"
"ultimately, when this system is used, functions in this unit will be able to be called. specifically, utimately it will be possible to change the 'active' bit s on devices. so, the locking is necessary in the long term.";"0"
"this is a little useless. if the database_port is not configure. other service use that value will be empty too and crash. so mariadb_port: ""{{ database_port }}"" is enought.";"0"
"i still prefer this returning a non valid client. after all that client is the one still selected in the ui, and if you want to know pid or something from ititis better to still keep it. we could have an action that could still work on dead processes like ""analyze why it crashed"" or whatever for which this needs to return the dead client.";"0"
"nit: could you reorder this to be consistent with v8_utilities.py";"0"
"if you omit the endpoints, the delegation is useless.";"0"
"ok : horrible classinterface";"1"
"you are right the code here does not cover all cases yet. there are 3 scenarios thread_rm_active_adev will get called: 1. the active device is set as inactive. 2. the active device is un-plugged. 3. operation on the adev failed, eg. append stream or playback fail. for #1, we should keep pinned streams and keep the adev active only for pinned streams. for #2, we should remove pinned streams and notify client for #3, i think we should do as #2. how about add a ""keep_pinned_streams"" param to thread_rm_active_adev as an instruction";"0"
"remove. without the wrapper jar file, this is useless.";"0"
"invaliddata is a subclassof validationexception, so it wouldn't be missed.";"0"
"as ""_notify_ha_interfaces_updated"" called again at l558, can we remove this here at l552";"0"
"as discussed, it would be great if we could persuade them to kill this.";"0"
"oh, this definitely sucks- . +dbrazdil";"1"
"move this closer to the first statement that cares aboutit- i guess ""dosbin killers"" below.";"0"
"this sequence is to be executed on every node in the env.";"0"
"useless echo";"0"
"every time we do a push to the lab, it calls build_externals to ensure we have the latest chromite/etc. my concern is user runs this once. gets chromite. down the line repo sync: new autotest changes requires newer chromite. they run this script again, stale chromite, weird errors, user has no idea wtfwent wrong.";"1"
"drive-by adjustment to save stupid mistakes when playing with different #s of phases.";"1"
"delete this die";"0"
"my vote would be to have just one generic flag. gdb-info is misleading since dwarf can be used by many tools - including lldb, and libbacktrace. i like debugsymbols more. i would say it sounds like a dwarfsymbols i.e. .debug_* sections , but not everyone might not know the name dwarf so it is good generic name. but both of the above seem to imply that they only control inclusion/exclusion of debug data. i think it would be conceivable that the flag could have deeper effects. say, do not deduplicate methods to make sure they can be identified, or omit some optimizations that rearrange code. anyway, this is just bike-shedding about names. i would not want to change it as part of this cl. i picked gdbinformation here somewhat randomly, and made sure it is at least consistent with quick and elf writer. should i change it back to getincludedebugsymbols and maybe kill gdb in further cl";"0"
"hang on... limits.h should #define pagesize to page_size and #include <asm/page.h>. and i can not reproduce your compilation error myself. can you elaborate";"0"
"silly question: would checking here for the presence of the oid before attempting to delete it yield better error message than the checks in the c code";"0"
"interesting.. this is how 'docker build' is executed using docker-py.";"0"
"ugh. gross.";"1"
"not actually sure this is useful. under what scenario would a developer *not* want to stop mock patchers on teardown";"0"
"this 0 _ is not rendering properly";"0"
"mildly prefer you call this getnoopcompletionaction .";"0"
"just kill this";"0"
"i think john meant subprocess.pipe, then you canuse map_output.stderr";"0"
"enctrace.h deosn't exist. remove.";"0"
"*this* spontaneous qtdesigner change annoys me more.";"0"
"is there a reason you want all caps here and below looks ugly, out of place, and useless.";"1"
"those 2 lines should be removed.";"0"
"list_replication_targets should be brought back here as well.";"0"
"missing ""$ "" here, otherwise i guess it is okay.";"0"
"kill renderer if this or begin frame response returns false";"0"
"readw is uint16_t*.";"0"
"please use mock instead of mox";"0"
"oh, i realized the lack of wtfcrossthreadbindrepeating, but i originally thought wtfcrossthreadbind wassmart enough to handle both once and repeating cases. if not, then i believe it makes sense to add wtfcrossthreadbindrepeating. i can mock something up.";"0"
"lazy brillo flag_helpers does not provide define_uint32 :";"0"
"wow, elif should be removed at all with todo comment, as it is now it skips all extra fk that was found.";"0"
"nit : you are inside the dwarf namespace so you do not need these.";"0"
"just a minor nit that since module!=null iff initwrapper has been called, you do not need the additional bool first";"0"
"i'd rather make this something like sal_unicode clastchar = 0; sal_int32 npos = atext.getlength - 1; while npos >= 0 clastchar = atext npos == 0x20 --npos; so we catch any number of trailing spaces and also do not attempt to access atext out of bounds.";"0"
"run usermod -a -g kolla memcached";"0"
"use dexwritingexception after rebase.";"0"
"if any assert* above fails, this will not run. putting registerserver in setup and this in teardown might do the trick.";"0"
"ioctl may fail leaving device_name initialized to stack junk.";"0"
"nit: should these be expect_true instead of assert_true";"0"
"ryan, kroot corrected me on this. null means there was no eku, not an eku with no oids. a malformed eku such as that should throw certificateparsingexception when we lookup ekuoids.";"0"
"this presumes thatitends in .bz2. can not we just strip off the extension dest_basename = basename.rpartition '.' 0";"0"
"should we remove detectvalueboundfromvalue, and inline the code here seems like valuebound::create and valuebound::detectvalueboundfromvalue are redundant.";"0"
"the docstring is self-evident. remove.";"0"
"so lazy... are there really that many call sites that you need default args";"0"
"i guess you want to execute 'dockerctl shellnailgun supervisorctl restart nailgun' here :";"0"
"if we passtrue' to kchecklarge, then how about inserting a dcheck that allocator_type is not the los type";"0"
"shifteroperand may not be able to hold lower_bound. use __ addconstant key_reg, value_reg, -lower_bound ;";"0"
"this actually needs to be removed completely, only the go code should be built from this rule";"0"
"we are cowardly lions. i'd prefer to keep the change which causes massive bugs separate from the change to install this from shill.";"1"
"kill it :";"0"
"declare this as welcomebubbleview and remove the static_cast in getclosebuttonfortest.";"0"
"dev_dbg or preferably just kill this";"0"
"yeah, this is silly. isscreenon does not necessarily mean what you think it means. what if there were multiple screens you should be stopping progress from onpause instead. the activitymanager will take care of pausing activities when the device goes to sleep.";"0"
"use an enum classhere so the enum values do not corrupt the namespace";"0"
"btw, we really suckat naming consistency camelcase versus underscores . this looks good to me, though.";"1"
"grep for '= $ am_cppflags n' and remove all those.";"0"
"more kittens to die :";"0"
"awful use query.soft_delete. take a look at migration";"1"
"expect_eq can now print gfx::rect when failed, so you can just use gfx::rect";"0"
"i did some testing with all 3 types of urls username, query, and port and they all still work. it seems libsmbclient just ignores them since i am still able to mount with arbitrary values random port numbers, users, and queries . do we still want to reject all three of these";"0"
"like you said, a dummy sync sessions client just moves the problem around. i'll add some more dchecks below like you suggested.";"0"
"svx is even worse - that is a cyclic dependency!";"0"
"could you name this something that indicates it concatenates the supplied keymanagers with the defaults maybe something lame like ""createwithadditionalkeymanagers""";"0"
"ha, yeah that is a bit silly. i can remove that one.";"1"
"do not need return here....";"0"
"nit : still a bit clumsy this...maybe use the ""subtree"" term that we use when creating the assignment above, e.g.: the list only contains those role assignments anchored to this project that were specified as being inherited to its subtree.";"1"
"this is a subset of code_bin_header_v1_flcn. perhaps you can reuse the header.";"0"
"adbcommandfailederror is a subclassof commandfailederror, so i think that is ok.";"0"
"ok... to do what you are requesting use a different name means we'd wind up with the content in two different vars; or i'd have to split a base classthen derive the git-repo targetting one, then target the manifest-checkout one. which would be a pointless pain in the ass what was done here works fine, and is sane inheritance/oop, more importantly, sane pythonic behaviour; '_path' means ""the path that this classworks on""; it says *nothing* about what that path is, intentionally so, since it is dependent on the class i am not going to change it basically; if you feel strongly enough, -2 it, else register disproval via -1 if others agree, they'll load up, if they disagree, the 2 and -1 are perfectly fine- will not be offended/annoyed .";"1"
"i know ""kill"" is a very bad system call name in posix. but can we add some information as a comment or at least in the docstring saying that this kill call with the argument 0 will not try to kill the process just saying because it is confusing to call os.kill to check the process and after that call ""kill"" using utils.execute to actually kill the process. or another way simpler to check it for the existence of the process would be to check the /proc fs, e.g: def _check_pid pid : """"""check for the existence of a pid."""""" return os.path.exists '/proc/%d' % pid";"0"
"do we have anything to prevent things like ../../bin/sh";"0"
"just noticed that this function has nothing to do with the dma_buf api and that you are still replacing the dumb mmap with the dma_buf mmap module. i think it would be best to keep both around for now.";"0"
"do not you mean kargo kult ;";"0"
"ha true. i am an idiot :";"0"
"something loke restart_count would be more informative.";"0"
"nit: maybe call these allocations_before and allocations_after.";"0"
"could also use self._process.send_signal .. . i am not sure what the difference is. or if sigterm or sigkill is okay, self._process.terminate / self._process.kill";"0"
"one of my admittedly low-impact dreams is to kill libc_static one day. progress!";"0"
"seeking feedback here re: whether the visual rect is in the right space for its use here.";"0"
"it'd be better to validate it on setting it, perhaps killing the renderer for sending a bad one.";"0"
"nit useless";"0"
"you should be using the instance_create_runner for this. self.instance_create_runner = self.get_runner 'instance_create_runners', 'instancecreaterunner' ... ... cid = self.test_runner.dynamic_group_id or self.test_runner.non_dynamic_group_id self.instance_create_runner.run_initialized_instance_create with_dbs=false, with_users=false, configuration_id=cid";"0"
"this is ugly. :- hopefully with our_pstylefamilyentries, it will not be necessary.";"1"
"i think that this note should be removed.";"0"
"this might be cleaner without 'p'. perhaps something like: addr = msgs 0 .buf 0 ; block = addr / edid_length; buf = msgs 1 .buf;";"0"
"i'd prefer we used the stupid atomic_uint_least32_t here so we canuse explicitly-sized types in the rest of the code. allowing 1970s nonsense like ""unsigned int"" to leak back into the code seems like a mistake, even if the ill-considered standard tries to move us in that direction.";"0"
"get everything, cache the results and filter them afterwards based on issue entity's last_updated field.";"0"
"dorp 307-311, do this instead: cros_build_lib.sudoruncommand 'rm', '-f', maskfile , print_cmd=false, strict=false";"0"
"so you will not need this if you just yaml.safe_load the string.";"0"
"why the flip-flop here in the parent cl, this is error";"0"
"i might be dumb but i do not get where the 63 comes from.";"0"
"to be fair, it is even more mad that you were returning something from decode that does not support being decoded... i did not say you could not use binary.object if you wanted to, just that opcode as an interface was pointless. i change binary decode because i want to be able to support compatibility shims that can decode old data, but not re-encode, it makes total sense. also, given that i changed it a while ago, there is not a single occurrence of a cast in our code base, and you have not even noticed let alone been badly affected by it i stand by the decision :";"0"
"you should do something like: $# -eq 3 die ....";"0"
"why we are doing this only if !ret.s.kitchenargs.logdogflags.annotationurl.iszero above i think we should do it unconditionally";"0"
"items_shown_ = items_;";"0"
"all these are possible. i think to declare the stage succeeded in all devservers, we will have to get a definitive response from each devserver. any httperror could be indicating some error worth to dig into.";"0"
"nit: this is enough values that i wonder if it would be cleaner to keep these pulled into another object: const responsecookiemodification* cookie_modifiers = {...}; for auto* modification : cookie_modifiers { ...; }";"0"
"should not need this mock since there is a fixture that mocks it. instead try: self.apt.read.return_value = resp";"0"
"done. git cl format just got more annoying to use on linux because it looks for gn that is not present in angle. this means the formatting has to be done in the chromium checkout. or i have to create an ugly symlink :s";"0"
"this also needs another retval check to abort if we have 10 failures";"0"
"actually getfoundarraylength returns harraylength* so this is not needed. at one point in my change, getfoundarraylength returns hinstruction* but not anymore.";"0"
"... but with svxbackgroundcoloritem instead of xfillbackgrounditem and sid_attr_brush_char instead of xattr_fillbackground";"0"
"style nit: ec_cb *ec_unused";"0"
"yes. isfinished will be needed by ""record command"". and getworkpid is needed for perf_event_open xx, pid, xx .";"0"
"i think this word should be removed.";"0"
"please give me a big fat readme to indicate my purpose and how i am supposed to be used.";"0"
"! #$! #$. i did nuke it.";"1"
"lousy compiler for not catching my dumb typo...";"1"
"ah, what a silly oversight. fixing.";"1"
"femtonit: return not needed..";"0"
"showcounters does not need start_time and end_time. butthe duration_cast is annoying here. i move it inside showcounters .";"0"
"i'll fix this module in next ps to make it l3 throughout. copy/paste goof.";"1"
"done. would you remove the ""well you best shut your brain hole and do it anyways"" sentence to take a quote from your document ""stick with the pleasant methods please.""";"1"
"sorry, the result of me changing my workflow. blindly using ""git add --all .; git commit"" vs. ""git gui""";"0"
"it is not that i was ignoring identity, it was that i forgot that people could passin stupid stuff like non-functions";"1"
"we send 10x kill -9 to process in while loop. why send one more we should return ocf_err_generic here. if kill -9 not killed our process , pacemaker should move resource to unmanaged/stonith should kill node. in current approach, we will hide problem from pacemaker/user which can lead to strange galera behavior/data loss. butthis dosent mean that problem disappears.";"0"
"ah, yes it will, and we'll end up retrying it 'max_provision_retries' times.";"0"
"er, you were right. i meant for it only to affect config_samsung_pm_debug, but screwedthat up. if we move the call to your suggested location that fixes it.";"0"
"i think you are supposed to use ""include external/stlport/libstlport.mk""";"0"
"it is ""b zier"", not ""bezi r"", but if this comment is too pedantic you can probably just leave out the french diacritic :-";"1"
"scratch that, i was being stupid.";"0"
"oh i see, you are just saying you are not timing the entire body. your example code is broken on that bit :";"0"
"drop the 'insinto' and replace the 'doins' with: dobin build/gavd/gavd die";"0"
"yes, bu using ""build-qemu-android.sh --no-android"", you end up building a 'pure' qemu2 from our qemu-android sources. i added the flag to ease the rebase on top of qemu 2.4 / 2.5, butthat is for a different patch set and a more complicated one actually :-";"0"
"no... cros_ec should be removed. otherwise this is great";"0"
"should not you add word_addr when checking for out of bounds";"0"
"this does suckfor small blueprints. lots of sections with the same text in... butitdoes work i guess.";"1"
"should be libnfc-brcm.conf";"0"
";- while playing with replacement of boost::bind with std::bind i am seeing the failures to compile on most recent clang++. that is because std::bind cannot induce the type of overloaded function: 1 . so something like that is failing to compile without explicit cast, that is going to be ugly : +++ b/basegfx/source/range/b2drangeclipper.cxx +using namespace std::placeholders; namespace basegfx { namespace -496,9 +497,9 namespace basegfx b2dpolygon ares; std::for_each mapoints.begin , mapoints.end , - boost::bind + std::bind b2dpolygon::append, - boost::ref ares , + std::ref ares , _1, 1 ; with the following error: 2 . how can you replce the bind above with labmda * 1 * 2";"0"
"nit: let us kill all of the using statements in this cl.";"0"
"nit: bool ime_menu_on_shelf_activated_ = false; otherwise it will be uninitialized.";"0"
"terminate calls 'thread_pool_.clear ' so access to 'thread_pool_.size ' needs to be synchronized to avoid races there, right";"0"
"doins resolv.conf die";"0"
"explain that in the case of multiple chroots, this daemon process is killed by the last exited chroot";"0"
"looks like you screwedup somewhere. did you ""git commit --amend"" when you meant to ""git commit""";"1"
"and this is why this relation is problematic : the code here assumes that there is only a single compute_nodes record for the service, which we know is not an accurate assumption, since certain virt drivers can actually have multiple compute_node records for a single host. so, we actually need to *remove* the compute_node attribute of the nova.objects.service object, since we should no longer be using the service object to get compute node information. for the absolutely shitbrained os-hypervisors api extension, we will instead want to make separate calls to a new nova.objects.computenode.get_all_by_host method which will return all the compute node records for a particular host, instead of relying on the above incorrect nova.objects.service.compute_node attribute.";"1"
"should we kill these off now";"0"
"arghh, i am such an idiot... this is off by one so i am running at 200mhz. will change and retest next time i get my nyan hooked up again...";"1"
"delete invalid dcheck.";"0"
"const struct bo_ops *bo_ops;";"0"
"80 chars limit applies to the commit message also and yes i think that limit is stupid, it is our standard however ; .";"1"
"i really gotta flip my default behaviour. whenever i see a dodgy looking piece of code, i tend to trustitinstead of wondering wtfititis trying to do.";"0"
"during first run, when the sdk folder does not exist yet. however, in here we care at least as much about remote as local, androidsdkdata was just acting as a dumb container for the remote sdk, with this being the only client. so i just moved it in here so we can do the remote stuff whether or not a local sdk exists.";"0"
"nit: probably cleaner to return if allocation_base is nullptr.";"0"
"yeah, just kill those lines.";"0"
"mauro rodrigues yeah, i saw your comment and was puzzled. so maybe ann and i are missing something. would you point out exactly where is that tear down method that deletes the resources";"0"
"ya. i'd kill it.";"0"
"let devicemanagergetdevicespromise = this.devicemanagergetdevicesresolver.promise;";"0"
"unneeded paren.";"0"
"what is the purpose of this can you add a comment";"0"
"grep! i want to die. thanks for the pointers.";"0"
"darn i am blind today. actually it defaults to true in this case if i am not blind again , so you can forget about this set of comments. sorry :";"1"
"yeah, ugly beast. i'll need to have a closer look, so either you wait for that, or back this out and submit separately .";"1"
"maybe there should be a comment why do not you use _.clonedeep";"0"
"what about ./manage.py syncdb";"0"
"this br100 should be configurable.";"0"
"dex_files... but why cant you use your common_runtime_test.h helpers";"0"
"callbacks are issued on the ui thread, so you need to poll it instead of the instrumentation thread. alternatively, can you use a semaphore instead of polling makes the code easier, and gets rid of the ugly polling.";"0"
"bad ident. should aline with first argument in line above.";"0"
"darn, i have a red thingy";"1"
"same here and below: please remove non-javadoc";"0"
"btw here we have only 3 on-line slave";"0"
"the ""root"" in this case is not actually the root of the dialog, just the root of its content, so a recursive/iterative walk up the chain will go too high. this is a pretty crappyhack altogether. maybe some explanation is in order. so, dialogwrapper sets some basic padding for all dialogs in intellij. ux has given us a design doc that asks for slightly different paddings, so i have to walk up the chain and undo the base classpadding in order to set our padding later on.";"1"
"imo if we dont return 404 here we need to return 400 in case of malformed uuid.";"0"
"error_message_ = error_message";"0"
"since this is being added to /opt/kolla, you can add after 'config-external.sh' below.";"0"
"the more you know. i am glad that base was not totally crazy when they did something like this. can we currently feed weak_ptr to base::callback i remember that we used to use the hand rolled chrome version of weak ptr in that way.";"0"
"catch your idea. remove the _posx* not defined in glibc.";"0"
"should be: if boot_mode_ilo_to_generic p_boot_mode.lower == boot_mode:";"0"
"darn i wish there was a way to assert something instead of just erroring out on a fail...butthere is not an assertdoesnotraise lol";"1"
"nit : you are inside the dwarf namespace so you do not need this.";"0"
"you've got an evil trailing whitespace here!";"1"
"why are we only mocking this for non-masters also, if we stop mocking out cidb with magicmock and instead use a fake_cidb, we can probably avoid lots of other mocks of cidb-dependent things.";"0"
"i feel like we should remove this and trigger onregistercompleted instead";"0"
"this is a stupid bug. fixed.";"1"
"i am confused...how are you getting the patch from gerrit if you delete the 'git fetch' command";"0"
"how are you planning to handle heaphashtable, heapterminatedarray, heaplisthashset...";"0"
"let us shoot for removing these four lines.";"0"
"yeah we could put another attribute on system/bin and system/xbin and only allow execution of that, rather thanall system_file...";"0"
"is not this weird should not they be using include $ build_native_test and getting this for free";"0"
"why do you need to test a dummy method in addition, no assertions";"0"
"user == null should send an error response instead.";"0"
"kill the semicolon";"0"
"maybe we want to be clear about which hypervisors you plan on changing here. you are later, so its a micro nit.";"0"
"nard. pardon, the cros_build_lib conversion obviously failed miserably.";"0"
"wait, silly gerrit hid some lines and it was not obvious. i've also refactored this code massively in you might want to wait until that lands.";"1"
"these guys seem to make lots of missing parentheses errors, trying to be clever...";"0"
"delete, or are you missing a param";"0"
"damni keep confusing those.";"1"
"this should only be done if an existing cache is not there, or if the deployer forces the rebuild of the cache.";"0"
"jakub bug in pymod2pkg python-subunit should not be transformed into python-python-subunit for fedora/rhel/centos";"0"
"can you annotate: /* new_load_flags */, /* has_new_load_flags */";"0"
"nit: utils_mock.assert_has_calls utils_calls_expected";"0"
"same for this...should just be tuskar-dbsync";"0"
"you already have the instance so you do not need the instance uuid. you do instance=instance";"0"
"crapyes.";"1"
"i'd be a bit amazed if we did not already have a function that does this... might want to do some checking around.";"0"
"i'd even go so far as to disable these warnings. they are incredibly noisy and rarely if ever helpful.";"0"
"should be: mock_clients.return_value.get_only_instances.return_value = severs_list";"0"
"this kinda sucksas well, is there any kernel standard way of allocating a buffer that is the max of some number of constants aside from kmalloc, of course";"1"
"tiny nit: a better condition would be !requiredintentfilterpresent. perhaps haveenableaction should be local to this block, and requiredintentfilterpresent would be declared on the third line of this method";"0"
"string serving_operator_code = serving_operator_.getcode ;";"0"
"what is it, a string, a number, a tuple";"0"
"why do we need to give such a silly warning instead we should just disable the button and enable it back when it is ok to click it again or i am missing something";"0"
"remove all .ds_store in your next commit.";"0"
"is the static_cast<const...> actually necessary and is duplication of a one-liner really that bad const_cast is really ugly, no matter where you putiti'd rather see the logic of getting the vector element duplicated than the const_cast...";"0"
"r_base is a refreg, so it seems weird to make this non-wide =32b .";"0"
"yes. limitation of varargs macros, there has to be something there. the other workaround i've used is log_e ""%s"", ""no iv provided"" , butithink that is uglier.";"0"
"operatortest = factorytest";"0"
"useless comments. use list.h.";"0"
"liar.";"1"
"ok, ode to my own idiocy, this is what you said: """""" if you want your public functions in the module to work with the same instance of the manager, fine: you initialize a global object of this type in the module, and make those functions to proxy calls to this object. """""" making the original ""singleton object"" global, not making the methods global to the module. can you recommend me a book that explains how to read :-p";"0"
"i think the right way forward is to make abort 3 actually, you know, abort :- i've been meaning to get round to this for a long time, and i've finally started making some progress:";"0"
"_test_attach_interface has a mock decorator. calling it with like this will override the mocked argument. call with key-value arguments instead.";"0"
"cleanup should only be called if it actually worked. otherwise, you are deleting objects you need for debugging";"0"
"this is *really* ugly. the caller should know for certain whether this is the case. the caller can simply passin the correct array.";"1"
"that means doing this, given the values of state_bak and state: sp_hdmi_mute_video anx78xx, true ; sp_video_mute anx78xx, true ; => useless as they are set to true only in state_video_output and then this: sp.hdcp_state = hdcp_capable_check; sp.tx_lt_state = lt_init; sp.tx_vo_state = vo_wait_video_stable; /* reset audio stable counter */ sp.audio_stable_count = 0; all useless, except of course setting tx_lt_state to lt_init, which is done below anyway. ==> drop these 2 statements.";"0"
"you should passvolume_obj instead of volume_id ovcer rpc methods.";"0"
"i think thatitis better to remove 'description' from fields on l587.";"0"
"gah, they both did that...";"0"
"holy crapyeah. i distinctly remember me going, fixing it, removing the entire directory structure and running cbuildbot to see it recreated. i have no idea how this typo popped back and when.";"1"
"partial_result != 0";"0"
"ideally the undef wouldn't be quoted, undef is a special puppet value, like nil in python.";"0"
"shouldresemble looks better, the problem is the stupid value field is a pointer to a string instead of a string, and you can not write string{""value""} the way you can write compute.metadataitems{ ... }. anyways, i've moved it to its own function and therefore its own tests.";"1"
"i think there is a race here with two threads could be executing this statement at teh same time when next_method_id_ == kmaxmethodid - 1.";"0"
"i think the sequence above could be formatted so: if not self.is_repo_initialized : # ... elif self.is_out_of_date : # ... else: # ...";"0"
"done. these were all mindless translations from the 'c': const char *stringfromkeytype ... {...";"0"
"do you know why the es402 spec requires that 'true' or 'yes' to be not valid can we change the spec this is a terrible hack that just keeps growing :/";"0"
"trm says: **** caution: this register is kept for backward software compatibility. use gpio_irqwaken_0 and gpio_irqwaken_1 instead. **** should do rmw on those regs instead";"0"
"bummer. except for these lines, this cl is entirely deletions! you had to ruin it with a modification.";"0"
"bad rebase";"0"
"crapthat should not be there. this was testing some -weverything related warning it thinks w and h are not initialized below, though all the paths satisfying base and png do initialize them . i might do a style passand change all such c-style tests, butitis unrelated to actually fixing triggered warnings.";"1"
"thanks! i just tested again and it works for me. i'll go ahead then.";"0"
"there is no way this compiled, what is this rubbish";"1"
"use err here, or if we are going to abort anyway, die";"0"
"i swear i've posted a reply twice, but maybe gerrit is eating it. i compiled this on arm and disassembled it, and the result used a single 32-bit integer for it.";"0"
"yes, this is a brain fart.";"1"
"kill this comment";"0"
"max_response=_shading... max_shading_ratio=_shading...";"0"
"this is redundant, slug is always initialized below";"0"
"i think we need to do some git cleanup after a failed patch if we are just going to continue running - i.e., git rebase --abort, git am --abort, etc.,";"0"
"this lineno is not useful ... it is the lineno of the die func, so it'll always be like ""69"" if you want to make this truly awesome, then add a backtrace func which die will call. and have your new switch_to_strict_mode call 'shopt -s extdebug'. dump_trace { local j n p skip func src line args a # ignore dump_trace, so start at 2 skip=2 error ""backtrace: most recent call is first "" p=0 for n = skip ; n < ${#funcname } ; ++n ; do func=${funcname ${n} - 1 } src=${bash_source ${n} ##*/} line=${bash_lineno ${n} - 1 } args= for j = 0 ; j < ${bash_argc ${n} - 1 } ; ++j ; do a=${bash_argv $ p + j } args=""'${a}' ${args}"" done p += ${bash_argc ${n} - 1 } error ""$ printf ' #%i: file: %-20s line: %4i function: %s n args: %s' ""$ n - skip "" ""${src}"" ""${line}"" ""${func}"" ""${args}"" "" done }";"0"
"i can not seem to configure the ide to not do those and it is pissing me off.";"1"
"i've just realized that this is here. this declaration is trashitwas moved to the wrapper above and i forgot to delete it here. it will be gone in the next patch set.";"0"
"nit: try to make definition order match the header declaration order or at least do not make it any worse than it already might be .";"0"
"mmm... best place would be in ext4_create_fs_aux_info to put this into aux_info, butthen we have to deal with ext4_parsesb_info";"0"
"oh shititis fixed now.";"1"
"is not this wasteful couldn't you just do list<componentname> componentlist = cachedconfigs.get s ; if componentlist == null { componentlist = new arraylist<> ; cachedconfigs.put s, componentlist ; } componentlist.add componentname ; so you just do one lookup and if needed one insert of the list";"0"
"file name depends on the pid, technically it is not constant.";"0"
"crapthis was left over from a different version.";"1"
"no, i am being stupid.";"0"
"the goals is to abstract. all the members here behave similarly with their private sublists. uid statistics begin /end for pid, as is pid statistics begin /end for gone pids. if i switch to gonepids, even more so with regards to making the code look simpler and not have to wrap.";"0"
"trove_build_dir and trove_integration_conf_dir need to be removed here also";"0"
"why are we even doing this header parsing crapbtw seems to me this is 1 a time to check/time to run race, 2 we could just handle the appropriate error code w/in the curl fetch, and drop this whole pathway. 3 for alternate urls aka, .xz which we do not actually support w/in make_chroot , just loop over the fetch function till one succeeds, else dumping complaints for all.";"1"
"why do not you have a struct and reinterpret_cast and why copy field by field why not just have my_data_ = *reinterpret_cast<data_layout_t*> p ;";"0"
"$ dirname 'readlink -e $bash_source 0 '";"0"
"i think we could simplify if we shuffle registers around a bit. for example stupid but safe : moveforrootregisterrefactoring scratch1, bytecode ; pop ebx ; // we can pop here and remove all related logic afterwards. /* ... dispatch with cmpb scratch1, immediate ... */";"0"
"fold this into the 'if'. you do not need this bool anymore.";"0"
"yikes, that was dumb of me! thanks for catching it.";"0"
"hi, neutron 3p ci operator here. we need some way to retrigger on an occasional basis, and a standard syntax would be nice. can we come up with a trigger that does not contain recheck at all, and just leave that verb to infra to morph as needed retrigger/redo/bastardthirdparty-make-your-shitwork-now-now-now/unicorns-and-rainbows/... does not really matter what.";"1"
"probably better even though nested structs are a bit ugly in mojo";"1"
"the writer coding conventions say put the { on a separate line - but i agree with you that that is ugly so do not care that much :";"0"
"i don t think you need these asstd::strings.";"0"
"prevent dirty pages after the zygote forks by calling freezesnapshot.";"0"
"in that case, my personal take would be the alternative outlined in your first bullet. what i leave this up to you.";"0"
"if we remove 'ironic_driver' from extra_specs, this should be removed too.";"0"
"when you say ""outside the scope of this class do you mean that objectpool does not take ownership and that still means that they should stick around until the objectpool is destroyed. in either case, clarify the comment.";"0"
"may as well combine all of these lines: setproperty property, base::inttostring value .c_str ;";"0"
"here is where we should throw away the existing entrypoint, and unconditionally set the generic jni entrypoint.";"0"
"...you can report and fix bugs at 'openstack-i18n in launchpad'_.";"0"
"this will be eventually removed by the migration to the tast. could you inline the comment here, instead";"0"
"use please "" instead of ' everywerhe";"0"
"damnit sorry : done.";"1"
"did you mean ""0x 0-9a-fa-f +"" again, consider ""0x da-fa-f +""";"0"
"yep, freemarker makes this code pretty ugly. the intent here is that if the string is ""50"" we insert 50, and if the insert is ""abc"" we insert ""abc"". in other words the groovy literal is either an int or a string depending on whether the string value in this variable is a string starts with digits or not.";"0"
"remove the fake method entirely. just do: mock_get_domain.return_value = mock_virdomain";"0"
"quick stupid question, but why 12";"0"
"> you should change the command line for a test in setupcommandline so this is not needed thanks for suggestion jochen. i would love to use setupcommandline, buttestpasswordgenerationagent is not descendant of inprocessbrowsertest i moved this call to the test. why to add html attributes in all tests ...";"0"
"nit: unnecessary with the comment below above render_process_id";"0"
"you should put a konstant in here.";"0"
"this does not look right. you should return a css:uno::sequence";"0"
"i am somewhat of a fan of still having the useless = 7 << 4 just to make it obvious that we are setting a field. ...but i guess that is a matter of opinion.";"0"
"...and you definitely do not need to parsea string! you know this is a sockaddr_in, so just cast.";"0"
"so gae sucksapps do not have access to their app id during init time. i had to resort to this late binding via ""placeholders"" in the pattern strings, e.g.: func init { validation.rules.add ""services/${appid}"", ""config.cfg"", func ... error { // do validation. } validation.rules.add ""regex:projects/.*"", ""${appid}.cfg"", func ... error { // do validation. } } i couldn't find a cleaner solution : the worst part aboutitis that the actual config loading api cfgclient.get does not use ${appid}. users will have to be careful to construct exact same strings as they use in validation patterns. do you have any suggestions i am considering moving this placeholders shitup a layer into the root of the config library, so that both cfgclient and validation rules canuse it e.g. we'll be able to do cfgclient.get ..., ""services/${appid}"", ... . butitadds a weird-assconcept to already incredibly complicated api. :";"1"
"ak, that was dumb of me not to see that, _that's_ why you did it that way.";"0"
"appenginemodule --> perhaps call this newappenginemodule.";"0"
"you do not need the last line of ""$ gen :"". just switch the first and second line: $ gen : private_custom_tool = $< $ clang $ $ gen : $ local_path /gen_syscalls.sh";"0"
"boop boop, this is the white-space police again. this is strike two, failure to comply will lead to unpleasant consequences.";"0"
"negate=negate, although that is being anal.";"1"
"are you intentionally including a newline at the beginning of the string i am surprised this works.";"0"
"sorry i am still not clear. what different values mightitreturn";"0"
"this definitely seems useless. const pointer to a write-only buffer, which points past the end of valid data.";"0"
"the build code is really just using 'uname -r' to get this. which means the next os update is going to break too. how about: ln -sf linux2.6.mk linux$ uname -r cut -b-3 die";"0"
"remove and use self.fake_firewall below";"0"
"self._pdk or self._pdk_man";"0"
"00affcac69c7aae6c2cfcbc71f724e1c16d0b445 is ""soc: qcom/spm: shut up uninitialized variable warning"", the proper commit id for this cl is f6419f240b15f967713c5cd6857dfba8fb390589.";"0"
"this already exists in the terrible nova/image/glance.py module. it is ugly as hellbutitactually does work -- i.e. v2 api glance servers can be used and understood along with v1 servers.";"1"
"""$$f"" does not exist as we are not looping ofre the source files";"0"
"drop the ' die' part";"0"
"actually they are both wrapped at the boundary set in the pcm's configuration. this is important and i was ignoring it since i always setitto max as i have no use for it. i'll upload a new patch set the pulls the boundary from the pcm and does the wrapping correctly.";"0"
"paren should not be needed here";"0"
"what is it used for an empty dummy file should work.";"0"
"self._my_id does not existitis self._coordination_id";"0"
"you probably want to indent one more to be consistent with the code around you.";"0"
"this should probably be false. not sure we want to support the idea of uprevving chrome on manifestversionsynced code. should also be calling the helper as well i.e. this stages implementation can be return false";"0"
"if you allowed black_list to be null, this would be while ptr *ptr";"0"
"nitithink an int32_t is appropriate, here and below, since size is an int32_t";"0"
"wouldn't you be missing python if you can ssh, run 'python -c ""import cpickle""', and that passes, then you do not need servo.";"0"
"or call it gradlepsielements, since this is the common superclassfor all gradle psi elements.";"0"
"can you stick this in a new local function like _assertnotminilayout or whatever name that'll make it easier for the tests to stub it all out.";"0"
"this will not force sync/flush. as i mentioned before, i think you can just put a hwid_bundle_vm.sh in srcdir folder.";"0"
"sg. will shoot to have the follow up cl to implement that out for review this week. thanks!";"0"
"you are right. i will remove disk_allocation_ratio and cpu_allocation_ratio.";"0"
"done. did you want me to remove the previously existing __apple__ ifdefs";"0"
"hi, colin, please forget my idiotic question. i got mixed up this for a while after reading the description i mentioned above. sorry to annoying.";"0"
"i am fine with 'arm64'. 'aarch64' is ugly anyway.";"1"
"you should catch numberformatexception that could be thrown if the value is invalid:";"0"
"presumably we could also obtain env_suffixes.pathsep, butitshould be the same value... this is a pretty dumb way to plumb this through, but i did not want to make a big change out of this.";"0"
"let us rename all 'activedirectory' to 'dummy' or something like this";"0"
"minor: we should put the _delete before assertequals because if assertequals raise excepiton, we will have no chance to _delete. this will cause test bed messy and impact following test methods if the cleaness job is important";"0"
"what happens to the caller in this case the passed in value is freed and not re-initialized.";"0"
"nit: since you are here let us remove these const's, and please use stringconstant.";"0"
"i guess now that the renderer is mypanel and not simply myparentcombobox, it should be mypanel that has isshowing overridden";"0"
"this *is* c++ code, the proper way would be to use languagetag. and this *is* smelly and *does* fail if the bcp47 tag contains a script code, for example. i'll take over and use a different approach.";"0"
"i wonder if there is a cunning hack here for the <string.h> stuff... could we take the upstream-netbsd versions and add them to the libc_netbsd.a but as weak symbols. then anyone who has a platform-specific optimized version can just add the file somewhere else, and we let the linker favor the strong symbols that might let us avoid a lot of this makefile crap also, i wanted to point out that i am not trying to say ""you must solve my configuration problem for me before i let this change in"", which is what my previous comment may have sounded like. for now, feel free to ignore my comments on the makefile; that is just me thinking out loud about where i think we should be going. with intel, mips, and a bunch of different arm vendors all wanting their own optimized <string.h> functions, i do not think this makefile mess scales. it is already unreadable. but we do not have to fix everything all at once.";"1"
"should this have ' die'";"0"
"would you mind adding ""chromepreferencemanager resolvechromepreferencemanager "" to chromeappcomponent and using that getinstance should die eventually, and for that to happen all retrievals need to go via dagger.";"0"
"ach, damnthere is a rtl_ustring_release newdata ; missing, right";"1"
"no, it asks for new jarfile aarfile to be done outside the try block, which is silly because it can throw an exception too.";"0"
"stupid mistake on my part: i assumed since gpio_x00=0xa0, gpio_x01=0xa1... that gpio_x15=0xaf. unfortunately, gpio_x08 gpio_x09 are undefined so gpio_x15 is actually 0xad. this did not turn up in my testing since my board has been reworked with a strong pull-up on gpio_x15 such thatitis high by default on boot.";"0"
"mouse_handler_ = nullptr";"0"
"+1 also this file is using fake* for these mocks, so let us call this fake also.";"0"
"why do you suddenly switch from check-dag here unless you require a certain ordering of lines inside the dump file, you should always stick with check-dag.";"0"
"could you change dump value as text and compare to string by expect_streq to make what this test does and see where do we fail by string diff. this is yet another code and we do not want to debug test code.";"0"
"let us make the typenamespace and iodelegate into protected members and save ourselves this indirection.";"0"
"i think a good rule of thumb: if you are using mock.xxx, then it is a mock. if you do not use anything, it is a fake. this looks like a fake to me.";"0"
"i hate to be _that_ guy, butthis should probably be a different change";"0"
"that one should go away: it is a default and it will be killed today:";"0"
"so newest_synced_revision is really a commit_position";"0"
"i think you can update by uuid by joining them and using uuid. but i guess one could argue against deviating too much from what we have in place now and optimize later. just seems kinda ugly.";"1"
"if you get here, then atmpstate == astate, so this assignment is not useful";"0"
"self._filter_cb = filter_cb";"0"
"static const struct mali_dvfs_info *mali_dvfs_infotbl;";"0"
"yes i believe, unless the developer does not need enter and access ui -- butthen it'd be anuseless test...";"0"
"sdkconstants.android_home_env";"0"
"you updated sp.edid_blocks above, so i think you should re-run the checksum anyway, and get rid of sp.read_edid_flag.";"0"
"i added this originally to mark what serverwindows had cfs associated with them. it would be similar if you did: if has_created_compositor_frame_sink_ ... otherwise you can just merge this into the stringprintf .";"0"
"oh. i am dumb.";"0"
"edit: also, i am an idiot and it should of course be 4 bytes per pixel in the framebuffer for rgb888. so, same question, but make the math 1366 * 4 = 5464 and align_up 1366 * 4, 16 = 5472.";"0"
"so useless.";"0"
"oh, this is ugly. please change the format of extra_rpm_repos to name,url,priority, so get_repo_url and get_repo_priority boil down to get_repo_url=$ shellecho $1 cut -d ',' -f2 get_repo_priority=$ shellval='echo $1 cut -d ',' -f3'; echo $${val:-10}";"1"
"ah craphow embarrassing... :- abandoning.";"1"
"darn. thanks for trying. maybe someday in the future... did u open a issue with the author i am sure he/she would like to know .";"1"
"i wish we could move away from using strings to express mocks. we could use actual imports and it would be a lot more effective. no action required on your part though.";"0"
"why is nulllable=true needed in the model, nullable is not specified and i think the default value of nullable is false.";"0"
"this should be $ addsuffix .toc, $ built_shared_libraries . anyway, i think two $ addsuffix would be better than $ addsuffix and $ filter-out .";"0"
"stupid question: as a temporary solution, can we only return a version if it looks like x.y.z";"0"
"extra empty line or a spare one after the following section comment";"0"
"bool skip_first_stack_check = false; .... skip_first_stack_check .... for readability. another possibility would be to introduce flags with kskipfirststackcheck and kanalyzeenvironmentliveness .";"0"
"""$ """;"0"
"this returns a bufferedimage, if we store it as bufferedimage we can remove the ugly nulls from the getwidth and getheight calls.";"1"
"this should be part of ./stack.sh where everything else gets installed. i am for maintaining the status quo of run_tests.sh not installing anything";"0"
"this should be collapsed down to log.warning _lw ...";"0"
"are waiting_for_response_ and is_load_to_different_document_ used somewhere else if not, they should be removed.";"0"
"can kill this if we kill the delayed shutdown see comment in cc file";"0"
"in current ps, db_max_attempts is useless";"0"
"it was added because in some cases method list_user_ids_for_project returns dumb member. it is happened because sometimes members returning in the follow form: {'member': u'cn=dumb,dc=nonexistent', u'cn=d26520a7dbb64bb791d1b1c6759fddf6,ou=users,cn=example,cn=com' } in this case member is dumb. and i added this test and test_list_user_ids_for_project_dumb_member to ensure that such members will be missed";"0"
"i forgot how this look in text proto it may look ugly.";"0"
"wtfuses wtfmake_noncopyable";"1"
"ack, i'll remove them all.";"0"
"nit: best not to indent these bullets and best to have spaces between each bullet.";"0"
"i feel dumb : done!";"0"
"is notitbetter long-term to implement the /proc/<pid> solution now";"0"
"even though i hate friending, maybe make classa friend so you can make this non-public and less error-prone";"0"
"remove all printf";"0"
"need to initialize put_offset here. or maybe as an initializer in flushparams.";"0"
"remove _android";"0"
"i thought selinux had killed bootchart. should we just remove it";"0"
"and the naive me thought that there should not be an issue like this, if i copy-n-paste these headers from other files... : will be corrected in the next version of the patch set.";"0"
"these warnings are totally useless and are not doing what the author thought they would. sigh.";"0"
"why do not you initialize weak_ptr_factory_ as ""weak_ptr_factory_{this};"" in the header file and remove this duplication from both constructors";"0"
"dislike this here. is there a better place for this constant alternatively, leave it here, then we move the git crapout of this lib into it is own module...";"1"
"dumb linters :-";"0"
"i know you are just modifying this, but what the heck is the point of this block !";"1"
"sdkconstants.value_true";"0"
"garbage urls will crash this. we should wrap this in a try/catch for urisyntaxexception .";"0"
"is the plan to nuke all losetups or just as many as possible";"1"
"oh, that suckslet me see if i can figure out something that does not involve a ton of rules based on mac addresses.";"1"
"we can insert one build message for each cancelled slave. build_id=master_build_id, message_type='abort_slave', message_subtype='self_destruction', mesage_value=slave_build_id . this works for you";"0"
"should this be enforced in the method calls themselves by checking error_ that would be pretty invasive and nasty and may not be any better.";"0"
"nit: /* entsize */ 0";"0"
"nit: might be marginally more performant to do: my_pids.extend get_my_pids if pid in my_pids:";"0"
"change ""faking connectionerror"" to ""faking keystoneclient raising connectionerror"" keystoneclient has always raised connectionrefused as far as i know, so it is not accurate to say that this is something that changed.";"0"
"crapyes of course since the loop is gone. sigh.";"1"
"i expect that we should deprecate this for one cycle, so the removal should happen in ocata.";"0"
"my fault, i missed this one from previous review. we should return empty list {""migrations"": } when there is not any running migration. and did i miss something we said on irc we return all type migration in this api. the last sentence say we only return live-migration at here";"0"
"i think that delete-orphan will be useless since the fk cannot be made null anyways. so there is not a case where secret_user_metadata instance can be an orphan.";"0"
"optional use ""this.signedin_"" instead, since that is the actual property triggering this change handler";"0"
"nitithink this wants to return step_odict; returning an empty dict makes this inherently behave like dropexpectation.";"0"
"i guess the function name createopacityelement would be self-evident enough to indicate the field as the opacity value. adding /*opacity=1.f*/ may not give more useful information : .";"0"
"i think we should kill this logic, fwiw. fine to be identical for now, but add a todo for that";"0"
"bool jump_detected = ...";"0"
"very nit picky on my part, but i find negative ints in config files to be most ugly. any reason this can not be ""0"" i understand this is a cherry-pick but honestly i think it is worth considering to change it in master as well.";"1"
"ditto, but particularly in this case a user_id may not be a uuid if it is coming from ldap or some other backend";"0"
"lets mention here the original test case. not qa-elf.sh.";"0"
"future language designers take note: this is the kind of silliness that results when you do not allow trailing commas";"0"
"typo and double negative also, please do not break strings over several lines especially not with backslash continuation ... the prevailing wisdom even in the linux kernel is now that going over 80 characters is the lesser evil compared to breaking a string that someone might grep for .";"0"
"yes, that is the best choice for upstream ndk use. you may or may not want to define _file_offset_bits=64 for your own builds. this only made it to the ndk around l, iirc, so it is probably not an option for upstream. the other alternative, popular on android, is to just always use the *64 variants. that works great unless you need to build on mac os too. they do not have any of this stupid compatibility cruft, which makes it especially sad that android shipped with a 32-bit off_t :-";"0"
"this is an error-prone approach that is all but guaranteed to bite you on the buttwhen you are not looking. what you want to do is filter for allowed characters, rather than filtering out disallowed characters. that is obviously harder to do, but you could do something like: allowed_chars = re.compile r' s w - ' if not allowed_chars.match string_to_check : raise exception";"1"
"the m_trafo member should be unused now, so it can be removed.";"0"
"!network_id_.empty";"0"
"damngood catch. i've got to add them in setup.cfg";"1"
"ah that makes sense.. incomplete classlimits us a lot! *shrug* nit: otherwise, maybe a global template <classdatatype> using internalnodeattacheddatastoragefor = internalnodeattacheddatastorage<sizeof datatype > could help.";"0"
"per tom, this sounds like it should be an h3. i am not sure if the h3s that follow should in turn be h4s.";"0"
"please remove halign=start to align the control left and right";"0"
"silly comment but ... first line and only one line needs to be a summary.";"0"
"it feels weird that when you stop the handler, all pending requests get reset. butthen you can queue up requests while the handler is stopped and they will get processed when the handler starts. should we disallow requests in a stopped handler then the reverseenumeration test can go away...";"0"
"this about a eoghan glynn question here: personnally i' m not sure that gnocchi should handle this case.";"0"
"i thought aboutitbut i hate makefiles and their weird language so i thought extracting the list of files was good enough.";"0"
"you do not need $ subst here. it is better to write it as: ifneq $ use_dex2oat_debug , false dex2oat := $ dex2oatd endif dex2oat_dependency += $ dex2oat";"0"
"it is a waste of space and brain drain to use useless wrappers. and yes, windows is stupid for not being posix compliant.";"1"
"afaik we do not implement per rule subscriptions for now , so those can be killed.";"0"
"oh man. super annoying!";"1"
"i guess i can retype them if another problem occurs. i'll remove them";"0"
"smart assnit of the day: that patch did not introduce a regression as the option did not exist before : it simply introduced an option that does not actually work.";"1"
"this mapping will leak if any of the asserts get hit before you munmap it. we should put these through a scopedmmap. same in the next function.";"0"
"we still have sramfunc in plat_pmu_macros.s, so we need sram_test and sram_data. oh, it so stupid use wrong sram size before :";"1"
"kbits == kbitsperbyte * sizeof t";"0"
"these min/max are not needed for this controller. i just delete them then.";"0"
"sudo logic for this is actually pretty stupid- it considers the first argument that lacks a '=' in it as the executable target. so it is not hard to hack that one up.";"1"
"pavel mentioned analternate way to do this that makes registeroptionshandler obsolete here. see";"0"
"i do not think you canuse processmanager here, you can only stop processes that are started/created by processmanager. i think you can just use kill instead.";"0"
"sorry, this is yuckeven if the debuggeris not attached you need to make this call and go into the compiler to figure it out. not super happy about that design.";"1"
"ok, i understand this change. it looks like tegra cortex a9 does not really have a size of 6. ...butthat the 6 is not harmful on tegra and is now the default for v7. sounds ok.";"0"
"u-boot is hardcoded to expect uenv.txt a directory level above boot.scr.uimg.";"0"
"all of these options are pretty bad - maybe least bad while not breaking the build would be to add something to request. i'd actually stick with a dumb boolean or something instead of yet another interface, having retrypolicy and newretrypolicy will be even more confusing if it is unclear that they are both actually used. something like request.setshouldretryservererrors boolean";"0"
"is it ok to have dead pbr";"0"
"you are not inherting any eclassthat'd set up things, and you are not setting src_uri, so this dummy func is not needed. just delete it.";"0"
"it is ugly. it could be as well: value = os.environ.get name, '' return _boolean_states.get value.lower , default but imho still it is uglier than what is here.";"1"
"drop the die here and below";"0"
"grubby appears to be included with fedora but not ubuntu or coreos.";"1"
"i am just being lazy -- i'll change it to support both.";"0"
"needs "" die""";"0"
"serial_data_type_t is an enum, should notitbe returned by value";"0"
"the purpose of overriding is to *not* create the port when deploying with an external balancer";"0"
"oops, i completely missed that the uma is only about username, despite it having ""username"" in its name. that wasstupid of me. fixed now!";"0"
"cephx should be configurable";"0"
"good catch. it sucksthat we have multiple name spaces for the same stuff.";"1"
"you already git depend on that, so this should not be necessary.";"0"
"do not you want these two in reverse order also the store should be a release_store if you want to guarantee that samples_map is only seen fully initialized. but maybe this oesn't really matter because this happens way earlier";"0"
"same - just put these directly into tspi_test_libs below.";"0"
"i think you should also add a bullet that says: * improve test coverage";"0"
"make this a phony target or else we will not rebuild the init when template arguments change. .phony: $ local_built_module";"0"
"we have seen cases where text fields are hidden and then visible, when you try to edit them webdriver throws and error that the web element is not in an ""editable state"". this has made this generic more robust. except for now there are some text boxes that apparently do not support getting the 'value' attribute even if they are not password text fields. ridiculous!";"1"
"this and the line below have very ugly wrappings. you are changing a single string that spans multiple lines, so it is ok to re-wrap the affected lines.";"1"
"event_log should be eliminated by testlog, so let us do the migration now.";"0"
"you should absolutely remove the period here, plog adds a colon and an error string ;-";"0"
"same dumb question";"0"
"we have rhel computes - i guess we need rpm package too.";"0"
"this is clearly stupid and wrong";"1"
"i'll kill this extra blank line on next refresh.";"0"
"i think you should only add pins_wp, remove others under mmc1_pins_default";"0"
"i agree. block the knuckleheads!";"0"
"use a unique_ptr - you can std::move them into bindonce, and this is definitely much more preferable compared to a raw new and base::owned. in general there is no reason to ever use base::owned for anything other than the this argument of a bind.";"0"
"should be assert_true, since you dereference it later on.";"0"
"i am curious ... how slow is this i've written a c replacement 'qmerge' that unmerges packages really really fast ...";"0"
"json does not allow trailing commas because it is dumb also a bunch of lines below";"1"
"why is this a unique_ptr this is data owned by the oat file, potentially, and can not be deleted.";"0"
"better just remove this completely than introduce a rotting debug_cppu_uno";"0"
"= flag_track_double_fields !flag_unbox_double_fields;";"0"
"please do not have using statements importing names in a header. please fully qualify them. in the c++ file, feel free to do whatever aids convenience.";"0"
"crapthese are not static because of the ut right";"1"
"is a thinko worst than a mere typo... like someone actually thought aboutitfirst";"0"
"i think you should mention about your puppet-glance change in commit message.";"0"
"this creates $d/out/opt ... i do not think that is what you want";"0"
"kindly purge the associated events as well while purging the resources.";"0"
"aah : i spell it like that because of substitution: ignoring failed iptables '-n', 'discovery' : ... blah-blah... so it looks like a command";"0"
"#endif /* libqmi_qmidev_mock_h */";"0"
"that seems sqlite-specific. considering that you have issues with further migrations after this one successfully passes, i feel that this patch is just useless.";"0"
"maybe ull or some more explicit 64bit type. arm9, 32bits, too small";"0"
"if you look at the original cl that introduced the ssh host metric, they want to track down dead hosts to kill. it makes sense to leave around the ssh host creation metric using a dummy host, so they know this attenuator host exists";"0"
"they are actually there already, so i removed these redundant dchecks. also removed the redundant comments.";"0"
"bool built_fixed_codes_ = false; here, no need to setitin constructor. i think you could also do the same for all the vector resizes.";"0"
"i think we can actually drop all these discoverable policies.";"0"
"you want the opposite right self.minimum_duts = 0";"0"
"ya thats ugly.";"1"
"this might make some additional things dirty since if only the virtuals were dirty and the directs were not now all methods would be marked dirty.";"0"
"its super ugly... i put an example in bbuart_unittests which i supply for unit testting. i'll put a short version that only has what i am looking for here.";"1"
"yes, we should be able to use the simd instructions vcnt on arm and cnt on arm64.";"0"
"nit: nullptr /* out_static_user_agent_settings */";"0"
"might want to use reverse = true here , if the highest priority step needs to be executed first";"0"
"note that the non-hover behavior is about to change:";"0"
"or... ret = cyapa_read_byte ; if ret < 0 { dev_err goto out; } cyapa->m_bl = ret;";"0"
"format_string=default_format_string";"0"
"really, we have to utter ""host"" twice in this construct so redundantly repetitive.";"0"
"this comment is incorrectitis the interface id. do you really need to store this id can we just remove this member";"0"
"you still have the framelistener and all these caching things. they should be removed and only a set of static methods should remain.";"0"
"so all that we'll actually need to do is add the securecontext annotation on: securecontext interface worklet { }; namespace css { securecontext attribute worklet paintworklet };";"0"
"interesting that you can passnullable as a positional param here, butthe way you've done a number of the subclasses it can only be passed as a kwarg param suggestes doing: def __init__ self, **kwargs : self._nullable = kwargs.pop 'nullable', false here ... even though i hate that :";"0"
"i kept this null abstime check, because previous callers were protected from null timespec, and i do not want to introduce new bugs. i separated pthread_cond_wait since the logic to deal with null-or-not timespec's was ugly.";"0"
"s/int/size_t/ or if you want to be analvector<string>::size_type";"1"
"''m5sum'' .. note:: currently does not work for large objects...";"0"
"i'll export this as adb_dirname.";"0"
"but we would be copying with the same register assource and destination in that case, wouldn't we";"0"
"wtfis this lol";"1"
"why not use a unique_ptr this way you do not need to free it explicitely in onshutdown.";"0"
"this this is pretty simple, you canuse a dict comprehension for this: return dict k,v for k,v in ... if isinstance v, criticalerror but... do you ever expect the value not to be a criticalerror";"0"
"if there is a set of member vars that is ""controlled"" by a mutex member var, i'd place them into a block of their own, with the mutex member var at the head of the block, as a means of documentation.";"0"
"you should be using string rather than std::string throughout.";"0"
"crapneed to update this words to match the deployment guide";"1"
"can we do better than pulling all the records and doing the sum in python at large volume counts, this is going to sucki suspect try it with 1 million volumes . sql count and sum would be better, i would expect.";"1"
"nit: i'd call this agent_az.";"0"
"done. i'll discuss with joel, and find a way to check the pid in pidfile is instalog or not.";"0"
"replaced this function with key . operator does not help for wtfhashmap.";"0"
"it hints to the compiler to generate less shittycode, which somehow appears necessary. perhaps we should upgrade the compiler.";"1"
"this call to 'str' here is useless.";"0"
"wtfcapdata cap_to_index n .permitted";"0"
"hiding... crapthanks!";"1"
"nit: please move : inside trans";"0"
"i do apologize for this. i am a mess and i should be hanged upside down.";"0"
"wow, did we miss an obvious bug right here! what idiot lgtm'd this : i am fixing this as part of another cl now.";"1"
"blank line should be removed";"0"
"very tiny nit: there are two spaces before if";"0"
"ah, damnit. forgot to amend. thanks!";"1"
"if you have more than one missing parameter, this message is going to look ugly. '...a not supplied to vboxdriver. b not supplied to vboxdriver.'";"1"
"hmm. what about the protected 'buf' that is basically api, and i am not sure what if anything people assume aboutits contents. thanks sun, you retards!";"0"
"oh goddamnit";"1"
"ok, so my comment above is not a real problem. hostless job timeout will set aborted bit of all child jobs, and shard-client should sync the abort bit to shard db and abort all child jobs. this cl should prevent master scheduler to set the is_complete bit of child jobs running in shard as their aborted bit is set to true.";"0"
"how about this ugly construct while ! value = check_for_power_on_event";"0"
"are all of these values only for vmware or is one relevant for other hypervisors";"0"
"six should be grouped with cliff, as they are both 3rd party";"0"
"please change all stubbing out of __new__ to stuboutclasswithmocks as explained above.";"0"
"nit: this could just be drawable drawable = thumbnailgradient...";"0"
"this is kinda crappybut i need a cleaner test suite due to how gradle does its reporting. happy to discuss this change.";"1"
"i dislike all of this webapk specialisation as much as you and i want to get rid of as much as if as possible......";"0"
"comment style - multi-line comments like this should go before the line in question";"0"
"yeah, mx_cprng_draw_max_len is just #define x 256, not 256u. stupid language. maybe the cast there is better anyway. fixed read_len location.";"1"
"couldn't figure out a great way of doing this :";"0"
"nit: put members below methods";"0"
"kill these too";"0"
"i do not even know why idea inserted this here. killing....";"0"
"wrong param. should be cg_ref.";"0"
"hrm, it seems like this method's name is full of lies if its result needs to be anded with 0777...";"0"
"no error checking. just because the existing code is crapdoes not mean new contributions are allowed to forego standard practices.";"1"
"list is internal identifier, and xlist is a stupid name";"1"
"you are supposed to use ""list_for_each_safe"" rather than list_for_each when using list_del, are not you";"0"
"hmm, yes, try should be removed.";"0"
"danalbert made this unnecessary. we've even started to remove them in places...";"0"
"should this classbe a traybackgroundview subclass";"0"
"is this just some nasty side-effect-tastic constructor, or is this actually unused";"0"
"ah, how about using: const bool region_dump = argc == 9 ; if region_dump { ... } else { area_size = screen_size; }";"0"
"actually, let us just keep this. no need to kill it off really.";"0"
"the jit may violate this anyways. e.g., single invocations of run-tests will not be compiled. so all the ""is compiled"" asserts would fail. for this to really be tested for jit, we'd have to change the test setup in a *lot* of tests.";"0"
"i think you should put this down to the non_verified_boot, alongside the 'run net_boot' and 'run usb_boot'.";"0"
"remove libc++";"0"
"this will be an error-prone build failure. should be suppresswarnings ""deprecation"" lol...";"0"
"i destroy dev_priv->wq on failure.";"0"
"i do not see how's that different from myrendersession != null null : myrendersession.getresult";"0"
"...and more constructively, to avoid that, you'll want to also check syncservice::issyncfeatureenabled .";"0"
"given the test failures, looks like you need to remove yourself as an observer in your destructor.";"0"
"the pid would be useful here, so that in case multiple migrations happen in the same time, you could distinguish between them.";"0"
"no the v6000 arrays do not provide any efficient way to directly copy snapshot data into a new lun. which is why it is being done on the client side, even though it sucksi will make a note to look into this again but i am pretty sure at this point there is nothing i can do.";"1"
"changed to wtfhashmap.";"1"
"please put this in an own makefile, maybe package_emoji.mk. you might need to register it somewhere else, grep for package_classification.";"0"
"so for nova baremetal and ironic, config drive does not work. does devstack cater for that, or should we duplicate the logic perhaps in -wrap.sh .";"0"
"this again is mixing uint and intithink we should fall on the side of uint, because level is not something that can be negative but maybe i am just a performance-hating pedant . anyone else have an opinion on int vs. uint";"0"
"code is cleaner without 'i' variable i think. how about ""for af = gpio_alt_funcs; af < gpio_alt_funcs + gpio_alt_funcs_count; af++ {""";"0"
"this check is pointless. the code above wouldn't have compiled if this was false.";"0"
"this violates git commit message style. leave a blank line between the summary and the description. could you also paste the caliper output as is in the commit message it is generally ok for the commit description to be verbose as long as the summary is clear.";"0"
"we are talking about a u8 so i would write this simply as '0'.";"0"
"heh, because dash sucksand allows you to do this kind of crap yes, this should be fixed.";"1"
"this requires disabling webm-io explicitly. could make it only disable webm-io with a warning butithink this is best.";"0"
"actually, its not so - its should be ran for each device. the reason why its work now- dirty hack with disabling udev rules for usual disks. so, i would like to do not remove this trigger";"0"
"urlencode again would be nice instead of doing the string munging yourself";"0"
"i guess users is a generic group so it is okay to assign goofy to this group.";"0"
"i think we'd want lstat. is_mtd on a symlink should fail.";"0"
"why not ceph-mon $ hostname";"0"
"really, those people who send cls without compiling locally! the worse! :";"0"
"gah!!! this is horrible - however in this case it is ok because we never use this to do sync_compute_nodes - meaning it never goes over rpc.";"1"
"same. even more, this code is a dublicate.";"0"
"nit: this will actually print hresult: hresult: 0xfffff. remove the ""hresult:""";"0"
"add a dcheck that byte_count < strlen.";"0"
"s/nonsenses/nonsense/ and yes i completely agree they are nonsense! :";"1"
"this is redundant with mirror::throwable::dump. actually, i'd change the whole message to: os << ""pending exception "" << exception->dump ;";"0"
"yeah, sorry folks. was asked for a quick upload, threw it together and pushed it up- think it is very obvious i did not test the damnthing. sorting it, and pushing it post testing; can not verify it fixes it can not induce the timeout on my own hardware , butitll be devoid of these idiot mistakes ; patch to come shortly.";"1"
"unless the atomics grown on me overnightithink i'll remove them in the morning. a thread should only look atits own pid, so this just feels like we are implying there is something subtle going on when there is actually no reason for this.";"0"
"also...i am stupid, but how does this kick off the tests and not wait for them what is it overriding in hwteststage that makes it fire-and-forget";"0"
"ah crapsorry";"1"
"if making cmd_record.cpp use eventselectionset, we can hide eventselection entirely.";"0"
"config_ftrace is expensive and not necessary for systrace. all you need is config_sched_tracer.";"0"
"nitpick: trailing spaces, here and below and in util.sh";"0"
"kill the blank line";"0"
"i agree, the onupdate trigger should be removed.";"0"
"this should be pid .";"0"
"done damnit, you got me";"1"
"kclastoredata kinsstoredata kp1moreblock kp1lastblock";"0"
"this is kind of ugly. you can define a simple helper.";"1"
"i think link_value could be uninitialized here too, resulting in a garbage print.";"0"
"a+x also i think you will need to set the user bit setuid to be able to send signals to pid 1... setuid /sbin/shutdown unless you'll be calling this as root.";"0"
"yes it should be, wtfwas i thinking";"1"
"i think you can just add these to the end of the enum below instead of using #define ... gpio_part2_starts = gpio_e0 ...";"0"
"i'd prefer that the implementation of dvmcompilercacheflush was a nop than #ifdef-ing around the callers.";"0"
"i do not feel strongly butithink i'd prefer to still check against end . how about: llvm::value *arg_p = null; llvm:::value *arg_x1 = null; ... if getnextargument argiter, argiterend, arg_p getnextargument argiter, argiterend, arg_x1 ... nextargument would increase and check against end.";"0"
"this uuid needs to be inserted into neutron db in order to avoid conflict. and it should be hided from cloud user.";"0"
"we really need to kill this already...";"0"
"no cd $dest/$ovn_repo_name";"0"
"i think you missed the 'statistics' here and in the other files";"0"
"just abort with a message most android stuff including tests themselves just is not going to work well without android_data.";"0"
"in my mind, this is to prevent the user for adding some stupid like keystone_config { 'identity/domain_specific_drivers_enabled': value => 'blah' } or keystone_config { 'identity/domain_config_dir': value => 'somewhere/else' } it is just a pedantic check, but may be useful.";"0"
"no action required yuckreferences to global config in a method that could accept the values instead. curse you, mixins.";"1"
"that seriously need a javadoc comment here.. what the heck does ""fidelity"" mean in a log context maybe a more explicit name would be better.";"0"
"*sigh*... yeah, i can see why you had to do this. stupid compiler. still, can you please hide this with the offsetof calculation inside the mux and pll macros instead of putting another register list here";"1"
"no, this os is temporary allocated on stack , and will be destroyed at the end of this function";"0"
"can we promote this declaration up a level now it seems silly to have this as a block local variable inside of each case.";"0"
"add get_info; remove setup_edge";"0"
"i see. i did not realize layout was actually checking location_bar_ , with the stated purpose per comment of waiting until post-init. that does make it more appealing than i'd thought to use thatitalso avoids any possibility of a startup perf regression due to doing unnecessary layout here. what if we just changed that initial layout conditional to check something slightly different the most obvious would be a new boolean member initialized_ , less obvious would be ""some kind of condition that is only true after the home button is initialized"" or the like. the latter is kinda fragile against future reorderings, though, so i do not mind the explicit member.";"0"
".destroy = drm_plane_cleanup,";"0"
"ps_enabled is a bit vague...port_sec_enabled is better i think...";"0"
"i took a stab at rewriting this description and make this more clear.";"0"
"start off until someone needs this, at least for rockchip.";"0"
"i suspect we are about to die anyway when we are that low on memory, but 'done'.";"0"
"you might want to log abort for todo as well, either wakeup or todo will return ebusy and abort suspend.";"0"
"pending_create is hardcoded vpnplugindb.create_vpnservice. setting status is unnecessary";"0"
"ws to kill";"0"
"dummy sgtm, also stub/fake might be analternative if you find it better than dummy.";"0"
"we use 'items' instead of 'iteritems' for py3 compat.";"0"
"could use 'die' instead";"0"
"so what about ""$ "" we should bail out if it is not 0.";"0"
"let us capitalise it to be consistent.";"0"
"correct hash: 7e3b7dc76c41f9042a7079eb07d071f744bbd87a";"0"
"# vaa <- a0";"0"
"probably want to kill this comment";"0"
"again, backslashes here are unnecessary and should be removed.";"0"
"should this be const here and elsewhere or do we intend to passby value";"0"
"ack. did not see that i did this. absolutely no reason to touch it so i guess fat fingers.";"0"
"this is bad btw as pdata supposed to be constant... butthen we allocate dummy data in module init... why beats me. i guess software, layers, goodness.";"1"
"nit: this line is totally worthless";"1"
"i do not gotit if i remove virtio_dumb_resolve_format, this will change dumb path, you mean this will not introduce regression for dumb this abosolutely will not change virgl path. or you meanuse the dumb verion to replace the current virgl version";"0"
"new exception to use rather than calling cros_build_lib.die from this module.";"0"
"diese uebersetzung verliert den interessanten teil des kommentars.";"0"
"/* sortannotations */";"0"
"this should wipe prev_deleted_link_ otherwise you can delete, insert, undelete and get more than kmaxnumlinks items.";"0"
"maybe simply: trust_context.reauthentication_auth_method = cfg.conf.reauthentication_auth_method";"0"
"can be private and still be called by native lets you avoid polluting the public java api .";"0"
"downside to this, as i mentioned in the other file is that now you have error-prone string literals.";"0"
"i might be misunderstanding, butthis is just a clamp, and not an affine transformation. originally, i had code like this, but i was told by clint that this was undesirable as once uesrspace starts requesting values lower than low_threshold, the backlight never changes. in other words, you have to dim 3 times after you hit the low threshold before you get to black. what vijay recommended in the email earlier in the day does exactly this. as i said there, i think my solution is better. whatever you guys want is fine with me though.";"0"
"handledeviceconfigchange audio_devices_t device, ...";"0"
"hellno, not this way. there was a reason the quickcompiler declaration was hidden from the compiler driver. you are coupling them again. introduce another header file with createquickcompiler. or install the passmanagers in the compilationunit, so that mir_graph can access them without knowledge of the quickcompiler prefer the latter .";"1"
"$ basename $ .p then you do not need private_cpp_extension.";"0"
"pclk should be disabled here";"0"
"this should return a boolean success/failure value. dcheck dir_name != null ;";"0"
"die. :";"0"
"no need for a loop: find ""${path}"" -type f -exec shred -n 3 -z --remove=wipe {} ; in any case, i am not sure how useful this is. shred is supposed to be run on entire disks or disk partitions. on newer disks with enough free space the disk controller might simply write the new contents to a different physical block and lazily garbage collect the old block, which would still have the old data on it. you probably want secure_erase_file instead:";"0"
"damnthe mac!";"1"
"nit: frametokenmessagequeue* const frame_token_message_queue_";"0"
"according to google c++ style guide, each file should contain a description of the contents of the file. same for other files.";"0"
"this looks like it'd be better off being a dcheck, no";"0"
"use base::mac::objccaststrict<> here or use base::mac::objccast<> and remove the call to -iskindofclasssince objccast does the check already : - bool isequal: id object { dialogconfigurationidentifier* other = base::mac::objccast<dialogconfigurationidentifier*> object ; return other other->_uniqueid == _uniqueid; }";"0"
"there should be a default_domain_id";"0"
"hmm, because i am idiot and forgetitis automatically loaded...";"0"
"rv is not needed if you do not need to store the return value.";"0"
"you initialize this in oncreate, probably do not need to do it here.";"0"
"yeah... stupid mistake. i think it will be better to delete check and move file creatin to 'try' block";"0"
"yes, feel free to just delete this line. i really do not care if somebody decides to passrandom crapto powerd and we silently ignore it. :-p";"1"
"thanks, so that is what the dummy directory is for. i added a dummy versions of the code so the tests compile with feed disabled, butthen hit a crash while trying to run the ntp tests. still crashed after compiling on master, so filed crbug/897502. i think we should have something like feednewtabpage.isfeedsupported, if not, skip the testiteration with feed enabled to fix crbug/897502 in a separate cl. wdyt";"0"
"%d does not seem to work locally for me in my git. :";"0"
"it was for some stupid wsgi stuff, butitmightve been a red herring. ill remove and rerun tox";"0"
"there is a spurious ""i"" at the end actually you can just nest the ""$ if ... "" inside the cflags=""...""";"0"
"i see. that is the error because you are trying to overwrite existing dir with symlink; while ""rsync -a"" was to fix symlink overwriting broken symlink. probably better to write a python script to do the copy, so you can select whatever to copy.";"0"
"actually this seems to make sense as there is obviously no process killing, but directory deleting";"0"
"i think you need to set 'err' i think that is true for the fstat too this code is fuckingawful.";"1"
"this afternoon's job is removing this and the pr_set_vma hack too...";"0"
"may be we could get rid of this splitting stdout from stderr in run_command one day.";"0"
"should really be moved to using unittest... this crapwas already here, so no need for this cl, butitwould be nice to cleanup eventually.";"1"
"other assignment methods do not have hints either -- they are not really exposed to api query strings group_ids should be removed from this method in favor of using list_domains_for_groups below";"0"
"you've got some junk here";"1"
"can we push the config_usb_pd_devid_major/minor in the board.h as that was done on zinger to avoid that ugly giant if.";"1"
"no. i am just an idiot. i shall fix.";"0"
"there is no hwmod entry for opt clocks. this is extract from: ""any clocks other than fck/ick need to make use of clock fw apis if required. for fck/ick do not use clock fw apis as omap_device layer apis takes care of the same. there is a opt_clk fld for other clocks example: gpio has debounce clock "" there is a opt_clk field en the hwmod structures butthey are not enable when you enable the device: static int _enable_clocks struct omap_hwmod *oh { ... /* the opt clocks are controlled by the device driver. */ return 0; } so, looks like opt clocks has to be controlled by the device driver. >> therefore it is a software issue, the module should not dependeds of what are you running on the remote processor. >can you please rephrase i am not sure i am following. just telling we should not base a9 module on what a remote processor is running, it should be generic. so the restriction from having one or multiple user should come from a9 side. of curse if ducati side can manage only one user it can put a restriction on the rm running on ducati. however i think having only one user for all the resources is the safer way.";"0"
"if streaming will be handled in nova, could you wrap the operation, using zlib, perhaps, to compress the data sorry if this is a stupid question.";"0"
"self.site_dir should be used here. in fact, all calls to gerrit.sh should be simplified to something like run_cmd self.gerrit_sh, <...>";"0"
"i agree with keeping the tast code path separate rather than trying to reuse the ugly autotest code path. i think you should pull this out in a function, possibly in a separate module tko/tast.py that collects all tast-isms.";"0"
"constexpr if possible. the brightest shade of pink is probably the most strand-out color i can think of.";"0"
"should put a trailing slash after usr/bin/ and add ' die' so we abort on failure";"0"
"no, but i also could find no way to get an array initialisation in to a parameter of a constructor that did not suckfar worse";"1"
"mathieu, i think we have addressed yamauchi's comment here. the zygote space is not in the immune_region_ when we do the full gc, if we clear the card here, the dirty cards of zygote space will not be processed in the next processcards and inserted in the moduniontable. so in the future partial gc, we might have missing roots.";"0"
"#ifdef have_display display_clear #endif";"0"
"maybe state_.data slot .alloc.trace_addr = null state_.data slot .alloc.trace_len = 0";"0"
"damnstupid script :p will fix.";"1"
"i am not sure how useful keeping track of changes is for objects that get saved as json. so i propose to either add a flag that will allow novaobject subclasses to not track this at all if they do not care. or additionally - make obj_reset_changes recurse into subobjects like obj_what_changed does. but having this code here for the sake of being pedantic seems wrong to me.";"0"
"yeah, i am fine if you do not use the term 'service'. but you have to spell openstack properly.";"0"
"use gradletestproject.default_compile_sdk_version and gradletestproject.default_build_tool_version";"0"
"these will need to be in the user's path anyway. this works until we grow our own envsetup.sh though.";"0"
"files_to_copy should be list of dicts ofc, my mistake.";"0"
"what about one that has a subclassthatitreturns this is checked in your duck typing proxy at least.";"0"
"this allocates a useless empty slice var cons *console";"0"
"remove this comment. the dumb buffers need not be aligned for mali, since they are not written to by the gpu. in fact, the dumb buffers like the fbdev buffer need not be aligned at all, unless the vop requires it";"0"
"can this be a static_cast c-style casts do not check for dangerous casts.";"0"
"the rhs of the is useless.";"0"
"done. my bad, line520 is also useless code actually.";"0"
"perhaps a stupid tweak, butthis looks shorter and tinyish less ops: transitional_matches_.emplace_back lower_user_text ; match_it = transitional_matches.end - 1; // though maybe does not compile, maybe does not work, may look more cryptic, ymmv, orthogonal to this change, sorry";"0"
"should not the the style here be /** * warning */ or are you letting a formatter take over";"0"
"nit: either expand on or kill the param args";"0"
"if i just do this: num_calls += 1 instead of this: num_calls 0 += 1 python raises unboundlocalerror.";"0"
"it might have been, but in this case i actually did screwup. i did not even mean to leave this line in! :-";"1"
"you are right. let me address this with a follow-up cl.";"0"
"dragent ==> bgpdragent. replace all such occurrences.";"0"
"nit: delete-orphan is redundant as the fk is also part of the pk in poolmonitorassociation, so it should not be possible to detach it";"0"
"these joins are crazy, butthat is the nature of the problem we are trying to solve. no way around it. we just need to testitheavily.";"0"
"#veryhype #wow #muchbuttons #whycantiholdallthesebuttons";"0"
"i added this comment: // the least number of bounds checks that should be eliminated by triggering // the deoptimization technique.";"0"
"wtfdrop this wurd";"1"
"i can see how it seemed like a good idea at the time, butthe first time i actually tried to debug anything classpath-related, not seeing the _actual_ path was a huge pain in the ass";"0"
"without the return you run into the alloc which will either die in dchecks or die trying to do a bogus allocation.";"0"
"unrelated change: these few lines are just dumb...";"0"
"no it does not need to have two ports to be part of the chain. will add text to clarify. a device that will tap a traffic stream can be inserted in the chain";"0"
"this requirement is ugly, but necessary to preserve v3 compatibility";"1"
"callbacks need to be removed in ondetachedfromwindow";"0"
"scriptpromiseresolver is garbage collected";"0"
"note that is precisely whatitalready does. it creates cbuildbot/{jobs,dump} where cbuildbot is the root hierarchy, and jobs contains pid numbers of the running root processes.";"0"
"why not enum classour style prefers it over the obsolete c enums";"0"
"will this be exposed to the user if yes, use an enum. if not, you can make it an aidl constant to share with your daemon/client.";"0"
"specifically it does not avoid the killing but avoids the daemon being killed.";"0"
"should this be a warning since we are throwing an exception";"0"
"stop talking implemenation";"0"
"remove neutron_";"0"
"remove terminator as not needed. using intdeventry = array_size devintconfig";"0"
"use int ret = snprintf ... ; better: size_t prop_len = snprintf ... ;";"0"
"should this have a way of erroring out in case reaponeprocess constantly returns true i guess you are calling waitpid with wnohang and returning false in that case, you cannot always get and kill a process and never end... unless the system is in the middle of something like a fork bomb i guess maybe in that case we do not care what happens.";"0"
"the dict only works for buildbot. sorry for the confusion, robbie's request is he wants to kill ""getactivemaster "" even if we haven't migrated everything to luci yet. to do that, we need a dict to convert buildbot's mastername to perf_dashboard_machine_group";"0"
"this makes no sense. a enable_opengl = 0 implies enable_gltf = 0";"0"
"again i'll change fontsettings api in another cl. because it is backed by a wtfvector it is exploding the type by using size_t butitreally should be using wtfsize_t";"0"
"we may not be able to maintain a table for this because we'll have to keep one key value pair for each possible xentools version. for future versions added, we'll have to remember to add a new mapping.";"0"
"remove **kwargs.";"0"
"you will assign temp_zone = temp_zone_2 + 1 if bat_temp_c > 450 or < 0.";"0"
"okay, i am going to remove address_sanitizer_config_extra_shared_libraries in my next upload.";"0"
"polling kinda suckscould you make topchromeslidecontroller take a base::repeatingcallback ratio_observer_for_test_ and invoke it as the ratios change";"1"
"yeah, just call bionic. the idea is that if you call libcore.os.f you know you are just calling the c library f with the minimal argument massage to get there.";"0"
"queue_peek_units' reading is checked on line 63, do you mean if the other side send garbage value of write count to us";"0"
"why can not you include complex.h for all of these externs the definitions look like they are in there.";"0"
"vol_type = conn_info.get 'driver_volume_type', none";"0"
"lets dump this instead of commenting it out.";"0"
"there is no difference between dumb map and drm_ioctl_virtgpu_map. inside the kernel, drm_ioctl_virtgpu_map just calls the dumb mmap implementation. everything else being equal, i decided to inherit the helper code.";"1"
"dirty bastards.";"1"
"need to catch dead lock exception too.";"0"
"the delete stack that i've seen is: 3:032> kc # call site 00 content!content::renderframeimpl:: renderframeimpl 01 content!content::renderframeimpl:: renderframeimpl 02 content!content::renderframeimpl::framedetached 03 blink_core!blink::localframeclientimpl::detached 04 blink_core!blink::frame::detach 05 blink_core!blink::htmlframeownerelement::disconnectcontentframe 06 blink_core!blink::htmlpluginelement::disconnectcontentframe 07 blink_core!blink::childframedisconnector::disconnectcollectedframeowners 08 blink_core!blink::childframedisconnector::disconnect 09 blink_core!blink::containernode::willremovechild 0a blink_core!blink::containernode::removechild 0b blink_core!blink::collectchildrenandremovefromoldparent 0c blink_core!blink::containernode::appendchild 0d blink_core!blink::node::appendchild 0e blink_core!blink::node_v8_internal::appendchildmethodformainworld 0f blink_core!blink::v8node::appendchildmethodcallbackformainworld 10 v8!v8::internal::functioncallbackarguments::call 11 v8!v8::internal::'anonymous namespace'::handleapicallhelper<0> 12 v8!v8::internal::builtin_impl_handleapicall 13 v8!v8::internal::builtin_handleapicall 14 v8!builtins_centry_return1_dontsavefpregs_argvonstack_nobuiltinexit 15 v8!builtins_ldakeyedpropertywidehandler ... a bunch more empty v8 frames this, as far as i can tell, just tells me that the frame created from the object element is being removed from the dom. i got the above my adding a check and hitting that in my debuggeris that sufficient whenever i've tried to log anything from the renderer process in headless mode, i get no logging output.";"0"
"i'd like to not add non-trivial functions to real_system_state. systemstate is an ugly agregator of the singletons we have in the update_engine to easily allow us to mock out the rest of the system. adding this here means you can not unittestityou could unittest this as we do in the connection_manager.cc. how about moving this to either its own classor the updateattempter";"1"
"crapi wrote this code. this is very sad.";"1"
"this was uncomfortably difficult for me to parse while we are here, can we just make this winner = deltas 0 ; loser = deltas 1 ;";"0"
"minor stylistic thing, these typedefs are there for readability we do not subscribe to the linux kernel style of 'typedefs are evil' for this library . typedef uint32_t uptrdiff32_t typedef uint32_t size32_t";"0"
"you missed this occurrence of type.";"0"
"you need gpio.h, too.";"0"
"instead of logging an error and silently returning, i'd suggest throwing an illegalargumentexception for invalid uris.";"0"
"fyi - more of a fake than a mock. uber nit: perhaps ""create"" rather than ""get"". uber nit: consider making assertions / utility methods static to make it clear they only work on their arguments.";"0"
"just remove from self.l3_agent and it should pass";"0"
"sure, butitdoes not hurt either. hmm, windows is stupid because it is not posix";"1"
"nit: if you do not put a newline here, it is going to look ugly.";"0"
"hinductionvaranalysis* induction_analysis_;";"0"
"oh, shoot, thanks. i misread and thought this was calling the same-named function above that is os_android-only.";"0"
"this is unused and should be removed.";"0"
"i think calling os-svc-upstart will be a mistake as fedora images will be systemd based. should os-svc-upstart be named os-svc-daemon or something";"0"
"i was just being stupid.";"0"
"nit: you only have one failure case. just put this die line in the place of the 'ret = -1' above and remove the 'ret' variable.";"0"
"you do not need this or make it more obvious: if container_id in self.container_cache: return self.container_cache container_id";"0"
"leftover debugging. butitsucksthat this is necessary in order to figure out why tests are failing... if you have an idea on how to make tests easier to debug when they fail, let me know and i'll fix it :";"1"
"you still just need one round of chrome start/kill to correctly test this iiuc. after chrome dies, a new midis should be spawned. you just need to replace the old_midis_pid with the actual pid of the midis that is running before chrome starts.";"0"
"cheat code: you are not *required* to have full blown docstrings in private functions. so you can drop something if you think it is not adding value.";"0"
"should not this just be in the try block";"0"
"abort ->can we report an error same question for aborts below";"0"
"how about isprint in curses.ascii";"0"
"it is my stupidity. i forgot: pinctrl-names = ""default"";";"0"
"this is to only upload dumps without having to create a crashhandler";"0"
"i do not think so. the whole point was to have something _before_ ddr. anything else can go later when we can actually get into c code, i think. i really do not want to encourage anyone to use these commands unless there is no other choice since they are ugly.";"0"
"1. please initialize it in the scope where you are using it 2. you could use std::string and std::to_string instead of creating the whole stream object - those are slow as hell";"1"
"the idea is to get output in a following way: if report is not speaking for itself, show <reporter>: <report>, else: show only <report>. with your suggestion we'll again receive bunch of useless information and blank lines for lines like '', '', ''";"0"
"i meant, should you set *this = invalid here as well. 4.5.6.0.3.4 should be treated as an invalid version.";"0"
"use 'std::dec' here, so that 'code' and 'code_size' are printed as decimal values";"0"
"kinda ugly, open to suggestions";"1"
"docstring is uninformative";"0"
"oh, never mind.. the usages are all surrounded twith ifdefs... sigh, sorry.";"0"
"please remove std::move here as this is now a repeatingcallback.";"0"
"just call cros_build_lib.die for all of these errors";"0"
"i agree, these should be instance methods on itemresourcevaluewrapper";"0"
"why are you calling setfillsboundsopaquely false here";"0"
"intent != null externalnavigationdelegateimpl.resolveintent intent, true ;";"0"
"you do not use expected_attrs, so it should be removed.";"0"
"thing is i usually find it silly to have case a: case b: if a";"0"
"err... assertraises result_lib.buildscriptfailure, commands._runbuildscript, self._root, self._cmd";"0"
"i think we change to oslo_utils everywhere.";"0"
"you should rise nose.skiptest in setupclass";"0"
"+1 ... all you need to really do is delete all the "" die"" here";"0"
"i would claim that this foreign key shard is not even necessary. the shard table can just be a dumb mapping of: ip :: board where no 2 ips have the same board. on every heartbeat the moblab sends its ip, and receives: 1. any incomplete jobs with the given board which you will then insert if not exists . 2. any unleased hosts with the given board. easy";"0"
"it would be nicer to use ""size_t old_fingerprint_end = old_sdp.strspn "" r n"" , butitseems that wtfstring does not have a strspn equivalent. this will work.";"0"
"why did you go for the pthread implementation over the spinlock implementation should we kill the spinlock implementation, move the pthread implementation into the need_quasiatomic block at the bottom, and have non-lrdex arm and mips and x86 all fall through to that my primary concern here is that i do not want two copies of this code in the same file. but if i can kill the spinlock stuff at the same time, that is even better. actually, i'll do this for you:";"0"
"so... what is the recommendation here still return false and just kill the error_msg";"0"
"sceneresult.error_timeout";"0"
"there is an assertin which we should use, debugging asserttrue totally suckswhen it fails.";"1"
"nit: put this below after private:";"0"
"between these recommendation, i lean to join carlos' because i think adduniqueurlstask should be run later to delete zombies... the chances of chrome to be killed now is probably slim because supposedly this happens when chrome is in foreground.";"0"
"we should kill them, but maybe in a separate change if you are worried";"0"
"can we remove the 'die' here";"0"
"i am not sure, either. someone must've been relying on this being hoisted up a level. we might be able to eliminate this entirely once we slay global configs.";"0"
"we do not want to add new c wrappers. new code should be using std::string.";"0"
"dumb question; cipd server verifies that the instance's package inside its manifest actually matches, right i assume yes...";"0"
"backticks are the devil incarnate. :";"1"
"hah lame :";"1"
"drop the non-9999 ebuild -- the bots will do it for you";"0"
"as the description in .conf said, this is an empty file that people can add add contents by doing ""mount -bind"" later. i am doing this to prevent 1 executing non-exist file 2 minimize execution effort when people do not need to filter or do you think i should just point this to somewhere else like /usr/local/sbin or should i still put some contents here butithink a zero-sized file is faster than a a shellscript with only comments.";"0"
"your i2c slave should resolve this bus contention issue. so i assume it is just a temporary fix. please add a todo to remove it when the i2c slave is landed.";"0"
"sdkconstants.xmlns_prefix";"0"
"wow, this is a poorly-named member not your fault :-p";"0"
"my first reaction is ""yuckthat is unreadable"". i do not think it is necessary in this case since this is only used in one function/one file and not likely to have its use extended. i agree that in multiple functions a custom comparator would be highly desirable to prevent mis-use. butitried it and i guess it is not so bad. so for the sake of ""good practice even if not necessary"" i could change it.";"1"
"lest kill these two lines too =";"0"
"pep8/pep257 on docstrings...";"0"
"null != isempty. that seems like an odd detail message";"0"
"maybe sfx2 should be added to section sfx2: li c sfx2";"0"
"goofy name. what do qmimsg_tlv's get up to when nobody is looking how about qmimsg_tlv_get_varlen";"0"
"this would be cleaner if just written using os.chdir before, dropping the env crapand the cwd kwarg, and then another os.chdir in a finally block i have a nice cd contextmanager in tests/utils.py if you want to steal that .";"1"
"nit: did you git cl format this seems longer than 80 lines.";"0"
"should we then kill root_helper= argument here too";"0"
"btw, this likely merits analoge and possibly an immediate abort of the keystore daemon, as it indicates a bug in the code.";"0"
"if quacks like wsgi...";"0"
"you will loose decimals here with long - what you want is double for fwidthinches, fheightinches, fppix and fppiy. remember that you put the values in b2dsize which uses double for storing its values.";"0"
"urlparseurljoin will not work -- it is a bit stupid. urlparseurljoin git_http_url, chromite_project = ' i.e. 'git' is dropped, oops urlparseurljoin git_http_url + '/', chromite_project works though, but a bit unintuitive that you have to add a slash to do the right thing";"0"
"nit: do we need this definition this is an abstract classo it will not ever be instantiated. any subclasswill almost certainly want to override this to provide more useful information. hence, this version of __str__ will not ever be used. finally, assuming a subclassdoes not override this, the default <fooclassobject at 0x00000> provides more information. returning just the classname gives no information about the instance.";"0"
"is notitmatches the values from above. shittystructure yes, blame mox however...";"1"
"this subject line is a bit uninformative";"0"
"i thought i had a bug to make the vm set these based on a call to setlocale 3 , so we'd be properly stand-alone. can not find it though. i _did_ find for making bionic's setlocale 3 look at the native system properties though. it is all kind of a mess at the moment, with hacks in bionic, icu4c, and libcore, and probably in androidruntime.cpp too. and a weird situation where -- iirc -- our vm itself just says ""fuckit --- someone else's problem"". i do not think it would be hard to fix any of these, it is just that none of them is really useful without the rest and it cuts across several projects.";"1"
"these printks are missing the kern_* prefix. probably want kern_info for the first and kern_warn for the second.";"0"
"chown chronos $swap_field_trial_enrolled";"0"
"does this produce any useful output. you are crashing a working kernel thread.";"0"
"normally you are supposed to use a single mask for both pins,e.g. alternate b, 0x18, 1, module_i2c, 0 /* i2c a scl/sda */";"0"
"please mock 'tempfile.mkdtemp'";"0"
"couldn't you just dereference the unique_ptrs, e.g. *expiration_times_dictionary i might be missing something though.";"0"
"vid and pid appear to come from descriptorspath. can start parsethem from there instead";"0"
"can you set these fake instance ids to uuids";"0"
"typo plugable should be pluggable";"0"
"if urldata must be destroyed before the urlindex, then we should document that. here, also in tryinsert, and probably in the urldata class";"0"
"you do not need to load it back imo try: json.dumps value except typeerror: ... else: return value";"0"
"because for frameworks i use a dumb one...";"0"
"...that wassupposed to be 5 minutes, but i am an idiot.";"0"
"did you want to mention something in here about end of life for this tag, or is that not part of the plan";"0"
"this just reminds me that i meant to skip usb for normal verified mode once efs was done and then i never did... crapmight be another 5-10ms.";"1"
"i think it is fine to leave these assuch for now. good idea about changing getstringoption; i'll take a stab atit";"0"
"suggestion: would it be possible to have the following guarding block here ... #else // v8_compress_pointers unreachable ; #endif // v8_compress_pointers";"0"
"i hate being this guy...but you need a newline above this import";"1"
"now, add one more at the end of the day you will need 3 more map here: std::map<vclptr*, somefunction> maresetfunctionmap typedef from above";"0"
"check functiondecl->getcanonicaldecl ->getlocation != functiondecl->getlocation to avoid useless notes";"0"
"can even use just a std::unique_ptr";"0"
"we could also use at_quick_exit in addition here, and use quick_exit instead of _exit where we need to commit suicide without calling destructors.";"0"
"does not really matter to me, butthe standards-compliant way to do this is with memcpy memcpy value, oat, sizeof t ; which is also shorter by 1 line of code and does not have ugly reinterpret casts";"0"
"could you add this too emacs sucksp";"1"
"should this unregister cpu_throt";"0"
"this is a hack for sure. we really need a more thorough cleanup of libbcc.";"0"
"should encrypted_size == packet_size";"0"
"srcmap*";"0"
"this try...except is redundant.";"0"
"i updated it to grab non-aborted hqe's and if there are none use the created_on time like before.";"0"
"why do not you need to grab your lock here";"0"
"i am not sure free is required in abort situcation.";"0"
"i am still not entirely sure if i want to move this class methods into daemon and have daemon implement suspender::delegate directly, or move all of the suspend-related code from daemon into this inner classbut having these methods make calls to single-line methods in daemon feels silly, so i am at least moving that code into this class";"0"
"no point in calling this here since we do not use cred below.";"0"
"this should be using versioncomponents instead of splitting yourself";"0"
"this is redundant. baselayout already installs /etc/env.d/00basic with ldpath set to /usr/local/lib. delete this line.";"0"
"remove white space.";"0"
"nit: s/audible_players_count == 0/!audible_players_count/";"0"
"is .trash another top-level drive directory like team_drives and root or does each of those have its own .trash directory like team_drives/.trash and root/.trash if it is the former then this lgtm. if it is the latter we should add an explicit check for this.";"0"
"/*match_header*/";"0"
"sudo will reset path, which will break in some cases, especially outside the chroot. i copied you on cl:217521 where this was discussed. maintaining the path=${path} from above will fix this.";"0"
"i am not sure what you mean by this comment. all other designated initializers including -init are ns_unavailable. it does not ever make sense for the animator to be created without a start progress in practice. this is just created with a start progress of 0 as an arbitrary value, as the actual animator is not used in this test except for through an equality test below. i've added a comment stating that this is a dummy value.";"0"
"these probably belong in a header somewhere like other method/function declarations.";"0"
"again it sounds like wtfsize_t is expected here, since these are wtfvector";"0"
"why you changed this to %ecx it is garbage here.";"1"
"if the read operation fails, how to guarantee that the value in val is correct, and that you are not writing garbage back";"0"
"you'll need to deal with multiple headers at some point e.g. we need sane behavior when a silly server sends 'sec-origin-policy: 0 nsec-origin-policy: policy' .";"0"
"ditto above. it probably makes sense to abort here.";"0"
"why not provide an accessor to an interator you are building a vector only to throw it away.";"0"
"so now all of this code is useless... if the call to gatt_config_ccc_complete is not needed, delete the rest of the code as well please.";"0"
"need to preserve padding and style=""border-right: 2px solid white"" here";"0"
"this means $ 2 will be regenerated whenever you run make.";"0"
"not needed afaict mmultiple is set on push_back , so mmultiple == !pids.isempty";"0"
"this is very wrong. you should not call your mocks. you can do what you meant here like this: patch_file = mock_open.return_value and then you do not need to store this in a separate variable, do you";"0"
"again, not sure about none as a fallback... also, nonetype has no attribute ""split"".";"0"
"aexpstr = aexpstr.replaceat";"0"
"np at all, yes, let us remove them.";"0"
"also need sigkill to all domains for kill -pid, sigkill";"0"
"nit: die";"0"
"i wonder if we want nova to have a whitelist of allowed plug-in scripts, to limit the impact of a compromised neutron system although the more i think about that, the more stupid that sounds.";"0"
"this should get removed. it is ok for libclcore to have more functions than is necessary, and we must always build it with the latest api level rs_version .";"0"
"this was nasty! logging.log added extra calls to time.time, which made this test depend on the psutil version installed :-/";"1"
"roger. i was being *very* dumb. i went and talked with bsimmonet and then ate all my words back. burp!";"0"
"hah, damnit. i meant ""and i am *not* intending to be contrary"". sorry, the brain's not fully there right now.";"1"
"what specific dirty bit dirty_bit_attrib or dirty_bit_binding";"0"
"we probably want to use **kargs in future.";"0"
"yes, they are. it is actually a way to shoot yourself in the foot: setting framerate to '24000/1001' will be different from 24000/1001. we can not do much about this...";"0"
"""_testcapi"" is junk. i think that, at least on my linux builder, it does not actually build, which is why i exclude it.";"1"
"should be if not sample_filter.start_timestamp or not sample_filter.end_timestamp:";"0"
"ah, crap this is non-trivial to implement efficiently given the current entity structure. i'll implementithalf-assedly and warn in the doc about that.";"1"
"yes i should remove this useless change.";"0"
"typo: firstrigthparenthesisindex should be firstrightparenthesisindex.";"0"
"the default for gtest is 4ulp. the main reason for this change is to move to tighter bounds. this explicitly -- assuming i haven't fuckedup the code in ""math_data_test.h"" -- asserts <= 1ulp. interestingly glibc can manage 0ulp on several of these tests, but we can not.";"1"
"i think it should be squashed in previous requst";"0"
"for group_flags - no; it'd better not to be null. in case it is we want a bang here.";"0"
"odd, and undone... too damnmany patchsets...";"1"
"ok, if the spec says the type can be null, the dcheck must be removed.";"0"
"let us default this sucker. we already implicitly cache other stuff. i can not imagine the number of instances on a single host being that large although someone can correct me.";"1"
"after 'cleanup_parent_with_no_child' then only secret2 should be removed, since secret1 does have a child.";"0"
"damn it is too early in the morning. i did not even look to the left and see the ""is not set"". sigh. ...so i think in this case the hda_reconfig is actually being selected by some other config, and that is how it is becoming set. let me track down exactly what did it.";"1"
"__ cmp op1_reg, 0 ; and get rid of 'op2_reg'.";"0"
"may be null. you even remembered to mark that on the declaration of getcallingclass";"0"
"nit:i do not suppose these delays have a name in dsi parlance that we could add as a comment like /* t3 == 50ms */";"0"
"our style guide not withstanding, stop vs stop seems like a recipe to get bit in the assi've use a lowercase 'stop ' here instead of the usual capitalization.";"1"
"it was proposed to replace complete sentense. part ""this fix is"" is useless.";"0"
"yeah, the ones above are really bad. ""your system is corrupt, and i am going to tell you aboutit this one happens normally. the caller will output an error if all its calls to this function fail, but if you are debugging this was useful once. maybe i should just remove it instead.";"0"
"thanks, i did not even know about that interface. done.";"0"
"the dbusproperties proxy is created by and used by the modem object -- and that classhas its own set of unit tests to confirm the proxy is created and used correctly. modemmanager's unit tests need to confirm only that the modem::init is called. it does that by making sure the task_factory_ is not empty after the call. we could go a step further and run the event loop but seems redundant. ideally, we would peek into the factory or the even loop and confirm that the pending task is inittask.";"0"
"align8 to align128 are unused. remove them.";"0"
"parking this slave here. will use it soon to retire the vm of the mips builder below.";"0"
"this will also kill processes that did not respond to sigterm above";"0"
"do not we want to dump the log *after* we kill the devserver just in case it printed something useful before it died";"0"
"whoever created secureblob outdid themselves. this should have been just certificate.data instead of this very weird and dangerous contraption since front might return a value and not a reference to the first element .";"1"
"aarrgghh ... i guess indent-region will not get this and fix the u-boot formatting. dammit. as for u32 vs. unsigned int. i use u32 when it is clearly fixed as to bit width and matches a register directly. but unsigned ints make sense when it is just a value that will get jammed into some bit field. i do not like using fixed-width elements unless it seems mandatory and directly matches some register. i am doing some interpolation here from the u-boot stuff, and they were not very careful however. i'd like to leave this alone for now. example: the win_id is 2 bits. there is no good way to express that ""bit fields are a botch"" -- signed, the guy who invented them so i think unsigned int is reasonable.";"1"
"actually, nothing. presentationdispatcher is supposed to do the right thing by calling setcontroller immediately after connecting to presentationservice, but anything could happen for a misbehaving renderer.";"0"
"nope. just a boneheaded mistake, just like missing the !sendto right above it...";"1"
"please use $ target_out_intermediates and $ $ target_2nd_arch_var_prefix target_out_intermediates , to take care of both obj and obj_arm in case of multilib bulid.";"0"
"what the heck does that mean";"1"
"if you are going to put author and date why not use the javadocs i think the styleguide says you can leave them out if you want.";"0"
"i heard about that - apparently it may create a black hole that consumes your children.";"1"
"i should remove myfidelitywarnings from this line";"0"
"make sure this module is invoked as the main program: if __name__ == '__main__': parseedid";"0"
"the next cl is uploaded already and untangling two of these is probably not worth the time it takes in git. if you prefer, i can squash both of these cls together.";"0"
"this will be 0, so this is a useless printout.";"0"
"yeah. it is kinda crappythough. i'd rather not split this line.";"1"
"please do not use cfgclient. i'd like to kill it. please use lower-level instead";"0"
"seems, cleanup_network_group method should be removed.";"0"
"compile the boot image with and without, and dump the init-failures. --dump-init-failures=x.log . compare, and if necessary, open a bug. do not leave a todo here.";"0"
"correct. the consent is for make model information about a token, not for individually-identifiable information. the only way to get the underlying attestation will be to list the rp id in the enterprise policy, because that enables the individual attestation bit in the register request and permits individual attestation generally.";"0"
"it is better to check the existence of $toolchain_src_dir first.";"0"
"no. damnit! ; okay, so we are really close now. the only thing i do not like is that we have both rk_clrsetbits and rk_setmsk which do the same thing. we should have only one of the two. please just: 1. remove rk_clrsetbits and change everything that uses it to rk_setmsk 2. change to #define rk_setbits val rk_setmsk val, val 3. change to #define rk_clrbits val rk_setmsk 0, val then we will be fine! alternatively you could remove rk_setmsk and replace it with rk_clrsetbits . one or the other, i am fine with either. just not both at the same time.";"1"
"i think you need hit_test_region_ = *state_.input_region;";"0"
"i guess this is supposed to list the original commits that are being squashed here, butitdoes not seem to be a valid git command.";"0"
"is this ""!= 0"" a mistake or am i too stupid to understand some clever trick here seems to me you meant: if retry is none or attempt == retry: if so, sounds like tests need improvement";"0"
"nullptr /* iter */";"0"
"better to remove previous_status with empty supportstatus object.";"0"
"tar_mock = self.patchobject. etc etc";"0"
"this is something to do with detecting when kati needs to regenerate, telling it to ignore dirty files anywhere under $out_dir. it should not be affected by this patch, these are output files from kati not input files, so it will not check if they are dirty.";"0"
"is this actually what we want, or do we just want raw /proc/pid/maps output bdc cferris";"0"
"use **extra_spec.";"0"
"is bash specific. try to not use it when your shebang is #!/bin/sh in chrome os.";"0"
"argh, brain fart from a previous version of the patch :";"1"
"please add a slash to both places, the redirect as you do it without slashes will not work at all.";"0"
"i truly apologize for my sloppiness on this one, should have taken care of this.";"0"
"looks like another case where my scalpel slipped when operating on the offset tests. i'll fix.";"0"
"please do not use addcleanup with mocks, set mocks either via decorators better or via context managers";"0"
"would a signal between movlpd and fldl destroy the value on the stack";"0"
"can you add a space after afe here to fix the alignment this has been bothering me for a while, but a one character commit seemed silly.";"0"
"sh -> handle no super-short unxhkr varnames.";"0"
"the lack of a white space here ""{ byte "" is the only thing about this change that annoys me. i'll try to tweak the style rules to fix this. if i do not succeed, i'll submititanyway. btw. are you sure no one's submitting code to this project in branches that automerge *into* master there'll be hellto pay for in merge conflicts if that is the case.";"1"
"dead cpde";"0"
"damnyou copy/paste!:- changed, thanks.";"1"
"interesting. this looks like a dirty hack, is there a way to fix this in a more proper way";"1"
"> and the admin could passauth but be passing a garbage project id - that is the thing we need to validate. you suggest to create another user that would authenticate at keystone using username and password trip 1 , validate the project id trip 2 . i suggest to take user's token and using it validate the project id at keystone 1 . that is one less trip to keystone, one less credential to manage, one less thing to change in keystone.";"0"
"i do not know, it is probably ok the way it is as these execute during initialization and currently we log an error message, clean up, and exit the daemon when we hit these errors, which is fine by me. unless you feel strongly about this i will not change it.";"0"
"wtoken.startingdata == null";"0"
"we should cache this somewhere. otherwise it gets converted from std::string on each call.";"0"
"i am not sure if writing to the padded area is important for this test the name and comments sort of imply it is , but you could use info.getsafesize krowbytes here minimize the change, no";"0"
"again, this library stuff is not bad but is not great. i want crinkle to get input. i am okay with it, but i'd prefer not to extend the beaker/beaker-rspec dsl with our own crap";"1"
"hostvars inventory_hostname 'ansible_kernel' seems to work";"0"
"you already have a vold.fstab in the device git #41362 .";"0"
"oops, it was a stupid mistake";"0"
"heh. even crappyold apis look better with lambdas!";"1"
"yuckthat is copy-paste from the verifier, which means i need to clean up there first...";"1"
"fk to which table i've looked and do not see a table for this.";"0"
"and here: with tf.extractfile ... as f:";"0"
"use uma_histogram_boolean instead of uma_histogram_enumeration.";"0"
"maybe make this number a function parameter as well i am guessing this like n_tries or n_seeds or something.";"0"
"jvm details ignoramus here: is it a commonly known thing that $values of an enum is equivalent to its values method";"0"
"you removed the important warning that this is a hack and not a proper solution";"0"
"leaving alone for now since it does not make much sense to propagate such a tristate up to the superclass";"0"
"wrong logic, messed up by trying to put clienthaslogcredentials last, or trying to do pre-check of local copies of uid. here is accurate, but does not place clienthaslogcredentials last: if header->id == log_id_security cred->uid != aid_system cred->uid != aid_root !clienthaslogcredentials cli !__android_log_security { here is kiss accurate dropping pre-check: if header->id == log_id_security !__android_log_security !clienthaslogcredentials cli {";"0"
"scopedutfchars will already have thrown an appropriate exception, so you should probably just remove l454-455.";"0"
"having code after assert false is nonsensical, as it apparently must be dead code. this is presumably just worth a sal_info or a sal_warn to keep consistent with the rest of the code, see above .";"0"
"ec_timeout_usec = old_timeout;";"0"
"should we still log a meaningful message if the cluster was not found, instead of having an attributeerror";"0"
"i thought there was already a patch with a 'get document from search' but i can not find it. in any case, i'd be fine with generalising this and moving it into helpers, although i would prefer to file a bp with neutron to ask that the sec group id be included in rule delete notifications because that would be infinitely preferable.";"0"
"this looks like a very ugly hack which is also very fragile, are there absolutely no other way to do this check";"0"
"config_nic3com should be config_nic3com";"0"
"this logic seems odd - the only way to reach here seems to be if self.stack_domain is unsetithink you are missing a self.stack_domain = cfg.conf.stack_user_domain in the else case above.";"0"
"when dealing with libnl, event subscriptions went to the bit bucket when wifi was down. things may have changed since i dumped it but i am assuming that the limitation was in the driver -- kind of stupid of libnl if it is not. from offline discussions, i've moved the subscription to wifi.cc and removed wifistate.";"0"
"make this static i am guessing you did not kill the prev/next fields of fdevent because fdevent.h is also used by sysdeps_win32.cpp which still uses the fields";"0"
"there is no bitcode generation at all unless the dummy function is present.";"0"
"should not this be ldr w1, sp... to avoid loading the 4 bytes above and corrupting the method parameter";"0"
"instead of the export, can we just do a return. also probably be good citizen and set apache_version to local so we do not pollute the namespace.";"0"
"it have sense. but in this case we move knowledge about ""primary-"" prefix outside of ""objects"" package. as for me - it is bad. we work with stupid objects and track all keys in all intermediate dicts is very difficult. especially if they change to such objects smudged across all code.";"0"
"i mean.. 4 billion doomed files with the same hash is ridiculous. but if we are seriously worried aboutitwe could use an int64 instead and not worry about overflow. that would use less memory and be faster than a guid.";"0"
"cell_attributes=tooltip_dict.get would be sufficient, you do not need the get_help_text function";"0"
"iiuc you are deliberately storing a raw zx_handle_t rather than e.g. a zx::unowned_log or unowned_handle, because that makes it more obvious that this handle is no longer valid, once we've returned it from passhandles";"0"
"ps: i have used these kinds of sleeps when there is nothing to check, butthey are painful, and should be way longer than your testing shows is needed in case of heavy system load. in particular, on a vm on a builder, the load is stupid high, and kernel background threads may not run for 30 minutes or more.";"1"
"// blocked without sniffing. maybe maybe reorder";"0"
"i inlined checkdecodeaccelused and checkdecodeaccelerror.";"0"
"wtfis the reason for that preexisting nonsense";"1"
"please ignore this comment. i am stoopid.";"0"
"even though i am a moronand forgot that the main purpose of this is to handle private key loss, i think it actually still makes sense to run the mitigator in the case of public key loss as well. the code is already set up to deal with re-writing the policy blob, and the public half of the key pair is pushed to disk and everything. we can just have the other code, that would start new key generation to not run in the case that mitigation is happening -- which is easy to detect given a pointer to the mitigator.";"1"
"this is wtfgenerating temporary classfor storing some values. what about using dict";"1"
"delete this guy. if the upload hook complains about revbumps, use --no-verify.";"0"
"... from puppet-ceph-devel :p";"0"
"this might be a dumb question, but should not there be a check for physical_network to be in self.flat_networks";"0"
"done. easiest way to implement changed the precendence: when something is both white- and blacklisted it is whitelisted.";"0"
"use 'die'";"0"
"nit: typedef browserwithtestwindowtest showfeedbackpagetest;";"0"
"please leave that cl as-is. reverting isolated lines would be insanely frustrating for you.";"1"
"please can you document these new members with a comment above the struct /** * struct exynos_dvfs_info - ingo about exynos dynamic voltage/frequency scaling * * boot_freq: blah blah ...";"0"
"is this accurate surely the battery is still discharging in this case more generally i do not see how the charge system state relates to the suspend state.";"0"
"i think it will be better to put this block after instance.destroy .";"0"
"os-brick/encryptors use castellan. and this bp will call the library os-brick/encryptors.";"0"
"ugh, those tabs look ugly here.";"1"
"private with a getter and setter that sets the dirty bit.";"0"
"this must only be executed if mnsubtotalflags are not set, else the branch below with the iterator is to be taken.";"0"
"dirty all the things!";"1"
"i like the idea of truncating. lines 66, 67 should be removed.";"0"
"style nititshould be empty_issuers or empty_x509certificate_array.";"0"
"i do not understand this. why is the inner vector of wtfvector<wtfvector<t>> traceable";"0"
"you did not add here large docstring about what the hellis this and how to use it";"1"
"it does look like this has been some activity around -t lately so we'll likely be able to put an upper bound on this sooner or later. given that, my inclination would be to keep the current interface -- i.e., not split listthreadsforprocess back out -- and do the piped shellcommand + regex logic to avoid pulling 100kb. it'd likely be best to pull that logic into a separate helper function _getpsoutputforo just to keep the rest of getpsoutput readable. i do think that this is something that devil should know how to do as opposed to telemetry. i strongly prefer that we have devil handle android version-specific quirks.";"0"
"gentoo's python framework likes to use crapwrappers. it might be possible to make it work, but i do not know. i'd have to ask.";"1"
"ok, chatted in irc - this is desired, we want to kill the loop when you change the page.";"0"
"odfexport is a superset of odfimport, so i would suggest not touching odfimport here, and move all the test code to odfexport. the only difference between the two suites is that import does import only, while export does import-export-import, as described in sw/qa/extras/readme";"0"
"crapwell, at least we do not have a c++17 compiler yet. :";"1"
"tenant *groans* name if project you luddite";"1"
"there are a bunch that do foo* bar including new code you added , but you are right our consistency in this project sucksso you are not making it worse :";"1"
"$noinline$getsubclass";"0"
"remove _ from here and target_path_ below.";"0"
"this is all obsolete and i'll remove it on master...";"0"
"style nit local vars shoudn't be in all caps start_esp, num_esp_sectors";"0"
"this case can certainly happen. if it is an abstract classinterface that have static fields, loaded but not linked yet. and gc happens. however in that case, all static fields should just be null. so i guess it is a not real crash in production. butitis better to get rid of the assertion error and skip some useless visits anyway.";"0"
"please, add newline after colon.";"0"
"should we just remove these two sections";"0"
"the daemon should be responsible for exiting itself when the device goes away. if you really need to rely on a signal, then do it via a more reliable route like dbus or a named socket. there is no guarantee that the pid stored in this file matches the daemon and you are not just randomly killing another process in the system. you also need to consider the scenario that more than one usb device w/this vid/pid combo are plugged removed.";"0"
"fwiw, all these elses should be removed.";"0"
"this is the _only_ error worth tracking, all others mean dysfunctional logd. if anything else happens, you are not getting through.";"0"
"why the helldoes it extend jbutton";"1"
"please do not add more of those *_base typedefs; they were a hack to work around broken old msvc versions that wouldn't allow the derived classto refer to that base classby it is injected-classname, ""implinheritancehelper"" , but such hacks should no longer be necessary";"0"
"i believe this god added by mistake.";"0"
"zull=zuul";"0"
"3.7.1 appears to do less dumb things here; maybe that should be the base for this debate";"0"
"this is your pep8 failure.";"0"
"we will refine to clean int_cond and int_type at end of wait_event_interruptible_timeout";"0"
"i am pretty sure you should use _ instead of - in function names i think dashes are a bashism";"0"
"void __iomem *virt_addr;";"0"
"this should return std::unique_ptr";"0"
"add a todo to use enableif to only conditionally enable enums where there exists an actual implementation.";"0"
"putting it into dumpstate.c or init.rc would defeat the purpose of the change, which is to allow the application caller of dumpstate or bugreport to choose whether the vibrator runs or not. per dianne's suggestion, this will go away in favor of a ""disable vibrator"" option that this code will not need to utilize.";"0"
"well, ""pointless"" is a bit strong a word. i'd rather have a log message saying ""unable to create connection object"" than a segfault at address 0xblah...";"0"
"oh, this was just a hack since i haven't written a spi gpt yet.";"0"
"this should be pimp = pcjkoptions.lock if !pimp { pimp.reset new svtcjkoptions_impl ; pcjkoptions = pimp; }";"0"
"consider using std::string* out that you only overwrite if getstring is successful see below .";"0"
"""no"" vars are generally bad. i'd suggest instead doing: newline=true";"0"
"this file is included in a project that does not support c++11, so the whole file must use null instead of nullptr.";"0"
"because all jaycepackageloader are not created from the vdir of library, it is the case for sub package for instance.";"0"
"this returns a bufferedimage, if we store it as bufferedimage we can remove the ugly nulls from the getwidth and getheight calls.";"0"
"in principle yes, butthis is done by another clang-tidy check we might want to run soon as well: this check just does the dumb s/iterator/auto/g replacement.";"0"
"nit: non-nullable, ie !oobetypes.languagedsc";"0"
"i think that'll just turn something horrible into something horrible and hard to read.";"1"
"seems that this should be in a utility for removing a child block.";"0"
"this check for becoming negative seems strange. what if we start with 100 controllees when this object is created. then when one is removed, we still have 99 left. we still try to establish a connection here";"0"
"nit: invalidtexturetarget, to mirror your other objects";"0"
"here ""admin_state_up"": false, is it .";"0"
"download_manager_delegate_ = nullptr;";"0"
"done. i had included it so that more of the autotest_lib.client.common_lib.cros.pinweaver_client would be tested prior to landing the follow up cl, but i will remove it now that the other cl is uploaded even though it is wip.";"0"
"well, you may need to tune the tests. admittedly tests for ""git_cl"" suck but at least you can manually run them with just python tests/git_cl_tests.py";"1"
"sneaky. stupid bytearrayoutputstream. it might be less surprising if you just change the fields of interest to be public + hide";"1"
"you should just use a constant instead of math.pow!";"0"
"s/or or/or/ damn";"1"
"inline ifdefs are very ugly. instead, have a dummy function in the header that returns 0 and is a no-op if no ""#ifdef config_qpu_quiet_stats"". the compiler will optimize away the ""goto"" in this case and should even optimize away the extra cpuquiet_unregister_devices ; call... similar for other uses of the stats ifdef...";"1"
"i'd opt for making entry: struct entry { union { ... } value; basetype type; } and then killing mtypes.";"0"
"useless, so remove it.";"0"
"damncheck should be: is self.args.url and self.is_bundle: will fix.";"1"
"can we modify the generating script at 1 to not use a new year when it is executes and use a hardcoded year instead this creates unnecessary diffs. or alternatively, let us reproduce.sh once on a precursor cl, to make it easier to discern the changes that happen because of the iron-form-element removal. 1";"0"
"i realize you may have no idea, but... why afaict, the dbus_use_sync stuff should work fine on android. and if you wanted to get fancy, we have <stdatomic.h> which is more portable and what the android-specific crapgot reimplemented in terms of anyway, so you could cut out a middleman. butithink the dbus_use_sync stuff should be fine";"1"
"yeah, people canalso download it or build the rom on their on for other distros, see the note below";"0"
"i think this classhould be extending loggedasyncextensionfunction similar to filemanagerprivatemountcrostinicontainerfunction just above.";"0"
"as you point out, i am being overly anal feel free to disregard.";"1"
"is it really useful since we have isinvalid i suggest only keep isvalid and remove isinvalid.";"0"
"nit: add a simple constructor so it is not possible to create one of these with garbage in the 'type' member";"0"
"for the illegal ""invariant gl_position"" in main function, checkisatgloballevel detects a compilation error, butthe compilation is not terminated right away. so addinvariantvarying will be called to add a non-global invariant varying. see, the compilation error is raised at the end of paparsestrings:";"0"
"i wonder why we leave in rc2. that should probably be removed.";"0"
"we should indent these out to make it easier to read.";"0"
"this version# is also annoying... perhaps get rid of the output and only list the parameters";"1"
"d'oh... in my head i was thinking ""it is best if this file remains correct"" butthen it does not make a difference whether or not icu is in the list of shared libraries. how stupid of me... i'll remove it.";"0"
"nit: loginbiguserview should only have one child. so we do not really need to get index and insert at the index. this could be simplified to: delete public_account_; public_account_ = nullptr; addchildview auth_user_ ;";"0"
"this promotes bad behavior of calling mocked objects during the test preparation or assertion, making it hard to use 'mock_clients.assert_called_once_with ' after this. tl;dr: mocks are for the tested code to call, not for the testitself.";"0"
"this calls looks to be used by different thread so is seems we have race conditions. i think need to add an mlock object to synchronize all the public methods.";"0"
"agree wholeheartedly with fungi";"0"
"both clang and gcc are pretty stupid about this warning. struct foo = {}; // emits warning eventually this will all be c++ and we'll just have real constructors, butthis will do for now.";"1"
"oh, annoying old gerrit version. the newer one would linkify tat guy to this change: 1 . * 1";"1"
"dead code, that probably needs a living counterpart :";"0"
"keep these three lines as all method below them are to be removed in 1.0";"0"
"system.shellexecute uses processutils.execute using subprocess.popen i want to complete this asynchronously";"0"
"what am i thinking! i can not be ptl and a lieutenantitwould upset the natural world order! shameful.";"1"
"these should be wrapped in doubleticks: ''build_dir'' and ''local_mirror''.";"0"
"yuk, this should have used std::auto_lock";"1"
"yay for proper inheritance like seeing this sort of crapget removed :";"1"
"the idea is to keep as much code executing all the time as possible. you are right that i could indent the entire block so it is under the ""if dedupe_queue"" at the top of this finally: block, but i was trying to avoid that.";"0"
"this.tabbar. use this one instead of cros.factory.tabbar.";"0"
"- device_classis a std::string. - will fix brace style.";"0"
"/** * param {!device.mojom.usbdevicemanagerproxy} usbmanager */";"0"
"argh, yeah, thanks for spotting this, i am an idiot. was having a hallucination that this is just the --bootstrap pathway, butitreally is not, so your comment applies for the changes below as well.";"0"
"bad indention.";"0"
"here and below, please use assertequal instead of asserttrue with ==.";"0"
"pmu_irq_handler calls pmu_get_ac in interrupt context, so you cannot do an i2c request here.";"0"
"okay, i'll remove them. since the original code has it, hesitated to remove it.";"0"
"it is crapwe know it is crapbut i'd rather fix it on another passit is too easy to clean things up and break the video, and there are other fish that need frying. butthat said, i still hate this giant struct mess, and if i change it, the giant struct is the first thing to go.";"1"
"oups, that is silly!: it used to be a more complex lambda that got simplified. thanks!";"0"
"drop the casting.";"0"
"done. all these functional programming skills, useless ;";"0"
"yuckc may be null here. the npe will be caught and logged, causing a double error message, the second of which is misleading. better to return null in the error case above.";"1"
"what this crap.!";"1"
"you seem to always cd into this dir in the src_* funcs. perhaps you'd be better off changing the value of s to like: s=""${workdir}/asan/clang_src""";"0"
"damnforgot aboutit";"1"
"you should resolve the errno. import errno # up top except socket.error as er: logging.error '......error %s', errno.errorcode er.errno";"0"
"no, i do not think that this is the case. 1 this is a .cc file and we set __brillo__ in libchrome's android.mk. 1. we should probably consider defining __brillo__ system-wide, though. building libraries with one set of defines and then including their headers with another is generally an awful idea, and build/build_config.h currently checks for __brillo__ as described above. anyone who includes libchrome's headers without setting __brillo__ might have a bad time. i'd advocate for defining __brillo__ unconditionally in build/build_config.h to avoid this, except that'd break chrome os once it is building libchrome from the aosp repository... see also the disgusting hacks i added to base/ years ago to prevent ndebug mismatches baseinitloggingimpl_built_with_ndebug and baseinitloggingimpl_built_without_ndebug in logging.h , eventually resulting in the cros_debug eclassi think.";"0"
"it might be better to keep a metrics_ member and use it throughout. also, this onetimeinit is a bit ugly.";"1"
"has lint gone mad ""single-argument constructors should be marked explicit."" i am very explicitly constructing a copy here! and an explicit copy constructor would be useless.";"0"
"what i failed to mention previously: mixing in such pointless cosmetic changes is a poor waste of reviewers' time";"0"
"wow. dumb of me. i looked at the mutex for the above stuff and somehow assumed it was getting unlocked in the block above. :-/ yes, this makes a lot of sense then. if there is already an event in the fifo then it must be a wake event and we must be in the process of waking up so keeping the rest of the keys makes lots of sense. :";"0"
"argh... yeah, in that case we'd probably have to stuff the phys in the platdata, which is also pretty ugly... i'll look at this a little more and see if we can do anything better.";"1"
"please, no underscores on options, it is just fugly *and* confusing";"1"
"drop this -- the libchrome ebuild eclassit";"0"
"this is a raw string. so that really is { a, b, c, , ' }. i was disappointed with how readable this turned out, butitis even worse with regular strings.";"0"
"agreed this is kind of ugly";"1"
"please specify mock_nova_available.return_value in l65 instead of here eg: mock.patch ""%s.networks.network._nova_network_available"" % ctx, return_value=false";"0"
"not json you fool!' hahaha";"0"
"must be executed as root";"0"
"this todo, which says --whitelisted-extension-id will be deprecated, seems to be obsolete given your comments in do you think we can remove this as well";"0"
"it is gross. there is not a good way to communicate with the hdmi driver though.";"1"
"this should not be done in pre_test_hook because stack.sh hasn't been run yet. there is no stack user at this point in the devstack gate execution.";"0"
"we should kill the name blob... it is not descriptive.";"0"
"could you try to use ""wtfforward.h"" to avoid include ""wtfstring.h"" in header file";"0"
"hate to pisson your parade, butthis could do with a better commit message. ""tweak jit hotness threshold"" or similar might be better.";"1"
"for httperror, you may want to parsethe error code. it is quite common to get 500, 502, 503. those errors should be retried.";"0"
"yeah; forgot: those are auto generated, and thus idiot proof. --idiot";"1"
"you can, by calling daemon::shutdown . see for an example of this.";"0"
"remove them since they have been included in 'assistant_controller.h'";"0"
"nit: maybe we should dcheck options_.is_none first to clarify that this mist only be called once on an entry.";"0"
"nit: remove observers in opposite order of adding them";"0"
"sgtm - lgtm as-is, then. yay, lots of juicy tests to get working ;";"0"
"this oustringtoostring .. is all obsolete these days, just use > ... << amsg << ...";"0"
"why do not we put a comment next to the option in chromeos-install instead of leaving little bits of garbage lying around it would be better to tell someone the option still needs to be there and why than to leave clutter around to trick them into thinking it is still useful.";"0"
"darn. i have tested it, and there does not appear to be any way to get -xclang-only to accept a two-word option even connecting the two words with an '=' . i have written analternative fix.";"1"
"yeah, i was going to try to keep this in sysdeps_win32.cpp, but when i looked more closely i realized it was not just used for the _win32_lock, it is for *all* the adb mutexes. when we bump the minimum supported version to vista in a week or two, we should be able to fix libc++'s std::mutex and then just delete all this crapbut i agree this is probably the least worst choice in the meantime...";"1"
"there should probably be a logcat entry if the errno != enoent so filesystems problems can be spotted.";"0"
"couldn't you use this git clone above instead of the wget to get install_puppet.sh or are we relying on install_puppet.sh to install git";"0"
"will it just keep failing and eating users' quota if the next try does not wait for a certain period of time as indicated by retry_after field of overlimit";"0"
"should be a colon, not a period, before the exception message";"0"
"a dirty hack since that is how setup/ works have support programs in bin/ . but i agree this may be not a good idea.... let me fix it.";"0"
"that is not what this is for. wouldn'titbe simpler to browse the dir and dump its content to a zipoutputstream";"0"
"crap chr ord delimiter + 1 if not reverse else -1";"1"
"evil spaces must die.";"1"
"this is ugly, write this as a generator function for a in annotations: if a .. != c: continue bad = clfromblameurl ... if bad: yield bad";"1"
"idiot q - why so many ids";"1"
"you should use _le instead of _";"0"
"i can t click resolved 1 2 without saying anything. gerrit, you old rascal, you.";"1"
"this is pretty painful. a the poor developer needs to cross ref between two docs to accomplish a simple cidb change and that other doc is a bit long and rambling b it would be nice if we would automate the schema dump. maybe the dump can be created as a side effect of a test";"0"
"nothing. this was not actually the problem. the win32 wassrhines has a hack in llvm that uses win32 rather than _win32. one question is: ""should we fix that to _win32 and remove the hack in the build system "" but a deeper question is ""why did srhines need that llvm hack in the first place is it because we polluted his environment with _file_offset_bits=64 in which case, should we stop doing that and just add it explicitly to adb and fastboot "" plus: when will 32-bit windows die so we can get past all this crap";"1"
"so... now, we have device tree and generated c++ storing key value pairs. can we use one or the other if device tree is not up to the task, let us kill it now. if it is, use that here, instead, please.";"0"
"same as the other file, kill those with fire...";"0"
"whoops, i mean that shill compiles successfully in chrome os : i'll note that explicitly in the commit message. still a few more things to clear up with the android makefile, butthis removes a bunch of errors that were blocking me.";"0"
"sorry for my ignorance but how's bloading !bnoui equivalent to busesystemlock !isoolockfileused";"0"
"missing a format_arg= initialization";"0"
"let us split these into imported/not and tee/not. i would like to be able to tell if, for example, a key i imported landed in the tee, that gives some nice properties for all time after i import the key.";"0"
"you probably need to null out mysubstylesourceattribute here as well";"0"
"i do not agree with this change. i'd prefer to see more rather than less. does it really look so ugly alternative proposal: kill make these new sections top-level and kill the advanced_deployment level. it anyway does not make much sense to me as it is too wide.";"1"
"shrinktask.conventionmapping.mergedmanifest = { variantdata.manifestprocessortask.getmanifestoutputtask }";"0"
"you need an die here, and same on any other line that might fail";"0"
"typesig should be replace by a fqn that will be more user friendly";"0"
"propertyassignment and propertyassignmentnamecompareless are unused now and should be removed";"0"
"typo in mechanism...let us not give people an excuse to file silly typo fixes patches :";"0"
"artmethod* null <- sp to something like: stackreference null <- sp artmethod* null";"0"
"nit: consider putting this into its own variable, e.g. auth_prefs, for brevity.";"0"
"'git cl' does not work for cros. you want 'repo upload' instead.";"0"
"one speedup is to not perform the syscall call if sigmask is all off.";"0"
"self.client_plugin is ok.";"0"
"this i snot what i meant. i do not understand why you use classmember to store a state that is only used in a limited scope. you do not use headphone_ and microphone_ to persist the state read from the driver because it is already reflected by the connect_xxx_devices vectors so i donlt get the use of these members.";"0"
"is notitbluetooth_device::kerrorauthenticationcanceled here and the dbus_error for failed should be convertsmpairerrortodbuserror change.pairerr .";"0"
"fyi: after looking closer at these garbage metrics, i really want to remove them, but only after your change lands. here is a wip with more justification:";"0"
"new_count = atomic_inc_return ecm_tracker_udp_count ; debug_assert ... ; and then you do not need spinlock.";"0"
"please go through and remove all the trailing spaces.";"0"
"add ' die' here";"0"
"just field_index = intptrsub field_index, instance_size_in_words ;";"0"
"crapi should remove creating a directory.";"1"
"see it was a dumb question, cl description answered it! :";"0"
"i could putitinto low_energy_constants.h we can have something like a common_uuids.h later too.";"0"
"is calling this with the unspecified value valid i've just been doing cros_build_lib.die for failed required field checks if not.";"0"
"dri_format= __dri_image_format_argb8888;";"0"
"o_o";"0"
"we still use the primary color for the progress bar, although we retrieve it directly from the tab maybe we should not be";"0"
"your prefs never blow up w/o registering because runeviction seems to not be tested.";"0"
"this was a dumb way of poking for a process that is alive and kicking.";"0"
"uck.";"1"
"oh, damni meant prolog of course, prolog!";"1"
"after the 'while getopts ...' loop, you need this piece of boilerplate: shift $ optind - 1";"0"
"nit: should have a higher oom_score_adj to be killed earlier. do not forget the period.";"0"
"i am not sure that orginary enable/disable service functions work well with override_enabled_services. this solution should be fool-proof. if it turns out that we can leave these off and devstack-gate will still do the right thing i'll remove them. right now i am not convinced though. override_enabled_services seems to force devstack gate to use exactly this list.";"0"
"use sdkconstants.android_uri";"0"
"before the eval, do: set -f this will disable pathname expansion so that flags that include things like * or or will not accidentally get expanded";"0"
"i know that i mentioned this already, i'll just do it one more time, just in case. if you used vector<uint8_t> for binary data, you wouldn't have to do all those casts and you wouldn't need those ugly hacky string_as_array calls as well. :";"1"
"extra space need to be removed.";"0"
"vs chokes on single parens because it can not differentiate from a function declaration damnyou, c++!";"1"
"are those logs temporary i see them in get_info too. i assume they should be killed.";"0"
"there is no need for conditional import here. subprocess should be monkey-patched by eventlet at this point.";"0"
"nope, this description confuses me. you should specify it in a bit another manner: * in 2.5.x version, default <user> and <db> are **devops** * in 2.9.x version, default <user> and <db> are **fuel_devops**";"0"
"hmmm... checkpatch is a nice aid to remind you of things you missed, but at the end of the day it is only a brainless perl script. in my opinion you should never be afraid to --no-verify if it tells you to do something stupid. i do not think the extra line adds anything here butitis no big deal either way.";"1"
"renderframehost* const render_frame_host_;";"0"
"buggeri missed one. pep8 should actually complain if there is an extra indent here. not sure why it is not.";"0"
"please remove all trailing whitespaces";"0"
"host should be dest -- it is easy to predict, so you do not need to use mock.any here.";"0"
"ideally we'd be able to let the label fill it is parent with maybe a tiny bit of padding between elements. i tested in spanish really quickly and on my nexus 5x the home button and share button text gets ellipsized. it'd be nice if we gave it a little bit more room... it seems like we should have the space. screenshot:";"0"
"throw invaliduserdataexception. checkstate should be used for programming error.";"0"
"nit: false /*is_scan_request*/";"0"
"kill extra blank line.";"0"
"this is misleading. the callback is invoked once all pending requests are complete i.e., the sender has no more requests . it is *not* called each time a pending request has been completed, only when *all* of them have been. please reword accordingly.";"0"
"this batching mechanism seems overly simplistic - besides the number of bytes a message can contain, they can only carry a limited number of handles currently 64, iirc, but i believe they plan to reduce that .";"0"
"do not do this! create a proxy-inl.h if necessary.";"0"
"since you are bringing up and single environment you will not have this situation. if the environment fails to come up you are screwedand need to abort.";"1"
"roughly; pre conversion of cros_build_lib to the logging module, default level was info. when i65a528924 landed, it switched the level to debug guessing mainly to keep the tests passing thus dumping a lot of noise into the logs. in ic28f1130e i restored it back to info via setting the levels via the wrapper, and having cbuildbot up it to debug if --debug is given. in the process, overlooked the landmine that these tests are dependent on default levels, resulting in it going 'boom' on my ass";"1"
"the dheck_lt is useless since code_offset > 0 always. instead of checking for code_offset != 0, it should be enough to have dcheck_le . same below.";"0"
"why did you change ipv6-icmp";"0"
"sorry, i am a moroni did not look closely enough what this does. you are still running through the whole cros_allow_auto_update check below even when this is set, so yeah, sounds perfectly reasonable.";"1"
"would subtracting the tasksize and picking a second process to kill here make sense if we are still below the threshold";"0"
"please use proper git commit messages. e.g. logging_crashservices: ...blah... extended description...";"0"
"if we have write failure, we waste 5 seconds checking. not sure if i have an issue with that ... i do not know how remount_ro_done can passif this command did not make it into the kernel. do we want to consider a runtime force remount on the list, marking the _ones_ that fail so we do not attempt the fsck on those";"0"
"done, sometimes i dislike pointless docstrings, other times i am like meh ;";"0"
"this block is rather lame, what about using some triple operator :";"1"
"you'll also want select ec_software_sync select virtual_dev_switch somewhere vboot related kconfigs that essentially should always be set for laptop-type devices... it is a little redundant and stupid that you have to setitmanually, i know . this cl might be a good place to add that.";"0"
"according to hacking there should be a blank line here";"0"
"> why do not you initialize _diagnosis_ids just like this oh, well, hmmm... i was just trying to create a list indexed by the integer values. because that would be more efficient. except not more efficient for the folks reading the code. :- or maybe just because that is how it was before, which is pretty much always a stupid reason. :-";"1"
"i agree with you, btw. tor - can you think of any alternative ways i wonder if the jb would be willing to clean it up so that native.pointer_size and its side effects are performed via a different method than this ugly hack.";"1"
"sucksuch :";"1"
"or: freq_connect = frequency_list_.erase freq_connect ;";"0"
"should this be std::string as well dir is a std::string";"0"
"i'd just assoon toss these ugly logging statements, since the oob data comes from disk";"1"
"more crapu-boot code.";"1"
"sizeof struct fwdlockfile_derivekeys_data instead of sizeof *pdata";"0"
"they were there before so i left them. this one does seem less necc than the other.";"0"
"seems like a silly presubmit check :";"1"
"do you really need to internationalize your own logging warnings";"0"
"so these ischecked are inverted - that is a bug, i'll push this test and then fix it";"0"
"without name argumentitwill not work. looked at we use name in deletion of fk";"0"
"this is quite ugly. could we add an api for cookiemanager to delete individual cookies devtools is already doing the same:";"0"
"why not just passwtfnullopt for intrinsic_size here, to make it clearer what this does also below";"0"
"urgh, this is pretty ugly. are you doing this just to retain the constant lookup in the ssa builder safemap has lookup in o log n which really is not that much of a difference...";"1"
"in this case we do not need to record histograms, so you do not need to passthe switch to the gpu process.";"0"
"damnit, that was not supposed to be there. i'll remove it.";"1"
"extract all this logic into a method which tells you whether a given activity element has action view children";"0"
"not a valid english sentence. maybe: ""during compilation, a java.lang.internalerror is used to indicate that classinitialization failed and the enclosing transaction should be aborted and the changes rolled back.""";"0"
"!chromeos.machinelearning.mojom.pagehandlerproxy";"0"
"a bunch of these were missing casts. personally i'd rather have gone in the other direction to at least have *some* type checking from these damned macros , butthat would mean that source that builds fine for glibc and the bsds wouldn't build on android. including much of our own stuff.";"1"
"missed these in the earlier set of patches. these will warn for conversion tran_high_t int64 -> int under visual studio. -wshorten-64-to-32 did not seem to pick these up. same with inv_txfm_ssse3.h and highbd_idct8x8. i'll send something to clear the current ones";"0"
"added logging, not worrying about exception stuff currently.";"0"
"rhoho. shame on me.";"0"
"uword is a worthless turdwe should remove and move to uintptr_t which has a meaning for people other than those who worked on dalvik's gc.";"0"
"oh man, i hate languages based on string interpolation so much.";"1"
"probably it will be better to call this run devstack, or devstacking= or something else then ""start"" because it will be terrible ""finish start devstack""= or start start devstack..";"0"
"need to distinguish with the insecure version because when its made a pubic api ppl are not confused.";"0"
"since you are cleaning up, how about removing that horrible literal here. this is c++11 now, how about nullptr";"1"
"it should be removed in separate patch as part of bash ramdisk deprecation.";"0"
"good - isdisposed is a superset of isdisposed = nice work.";"0"
"it is safe to kill off the adb host tool built for device. it was added a few years ago because motorola was using adb to communicate with the modem ! from within android itself. i would rather kill this off so i no longer accidentally start adb from within adb.";"0"
"the ""criterion=none"" param should be removed since it is not used..";"0"
"parseexception pe = new parseexception e.getmessage , -1 ; pe.initcause e ; throw pe;";"0"
"rs_fr12 to rs_fr15 are still clobbered by an external c call. right";"0"
"woe betide to me for being pedantic with my remedial english, butithink the google english style for possessive apostrophe is to putitbefore the ""s"". so ""user's"". my last tech writer was a stickler for this kind of thing";"0"
"params is only ever set to current_cmd which is never the right thing. maybe get rid of params and just use cmd+11 ugly but efficient. or make ""update_dns"" a const and let the compiler count 11 for us and optimize out the strlen ie const char * const update_dns_cmd = ""update_dns"" then in code set_servers cmd + strlen update_dns_cmd + 1";"0"
"#!/bin/sh # license .... ... why redirect stdout to /dev/null";"0"
"from_email = params.get 'from', self.smtp_default_from to_email = params.get 'to', self.smtp_default_to is a bit cleaner.";"0"
"propertymodel and onattachstatechangelistener are not needed anymore";"0"
"oh my. these could clash. we should prepend u, r or h to every breakpoint id to avoid that.";"0"
"preparation for a day when we do not abort, but die gracefully. if you want me to remove it...";"0"
"i think it is useless. in which case is it useful, for what";"0"
"this version comes from openstack's cookiecutter. i am ok with merging this as is.";"0"
"volatile uint8_t dummy __attribute__ unused ; and then you do not need to return dummy.";"0"
"pushd, popd should not be needed.";"0"
"thread_name == null";"0"
"different signature to the superclass";"0"
"this seems like an ugly hack... why does minute-ia not define a flag value";"1"
"write smi_larb_mmu_en is not needed here. this function will close the larb's the power-domain, then we do not need write the again. write also will fail if there is no power-domain.";"0"
"this returns void * -1 on error. someone fix this damnapis!";"1"
"filters should be removed.";"0"
"if these are not meant to be in the ndk, they should probably have __ names. if they are meant to be in the ndk, we should go the malloc_info route, not invent our own crap";"1"
"how about we expose this publicly this is a pretty useful api";"0"
"size_max is the posix name for what really ought to have been size_t_max...";"0"
"this is _probably_ safe, since manager is one of the last things to be destroyed asshill exits. but why not simplify, by calling asweakptr , instead then we do not have to think about whether a shill-crash-during-shutdown is caused by something like this.";"0"
"needs die";"0"
"all these "" r"" should be removed.";"0"
"you have potentially 2 interrupt handlers as well as multiple host controllers. this wait_tsk_id should be within the i2c_ctxs. otherwise you have really bad races.";"0"
"more timing dependencies to possibly cause test failures on super-duper-crapnodes";"1"
"nice catch! some of checks are useless now since we do not create an instance of dynamicmodulecoordinator if we do not have correct intent to load a module.";"0"
"what if i gzipped 100g of zeros they certainly fit one chunk, but when you decompress this chunk, you'll take 100g of memory.";"0"
"updated comment.. unloading loopy libs deserves verefication.";"0"
"darn itithought i had gotten rid of it.";"1"
"why would we compare a localdirinfo with a mapcomparator";"0"
"how about we replace that with new stringbuilder .append resource.getprefix concatenation with empty string looks ugly to me and triggers idea warning";"0"
"benwells , should we move this logic into installorupdatewebappfrominfo too";"0"
"here it should say mytimeline = mycurrentsamplerstrategy.createdata ;";"0"
"nit: no need of wtf, here and below";"0"
"> i do not think we need to use c-style declarations here, do we we do not, butithink the code is more readable this way. also other code in this file uses c-style declarations. > variables names here are seem to violate the google style guide, as they are uncommon abbreviations. i agree that these names suckbutthey are consistent with he api that is being used, so i think the code is more readable this way i.e. calling it io_vector instead of iov wouldn't make this code easier to understand imo, and i am not even sure that ""iov"" means ""io vector"" or something else . also it is consistent with how posix apis are used in this file e.g. see 'addr' in internalsendto and how recvmsg is used in other places in chromium e.g. see base/posix/unix_domain_socket.cc";"1"
"these comments are generally useless and we've been deleting them. they were formerly "" tests foo"" which were then seded to remove the tests";"0"
"only common mocks should be here";"0"
"afaict, this block will never be executed on suse because node ""openstack"" ""compute"" ""platform"" ""ceilometer_packages"" is always set to not nil in the case of suse.";"0"
"remove these, as you have #pragma once already.";"0"
"a_page.size_kb == b_page.size_kb";"0"
"nit: useless blank line.";"0"
"crapi did not do that all over. will up fix. let' see if i can find them all.";"1"
"""pthread_create failed: %s"", strerror ret like always. or use <error.h>.";"0"
"return nil if p is nil. you call this on all the paths objects in modulebuild, many of which might be nil, and this will generate extra garbage.";"0"
"again i'd assmargin-left"" here.";"1"
"that would apply $ my_cflags_arm to all other archs. use local_asflags_arm instead.";"0"
"this is a bit crappyno offense : . it is possible for the method to return false if the content of the sdk was half deleted or something, but in this case something will be displayed with the layoutlog file object passed in parameter. i would just log a simple message saying the init failed and that is it.";"1"
"imo getextraargumentsstartindex is worse. *extraargument* does not tell me anything and suggest that anything could be there which is not true, we know precisely what is there .";"0"
"instead of having a collection of disposable, please just connect to project's message bus once, using one disposable, and passthe connection to listenforchangesinmodules and listenforchangestobuildfiles.";"0"
"nit: not my codebase, butitseems unusual that a getter function hasside-effects like this.";"0"
"this id will not be correct for anyone other than the original author, so should be removed";"0"
"no, it is not. the destruction of dedupe sets below still requires the swap space and allocator to be alive.";"0"
"die is a good function to use here.";"0"
"i am fine to create a new assistantnotificationsubscriber. do you mean to rename assistanteventsubscriber interface to assistantinteractionsubscriber";"0"
"beginrequestdata mhd_connection* and you can eliminate connection_ member";"0"
"will add it but you are getting to hung up over this unimportant attribute.";"0"
"nit: for readablity, maybe extract: bool register_legacy_mailbox = !using_wrapped_sk_image !using_interop_factory !using_vulkan_;";"0"
"s/dummy/_version/ that way, we can know what the argument is for";"0"
"i think with a bit of refactor we can get rid of this classentirely.";"0"
"should be formatted like so: /** * wpas_dbus_handler_roam - ...";"0"
"remove this include, which is no longer necessary! you canalso remove the #include ""qemu-common.h"" from hw-control.h after this!!";"0"
"so let us at least fix the comment and reference the clang bug. i like the idea of forcing mac builds to a gnu* std... that sounds like it might help reduce the amount of mac-specific crapwe have to deal with around the tree.";"1"
"i personally hate those kind of accessors : for me, that is just a blatant un-optimization. as we are not doing java for enterprise, why not just using the global variable sleep_mask";"0"
"queue_action_triggered_by_event queue_action_triggered_by_property queue_action_triggered_by_all_properties";"0"
"this seems unrelated to this change and should be removed.";"0"
"local; this will hang around in the env otherwise. and yes, i am analabout keeping the env clean. ;";"1"
"<whimper> i hate that autotest and pep-8 can not agree on this. :-";"0"
"i think the current consensus is to use std::move. i.e. proxy_ = std::move proxy";"0"
"for lp64 these will be hidden. for lp32 we were cowards and left them all public for compatibility though i do not think we ever dremeled to see whether it was needed . we do not have an easy way to recognize additions, though, so we can not prevent adding new turds. i've raised to see if we can do something about this.";"1"
"uidevtoolsdomagent* const dom_agent_;";"0"
"if your tool does any network operations, you probably need it anyway; golang's native dns resolver does dumb stuff on os x, and the stdlib has a cgo impl which works as expected.";"0"
"bool create_on_right = prefer_leading != layout_is_rtl;";"0"
"sorry, this sentence does not make much sense to me. i suggest changing to: ""combinations of 'empty'', ''any_one_of'', ''not_any_of'' ... cannot be used multiple times withing a condition""";"0"
"standardcharsets.us_ascii";"0"
"unique_ptr has an overload for bool operator false for empty unique_ptr in case aelement >>= conversion fails getentry returns an empty unique_ptr";"0"
"oh, yes, so stupid mistake : thank you for observation, fixed.";"0"
"i think want you descriptors.h too, and can git rid of content_descriptors.h below";"0"
"_system_pwr is tricky. power_status.py should have exposed this. make _system_pwr a constant.";"0"
"> > i made my own because android.util.mutableboolean is deprecated in p. if you have any ideas for a similarly concise but less ugly way of letting tests know whether the loader decided to request a new seed... > > umm... i suppose you can subclasscallbackhelper and passwhatever data you want from it i tried a few things but i'll keep it as-is if you do not object. conceptually i want a ""future<boolean> testloaderresult"" object for which i can set the boolean value without unblocking the test thread in requestseedfromservice , and then unblock it later in onbackgroundworkfinished . basing such on object on callbackhelper might not be any better than what i have now; i can not explicitly protect the derived classboolean with callbackhelper's internal lock, so the boolean field would need to be handled just as carefully as mutableboolean currently is. basing the object on futuretask is confusing because the runnable/callable has nothing to do. i could use completablefuture or blockingqueue like a go channel butthose makes it difficult to separate setting the boolean from unblocking the test thread.";"0"
"new line after opening """""" in multi-line doc strings. yes, it looks stupid. butthat is what i've been told is the right way for autotests.";"1"
"dang it. i am not gonna bother fixing it since the trybot already kicked off, butitcertainly looks silly.";"1"
"because clang is dumb and does not provide its own viable libstdc++ implementation. instead, it uses gcc's. clang is also dumb in thatitcan not properly lookup gcc internal paths, so we have to do craplike this to work around it. imo, it'd be better if we fixed clang's internal drivers ... that'll just take more work.";"1"
"i stupidly thought that i'd get a warning if i failed to initialize everything in the struct...";"0"
"so this is a more interesting test than the old one, which just fuckedwith the tls slot value. this is actually testing what we are looking for. unfortunately, it does not fix the bug that got me looking at this code in the first place, which is that this test fails on x86-64. ideas";"1"
"put a $ before ""openstack"", so you get .... $ openstack congress ...";"0"
"yes it can, wassurprising to me too bc the client changed in some form i think to where some not founds were retruning notfound and others were retruning neutronclientexception with status_code of 404, which is why this looks so dumb. should verify this though and make a comment, if possible what calls actually cause this weird stuff to happen.";"1"
"dome: fix the order of calling dirname and realpath";"0"
"in an annoying middle school english teacher's high pitched voice you are missing a period at the end of your sentences appu!";"1"
"uint8_t src_data = ""thirtytwo-bytes-of-nonsense-data""; sizeof src_data ;";"1"
"i think we want cancel_work_sync here - since we are about to change the whole table, we do not care about any pending lut update. however, if there is a lut update currently in progress, we will wait for it to complete to avoid touching the lut in the middle of the lut update.";"0"
"...shut up, smartypants.";"1"
"you should really pythonize this some more with your dir operations. check out os.makedirs, shutil.rmtree, etc rather than rm -rf, mkdir's here and there. also for some of your more complex string formats consider using ""%s %s:blah"" % var1, var2, var3 rather than var1 + ' ' + var2 + ':' + var3";"0"
"why not pass '.join kernel_args in one grubby call";"0"
"use posixpath and then you do not need the next two lines.";"0"
"nit: call these isvertexarray and istransformfeedback to mirror the opengl es api calls";"0"
"no, ghartmann is going to switch over to 'exec' when he gets chance, and then we'll remove 'execonce'. i just did not want to screwhim over by removing 'execonce' in the same change i introduce 'exec'.";"1"
"oh damni missed that. this is not correct. we need this whenever the debuggerbecomes active, which might also be the case because of a breakpoint being set, not just because of this flag. will fix this in another cl.";"1"
"we should be able to kill the gcms-related includes as well i think";"0"
"why is it here and not in checked_data as for me, this ugly decorator should deal with serialization only, not validation logic.";"1"
"endptr != null";"0"
"should this be x86-alex, or the full config name x86-alex-release";"0"
"if you make that change, maybe kill this since adb_socket_accept already does the equivalent to this";"0"
"poor man's enums :-";"0"
"if shopfloor.get_server_url is a ""real url"" that is, contains scheme and net_location , you may use urlparseurlparse to get port: u = urlparseurlparseshopfloor.get_server_url self.url = u.scheme, '%s:%d' % u.hostname, self.args.port , self.args.webservice, '', ''";"0"
"yes, looks like this is a ugly hack :";"1"
"the correct way to delete a rc is as following: 1 resize the rc to 0 2 delete all pods in the rc if you only delete the rc, then all pods for this rc still exist";"0"
"can you get rid of the white spaces above";"0"
"chromite.cros.commands.* contradicts that. : find stays, although an os.walkdirs or similar perhaps the find was used since it is far simpler than the walkdirs crapimo .";"1"
"no, that was dumb. this is not their api. it is a signal handler. we have man pages for thatitis more useful next to the code that actually uses the information.";"1"
"i personally hate doing bitwise operations on bools. i feel much better about: success = freegroup ... success; if you want to call freegroup regardless of the previous failures. butthat is my taste... however in this case you are not looping or anything, then maybe just ditch the and and do simple assignment";"0"
"why do you need utils.h in the oat_file.h i think it should be in oat_file-inl.h.";"0"
"just wanted to note thatitwould be a trivial change to service_manager.c to report the requesting pid at least in each avc message.";"0"
"all i heard was ""damnit, robbie, why can not you ever make python magical "" your wish is my command :p.";"1"
"you may as well use javadoc comments for these methods";"0"
"> yuckwhere's this list come from is there a smaller set like ""dumb"" or unset we could blacklist, instead of whitelisting all these i added a comment explaining where i got the list term can be literally anything, so the whitelist that matches gtest s own, while redundant, is better than any blacklist.";"1"
"this is wrong. you want to execute the following conditional code, so you need to passan out_argument_type.";"0"
"you liar!";"1"
"if you are doing comparisons that are not == or !=, you are insane anyway :-";"0"
"i am dumb, and this actually was being done in copy_remote_dir_local, except with a bug basename on rpath instead of lpath . i did not notice what was going on because i was pulling directly into the adb source directory, which already has a test subdirectory. removed this, and replaced it with a proper fix.";"0"
"android does not care. the code's above is fine as it is. this #if crapis cruft from when bionic did not have <syslog.h>.";"1"
"so if i do enable_plane and disable_plane shortly after that before a vblank interrupt lands am i going to mess up my drm_vblank refcount";"0"
"once you have eapi=4, you can drop all of these die";"0"
"nitpick: you might consider initializing these where you declare the fields in the class";"0"
"you may be able to drop the wtfnamespace just nullopt .";"0"
"i just couldn'titthat long string on one line anyway... but i canuse stringprintf instead... it still looks as ugly...";"0"
"why this change you still want them dumped.";"0"
"i did not know base::fileenumerator was a thing. : fixed all this crapand the sleeps in the unittest.";"1"
"nit: add a brief comment here something like: // sessions, favicon_images, favicon_tracking are noisy data types whose invalidations are not enabled by default on android.";"0"
"interesting. i wonder if fixing ensure_not_asan.sh would allow us to get stop using this flag for other builds as well.";"0"
"i do not think that is needed, base::timeticks and wtftimeticks are just aliases and can be assigned directly.";"0"
"oops, screwedup rebase, ignore ps3... removing the lock is upcoming ; crbug.com/821034 !";"1"
"done. damni argued letters before _ :";"1"
"i think you should probably bring back the remove function as the implementation for .destroy";"0"
"yeah it is kinda crappysince these tasks are there only for studio, but since we can not hide them, we may as well assign them a group.";"1"
"are not you just making life hard for yourself here why do not you just return the directories, since that is all you want anyway";"0"
"instead, an empty cell should be treated as an empty string.";"0"
"browser_state_ = nullptr;";"0"
"your waitignoringinterrupts obsoleted this comment a bit. that seems to be masking the interruptshouldthrow=false. but even before, this seemed to be dealing with a very odd case, since it seems to be saying wtfhow did we get an exception if we said not to be interrupted.";"1"
"cq-depend is backwards. #defining the new option in board.h must be done before we turn off code if it is not defined.";"0"
"how much effort is it to rewrite the kube client to remove this awful issue of creating temp files for the keypair this is a big security hole!";"1"
"s/aborted/to be aborted/";"0"
"i would rather you made the fk fix as a separate patch";"0"
"nit: neutron is a third-party lib in fwaasso it belongs in the block with oslo/sqlalchemy. in all files.";"0"
"what kind of esoteric systems are you expecting this to run on sizeof char != 8 is going to break far more than this little daemon.";"0"
"well, why do not you just use 0 instead of 0xffffffff";"0"
"same note as before about this pattern: if the read fails, you are writing garbage to the register. maybe we do not care butthen checking the tcpc_read result is not useful either";"0"
"nit: constexpr uint32 kidentitykeyflags";"0"
"i hate that we have one giant file with exceptions like this. would much prefer the module that throws it be the one that defines it. butthat is not an issue with the patch, you are just following established conventions";"0"
"done, also decided to kill skipblocking for now since i did not really like its dual nature seek vs read . i'll revisit this later if needed.";"0"
"handles are client local -- the client is getting destroyed, the handles should too. the underlying buffers will be refcounted correctly theoretically you could call handle_put n times where n is the number of times your referenced it butthat seems silly.";"0"
"yeah, it sucks: adding a separate buffer would make all the reads awkward, so i wassort of hoping that the os would save me and it is ""only"" for a couple lines of text initial response line and some response headers .";"1"
"you should normalize power_role and data_role ie: !!power_role";"0"
"can you make a helper function for this part i.e. isprocessrunning pid";"0"
"we could avoid this test by defining a dummy neutron.manager.manager.reset";"0"
"ideally you'd have die here but i guess context kind of trumps that";"0"
"this schedulable is run before jayce dump. the added markers are not serializablemarker so they are ignored while writing jayce files.";"0"
"fixed, must have screwedup something in my rebase :";"1"
"why remove all of these doxygen markers that were added by some easyhack";"0"
"the repeated setter looks ugly. consider one masking step.";"1"
"remove wait_for_state_idle_init and wait_for_state_ready_init";"0"
"ughh butitlooks so silly... done";"1"
"src_map != nullptr";"0"
"sorry to be analhere, but without an exception handler, this will warn, but continue. did not we want to exit, if we cannot determine the version idea... a if unable to get version in get_version display a log message saying ""unable to determine ovs version"", and return '0'. b remove this else clause and let the comparison check";"1"
"some pedant could tell that the line should not be touched. damnpedant.";"1"
"is this even needed could you do invalid="" !activeprinter.printerppdpath";"0"
"these pmu_access structs should be static.";"0"
"no. the runtime should not depend on the compiler. craplike the jit are a special case, but if you need this here, then the enum needs to go into runtime.";"1"
"use 'die' instead of 'echo exit'";"0"
"i think '_vblock_' is safely implied in these functions. why do not we just call them vb2_get_keyblock, vb2_get_preamble, vb2_get_body_offset";"0"
"typo: 'setcon*s*tructedintesting'";"0"
"done. this setup with flags getting changed in build/cxx11_tests.cmake needs to be fixed sooner rather than later. it sucks i wrote it, and i already forgot to deal with it in this patch.";"1"
"why kill in this place. we should replace below two lines with: systemctl start mariadb";"0"
"what happens if it is 09.0.2 that is a valid ebuild name stupid, but valid ....";"1"
"for readability, how about: my_pids = checkoutput ... .splitlines for pid in my_pids: ...";"0"
"you might want to declare a classto represent this table's entries to access elements not through indices butthrough names - would be much better readable. at least the meanings of the columns should be described better in the comment block.";"0"
"dirname seems to work, but i am marginally happy with the way the code turned out. seems kind of ugly.";"1"
"is this really necessary in general, we prefer to use a timer that just starts counting from power-on reset to aid with exact boot time measurements. is there no timer like that on the rk3288 if not, you should probably define your own init function instead and call that from bootblock_cpu_init . init_timer is currently only called from hardwaremain.c, which is in ramstage... that is a little stupid and probably left over from trying to add arm support into the old x86-only coreboot... we should refactor it eventually, but for now you'll have to hack around it .";"0"
"add an ampersand so that the hyperlinking works, e.g. rsparallelfor.";"0"
"oops. yes, this was dumb. do not need this macro at all. ps2 fixes this.";"0"
"that is rather ugly legacy way to do it... much better to convert the osl_fail below to sal_warn which will always use its arguments even in non-debug build and canalso easily concat strings. something like sal_warn ""sw.core"", ""blah exception"" << e.msg ;";"1"
"i agree the indices are ugly, but ._replace is not a public api";"1"
"agreed, the current solution with exposing onurlfetchcompleteinternal to tests is ugly. this should be fixed on some other level.";"1"
"adesc.aname = adesc.adescription = ""###"";";"0"
"this should be the default -> you should not need this. if we need to do anything we should do it in the codec not here. we do not want to force people using the api to have to initialize a decryptor.";"0"
"should this test just be removed seems useless...";"0"
"same thanallocrecordstacktraceelement: we were missing a destructor to delete the weak global for the type. this should have happened when disabling allocation tracking where we delete all allocrecord objects.";"0"
"useless copy";"0"
"this condition is not sufficient. a cb pdu over umts could be anything from 7 bytes to 1252. as discussed earlier, we are missing a reliable way of determining the rat at this stage. furthermore, the ril spec says the data should be fixed size 88 bytes, hence suggesting it should be in gsm format.";"0"
"this should probably be changed to cc_system. same for cprintf";"0"
"i think these should be string literals";"0"
"subnet = self._make_subnet fmt or self.fmt,";"0"
"yep. just like the health_monitor controller. you are really into killing bogons, are not you ; i'll getitadded as i have done for the rest .";"0"
"i'd put a colon here and ditto for the rest of the procedures";"0"
"damn my bad, focused on the other stuff";"1"
"wow, it sucksthat chromeautofillclient has to be the one to do this; it does not really seem like it is its job. on desktop the bubble controller handles this...can the android code figure this outitself";"1"
"the ""$"" character here is not necessary, and cold potentialy cause problems.";"0"
"are these placeholders for later i do not see them used beyond usage. can you remove them or add todo to explain the future use of *_experiment*";"0"
"oups, i left garbage.";"1"
"dumb question since i haven't really payed close attention: are these templates not used by eclipse or has eclipse been taught how to use these new types of dependencies";"0"
"i think i'd call this mdisplaylock, since i think it is actually trying to protect mdisplaydata. i'd also move this line up right above mdisplaydata and explain in the comment thatitis protecting mdisplaydata from races between prepare and dump.";"0"
"i think we'd want to passin shadow_frame.getmethodaddress or call shadow_frame.setmethod later if the reason to passin artmethod** is thatitmay get moved in the future when we move methods";"0"
"should be mfrefreshrate or mnrefreshrate.";"0"
"could we extract the interface and not have inner interfaces it makes the code using them verbose and obnoxious to read, for no real benefit.";"0"
"i still really do not like kill being used here, if u use u do not need to do this and u can just call stop on that...";"0"
"that whitespace is useless i think.";"0"
"seems like a pretty crappytest to me. =p";"1"
"kill the padding spaces";"0"
"you do not need the here ... you used # as the delimiter already put a die at the end";"0"
"interesting... does _exit bypassatexit registered hooks i guess you do not get the dumps written unless you explicitly call __llvm_profile_write_file";"0"
"modaldialogmanager takes care of dismissing all dialog in destroy. so i think we do not need to do anything here.";"0"
"imo those kind of #ifdef in board code are not terribly useful";"0"
"in msm8226 case, $ audio_platform will be override as msm8974";"0"
"this is going to crash on many res_txtatr_*, because only 3 or so have pautoset != 0";"0"
"maybe: can be concurrent with other insert and remove executions, ...";"0"
"again, this should only be executed if unit evaluation is on.";"0"
"added the entry name first but in '. i felt putting it at the was really ugly.";"0"
"'cbuildbot chromiumos-sdk' would be the other big one";"0"
"yeah, i am an idiot. i was comparing to the my workspace eventfilter which did not have your changes";"0"
"please remove ""this solution should also be backwards compatible if the resource uri specifies the tenant-id."" backward compatibility is not needed.";"0"
"i think ""call graph stack"" makes me confusing. they are two different things, and here the size just means how much user stack do you want to dump.";"0"
"any reason this code is not preserving the sleep/umount, *while* dieing we know the gvfs idiocy exists; i do not see the cost in leaving in protective code in the die pathway.";"1"
"bad merge conflict fix...i confess id idn't run pep8 before i pushed, i fell into that trap";"0"
"we do not usually split a line up like this, better might be: self.mock_get_driver.return_value = plugin_driver.agentbasedplugindriver self.plugin_instance, ""dummy""";"0"
"put a todo dbrazdil here. we should get rid of this...";"0"
"this is unnecessarily exececuted if both, mbnumeric and mbdatetime, are false.";"0"
"yeah, i did feel dirty. my excuse is that i feel like we've got a deeper problem with __get_tls. everywhere we use __get_tls is a mess of casts. i think we should change __get_tls to non-volatile void**. then i think we'd probably only ever need one cast, and no const_casts";"0"
"/bin/sh, since you do not really need bash-specific syntax.";"0"
"dirty. to be fixed.";"1"
"this should probably print to stderr. if someone is parsing stdout to get the assignments, this error message will break their script.";"0"
"ah. i wasstupid. yes, greater-than is my recommendation.";"0"
"for next time, we did add a comment to the cutils include file: /* * a handful of basic atomic operations. * these are here for legacy reasons only. avoid. * * preferred alternatives: * - use c++/c/pthread locks/mutexes whenever there is not a * convincing reason to do otherwise. note that very clever and * complicated, but correct, lock-free code is often slower than * using locks, especially where nontrivial data structures * are involved. * - c11 stdatomic.h. * - where supported, c++11 std::atomic<t> . * * please stop reading here unless you are trying to understand * or update old code. sadly we did not have the ballsto add #warning. even ignoring vendor code, there is a *lot* of code using this and its also evil libutils twin:";"1"
"we are talking about the same thing. the problem is that nova api/client is not localizing exception messages. that is my understunding";"0"
"i think this macro confuses more than it helps... token concatenation is pretty ugly.";"1"
"nit: maybe put a newline before mm_modem_gsm_network_reg_status_unknown.";"0"
"this is subclassof power_test.power_test";"0"
"max_bin_count = 0;";"0"
"it is getting yuckier. maybe we should refactor the native-bridge-interface stuff at some point...";"1"
"<idiot>forgot to upload.</idiot>";"1"
"oh, i was wondering why you use ""ifneq $ local_force_static_executable ,true "" below.";"0"
"typo: ""irovic"" should be ""ironic"".";"0"
"yes. i want to remove the asynccompilejob before the promise gets resolved. however, therefore i have to keep the job alive somewhere after the job gets removed here.";"0"
"the non-highbd named functions are only used in the highbd builds weird.";"0"
"it became ugly. a couple of lines will wrap if you add just a few chars, going from readable to not so readable.";"0"
"target_ld := $ toolchain_prefix clang++$ host_exeext";"0"
"changed this an have_funopen below.";"0"
"i guess it was retaliation :- for having me waste so much time to figure out what that stupid construct was doing... only to find-out thatitwas just a convoluted way to do a trivial scalar type cast... via a template no less...!!!";"1"
"nit: n after this to make it clear which dependency should be removed";"0"
"frametime is int64_t, which should be formatted as prid64.";"0"
"this is kinda ugly. why not mock out nodepoolcmd and grab a copy of the pool object from there";"1"
"seems like jack should be warning on these kind of bugs";"0"
"iiuc, the 3-letter names for intel chips were because intel insisted on that. if amd does not have similar silly/pointless requirements, we should use the proper/readable names with projects. the intel ones might as well be random garbage. at this point, ""stnyridge"" is set in stone :p because the git repo has been created, but looking forward, call it ""stonyridge"" or whatever next time.";"0"
"these nopcode have of course to be efacopcode then.";"0"
"you probably want, self.assertisnone p.handle_properties";"0"
"the windows build gave me crapwhen i did not do this, but i probably could have avoided it here :";"1"
"should we come back and make these __libc_fatal in another patch seems weird to say ""hey, heap demonstrably corrupt, but i'll just carry on anyway"".";"0"
"this stinks a bit, making an assumption that secureblob derives from std::vector<uint8_t>...";"1"
"here too, find_loaded_library must return non-null, or we'd have failed earlier and reported the failure to find a dt_needed library to the caller.";"0"
"drop the gitrepo import. in your mocks below mock out revision_control.gitrepo instead of gitrepo.";"0"
"removed the file from the cl.";"0"
"nit: using webviewscriptcommandtest = webviewinttest;";"0"
"mutating a field of something that is returned from a function seems icky. i do not have a better suggestion for you though.";"0"
"i think you probably want to passboth pid and tid in... or the debuggerrequest_t.";"0"
"timeticks is essentially an int64. you should passit by value.";"0"
"calling this here is an ugly hack. the issue is that the copy reducer passruns after native context specialization. running the copy reducer early is problematic since we still mutate the heap in many places. for the same reason, the serialize call here might be problematic as well.";"0"
"> is this object created in constructor, which case it could be reset good catch, i accidentally added it to constructor while debugging. i wanted it be lazy-initialization. there is a chance that developer is not using this api, so no need to have one.";"0"
"<insert-groundhog-day-meme-even-more-since-the-lines-are-still-too-damnlong!>";"1"
"checkpatch.pl failure. since this is a cherry pick, we have to ignore this.";"0"
"zaqar_ui :- there is no need to include a modulename here. python: **.py";"0"
"i think we want config_page_offset=0x80000000 and config_vmsplit_2g=y";"0"
"why is this reimplementing stdlib.h's div_round_up";"0"
"logger.h had too much interdependent incest with log.h, we merged them together and deprecated logger.h. i think everyone will appreciate a one-stop-shop approach to logging. android/log.h -> ""c"" ndk log/log.h > ""c"" vndk or system android-base/logging.h -> c++ <bam>";"0"
"max_days != 0";"0"
"silly nit: i would prefer _snapshot instead of _snap.";"0"
"using. and it needs a better name, e.g., like parsecompletecb";"0"
"is not the db set up such that these deletes are not necessary i guess it does not hurt to be explicit aboutithere. the waitforserverdeletion is necessary so we may as well do that and an explicit db delete too.";"0"
"i think dex_pc should be an operand to the hand/hor ctors below";"0"
"suggest prefix of upstream or backport to make it easier to know that we can throw this change away when we rebase. ...also, if possible please cherry pick with cherry-pick -x to indicate which upstream revision this was backported from.";"0"
"if you flushed in _progressbar, i think you should flush here as well.";"0"
"unaryexpression<t, u> extends expression<t> t eval u binaryexpression<t, u, v> extends expression<t> t eval u, v";"0"
"null should never happen, so i would use preconditions.checknotnull instead; otherwise an misconfiguration in touch_name_to_enum may be masked";"0"
"damnyou are right. the suite scheduler uses the test names when pulling results and job names are not a problem butthe dashboard definitely uses this field. fixed!";"1"
"huge nit: maybe ""started vm %q with cid %d and pid %d"" since most of the other log messages are sentence-esque";"0"
"let us throw away this pointless indirection and just call it a u32.";"0"
"eeeeeeeee. yuckonly shared for the target, only in static for the host.";"1"
"we should probably be using chrono instead of time_t. existing problem with other members too.";"0"
"optional: you could also do **match.groupdict , thus killing the need for the _raw_diff_components variable. up to you, i could see benefits either way.";"0"
"i will simply remove them and restore them when ready.";"0"
"we should really be using the vibrator functions in libhardware_legacy, oh well. let us leave it alone for now. maybe someday we'll have a proper vibrator hal.";"0"
"why this test if you dcheck type_descriptor != nullptr first unless the dcheck should be removed.";"0"
"style nit: please use single quotes for string constants.";"0"
"the dumps *are* concurrent in separate processes, we just handle the output from them serially. can you think of a better name for this";"0"
"apparently i am a liar. i wrote a test to count the number of keys before any threads are created and after a thread is created and it is always the same. i am not sure what caused the temporary extra one, but i am a little worried there is a race in the tests somewhere. i suspect a previously failing test did not clean something up and i incorrectly associated that with a key per thread.";"0"
"why can not you unit test the parsing rather than having to go through the whole daemon";"0"
"use mhandler.removecallbacksandmessages null instead.";"0"
"this method does a lot more than this description. it would help to have some comments either here on inline regarding garbage collection, worst offenders, region lock, ...";"0"
"remove waitable_event.h not needed anymore.";"0"
"ditto user-facing messages should not use _l*";"0"
"ugh, that is an ugly api. i did not realize. there is a leak here. std::unique_ptr or std::vector<char> instead";"1"
"{ end } are not useful here";"0"
"editedstyleitem item = value instanceof editedstyleitem editedstyleitem value : null;";"0"
"so this ended up being a wee bit ugly since we have to fake both the identity and the processid via separate mechanisms...";"1"
"aware i changed this, but in hindsight the valueerror wasstupid and would make invocations to the api annoying. thus punted it.";"1"
"yeah, i think this comment does not add anything, so i'll kill it.";"0"
"i'd rather keep the comment, changed to /* obsoletes language_obsolete_user_malagasy_plateau */";"0"
"use: doins org.chromium.chaps.conf die";"0"
"i am not sure what the problem is exactly, did not have time to run an experiment. you disabled sanitization of sdk code last year in";"0"
"stupid question: how naive is this logic's concept of a ""day"" i.e: if the day has a leap second - in which case the day will be one second longer or rarely shorter - will this work correctly";"0"
"these java.util.calendar objects seem somewhat pointless to me. you could just use icu4j calendars throughout.";"0"
"i see your pain point now. there is no acquire fence in thread2 to ensure the appearance order of key_destructor stores. i think it is too hairy now and let us make them seq_cst.";"0"
"using unique_ptr should not be additional overhead i think";"0"
"expand this docstring; specifically that your testing type=gs_path func implementation. also, _parsecommandline and _createparser do not need to be separeate functions and realistically this should be a method on gspathtest";"0"
"kiking is simple - killing of reaper_thread and closing usb device endpoints.";"0"
"s/anything outside, no gurantees of/for anything outside, there are no guarantees about/";"0"
"ah, right. you could scopedfd::release in that case. that might seem more idiomatic than having two variables. unfortunately there is the fstat... yucki do not like any of the choices :-";"1"
"ah yes. this suckswe are going to grow the handles_scopes_ proportional to the methods we are going to try to inline. +calin: we need a better solution for handles_scopes_.";"1"
"this will in general not sum to 100%. total includes lots of other stuff c.nice + c.iowait + c.irq + c.softirq + c.steal + c.guest + c.guestnice . consider exposing them at least as ""other"" field.";"0"
"done. as far as i can tell getjitoptions are always non-null.";"0"
"mypy types do not show up in the recipes generated markdown. this project supports conversion to py3 annotations:";"0"
"remove both of these -- they are completely redundant";"0"
"this is git being stupid. it did not use the previous _build_id test for comparison, butthe _with_cache for some reason. it marked the previous test as removed... but in reality it is just a rename of the _build_id and a change of all references to the buildername in the file.";"1"
"can you alphabetize to make it easier to diff this vs. brain";"0"
"bordertype=cv2";"0"
"getlasterror will be reset right after this call as any winapi call may kill it . cache its value before doing anything else";"0"
"so this exists for non-bridged cases. its an orthogonal setting, so afaict your simplification breaks it. i am not entirely sure that matters since i want to rework this whole space anyhow - - but i'd like to avoid unnecessary oopses on the way.";"0"
"this cast jungle is ugly.. it can be rewritten as insertdeleteflags ntempflags nflags insertdeleteflags insertdeleteflags::note insertdeleteflags::addnotes ; i'll do in an amended commit.";"1"
"weird. i did this: % rm -rf client % git checkout client % git rm client % git commit -a and poof.";"0"
"this test is a horror show, butitis temporary state until all v1 crapis deleted.";"1"
"is ""even-numbered tokens will be '<or>', so we drop them"" clearer";"0"
"this static_cast should not be necessary.";"0"
"we should make this more prominent that this cl is changing the semantics of version_watermark based garbage collection.";"0"
"probably should remove this white space. similarly for the other control files.";"0"
"stupid thing. could you possibly do the equivalent of arraysize minidumpsysteminfowriter* 42 ->system_info_... instead";"1"
"blerg, not sure, i must have done some sort of copy and paste idiocy from a different commit version. fixed this and the other instance i found of the same thing.";"0"
"...that comment's obsolete now and should be removed";"0"
"dcheck oat_class= null";"0"
"kill empty this empty space.";"0"
"please kill return_ok. that does not really match other kernel driver style. just return 0 like every other driver does.";"0"
"mind calling this ""legacy_mount_point_"" or something else if not, file a bug and add a tracking entry here about killing this flag. the name is too generic otherwise!";"0"
"the beauty of neutron community is that whatever you write, you always get a bike shed comment. if you do it the dumb way, you get smth like: ""last_ip = net.last - net.version == 4 "" suggested. ;";"0"
"should this be fprintf stderr, ... also i think we want to end the string with n.";"0"
"even though the old code had strncmp, should not these be strcmp we do not want ""adb wait-for-sideload-trailing-crap";"1"
"this file must be ignored. was committed by mistake, the only difference - echo ""****"" lines, used to debug building process.";"0"
"for uniformity reasons, please use /* is_wide */ false here.";"0"
"including uinput_fd_ is useless";"0"
"ok. rob and bettina, should i remove you all as well";"0"
"it is true thatitwill confuse the debuggerbutthe bigger issue is thatitis violating the dwarf spec.";"0"
"this should be ok because the object is white. can you run the tsan bot to be sure";"0"
"why do not you just support this in isinstructionsetsupported";"0"
"should have traits to be destroyed on the particular thread.";"0"
"def delete_zones self, zone_names, activate, active_zone_set=false :";"0"
"blink in extsheetbuffer::cont is always false, which means islink is always false, which means this whole if block cannot be executed";"0"
"we currently only support a very small subset of etc2 required by gles3";"0"
"sh**!";"1"
"nit: is this git cl formatted alignment looks weird...";"0"
"added a comment.";"0"
"these are odd and useless. but our code formatting tool seems to require it assoon as there are too many members.";"0"
"remove white space";"0"
"ditto: bool canaddeoptimizationarraylength value, array_length, offset, bool* is_proven";"0"
"junk here still.";"1"
"nit: insert a space after generifistream*";"0"
"i assume this fails horribly if the pid is already dead extend this to also add that tidbit of information so we know exactly what we are dealing with next time we hit this.";"0"
"looks inconsistent with -- callinst * creatememset value *ptr, value *val, uint64_t size, unsigned align, bool isvolatile=false, mdnode *tbaatag=nullptr, mdnode *scopetag=nullptr, mdnode *noaliastag=nullptr";"0"
"do not you actually want null is not this supposed to be null-terminating the argv argument to exec 2 i think the original code was right but ugly. null is clearer.";"1"
"eliminate here and following...";"0"
"t3";"0"
"could mreadframebuffer be null here if we do the following: - somehow dirty read_framebuffer - setreadframebufferbinding nullptr - syncdirtyobjects";"0"
"gross.";"1"
"this use of android_log_verbose is the 'inert' level of 'enforcement' todo: consider implications of a runtime check of ro.built.type where ""user"" sets a default of android_log_debug or even android_log_info as per the discussion s incited during the bootcamp talks on the new logger. ghackmann and others point out that some subsystems make _all_ messages android_log_error. the world has never been capable of dealing with megalomaniacs or a jerkdriving a bmw 7 series in the hov lane.";"1"
"i think string#isempty is new in jdk 6 which means this will not compile on jdk 5 -- you might need to do libjavapackages.length == 0 instead. or alternatively, just replace the above logic with string libjavapackages = null; .... when adding: ... if libjavapackages == null { libjavapackages = libjavapackage; } else { libjavapackages = "";"" + libjavapackages; } then there is no need to null it back out, and besides you only end up with ; between the paths instead of having a useless one at the end.";"0"
"we may want to consolidate this with process_util_linux.cc s subtracttimespec and put them both together somewhere else in util. butthis is ok here at the point of use for now.";"0"
"what was the actual problem see < ""wip: dummy cppunittest with gb_cppunittest_use_library_objects,vcl"" for a successful example of using that building it failed on all platforms with the forced cppunit_fail in the test, demonstrating that linking the test succeded on all platforms . remember that you generally need to copy all the gb_library_* settings relevant for linking from the library_*.mk to the cppunittest_*.mk.";"0"
"i do not think we should do this. with upcoming changes to how the dp driver works, we'll need the bridge to be powered up here in order to do link training. how concerning is the power spike/timing violation";"0"
"you can actually passnull as the second argument. for some reason we have a lot of callers using dummy variables like this. we should probably clean them up one day...";"0"
"some sort of silly typing or copy/paste error that i missed on final checking of the code. thank you for fixing this, too.";"0"
"ah damngotitremoved this namespace from the header.";"1"
"oh, whoops, max_addr should be a uint64_t.";"0"
"you can combine these two makedirs into a single osutils.safemakedirs";"0"
"no 'except:' anywhere please : please catch the specific exception you are looking for.";"0"
"/* parameter_name */";"0"
"since v5 and v6 does not seem to differ in anything butthe definte for max_cpb_size, and it is already differentiated in v5/v6 variant structs buf_size_v5 and buf_size_v6 , why not use one function and that";"0"
"vp9_nuq_knots quant_profiles coef_bands nuq_knots";"0"
"the comments in jnihelp.h are a bit more vague, not just ""... for the mac."" unlike the art macros.h. as long as jnihelp.h is paranoid enough to #define temp_failure_retry, scopedfd will be just as paranoid and #include jnihelp.h.";"0"
"i'd remove either mbufferwidth or mbuffersize.. leaning towards removing mbufferwidth as ""width"" sounds weird to me for this purpose.";"0"
"we do not have procfs.h on android. if we add it on bionic and platforms this hack and couple of others are not required. it should be added to old platforms as well to remove these hacks completely. note that glibc comment for procfs.h says: anyway, the whole purpose of this file is for gdb and gdb only. do not read too much into it. do not use it for anything other than gdb unless you know what you are doing.";"0"
"it seems like the dumb method is useless in this test case.";"0"
"ugh, this style convolutes changes in patches... on-per-line is much nicer :- although i know this is the autotest style... damnyou mbligh, heh ; and i guess gerrit is also pretty good at partial line changes...";"1"
"omit message in assertionerror except when it give some dynamic data to the user, because it is useless. if necessary, put comment here.";"0"
"i am not clear on what is going to go in the else clause, but is there a reason that len == 1 needs to be a special case could you justiterate through vms";"0"
"i think the checker should be aware of those ids. seems silly to repeat them here. this can be done in a next cl though.";"0"
"this method should not be here why are you not using resourcehelper.resolvedrawable";"0"
"fyi links like this can be turned into a shorter version: and webrtc-links too, in that case: the referenced bug has already been verified, should this todo be addressed or that bug re-opened";"0"
"instead of including this, we should use services/network/public/mojom/tcp_socket.mojom.h for mojom::tcpconnectedsocketptr";"0"
"use cros_build_lib.die you can give a nice error message with that as well, rather than dying silently.";"0"
"looks like i missed this one. sdkconstants.fd_resources";"0"
"i really, really, *really* hate the explictness of this check- mainly since it does not even validate that cros_mark_asstable actually *supports* those arguments. it is basically a dumb testitjust verifies we do basic arg passing. if you can come up w/ something better for this, it would be appreciated- as is, tests like that is exactly what bit me in the assfor patch_unittest; basically just verifying we are shuffling args around, not verifying it actually *works*.";"1"
"if atmpstate != astate then return which means that when you hit the line atmpstate = astate you know that atmpstate is already == astate, which means that line is useless";"0"
"you do not need std::, because you already include <stddef.h>";"0"
"addcleanup should be used instead of teardown";"0"
"i have the marginal preference of not using ""dst"" and ""src"" for anything else after they have been casted to ""dst_dm_sec"" and ""src_dm_sec"". this will make it easier in the future to eliminate them and replace the ""char *"" arguments with ""tbta_dm_sec *"".";"0"
"returns after system.exit are weird. you did not fancy a die string and die throwable or just letting the exceptions propagate";"0"
"consider iterating over staticipparameters::kproperties instead.";"0"
"runtimeenabled=contactsmanager";"0"
"i know it sucksbuts lets rename this file so the e is lower case to match the other routers.";"1"
"oh darn. those were for debugging only to build character and improve my morale . now you know my secret.";"1"
"do we still need this the only thing running 'nsshlibsign' is the nss ebuild. at the very least, change this to a symlink and stop modifying the for loop: # kill this off after the next major upgrade. dosym shlibsign /usr/bin/nssshlibsign";"0"
"perhaps: "". in this case, garbage collection is performed in the allocating thread.""";"0"
"why should we : probably stupid question butitmight worth elaborating in the comment.";"0"
"nit: argument can happily sit on the same line, func body usually overflows to next line.";"0"
"you could convert the encodings here, so getwcrashdirectory will not be needed at all";"0"
"... this does not actually work when called at runtime because staticmethods have weird behavior : . fixing.";"0"
"darn, i messed up the alignment by 1 space.";"1"
"""// callback data"": useless comment. does not tell me anything about how this member is being used. please elaborate.";"0"
"needs stddef.h for size_t.";"0"
"oh, i see - we can not restorecon them because they are immediately unlinked after creation, and we can not label them at creation time because they precede policy load. the tmpfs:chr_file rules for /dev/__null__ in init, fsck, toolbox, healthd, and ueventd might be obsolete though due to the change to use /sys/fs/selinux/null; hadn't noticed that change to init.";"0"
"crapmissed this comment, ill fix this in another cl";"1"
"added the mocks to the bug. even though the mocks are only available on desktop and do not include managed prefs , this change in particular will make the experience on android consistent with what we have today on desktop: the page is accessible, but controls are disabled. the specific change has been recommended by rfeng , our uxer.";"0"
"like this: /* * rk3288 platform termination */";"0"
"this string seems a bit awkward, have we run it by ux maybe reword as: only one of your cards can be used on this device";"0"
"the tostring ought to be redundant, e.name should be a string.";"0"
"should preface this dump w/ an explanation of what is actually being dump... think about multiple threads/jobs going, with intermixed output to the log.";"0"
"can not this be an arch-specific library function i hate to see all these config_arch ifdefs appearing everywhere.";"0"
"nit: this kinda feels like an sshhost thing, hot a host thing. for example, if there were an httphost, we almost certainly would not expectitto automatically run within a bash shellenvironment. if the user wanted that, they would do something like 'sh -c ""$inline_shellscript""'. i am not sure what the escaping behavior should be then. feel free to leave it here, though.";"0"
"i do not think you need to do this. it'll be rounded up for you. did you actually mean to static_assert that sizeof pthread_internal_t <= page_size";"0"
"yeah, we've ""always"" listed nested git checkouts otherwise they dirty 'git status' third_party/.gitignore has a bunch more examples";"0"
"define a real module and use 'local_cc := gen_syscalls.sh' gen_syscalls.sh will then be invoked as though it was clang, with all the correct build flags. example in bionic:";"0"
"setting retval here is useless";"0"
"how about using an enum. might make it more robust if axes change in the future: enum cmt_axis { cmt_axis_x = 0, ... cmt_num_axes };";"0"
"i'll give it a shot, i was considering this a bit for the sake of not duplicating logic like you mention, my main hesitation was that i am garbage at makefiles : butithink it would be the better solution, i'll play around with it today.";"0"
"i will remove all of them";"0"
"ugh. this is undesirable. we really want chrome os upstart jobs to depend on a handful of publicly exported events, and ""runlevel"" is not on that list. also, i am not sure whether this 'stop' condition will guarantee the thing we really want, which is that the hwclock sync will complete before we shut down. the best-supported way to do what we want is this: stop on starting pre-shutdown that'll cause the post-stop code to run in parallel with stopping the 'ui' job, which is what we want.";"1"
"are you planning a separate cl to remove setfailuresilent here and in the mocks";"0"
"once'. keyboard was being particularly shittythat day...";"1"
"so was that bogus in the presence of int8 immediates";"0"
"typo garbage";"0"
"it should be down_revision: '172ace2194db'";"0"
"this client interface should not be generically named and should not be built on !cros.";"0"
"nit: make this into constexpr offset_t kwidth = 2u;.";"0"
"the biggest yuckness comes from the fact that i am dealing with two different apis trying to represent a complex topic in pretty much completely separate ways. that is also the primary reason why this code is as messy as it is. the reason int is fine for the milliseconds is thatitcan only be approximately +/-14 hours.";"1"
"this is a little silly because ssl_renegotiate in boringssl always fails and ssl_set_state does nothing. but ssl_set_state is available in openssl 1.0.1 and i was not sure what the story was with this function. it seems to only be used in tests";"0"
"in the big ugly patch it seems like the kconfig for arch_rockchipissetting this for us";"0"
"this is a bit of shitshow, not sure how to improve it";"1"
"i hate all this stuff, we should just write assert 1 in 1,2 and pytest will do all the work :d";"1"
"sigh. apple's shenanigans with clang versioning _suck this is ridiculous.";"1"
"obvious dumb question: why do we need 501 elements";"0"
"sys.stderr or sys.stdout i do not see stderr used";"0"
"seems like you should be using lib.git.rungit here and below";"0"
"damnit. how about 5";"1"
"it is a little wired to passyaml in cmdline interface. here i use arguments string for battery_cutoff.sh directly.";"0"
"you already have tast_ in the beginning of the name. no need to put tast after the dot as well! may i suggest tast_runner.narc.bvt or similar to reflect the test_exprs that you are passing. that way it will be easier to distinguish different control files.";"0"
"you might want to update that comment to reflect that when nofork is set, you _want_ to be pid 1.";"0"
"well, kind of - we'll kill the renderer. is the fuzzer an ipc fuzzer where we get garbage values , or is this actually something we've seen if the latter, then i we should figure out how that happens.";"0"
"you do not need the flush as close should call flush";"0"
"the plug_vhostuser and unplug_vhostuser methods are required by the vif driver interface . for every vif type there need to be get_config.plug, and unplug methods.";"0"
"fdo#70000 -- to prevent the bugzilla notifications to misfire against the wrong bug";"0"
"bool is_new_attempt = !driver_entry.has_value driver_entry->state == driverentry::state::interrupted; then you can get rid of new_download";"0"
"getisreplytransaction should imply you are not expecting a reply, i.e. you should not need !trans.getexceptreply";"0"
"this is only used in one spot; thus the naming should be private. frankly, i'd just inline the suckerinto _getfilesfortarget.";"1"
"should be scrow instead of sccol.";"0"
"why would this be null psifile.getname is notnull.";"0"
"this info is useless";"0"
"please put this inside a #ifdef use_android_emu .. #endif block.";"0"
"gross, seems odd that the scaleio productitself does not create a link to drv_cfg in /usr/bin or something. i definitely do not want this in exec_dirs in rootwrap.conf. i noticed that drv_cfg is not in volume.filters in cinder, so how does this work i opened bug 1479530 for that....";"0"
"we should maybe send sigterm to run_oci and let that relay the sigkill to its child.";"0"
"buf_len_sz_y and buf_len_sz_c are the size used to store y plane and cbcr plane ufo info,they come from user space when parsesequence.they are a value when ufo mode on, or zero when ufo mode off. add here to avoid playing show garbage.";"0"
"that one only works on spans, this works on any uint8_titerator. should i change that one requires ugly template";"1"
"kill virtual, add override.";"0"
"also you now have a conflict here, since 1 is non-empty and non-zero";"0"
"needs ' die' the -l does not hurt, butitis redundant as explicit args get derefed by default";"0"
"damni knew i should have found an example without java... done.";"1"
"should probably return here or die";"0"
"hresults are more easily readable as hex values. how about simplifying this to: ...; hr: 0x%08x everywhere";"0"
"sorry, i am probably being dumb, but what is the difference between check_async and want_async";"0"
"this is executing git checkouts on the builder. mike any issues with this";"0"
"remove vb2ops_vdec_buf_cleanup. mtk_vcodec_debug already prints function name.";"0"
"do not need the blank line, since the code above/below are very much related.";"0"
"on the other hand, i found mockwebcryptodigestor hard to read. would you either: - document the magics involved what is memeq trying to do , setargreferees - replace mockwebcryptodigestor w/ a dumb c++ class";"0"
"i do not know, we use 100 columns for all bionic code. i believe the red dotted line is set to 100 columns so you know when we violate it.";"0"
"arrayutil.tostringarray";"0"
"are these v3 endpoints";"0"
"i think it is a good idea to remove. thanks for pointing it out.";"0"
"this func looks like useless indirection. just inline the printf calls everywhere.";"0"
"can not you explicitly set this to false for your internal bots";"0"
"ef_adn. the caller cannot know he's dealing with a usim.";"0"
"nit: add a space between the colon and the bug number.";"0"
"but even for device policy wallpaper, it still should be blurred in overview mode, right";"0"
"wow... that is pretty terrible! i find it hard to believe that this was in here all these years. thankfully, i just copied the 2 << 9 from somewhere else, so i only need to be half deathly ashamed about this. please refactor this out into an extra patch since it is a generic fix not directly related to mt8173 .";"0"
"_jb_sigmask should be _jblen.";"0"
"should this cancel be above if == null block or does it not matter";"0"
"all relevant error messages are already printed above, next to failing function. i forgot to remove this useless debugging message.";"1"
"i do not like iteratively building things that i can declare in place.";"0"
"create a new src_configure and move the econf call to that. drop the ' die' too.";"0"
"""ndk"" and ""user written jni"" are basically the same thing. we deliberately ship a ""too small"" sigaction for lp32 so everything works. but, yes, basically the old guys fuckedup and shipped the ndk with various types wrong. the most painful of which are sigset_t, off_t, and time_t. all of these are fixed in lp64, butthere is nothing we can do for lp32 that does not break all non-platform native code.";"1"
"thanks for pointing this out. fixed. inline filter creating containing blocks for fixed madness!!";"0"
"if these are not being used anymore then just remove them.";"0"
"sure, might save a few instantiations. unfortunately, i can not get rid of accumulator_use because variadic macros are stupid. one thing we lose is statically resolving the if bytecode == bytecode::kjumploop on emitjump. wdyt, is that an issue";"1"
"nit: we are not really closing a stream, maybe: ""send final stdout chunk before aborting tasks.""";"0"
"replaced this function with key . operator does not help for wtfhashmap.";"1"
"> drive-by dlog done. makes sense, this is totally useless for users..";"0"
"i suckdone.";"1"
"ergh, brain-fart on my part. done.";"1"
"you are already returning a tuple. are you supposed to put that tuple inside another tuple";"0"
"this happens if the local.properties file has junk, which i'd think is pretty rare. so, yes it is sort of a wtf-";"0"
"never mind, i am an idiot. need to use only one networkdispatcher";"0"
"probably not. i spent like a half an hour trying to get those generics to work but java generics are an awful hack. if you look into arraylist implementation you will see that they use object data to store elements as well. this is related to the fact that you can not do new v size in java when v is a template parameter.";"1"
"i am sorry if i made a confusing comment in previous comment. how about just define support_isolation_list here. support_isolation_list = 'filesystem/posix', 'filesystem/linux', 'filesystem/shared', 'posix/cpu', 'posix/mem', 'posix/disk', 'cgroups/cpu', 'cgroups/mem', 'docker/runtime', 'namespaces/pid'";"0"
"yest they are pure virtuals.";"0"
"nice idea! i like getting rid of the ifdefs, changed.";"0"
"#include <stdbool.h> static bool remount_ro void advantage is also something like 'return false' and 'return cnt < 50;' is enough.";"0"
"this metdata_signature_size should not be included in the ""metadata_size"".";"0"
"i hope here lies the cause for the problem with exporting to xlsx and reopening..";"0"
"die supplies the n for you.";"0"
"nit: should you also assert tabstrip is the child of tabstrip_region";"0"
"nah, type errors happen when you try to assign/compare/dosomething with it. this way it actually works as a pointless null statement as well if really want to do such a weird thing :";"0"
"this needs comments. should you dcheck that idx 0 is a normal flow successor";"0"
"use 'die' instead of 'error exit'";"0"
"wtfthat cl is marked cr-1 and v-1. does this actually work";"1"
"where is -p for pid namespacing";"0"
"we still need to sanity check at the mojo layer, even if that check is larger than the device limits.";"0"
"blink hasn't yet widely adopted base::subtle. consider using platform/wtfatomics.h.";"0"
"shitthat is where this update went. i was changing this in ""meld"" so thought i had changed concurrentskiplistmap.... and then i scratched my head for a bit and went and changed cslm again :";"0"
"for the sake of completeness, it was wrapped in a listvalue because the old ipc system did not allow base::value itself to be sent directly for reasons. for better or worse, we've relaxed those restrictions in the mojo ipc typemap";"0"
"i am thinking about aborting here... in the case when flags point to existence of the r_addend field is handled by read_group_fields and this part of code should be unreachable.";"0"
"this should be removed and its uses should be replaced with expecttaskcompletes.";"0"
"please use die instead of rolling your own";"0"
"the 192-bit curve is very obscure - nothing should be using it and i've never seen anything use it anywhere. in general it should not be supported. it'll be an ignored bug sanctuary. however, if it is required that we do not change that, i can add support back in openssl. make no mistake thatitis a shittyoption though :";"1"
"what about rw_handles.imagereadhandle.return_value = fake_imagereadhandle";"0"
"you can not do that. locale_t is opaque: struct __locale_t; typedef struct __locale_t* locale_t;";"0"
"javatime is an int64, but base::value only supports int.";"0"
"ugh. dirty hack.";"1"
"we should remove eyaich and sullivan here.";"0"
"node_power_action is already mocked by l141 -- why are you mocking it again here";"0"
"check pid != -1";"0"
"these probably should not be nullable.";"0"
"this is obsolete now raise calls pthread_kill pthread_self , sig ...";"0"
"you probably wanted 'die' here. eerror is not fatal.";"0"
"let us extract all the occurrences of 'img_' and 'vid_' to constants.";"0"
"nit: please delete this commented-out code since it tends to rot";"0"
"use fake.managedobjectreference instead of mock";"0"
"same here -- use json.dump rather than json.dumps";"0"
"use unsignedbytes.toint";"0"
"wtfwhy are not we just using std::string instead of char*,size_t";"1"
"of course, i did not mean to propose getting rid of ""tags"". your reply is exactly what i actually meant. i still like having a ""any-not-tags"" synonym for ""not-any-tags"" to ease users' memory burden, butitis not vital.";"0"
"this should generate some sort of error - the apn database is corrupt!";"0"
"hmm i see. but why not just check in constructor and die...";"0"
"i just learned about temp_failure_retry, which would make this much simpler: temp_failure_retry waitpid pid, null, 0 ;";"0"
"i assume this needs to be a uint8_t ** so that you get compiler warnings if you passin a plain * by accident";"0"
"this is something that puzzles us for a long time: it is actually *required* on windows to have good fps damn i wish i knew what is going on here ...";"1"
"yes, checkpatch is a rather stupid style checker.";"1"
"this method is now useless, i will remove it in another cl.";"0"
"in the interest of full disclosure, it was pointed out to me by one of my standards committee colleagues that this is not guaranteed to be the same type as int32_t, even if both exist. they are required to have the same size in that case. since this would be stupid, would result in at worst a compiled error, and we control the implementation, i do not think it matters.";"0"
"style nitpick: put the semicolon on its own line so it is clear the loop has an empty body";"0"
"oh, sorry, i misunderstood. i thought this was an unrelated bug that had just been fixed in the same code. now i get that this patch is actually breaking it because a symbol is treated differently from a constant. stupid assembler. -.- will fix.";"1"
"funny definition of ""shorter"". getting the human readable version is done to be consistent with other checks that not only print ""bah, your installed version sucks but also being able to print ""we detected that you have version xy installed, but we need at least version wz"" also your proposal fails short since not all versions of flex report the version assecond field. especially those that are not suitable to build like 2.5.4 for example print ""flex version <whatever version>"": $ /usr/bin/flex -v cut -d"" "" -f2 sed 's/ .//'g version also while your suggestion works for something like flex where not much releases are expected , it does not account for increase/decrease of the digits in the minor/micro version part while 2.5.36 will fulfill the test when shortened to 2536 and compared to 2535, a hypothetical version 2.6.1 will be treated as 261 and thus fail the check. if you only want one single command, and disregard storing the version for printing in the error in case of failure to passthen one could use flex --version awk '{split $nf,ver,""."" ; printf ""%d%03d%03d"", ver 1 , ver 2 , ver 3 }' of to be ""shorter"" :- : flex -v awk .... butthat is less readable, and requires doubling of the brackets to satisfy autoconf quoting.";"1"
"i did not quite get why we are popping force_modify_locking here. could you add a comment here";"0"
"i think we understand it enough to nuke this. you added the code to find the 8/9/10/11 sections by name, so i think we can pattern match the rest.";"0"
"no # ex:";"0"
"dosym /var/run/flimflam/resolv.conf /etc/resolv.conf die";"0"
"i hope we can get rid of the trailing ""p"".";"0"
"i will rebase this patch and submit once the patch from intel goes in.";"0"
"ah, damnsorry, you are right";"1"
"456/11,9,8 are all out of order.";"0"
"if all your member functions are staticmethod, you probably do not need a class";"0"
"i hate passing string literals for enums... ;- done.";"1"
"bind on the sort gets really ugly because sort is overloaded, so you have to specify the function type to bind.";"0"
"what other rsa's are you now picking up oh the odd rsa/ ones i might just avoid them";"0"
"nobody uses createperusertopicinvalidationclient. who is going to own invalidationclient* does it make sense to return std::unique_ptr<invalidationclient>";"0"
"there really is not anyway to validate this in our setup, nor is it possible to use a crapcommit to testitdoing so requires admin level access to gerrit. what can be done i did- skank the sql and testitagainst a gerrit instance i've got a vm locally for this sort of thing .";"1"
"i'd prefer you catch the most specific thing s possible. otherwise you start accidentally catching accidental things in the future and it is hard to find the real bugs.";"0"
"yeah, it sucks i want to extend our gerrit libs more at some point so this will go away.";"1"
"nit: please delete ' unit '; godoc comments usually do not contain pipes";"0"
"40 otherwise explain .size is bytes, ... == it was fun exercise for me, but my brain is stupid: i knew about 160 bit and 40 chars, and so i was looking for /4, not *2.";"0"
"put an empty line between normal imports and statics.";"0"
"kill the print...";"0"
"reverse iterator i am like 80% i pulled it off one of the ""how to c++ sites"". but i'll change it up.";"0"
"legacy_keyboard should not be needed";"0"
"should we die here, since we do not check return value of new_* anymore";"0"
"i know this is safe because of the constant ""on"", butitfeels more future-idiot-proof to do strncmp state, ""on"", sizeof ""on"" , even though it is more verbose.";"1"
"fyi: i am going to remove 'any' fields from gles.api soon.";"0"
"nit: kill everything after the comma in this sentence";"0"
"hey can you fix these javadocs they seem to be obsolete.";"0"
"i'll do it in a later clean up when i will get rid of actasnullconstant";"0"
"this code seems silly to prepare a webtouchevent and then take it apart to send webpointerevents.. you should just send them directly first.";"1"
"this existing check seems pretty lame. can this be removed too";"0"
"nit: instead of setup_atlantis_rpms.py use %s and replace it with sys.argv 0";"0"
"ubuntu_arch , please";"0"
"sure, i will do it and flog myself for being stupid.";"1"
"what i failed to mention previously: mixing in such pointless cosmetic changes is a poor waste of reviewers' time";"1"
"remove wip and put panda";"0"
"not reverting this line to check !callback.is_null ; because that is just silly.";"1"
"adding printout in board_customize_install.sh, where we will know if we overrode anything";"0"
"done. this gets ugly with a couple of casts. i aliased the pair to referencekey for ease of use.";"0"
"errno = enomem;";"0"
"damnit. stupid lysdexia.";"1"
"if any thread is killed in a middle of its operation, the whole app state is completely screwedwe should not even care about such cases and should never do anything like that e.g. if the thread was in a middle of new call, which locked the memory manager's mutex, and it wasshot dead, mutex would remain locked for the whole app forever. any other library call might do the same thing.";"1"
"i, terry, hereby solemnly swear that to the best of my knowledge, and by all of the information and experience at my disposal, that under any circumstance under which i consider in the realm of possibility, under penalty of being slapped by a wet turtle, that... well... yeah, i am pretty sure this will not break anything.";"0"
"can you be a little more descriptive this comment is tautological.";"0"
"this is mediatek. take out of rockchip.";"0"
"file_bugs=false is this intentional you do have bug template defined here. same in other control file.";"0"
"bool found_touch_icon = false;";"0"
"acknowledged kiss the issue is that data corruption can be sourced by the emmc and over time can turn into something serious. a large number of small fixes each boot are better than a discovered perfects storm when one has both data corruption and an unclean shutdown. android auto which boots often would have an issue with this. we would want to institute one of the following if a full has not been done over some period of time eg: 7 days or over some number of reboots eg: 30 1 on shutdown request, reboot into recovery, fsck full the filesystem, then shutdown. 2 periodically on boot, do a full";"0"
"i was not sure what you wanted to dcheck, took a stab.";"0"
"do you foresee none, really i thought this new api was going to be kick-assbecause the dispatch, loading, policy enforcement, etc was going to be better, no boo";"1"
"intellij warning";"0"
"can this be renamed something so thatitis not the same as the captured error maybe reported_error or something silly like that.";"0"
"systemd is now pid 1 so this part is slightly outdated : .";"0"
"child_inline_direction is a gridtracksizingdirection enum, while what we need to passis a gridaxis enum.";"0"
"you better dcheck that global_log_lux has the right .size first";"0"
"kmaxvalue = invalid_url";"0"
"should you really be taking in a path as a string";"0"
"what linter are you using you should be using 'cros lint'.";"0"
"nit: should these be ordered above ""tracing_features.h"" p < t";"0"
"i am ok with removing the die functions in a different cl.";"0"
"do not do this ever. such stuff can delete whole fuckingproduction cloud and we will get fired. i believe that you can just delete keypair here with 2 lines of code: if admin: nova_clinet = osclients.clients admin ""endpoint"" .nova nova_client.keypairs.delete admin_keypair_id";"1"
"not much gained in trying to make this a function, and macros are evil. so i am not sure there is a good way here. skip back a few patch sets to see some attempts at fixing this, but none look good/natural. since this is just the dump code, i would prefer leaving it like this.";"0"
"yeah, dumb to miss that one.";"0"
"as with err in set_light_backlightithink this should simply be dropped for clarity. either that, do the = hack or drop the ""dummy"" initialization and add an extra if-stmt in the loop ugly .";"0"
"could you add comment here for the led status the you expect, like following: system is on: white system is off: off system is in suspend: 1 sec of white, 1 sec of off";"0"
"#ifdef config_mtk_iommu";"0"
"dummy initialization might make gcc5.3 happy butthey are making me unhappy by increasing the code size. if this gcc version has broken warnings, can we avoid to use it";"0"
"extract skcolorsetargb 0x32, 0xff, 0xff, 0xff to a constexpr";"0"
"as at line 245, consider aborting if getproperties fails.";"0"
"aborted and complete are both indexed, i am wondering why add filter aborted=false can be so slow.";"0"
"the vblock should be 0x10000, not 0xf0000 bytes big";"0"
"really sorry about thatitwas a stupid mistake.";"0"
"that seems lame in java too... but i guess that ship hassailed";"0"
"yeah, this sucksi plan to update ddmlib to support notifications for when device properties client properties have been updated from the device";"1"
"this seems a bit vague. may be something like: compute and record anchor element navigation overall score based on browser and renderer metrics. or compute and record anchor element navigation overall score.";"0"
"i must be missing something... after including <linux/ioprio.h>, why keep any of these defs";"0"
"how about we move this to setsensitive and maybe also rename it to msensitiveinitialized then we could potentially also remove all other calls to updatevetobutton from the outside to only have the update in here in this classthat would be much cleaner. the current code is so ugly :d i proably even wrote part of it";"0"
"maybe i should collapse these two to make it easier to read.";"0"
"i guess i made a foolish assumption about query parameter validation. this seems thatitwould only validate a post body and not query params.";"0"
"base64.rawstdencoding.encodetostring";"0"
"i can not quite tell, but does not this fit without the escape char port_dict = self._core_plugin._make_port_dict port, process_extensions=false";"0"
"each of the .error in this could be .die. unless you plan on this being a func callable by other people ...";"0"
"kill 'virtual' and add 'override'";"0"
"can we just use pid namespaces to not have to rely on process group ids if you kill the init process inside a pid namespace, everything else dies.";"0"
"use $ tc-getcc from the toolchain-funcs eclass you need to also passin ${cppflags} and ${ldflags} you should line wrap this command so it is one arg per line put ' die' at the end of the command";"0"
"i would move these to a blacklisted default cipher suite list to prevent them from returning. i'd also add other obvious candidates for blacklisting by default such as with_null and anon";"0"
"damn. xcode was warning me for these, and then i got complacent i guess probably had the wrong target selected";"1"
"yuckjust declare 'throws ioexception' in the method signature";"1"
"crapi forgot about this other client of test_http_server... i'll take a look.";"1"
"i think that is fine. bionic internal code should probably be using lock anyway.";"0"
"what do you want me to do here and rest of the file btw, i should do something to not make as many spelling mistakes. it is stupid to have to review for spelling mistakes. i'll see what my options are. the least is to do one sweep of code review myself on gerrit before adding people :";"1"
"yes, both /proc/modules and /lib/modules do not work. addresses in /proc/kallsyms are all 0, which is not useful.";"0"
"no trailing white space you should try running ./bin/lint.sh on this new file and fix issues it raises";"0"
"nit: you subclassdialogbrowsertest, not this class";"0"
"style nit: add /*out*/ for out parameters /*out*/hinstruction** lower";"0"
"nit: add trailing period to this comment and others below";"0"
"future language designers take note: this is the kind of silliness that results when you do not allow trailing commas";"1"
"wtfmy brain thought ""name"", fingers misbehaved... will fix.";"1"
"this name is a bit off. kcrostinisharedpathstovms, kcrostinipathssharedtovms are they all crostini vms";"0"
"super nit: verifypreffollow*s*user and other follow -> follows below";"0"
"'import adb' is sufficient. the __init__.py imports device.*.";"0"
"nitpick: blank before comma is ugly ;-";"1"
"crapi turned if off to check something, and forgot to turn it back on. that explains why it 'passed' when performstage was wrong.";"1"
"use check_eq, here an below.";"0"
"> start >> 20 oh damni feel stupid now... should not you have seen this when you tested whether you can read back the values written through the mapping, though also, i am a little confused why this caused the slow down that we were seeing... i guess that is just a quirk of the chip dealing with invalid memory accesses.";"1"
"nit: both interfaces take a pid. make the ordering the same first on both yeah, my fault that they are different.";"0"
"done. ""null"" case is a bit ugly.";"1"
"80cols perhaps die on next line";"0"
"actually, please use try with resources wherever possible. ioutils.closequietly is only needed for unbundled code that needs to run on pre-kitkat platforms. try parcelfiledescriptor pfd = parcelfiledescriptor.dup fd { mbluetooth.dump pfd ; } catch remoteexception re { writer.println ""remoteexception while calling bluetooth service"" ; } catch ioexception ioe { writer.println ""ioexception attempting to dup fd"" ; }";"0"
"consider an enum classfor cleanliness.";"0"
"remove this warning because we must provide 15,30 and 30,30. we do not want people to ask if this message is a bug every time. just keep the documentation.";"0"
"it looks like this is modeled on the incoming call interception... which, honestly, i hate. there is no control over how different apps, or visibility for the user into what is going on. this is one of the reasons this kind of functionality hasn't been introduced yet, because just opening a floodgate of apps stomping on each other in a random order from a broadcast seems likely to leave us in a bad mess. we've already been here with the media keys, we've got yucky stuff from the outgoing call stuff, let us not do it any more. i am starting to think that these kinds of facilities deserve some visibility in the settings app, where the user can see what apps are available for the feature, and control which ones are used and their order.";"1"
"ugh, i just looked at the shellscripts here and realized that this command line is passing clang + flags as an argument yuck maybe this should not be using private_cc can we just define something different here, that does not look like you are actually compiling as part of the actual build here that is where my mistake came from, purely based on my existing knowledge of the build.";"1"
"can you symmetrically verify that we regain the account if we get the refresh token back if yes, then optional: can you split the test into two or three tests";"0"
"yeah, ""reboot-bootloader any old crapcan follow"" worked before, but all the old craps were just ignored silently. shall we keep that backward compatible";"1"
"why is this an intptrconstant should it not just be an int32constant";"0"
"/* libqmi_mock_h */";"0"
"no it still spits out some css garbage.";"1"
"do we have any v4l2 jpeg encoder that produces v4l2_pix_fmt_jpeg that we can test";"0"
"the problem is that if i assign the value to a variable which is not being used anywhere else, the compiler throws a warning about a useless assignment. so, i just use a variable which is used earlier in the code to fool the compiler. i'll add a comment to this respect.";"0"
"remove vdec_vp9_inst.work_buf.sf_ref_buf";"0"
"cros_build_lib.die";"0"
"cinder.conf is wrong, likely you want manila.conf";"0"
"actually, should we kill native_suffix and fix benchmarks/android.mk in the same way you already fixed tests/android.mk";"0"
"i hit some issues with inlinedcas under x86_64. should we return false for x86_64 until the bugs are identified thanks!";"0"
"this whole file is non-standard crap- just move the link down to replace ""the ibm docs"" below";"1"
"similar to above, can we use **_kwargs instead of pylint disable";"0"
"i will remove any self.datadir and align the code to self.dirs";"0"
"to be clear: i am not asking about mmap 2 . i know about that, and i could read the man page if i did not :- my question is what the elf specification says. are your mapped-in segments supposed to be rounded or is l304 just foolish consistency that should be deleted";"0"
"damnforgot to remove this.";"1"
"innertext = newtimestamp.fromnow";"0"
"damnthanks for checking this!";"1"
"my thinking here is generally to make the asset loader as picky as necessary, and make the ui as tolerant as we can. i'd like the ui to work fine if no sounds were pushed in, for example. whether or not the ui starts up if it does not have all assets, or pickiness on the component contents, can be treated separately.";"0"
"s/os_case_sensitive/case sensitive/ --- we are trying to kill os_case_sensitive :-";"0"
"/* delegatefocus */";"0"
"why do you include this assignment if the next statement right after this block is another reassignment self-contained free-ing and init-ing block or copy-and-paste artifact";"0"
"same comment as in old patch what is this looks like crap";"1"
"just to be analthere is an extra newline here.";"1"
"there is no point in exposing it to core/ for the sake of compile-type enum assert, simply skip this bit there and do not modify weburlrequest.";"0"
"so do you plan to have these side by side, and eventually get rid of build_number";"0"
"smack head. done. thanks.";"1"
"i am hoping by the time we are done, we can kill copyresource completely, it is a bit of an antipattern";"0"
"kill these newlines.";"0"
"should we just have isfontsmoothingenabled just return true for anything outside of os_win or maybe check on the other platforms this gets rid of the os_win guards below.";"0"
"oh, darn. i am now realizing these contexts will not be consumable without at least some setup for floating point registers, so i guess i'll get on that now.";"1"
"we really out to switch to boringssl. i'd love to kill mincrypt.";"0"
"i am not super sure about the volatile rules here... if this is truly important and it seems very weird if you ask me, like that horrible crapyou had to do with pci in eons past , you should double-check that this read really ends up in the assembly since the result value is not used .";"1"
"i hate qt's metatyping. moved to using a private data member instead of a slot argument.";"1"
"this is a matter of data flow analysis. should we perform dead code elimination on lir in future, a missing reg_use0 flag here would spell trouble.";"0"
"stupid rebase error, sorry about that, fixed.";"1"
"i do not believe we log anything at the moment. i guess i am being defensive, in that if someone did touch a junk file in an obj dir, swift would keep working and not blow up.";"0"
"stupid question: what are these two properties for, does not the gpios property reference already uniquely identify the gpio";"0"
"that is interesting. what was being misinterpreted and what did the linter pick up on";"0"
"how about a sucidestage that does os.kill os.getpid , 9";"0"
"last_collection is next_collection - collection_rate, remove.";"0"
"probably there is a race here if a process logs right before terminating. instead, store an append-only list of pids.";"0"
"i hate to jump in late here but why not just stick this in compositorframemetadata";"0"
"done. i got paranoid about the race with idle exit, butitshould be covered by the semaphore now.";"0"
"nit: usually, mental order is width, then height. not height, width.";"0"
"son ofagun. there is my l for t. thanks for adding the comment.";"0"
"nit: /* showfrpwarning */";"0"
"i needed it for disallow_copy_and_assign. removed.";"0"
"ah, this sucksgetting rid of the early return means needing an invalid state for assignmentlhsdata, which means either adding an invalid state to assigntype which has to be checked in switch statements , or allowing assignmentlhsdata to break its preconditions e.g. default-init to non_property but with no expr . i've added a new optional scope instead, and instantiate it multiple times to keep the logic near the new register assignments, wdyt";"1"
"nitithink a comment here explaining what this header is used for, and another one to explain what use_rela means would be useful.";"0"
"s/ = nullptr//";"0"
"now we should remove this because you removed buf_type_dmabuf.";"0"
"you should close chrome before calling setup_case again. also, you technically do not need to set the policies over again, so it is possible to just call create_chrome twice instead. not a big deal if that ends up being too ugly.";"1"
"desiredheap is a silly variable name, this is the space containing the object.. nothing to do with desired or heap";"1"
"do not use tempfile directly in chromite sources; instead do a with block: from chromite.lib import osutils with osutils.tempdircontextmanager as tmp_path: blah";"0"
"fortunately, it is simpler, because we do not even need the keyblock flags for vboot2.";"0"
"eeww, yucky. rather just put the new strings at the end of this file.";"1"
"i do not think these are used and could be removed, butitis a handy comment to understand wtfis going on.";"1"
"#undef __ #undef quick_entry_point";"0"
"ditto here looking at the code, it looks like it actually causes the download to be skipped fro any already downloaded tarballsand just extracts them. is the help text just off";"0"
"this should be die or, really, just take out the whole switch and assert bus == 0 , like in mtk_spi_init .";"0"
"i'd also mention agetty, dmesg, flock, fsck, getopt, hexdump, ionice, logger. there are also to a lesser degree hwclock, fdisk, losetup, mkfs, swapon, swapoff. some of these we will probably want to refine in the future, butthis is a good starting point.";"0"
"haha, yeah, that would be an accidental untabbing in vim. i'll undo that hunk.";"0"
"dcheck != kondemand";"0"
"use shutil.copytree, symlinks=false";"0"
"yuckwhere's this list come from is there a smaller set like ""dumb"" or unset we could blacklist, instead of whitelisting all these";"1"
"ah, darn... yeah, typec_set_input_current_limit does not seem to do whatithought. we can follow-up with this in another patch since it will require some more invasive changes.";"1"
"probably a dumb question: why do not we have the root_ ug id in these enewuser/enewgroup for ""android-root""";"0"
"this, plus the few bits below that adds viewport damage probably should be pulled into hasdamage as well i think";"0"
"right.. adding child on dlopen will lead to unwanted behaviour on dlclose.";"0"
"what are the dummy diffs that show up in several files here are they end-of-line differences if we ""svn export"" to mac os x or linux machines and upload to git, we should end up with consistent line endings, right lf, not cr nor cr lf please check.";"0"
"why do we have a loop here should not this be just a single mipmap";"0"
"current formatting looks ugly. how about pulling the code to a method then a method will also prevent code duplication.";"0"
"drop the ""die""";"0"
"/* is_opaque */";"0"
"i'd leave these alone. they are part of the original license and, as ugly as they are, not worth chasing them just to many cases to change .";"0"
"below you use art_build_path defined above. seems like you should nuke it entirely or use it consistently.";"0"
"yes. octal number support is idiotic. i did not make a general lint rule to flag this in java files because lint tends to only check android-specific issues, not general java issues and intellij already has an octal warning if i recall correctly . it seems particularly likely to cause problems here in build.gradle since users are tempted to do things in version codes see the associated issue";"1"
"is not update_status_to_string.h kind of a narrow name how about ""update_status_utils.h""... i see you are adding the stringtoupdatestatus later :p";"0"
"i am considering moving the profiler into base or webkit/common, so i am trying to avoid using wtftypes.";"0"
"ugh. i should probably stop using 'repo upload --cbr . --re=""...""', butthe interface for adding reviewers on gerrit sucks";"1"
"private methods ends with ""_"" and if it is private, it should be used outside the class";"0"
"i'd name this default_session_json_file_template so people will remember to give it an arg.";"0"
"hmm... okay, fair point. we should probably call it __ffs then, which is what linux uses for 'ffs - 1' although it looks terribly ugly... .";"0"
"i think these two you want to live in platform_src_configure";"0"
"yup, lack of registers sucks again: i am trying to follow other examples in the kernel here. ...i could store some registers in space in the .data section, butitmight get ugly because i am not sure there is a good way to know the rp and rv do not conflict with the registers i've chosen. it is just a bit of an awkward situation.";"1"
"do not get me wrong, the practice of encapsulation makes sense, if it was widely adopted for all config options, and in a more abstracted way. this looks like a silly alias that matches the exact config name. what if we end up calling the config option universal_physnet_mtu the method is gonna stink.";"1"
"the structure you described is not exactly what i meant to suggest. here's more detail: status_edits=' s/ ... a-z* // # more sed commands here ' if ""csv""; then status_edits=""$status_edits s/ * "" fi sed ""$status_edits"" $file that is still not complete; i think there'll need to be some other changes to account for other differences. you may find it is convenient to write content to a temporary file. take a look at the 'mktemp' command.";"0"
"nit: putitin .cc file like destructor.";"0"
"nit: maybe mention thatitis fine for latest_log_symlink to not exist";"0"
"you already add it to 'dirs' below do you really have to add it here";"0"
"does not matter really, since sdk instance will get garbage collected so it'll get collected too.";"0"
"yeah, i am stupid. done.";"0"
"below you'll find some ways to solve some troubleshooting. if you do not find a solution, produce a report file using jack-admin dump-report and file a bug.";"0"
"yeah, it is used by to share sha1-related constants. yuck";"1"
"in studio code we use assertions a lot, assert blah != null";"0"
"you already have mrs created for you, so you do not need another renderscript object.";"0"
"perhaps we should make them into instance fields since the style guide disallows static members with a non trivial destructor";"0"
"this naming sucks better for test_specs in test_specs_list or for test_spec in test_specs";"1"
"i think this needs to become an array of structs, with each struct containing the struct s3c24x0_i2c *, periph id and anything else you need";"0"
"mark this as deprecated. gut the function in favor of calling requestroutetohostaddress, casting the hostaddress into a inetaddress";"0"
"err, that should not exist. we have cros_build_lib.memoizedsinglecall already.";"0"
"clonegtrepo goes w/in the try block, else there is a race where hit rightitleaves crapbehind when it should not. also, set wipe=true here also, you are *so fricking close* to support references here- it is 5 lines or so. part of the reason i think you should do it now is that the underlying patch.fetch code is smart enough to skip the network unless necessary; further, if you did patch.fetch original_repo , your new repo would have the sha1, butthe original content would be stored in the referenced repo- meaning no need to fetch again on a subsequent run aka, if the patching failed .";"1"
"gimme a sec, mark. i am stuck in some crazy rebase hell";"1"
"nit: we only send down one rect, why framerect*s*changed";"0"
"should be a konstant.";"0"
"the nop functions are not necessary. remove them. though, on second thought, should we turn the amp off on suspend dunno how this is supposed to work.";"0"
"up to novez : does it make sense to pull in security and block this ! i do not really think there is any security problem here.";"0"
"only if i add some kind of helper method to do auto-conversion to bool. which would have the nasty side-effect of allowing the enum values to be auto-cast to int, which kind of reduce the value of 'enum classi.t.o. type checking";"0"
"maybe put a static_assert here for kadrpthunksize == 2 * 4u";"0"
"just 'die'.";"0"
"the false means nothing there, should prob be: boolean hascontenttodisplay = mydisplaysingleroot hasrootitem : myitemstack.size > 1;";"0"
"that looks dangerous *or* useless. either the pll is the current system clock and this will kill your system early or it is likely off at cold boot. for jumping to rw firmware, we might need something like that, but i doubtitis currently correct. maybe just a bypassof the clock setting code.";"0"
"you do not need the die you should also call distutils_src_prepare after the patch";"0"
"ah okay, stupid tuple.";"1"
"may i suggest solum.common.yamlutils for consistent behavior wrt load and dump";"0"
"how/where are client/connecting permissions enforced in this daemon";"0"
"and not caught by the upload scripts, damntheir eyes.";"1"
"and of course, this should be interpreted in german as: the ddr freq. the. the. i am not a murderer, you know.";"0"
"since you use stevedore to load custom constraints, this line is useless and should be removed.";"0"
"stupid eclipse...";"1"
"self.display_facade = local_facade_factory.localfacadefactory cr .create_display_facade";"0"
"you are screwedbut e.g. bayou always limited it to 16 and i think that is entirely reasonable.";"1"
"see above. or, when jenkins kills it if something goes terribly wrong and it gets stuck.";"1"
"all these 'die' can go away once you use eapi=4";"0"
"any reason we are not using cgroups for this gerrit might have launched subprocesses, so killing it using sigkill is not going to be enough to guarantee all the subprocesses got killed. using cgroups would guarantee that the kids get killed.";"0"
"'==' is not case insensitive, so that is not an equivalent change while we are atitlet us get rid of that ugly straircase effect align all the pfont-> under the one on the if line if pfont->... pfont->.. pfont->....";"0"
"you already have mongo conf group, see #86, you need to use mongo_conf.device_path";"0"
"what about calling getshortpathname longpath, null, null to get the length before we malloc";"0"
"you do not have timeouts... is this a stale comment";"0"
"always_inline, or trust the compiler. inline is mostly meaningless.";"0"
"wow, there is no way to make this automatic seems like a pain in the assto recalculate every time we insert/remove a button.";"1"
"it is; gerrit sucksat rendering monospace fonts";"1"
"actually there is no need in knowing absolute path.. you have a pid after gdbserver is started and absolute path can be calculated using /proc/pid/exe";"0"
"note: the 'daemon' suffix is kinda redundant and unnecessary";"0"
"this should read: $ cxx $ cppflags $ cxxflags -c -o $ $<";"0"
"nit: set rollback_happened to false and always call getboolean with rollback_happened value. getboolean will not change the value of its output if it returns false.";"0"
"sl * oxcf->ts_number_layers";"0"
"i still do not like this description :p. you are generating a sysroot that can be patched over extracted prebuilt package contents to create a complete sysroot.";"0"
"i hate all the wrapping caused by using a name that long. to my eye, it makes the code really hard to read. i did it anyway, though. jerk";"1"
"... so this check is completely pointless";"0"
"i was going to suggest removing the errno saving/restoring because i do that in log , but i just tested it and i did not do it correctly damni should have written a test for it .";"1"
"do not do this. you spawned the processes which means you have handles to the processes. kill them directly.";"0"
"get the status of slave builders to a master.";"0"
"hmmph, i am not sure why the f***ing ide is adding them.";"1"
"just a suggestion. you can keep it as it is, since i do not see a big difference either way, but... i agree with the the aesthetic appeal of keeping fields and their types together. other than that, i am not convinced. i do not see why you need to inspect this object at all. i do not see the advantage of this over something as dumb as: classntbparameters object : def __init__ self, w_length, bm_ntb_formats_supported, ... : self.w_length = w_length self.bm_ntb_formats_supported = bm_ntb_formats_supported ... classmethod def get_format_string cls : return 'hhihhihh' since you do not have a functions to automatically pack / unpack this object, i do not see why you need to be able to access the object attributes using strings so, i do not understand why you need to use inspect / setattr .";"0"
"now you have <sys/types.h>, killing this and the blank line below would move us closer to upstream.";"0"
"this should be defined on the command line. upstream this is handled by handlellvmoptions.cmake";"0"
"use commandline.optionparser.";"0"
"this is a replacement; replace all instances of '/' with a space. this actually is not that obscure- it is more the escaping of '/' via that is a bit fugly. for future reference, look through man bash not meant as a rtfm - it is one of the best shellresources i've seen. also, dash !#*ing sucks seems to be choking on it. rewriting to use a while instead. note normally i'd say ""put this in python"", but since this has to hit every single repo and needs to be reasonably fast james was complaining about forall the other day for example, validly or otherwise , i shoved it directly in.";"1"
"i was thinking that if we have the show function but return the after mapping value say that 0 is written in user space but we show the true register value 255 it is kind of confusing. so i just get rid of the show function. maybe we do a reverse mapping to show the interval value if you think it is useful";"0"
"i hoped to be able to output log messages, which is not possible at the momentitseems a bit cleaner to kill off your goroutines before falling off the end of main. i am not sure whether ""go"" does anything there. anyway i have removed for now.";"0"
"that change is also bad. now you are not terminating the ""string"", so you can write gigabytes of trash to the screen.";"0"
"thank god this was not made public. it is generally quite useless.";"0"
"you right. i just do not like unretained, it looks like a bug. i'll follow you.";"0"
"could be a plain imagerequest, also update the name to thumbnail image request or similar";"0"
"oatlastword is supposed to be the end of the oat content. seems like that should move here, or we do not need oatbsslastword";"0"
"oops...""click here info"" reads pretty awful :-d fixed!";"1"
"the developer should overide this in their mainboard kconfig for their fsp build. not through menu config options. this clutters up menuconfig.";"0"
"i'd prefer it if we kept this. instead, do something like use_clang := $ use_clang_platform_build ifeq $ use_clang , use_clang := false endif";"0"
"erm, nonsense; i got confused by those long function names :";"0"
"nit: since these are not exported, i'd recommend shorter end-of-line comments: var shadowregexp *regexp.regexp // matches a path ... var devregexp *regexp.regexp // matches a path ...";"0"
"sizing_info = *intrinsic_sizing_info_;";"0"
"i think it is the default for the daemon if you do not use the setjvmarg... it should not be needed.";"0"
"this one is fine to remove afaics.";"0"
"you know, that hadn't even occurred to me. but now i wants it :p.";"0"
"are you sure this block of code should not be executed even if net_ids is an empty set";"0"
"remove the ifdef here.";"0"
"dump somewhere that this is a catch stack map";"0"
"previously all steprunner implementations had to identify and specially handle 'dummy' steps like this. now this case is explicitly covered via the 'run_noop' method.";"0"
"yeah, i almost made the same comment. only thing that held me back is that if anyone _does_ screwthis up, it'll be really hard to debug because the device will reboot if init dies.";"1"
"note that i am not tempted to switch it to cat x while read because that'd be a useless use of cat:";"0"
"done - changed to warning, aborting here seems a bit harsh";"0"
"this is incorrect. this function returns a tuple. ugh. looking at the callsites, someone thought they were writing go and returned a tuple of result_status, pid_or_zero . even better, it is written in the stupid c style of 0 being success. could you tweak this to raise an exception on error instead";"1"
"remove newline.";"0"
"need to return here, since receiving bad message will terminate the renderer and we should abort processing the message any further.";"0"
"this looks seriously half-assed. if you do it, do it right. move all of it to avoid the additional call, and throw the few exceptions by hand.";"0"
"initializing val = 0 will at least give you consistent data on a i2c read failure.";"0"
"only do this if !data_.empty . otherwise, leave only one element in iov. nobody has promised that data won t be nullptr if data_ is empty, and if it s nullptr, writev and equivalent don t promise not to blow up, even if the size is 0. yes, this is stupid. yes, it s a real concern now. that s why all of the other writeobject implementations that you ll find are careful to put this iov 1 business in an if !whatever.empty { iov.push_back ; } construct.";"1"
"damnit, i missed this bug in my review. i'll submit a follow up.";"1"
"you can clean this up a bit: if self.join self.timeout is none: self.p.terminate if self.join self.timeout is none: self.p.kill self.join self.timeout";"0"
"yeah, but we are all lazy wtoo busy trying to get stuff done to work out the _minimal_ header we need. since 99% of folks _shouldn't_ be using the hairy one, it should have a name that says ""this is not the logging header you are looking for"". and, ideally, says to the 1% ""hey, this is where the hairy stuff you are looking for lives!"" :-";"0"
"...but i'll make this change right now so this at least still compiles for other lp64 architectures even if it rejects every elf file at runtime because it is ignorant of their relocation types.";"0"
"put send_onclosed flag in extensionmsg_appwindowclosed and send it down to renderer.";"0"
"nit: should we use kserviceworkerscriptmaxcacheage";"0"
"is it not possible something like this try { new bytestreamsuckeris, os, true .suck; } finally { is.close ; }";"1"
"please intend properly. here you want if foo { xx; yy; } not if foo { xx; yyyy;}";"0"
"dbg should be false to avoid log spew";"0"
"please zero the structure before use, this will prevent many platform-specfic nastiness.";"1"
"> stupid thing. could you possibly do the equivalent of > arraysize minidumpsysteminfowriter* 42 ->system_info_... instead good idea! but no. ../../minidump/minidump_system_info_writer.cc:199:17: error: static_assert expression is not an integral constant expression static_assert arraysize reinterpret_cast<minidumpsysteminfowriter*> 42 ->system_info_.cpu.x86cpuinfo.vendorid == 3, ../../minidump/minidump_system_info_writer.cc:199:27: note: reinterpret_cast is not allowed in a constant expression static_assert arraysize reinterpret_cast<minidumpsysteminfowriter*> 42 ->system_info_.cpu.x86cpuinfo.vendorid == 3,";"1"
"what the heck is that ""reverse=false and true"".";"1"
"silly nit: exists -> exist";"0"
"which version of gsutil are you using not thatitis an important field, i just wanted to include them all for the sake of flexibility. we can drop some if they are problematic.";"0"
"always redirect into $ .tmp, then mv -f $ .tmp $ otherwise the redirection creates the target even on failure.";"0"
"you must be transitively picking up string.h";"0"
"aha,stupid me! : i will use the structure directly. thanks dale.";"0"
"oh, this is for the host argh. we need to kill that too one day... might be worth updating the comment in the meantime.";"1"
"yeah, some rebasing stupidity on my part. this stack does not need to be on top of cron anyway, reparented.";"0"
"if the background is just going to be white, we should suet set self.view.backgroundcolor instead of adding another view.";"0"
"pythonic, reduce indent by removing elses";"0"
"you need another pwr_state_idle, or else when the battery is full your leds will do nothing in s3.";"0"
"this can be done by the transaction itself before calling resetpartialnetworktransaction. doing so would avoid cyclic behavior and make this method clearer.";"0"
"i would prefer to remove these ivars and use settings directly if possible.";"0"
"i meant strcmp == 0 you crazy c programmers :-";"1"
"put a comment explaining what these crazy regex's do.";"1"
"logevdev = 0, important b/c you want the last one to be the count";"0"
"this code does not call -viewfortab, as it needs a viewcontroller.";"0"
"those if's should also be shared in a common header, you can make e.g. bool functions isnarrow, isnormal, iswide, ismirrored etc. outta them";"0"
"#define's are generally evil. use constants instead, which are closer to the c++ style: const char kcmdstr = ""cmd"";";"0"
"can we call this lan_discovery=false, rpc_server=false";"0"
"i agree. in my opinion, the comments on the fields in statskeys are redundant, and we can just remove them. i'll check with raphael, since he is the original author of that class";"0"
"miss page_up in col12-row02 page_dwn in col12-row05 home in col12-row00 end in col12-row04";"0"
"can this be replaced by the below code will pcm_htimestamp return the pipe errors when suspended";"0"
"erf, templating codegenerator just sucksso what about my first suggestion just put the labels in slowpathcode...";"1"
"good catch. during my merge i brought the add, remove, and stop buttons back from the dead. i have killed those zombies.";"0"
"probably. that was me being almost asstupid as the original code.";"1"
"i do not think goroutine is needed here. you can just simply read the data from stdout of the subprocess. in case of timeout, the process should be killed thanks to the goroutine in testexec.cmd.start , and the input will be terminated. you can just returns the result.";"0"
"please keep these double **. they begin a doxygen comment.";"0"
"for dumb reasons related to the way 'gn analyze' works, this is needed and is right .";"0"
"i hate ""as"" imports since they make it harder to see what you've imported. can we just say ""import state""";"1"
